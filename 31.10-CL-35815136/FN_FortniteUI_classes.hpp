#pragma once

// Dumped with <3 by android1337
// Version: ++Fortnite+Release-31.10-CL-35815136
// Package: FortniteUI
// Current Base: 0x7FF745A60000, UFunctions offsets will be relative to this base address

namespace SDK
{

	// Class FortniteUI.AccoladeProductData
	// Inherited from UDataAsset -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UAccoladeProductData : public UDataAsset	
	{
	public:
		TArray<FAthenaCollectionScreenContainerTabInfo> TabInfos; // 0x30(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AccoladeProductData");
			return ret;
		}
	};


	// Class FortniteUI.AllSelectSubsystem
	// Inherited from ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UAllSelectSubsystem : public ULocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x30(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AllSelectSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeComponentWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UAthenaChallengeComponentWidget : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeComponentWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeListEntryContextInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaChallengeListEntryContextInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntryContextInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortHUDElementWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortHUDElementWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FGameplayTag ElementTag; // 0x2E0(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x2E4(0x4) UNKNOWN PROPERTY
		FGameplayTagContainer HUDElementTag; // 0x2E8(0x20)
		ESlateVisibility HiddenVisibility; // 0x308(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x309(0x7) UNKNOWN PROPERTY
		UTutorialHighlight* TutorialHighlight; // 0x310(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDElementWidget");
			return ret;
		}

		void OnVisibilitySetEvent(ESlateVisibility InVisibility); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerControllerSet_BP(); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasAnyTags(FGameplayTagContainer& InTags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF00E4(relative to base address)
		void HandleOnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags); // Flags: RequiredAPI|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FFEFCC8(relative to base address)
		void HandleGetHUDElementWidgetsForTags(FGameplayTagContainer& HUDElementTags, TArray<UFortHUDElementWidget*>& OutWidgets); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FFEF6C0(relative to base address)
		void AppendHUDElementTags(FGameplayTagContainer& AdditionalTags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEDDFC(relative to base address)
	};


	// Class FortniteUI.FortMobileHUDElement
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortMobileHUDElement : public UFortHUDElementWidget	
	{
	public:
		FGameplayTag SizePropertyTag; // 0x318(0x4)
		unsigned char UnknownData00_6[0x14]; // 0x31C(0x14) UNKNOWN PROPERTY
		UImage* Image_Background; // 0x330(0x8)
		int32_t ForcedZOrder; // 0x338(0x4)
		bool bShouldFillParent; // 0x33C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x33D(0x3) UNKNOWN PROPERTY
		UScaleBox* ScaleBox_HUDWidgetScale; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDElement");
			return ret;
		}

		void OnHUDThemeChanged(EHUDLayoutToolTheme EHUDLayoutToolTheme); // Flags: RequiredAPI|Native|Public, Memory Exec: 0x7FF74FE5CDDC(relative to base address)
	};


	// Class FortniteUI.BacchusHUDElement
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x368 - 0x348)
	class UBacchusHUDElement : public UFortMobileHUDElement	
	{
	public:
		bool bHideWhenNotUsingTouch; // 0x348(0x1)
		bool bUpdatesWithHUDState; // 0x349(0x1)
		bool bAlwaysShow; // 0x34A(0x1)
		EBacchusHUDStateType OnInBuildMode; // 0x34B(0x1)
		EBacchusHUDStateType OnInCombatMode; // 0x34C(0x1)
		EBacchusHUDStateType OnInEditMode; // 0x34D(0x1)
		EBacchusHUDStateType OnInCreativeMode; // 0x34E(0x1)
		EBacchusHUDStateType OnInBattleLabMode; // 0x34F(0x1)
		EBacchusHUDStateType IsFreeFalling; // 0x350(0x1)
		EBacchusHUDStateType IsGliding; // 0x351(0x1)
		EBacchusHUDStateType CanOpenChute; // 0x352(0x1)
		EBacchusHUDStateType InLockedBus; // 0x353(0x1)
		EBacchusHUDStateType InUnlockedBus; // 0x354(0x1)
		EBacchusHUDStateType OnTargeting; // 0x355(0x1)
		EBacchusHUDStateType OnUsingScopeTargeting; // 0x356(0x1)
		EBacchusHUDStateType OnCanTarget; // 0x357(0x1)
		EBacchusHUDStateType OnCanUseScopeTargeting; // 0x358(0x1)
		EBacchusHUDStateType OnCrouching; // 0x359(0x1)
		EBacchusHUDStateType OnCanUseSecondaryAbility; // 0x35A(0x1)
		EBacchusHUDStateType OnDBNO; // 0x35B(0x1)
		EBacchusHUDStateType OnCarryingDBNO; // 0x35C(0x1)
		EBacchusHUDStateType OnCarryingHeldObject; // 0x35D(0x1)
		EBacchusHUDStateType OnImprovedDBNO; // 0x35E(0x1)
		EBacchusHUDStateType OnControllingRCPawn; // 0x35F(0x1)
		EBacchusHUDStateType OnInVehicle; // 0x360(0x1)
		EBacchusHUDStateType OnDrivingVehicle; // 0x361(0x1)
		EBacchusHUDStateType OnZiplining; // 0x362(0x1)
		unsigned char UnknownData00_7[0x5]; // 0x363(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusHUDElement");
			return ret;
		}

		void ShowHighlight(bool Show); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHUDStateUpdate(FFortHUDState& NewState); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FDF3E40(relative to base address)
		void HandleInputMethodChanged(ECommonInputType CurrentInputType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF336C(relative to base address)
	};


	// Class FortniteUI.AthenaEquippedItemBase
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC0 (0x428 - 0x368)
	class UAthenaEquippedItemBase : public UBacchusHUDElement	
	{
	public:
		EEquippedWeaponDisplay CurrentMode; // 0x368(0x1)
		unsigned char UnknownData00_6[0xB]; // 0x369(0xB) UNKNOWN PROPERTY
		int32_t AmountConsideredInfinite; // 0x374(0x4)
		FText DefaultOutOfAmmoText; // 0x378(0x10)
		UCommonVisibilitySwitcher* Switcher_Content; // 0x388(0x8)
		UPanelWidget* Panel_ResourceContent; // 0x390(0x8)
		UPanelWidget* Panel_AmmoContent; // 0x398(0x8)
		UPanelWidget* Panel_UtilityContent; // 0x3A0(0x8)
		UImage* Image_AmmoIcon; // 0x3A8(0x8)
		UImage* Image_ResourceIcon; // 0x3B0(0x8)
		UImage* Image_UtilitySplit; // 0x3B8(0x8)
		UImage* Image_RechargeableIcon; // 0x3C0(0x8)
		UImage* Image_UtilityIcon; // 0x3C8(0x8)
		UCommonTextBlock* Text_MagazineAmmoCount; // 0x3D0(0x8)
		UCommonTextBlock* Text_SurplusAmmoCount; // 0x3D8(0x8)
		UCommonTextBlock* Text_ResourceCount; // 0x3E0(0x8)
		UCommonTextBlock* Text_SurplusUtilityAmmoCount; // 0x3E8(0x8)
		UCommonTextBlock* Text_UtilityAmmoCount; // 0x3F0(0x8)
		UCommonTextBlock* Text_OutOfAmmo; // 0x3F8(0x8)
		UOverlay* Overlay_UtilityAmmoIcon; // 0x400(0x8)
		UScaleBox* RootScaleBox; // 0x408(0x8)
		ESlateVisibility WeaponEquipVisibility; // 0x410(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x411(0x7) UNKNOWN PROPERTY
		TArray<FGameplayAttribute> TrackedAttributes; // 0x418(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEquippedItemBase");
			return ret;
		}

		void HandleWorldItemsChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0B10(relative to base address)
		void HandleWeaponTargetingChanged(bool bIsTargeting); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0A90(relative to base address)
		void HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB09CC(relative to base address)
		void HandleWeaponReloadCancelled(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB09B8(relative to base address)
		void HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0878(relative to base address)
		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB07B4(relative to base address)
		void HandleViewTargetChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB07A0(relative to base address)
		void HandleSecondaryFireReleased(AFortWeapon* Weapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0340(relative to base address)
		void HandleSecondaryFirePressed(AFortWeapon* Weapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB02C0(relative to base address)
		void HandleLocalAmmoChanged(int32_t LocalCount, int32_t LocalRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF8A4(relative to base address)
		void HandleBuildingMaterialChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF564(relative to base address)
		void BP_HandleWeaponTargetingChanged(bool bIsTargeting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleWeaponReloadCancelled(AFortWeapon* Weapon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleWeaponModeChanged(EEquippedWeaponDisplay Mode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74FCAEF58(relative to base address)
		void BP_HandleSecondaryFireReleased(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleSecondaryFirePressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleResourceTypeChanged(UFortResourceItemDefinition* Item, int32_t ResourceCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleResourceCountChanged(int32_t ResourceCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleHideAmmo(bool bHideReserveAmmo, bool bHideMagazineAmmo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleHasBulletsPerClipChanged(bool bHasBulletsPerClip); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleHasAmmoChanged(bool bHasAmmo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleAmmoCountChanged(int32_t MagazineAmmoCount, int32_t SurplusAmmoCount, int32_t TotalRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleAmmoClipAttributeChanged(float Value); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEquippedItemReticleWidgetBase
	// Inherited from UAthenaEquippedItemBase -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x470 - 0x428)
	class UAthenaEquippedItemReticleWidgetBase : public UAthenaEquippedItemBase	
	{
	public:
		int32_t MaximumAmmo; // 0x428(0x4)
		float CurrentAmmoPercentage; // 0x42C(0x4)
		float LowAmmoPercentage; // 0x430(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x434(0x4) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* AmmoCounterMaterialInstanceDynamic; // 0x438(0x8)
		UCommonBorder* AmmoCounter; // 0x440(0x8)
		AFortWeapon* CurrentEquippedWeapon; // 0x448(0x8)
		bool bShouldHideReticleAmmoCounterWhileTargeting; // 0x450(0x1)
		bool bIsHoldingSecondaryFire; // 0x451(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x452(0x2) UNKNOWN PROPERTY
		float TimeToOutroAnim; // 0x454(0x4)
		FTimerHandle FadeOutTimerHandle; // 0x458(0x8)
		bool bIsAmmoVisible; // 0x460(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x461(0x7) UNKNOWN PROPERTY
		UWidgetAnimation* FadeoutAnimation; // 0x468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEquippedItemReticleWidgetBase");
			return ret;
		}

		void OnAmmoCountChanged(int32_t MagazineAmmoCount, int32_t MaximumMagazineAmmoCount, EFortWeaponReloadType ReloadType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FadeAmmoOut(float PlaybackSpeed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FBE4(relative to base address)
		void FadeAmmoInOut(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FBD0(relative to base address)
		void FadeAmmoIn(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FBBC(relative to base address)
		void DefaultFadeAmmoOut(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FBA0(relative to base address)
	};


	// Class FortniteUI.AthenaEquippedItemInfoWidget
	// Inherited from UAthenaEquippedItemBase -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x5A0 - 0x428)
	class UAthenaEquippedItemInfoWidget : public UAthenaEquippedItemBase	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x428(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEquippedItemInfoWidget");
			return ret;
		}

		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEquippedItemWidgetBase
	// Inherited from UAthenaEquippedItemInfoWidget -> UAthenaEquippedItemBase -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x5D8 - 0x5A0)
	class UAthenaEquippedItemWidgetBase : public UAthenaEquippedItemInfoWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY
		float OutroDelayTime; // 0x5A8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x5AC(0x4) UNKNOWN PROPERTY
		UVerticalBox* SwitchPopup; // 0x5B0(0x8)
		UCommonTextBlock* SwitchPopupText; // 0x5B8(0x8)
		UFortSimpleWidgetAnimationsPanel* SimpleAnimations; // 0x5C0(0x8)
		FName IntroAnimName; // 0x5C8(0x4)
		FName OutroAnimName; // 0x5CC(0x4)
		unsigned char UnknownData02_7[0x8]; // 0x5D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEquippedItemWidgetBase");
			return ret;
		}

		void OnPopUpOnSwitchDone(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC4FE50(relative to base address)
	};


	// Class FortniteUI.AthenaFrontendFlowInterruptInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaFrontendFlowInterruptInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFrontendFlowInterruptInterface");
			return ret;
		}
	};


	// Class FortniteUI.AthenaFullScreenMapBrowsingControlsWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x448 - 0x3F0)
	class UAthenaFullScreenMapBrowsingControlsWidget : public UCommonActivatableWidget	
	{
	public:
		UPanelWidget* Panel_PanGroup; // 0x3F0(0x8)
		UPanelWidget* Panel_ZoomGroup; // 0x3F8(0x8)
		USizeBox* SizeBox_PlaceMarker; // 0x400(0x8)
		UCommonTextBlock* Text_PlaceMarker; // 0x408(0x8)
		UCommonActionWidget* Action_PlaceMarker; // 0x410(0x8)
		UCommonActionWidget* Action_RemoveMarker; // 0x418(0x8)
		USizeBox* SizeBox_TeleportToMarker; // 0x420(0x8)
		FText TextPlaceMarker; // 0x428(0x10)
		FText TextRemoveMarker; // 0x438(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapBrowsingControlsWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGoalsPageBaseCard
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x2F8 - 0x2B0)
	class UAthenaGoalsPageBaseCard : public UUserWidget	
	{
	public:
		UAthenaChallengeDateTimeTextBlock* DateTimeText_TimeRemaining; // 0x2B0(0x8)
		UPanelWidget* Panel_TimeRemaining; // 0x2B8(0x8)
		FText TextExpired; // 0x2C0(0x10)
		unsigned char UnknownData00_7[0x28]; // 0x2D0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageBaseCard");
			return ret;
		}

		void ShowNewBang(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateIsSelectable(bool bCardIsSelectable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateHeader(FBundleGoalCardDisplayData& GoalCardDisplayData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateBattlePassRequirement(bool bBattlePassRequired); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTimerSet(EAthenaChallengeTimerState TimerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetIsSelectable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1F7C(relative to base address)
		void BP_SetDisabled(bool bDisabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_PostSetData(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnSelectionChanged(bool bSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaGoalsPageGiftCard
	// Inherited from UAthenaGoalsPageBaseCard -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x3A0 - 0x2F8)
	class UAthenaGoalsPageGiftCard : public UAthenaGoalsPageBaseCard	
	{
	public:
		FChallengeBundleGiftCardDisplayData DisplayData; // 0x2F8(0x98)
		TWeakObjectPtr<UFortChallengeBundleItem*> ChallengeBundle; // 0x390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageGiftCard");
			return ret;
		}

		void Update(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC4FEF8(relative to base address)
		void PopulateRelogin(bool bInFrontend); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateHasAvailableQuestsForCompletion(int32_t AvailableQuestsAmount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateAllQuestsAreCompletedButSomeNotClaimed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateAllQuestsAreClaimedBundleIsNotCompleted(FTimespan& TimeRemainingForNextQuest); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateAllQuestsAreClaimedBundleIsCompleted(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaHUDFeedbackLine
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x3B0 - 0x318)
	class UAthenaHUDFeedbackLine : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		UFortDynamicEntryBox* DynamicEntryBox_Keybinds; // 0x320(0x8)
		UCommonRichTextBlock* RichText_Feedback; // 0x328(0x8)
		unsigned char UnknownData01_7[0x80]; // 0x330(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDFeedbackLine");
			return ret;
		}

		void OnShowEnabledUpdated(bool bShowEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaHUDFeedbackLineCooldown
	// Inherited from UAthenaHUDFeedbackLine -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x3C0 - 0x3B0)
	class UAthenaHUDFeedbackLineCooldown : public UAthenaHUDFeedbackLine	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x3B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDFeedbackLineCooldown");
			return ret;
		}

		void RegisterAbilityNotify(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC4FE64(relative to base address)
		void OnCooldownUpdated(float CooldownDuration, float CooldownRemaining, float CooldownPercentage); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCooldownTagChanged(FGameplayTag CooldownTag, int32_t Count); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC4FC88(relative to base address)
		void OnCooldownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCooldownFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaHUDPickupItemWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaHUDPickupItemWidgetBase : public UCommonUserWidget	
	{
	public:
		UAthenaItemDetailsHeaderBase* ItemDetailsHeader; // 0x2D8(0x8)
		TWeakObjectPtr<AFortPickup*> Pickup; // 0x2E0(0x8)
		TWeakObjectPtr<UFortItem*> PickupItem; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDPickupItemWidgetBase");
			return ret;
		}

		void SetPickup(AFortPickup* NewPickup); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7487DAD74(relative to base address)
	};


	// Class FortniteUI.FortPrimaryContentInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPrimaryContentInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPrimaryContentInterface");
			return ret;
		}

		FPrimaryContentSetup GetPrimaryContentSetup(); // Flags: Native|Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7503CB070(relative to base address)
	};


	// Class FortniteUI.AthenaHUDPrimaryContentInterface
	// Inherited from UFortPrimaryContentInterface -> UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaHUDPrimaryContentInterface : public UFortPrimaryContentInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDPrimaryContentInterface");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryGroupBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x340 - 0x2D8)
	class UAthenaInventoryGroupBase : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UAthenaInventoryPanel*> ParentInventoryPanel; // 0x2D8(0x8)
		UFortItemTileView* ItemTileView; // 0x2E0(0x8)
		TArray<EFortItemType> FilteredItemTypes; // 0x2E8(0x10)
		int32_t DefaultNumEntries; // 0x2F8(0x4)
		EInventoryContentSortType InventoryContentSortType; // 0x2FC(0x1)
		unsigned char UnknownData00_7[0x43]; // 0x2FD(0x43) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryGroupResources
	// Inherited from UAthenaInventoryGroupBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x380 - 0x340)
	class UAthenaInventoryGroupResources : public UAthenaInventoryGroupBase	
	{
	public:
		FGameplayTagContainer CurrencyItemTags; // 0x340(0x20)
		FGameplayTagContainer IngredientItemTags; // 0x360(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupResources");
			return ret;
		}
	};


	// Class FortniteUI.FortTabInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortTabInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabInterface");
			return ret;
		}

		bool OnShouldCreateTab(bool& bOutShouldCreateTab, UObject* WorldContextObject); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryTabInterface
	// Inherited from UFortTabInterface -> UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaInventoryTabInterface : public UFortTabInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryTabInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortItemDetailsHostPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x3B8 - 0x2D8)
	class UFortItemDetailsHostPanel : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnItemChanged; // 0x2D8(0x10)
		TWeakObjectPtr<UFortItem*> ItemToDetail; // 0x2E8(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x2F0(0x10) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortItem*> ItemToCompareWith; // 0x300(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x308(0x10) UNKNOWN PROPERTY
		bool bShouldPreviewUpgradingItem; // 0x318(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x319(0x3) UNKNOWN PROPERTY
		int32_t UpgradeLevelDelta; // 0x31C(0x4)
		UScrollBox* ScrollBox; // 0x320(0x8)
		UNamedSlot* DetailsContainerSlotWidget; // 0x328(0x8)
		UCommonBorder* HighRarityBorder; // 0x330(0x8)
		TScriptInterface<Class> ItemViewContext; // 0x338(0x10)
		EFortItemInspectionMode CurrentInspectMode; // 0x348(0x1)
		unsigned char UnknownData03_6[0x27]; // 0x349(0x27) UNKNOWN PROPERTY
		int32_t QuantityOverride; // 0x370(0x4)
		unsigned char UnknownData04_6[0x4]; // 0x374(0x4) UNKNOWN PROPERTY
		UFortTooltipLoadingWrapper* ItemToDetailLoadingWrapper; // 0x378(0x8)
		UFortTooltipLoadingWrapper* ItemToCompareLoadingWrapper; // 0x380(0x8)
		UCommonLoadGuard* ItemToDetailLoadGuard; // 0x388(0x8)
		UCommonLoadGuard* ItemToCompareLoadGuard; // 0x390(0x8)
		UCommonBorder* Border_Details; // 0x398(0x8)
		UImage* Image_RechargeableIcon; // 0x3A0(0x8)
		bool bAsyncLoadTooltipData; // 0x3A8(0x1)
		bool bIsUpdatingSuspended; // 0x3A9(0x1)
		unsigned char UnknownData05_7[0xE]; // 0x3AA(0xE) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailsHostPanel");
			return ret;
		}

		void UpdateRechargeIcon(UFortItem* ItemToRepresent); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BD6EC(relative to base address)
		void ShouldPreviewUpgradingItem(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD39C(relative to base address)
		void SetUpgradeLevelDelta(int32_t InDelta); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD1B4(relative to base address)
		void SetScrollWidget(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCB98(relative to base address)
		void SetQuantityOverride(int32_t QuantityOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC830(relative to base address)
		void SetItemViewContext(TScriptInterface<Class>& ItemViewContext); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BB7E8(relative to base address)
		void SetItemToDetail(UFortItem* ItemToDetail); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB280(relative to base address)
		void SetItemToCompareWith(UFortItem* ItemToCompareWith); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB100(relative to base address)
		void SetIsUpdatingSuspended(bool bValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA6B8(relative to base address)
		void SetInspectMode(EFortItemInspectionMode InspectMode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA5B8(relative to base address)
		void OnItemChangedDelegate__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpgradeLevelDeltaChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShouldPreviewUpgradingItemChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleQuantityOverrideChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToDetailTooltipAssetsLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToDetailTooltipAssetsLoaded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7476407DC(relative to base address)
		void HandleItemToDetailChangedBP(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToCompareTooltipAssetsLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToCompareTooltipAssetsLoaded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B95B4(relative to base address)
		void HandleItemRefundComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501B9368(relative to base address)
		void HandleItemRarityUpgradeComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501B9368(relative to base address)
		void HandleItemEvolutionComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501B9368(relative to base address)
		void HandleInspectModeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemToDetailSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemToCompareSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemDetailsHeaderBase
	// Inherited from UFortItemDetailsHostPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x500 - 0x3B8)
	class UAthenaItemDetailsHeaderBase : public UFortItemDetailsHostPanel	
	{
	public:
		FFortRarityItemData RarityData; // 0x3B8(0x78)
		int32_t NoAmmoSwitcherIndex; // 0x430(0x4)
		bool bMinimalAmmoTooltip; // 0x434(0x1)
		bool bShowAmmoHeader; // 0x435(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x436(0x2) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* RarityBorderMID; // 0x438(0x8)
		UMaterialInstanceDynamic* LevelBarMID; // 0x440(0x8)
		UWidgetSwitcher* CommonWidgetSwitcher_Stack; // 0x448(0x8)
		UCommonBorder* RarityBorder; // 0x450(0x8)
		UHorizontalBox* TagListBox; // 0x458(0x8)
		USpacer* IconSpacer; // 0x460(0x8)
		UCommonBorder* LevelBar; // 0x468(0x8)
		UWidgetSwitcher* RatingSwitcher; // 0x470(0x8)
		UFortTierIndicator* TierIndicator; // 0x478(0x8)
		UTextBlock* SlotsCount; // 0x480(0x8)
		UHorizontalBox* TertiaryRow; // 0x488(0x8)
		UFortItemCategoryIndicator* CategoryIndicatorTertiary; // 0x490(0x8)
		UTextBlock* AmmoLoadedText; // 0x498(0x8)
		UItemCostWidgetBase* ItemCostWidget; // 0x4A0(0x8)
		UFortLazyImage* Image_MinimalIconPreview; // 0x4A8(0x8)
		UTextBlock* Text_ItemNameShort; // 0x4B0(0x8)
		UTextBlock* Text_ItemNameShort_Amount; // 0x4B8(0x8)
		UHorizontalBox* CraftingIngredientBox; // 0x4C0(0x8)
		UItemCostWidgetBase* ItemCostWidgetShort; // 0x4C8(0x8)
		UTextBlock* Text_WeaponName; // 0x4D0(0x8)
		UImage* Image_RarityGlow; // 0x4D8(0x8)
		UTextBlock* Text_WeaponRarityValue; // 0x4E0(0x8)
		UHorizontalBox* HorizontalBox_Tertiary2; // 0x4E8(0x8)
		UFortItemCategoryIndicator* CategoryIndicatorTertiary; // 0x4F0(0x8)
		UTextBlock* AmmoLoadedText; // 0x4F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemDetailsHeaderBase");
			return ret;
		}

		void UpdateQuantityText(int32_t Count, bool bIsZeroDisplayed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FF20(relative to base address)
		void UpdateItemForWidgets(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FF0C(relative to base address)
		UFortWeaponItemDefinition TryGetWeaponItemDefForItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC4FE78(relative to base address)
		void SetItemCost(AActor* Actor); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapLegendEntryIcon
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaMapLegendEntryIcon : public UCommonUserWidget	
	{
	public:
		UFortLazyImage* FortLazyImage_LegendIcon; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapLegendEntryIcon");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapLegendEntryWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaMapLegendEntryWidget : public UCommonUserWidget	
	{
	public:
		UDynamicEntryBox* DynamicEntryBox_LegendIcons; // 0x2D8(0x8)
		UCommonTextBlock* Text_EntryName; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapLegendEntryWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapLegendWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UAthenaMapLegendWidget : public UCommonActivatableWidget	
	{
	public:
		TArray<FAthenaMapLegendEntryData> MapLegendEntries; // 0x3F0(0x10)
		UPanelWidget* SizeBox_LegendPanel; // 0x400(0x8)
		UDynamicEntryBox* EntryBox_LegendEntries; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapLegendWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapScreenContainerTabInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaMapScreenContainerTabInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapScreenContainerTabInterface");
			return ret;
		}

		void OnTabAddedToMapScreenContainer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnShouldShowTabOnMapScreenForMinigame(bool& bOutShouldShowTabOnMapScreenForMinigame, AFortMinigame* Minigame); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnShouldDisplayBackActionInActionBar(bool& bOutShouldDisplayBackActionInActionBar); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnShouldCreateMapScreenTab(bool& bOutShouldCreateMapScreenTab, UObject* WorldContextObject); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnHandleMapBackAction(bool& bOutBackActionHandled); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnHandleMapActionKey(FKey& InKey, bool bKeyDown, bool& bOutMapActionHandled); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnBlockMapActionByKey(FKey& InKey, bool& bOutMapActionBlocked); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortUIStateWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortUIStateWidgetBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UCommonActivatableWidgetStack* WidgetStack_PrimaryContent; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaHUDBase
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x230 (0x638 - 0x408)
	class UAthenaHUDBase : public UFortUIStateWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x408(0x30) UNKNOWN PROPERTY
		TArray<UUserWidget*> MinigameWidgets; // 0x438(0x10)
		UClass* KairosHUDLayerClass; // 0x448(0x8)
		TArray<FMutatorAddedWidgets> MutatorAddedWidgets; // 0x450(0x10)
		unsigned char UnknownData01_6[0xF0]; // 0x460(0xF0) UNKNOWN PROPERTY
		UAthenaMapScreenContainer* MapScreenContainer; // 0x550(0x8)
		UAthenaHUDMenu* AthenaHUDMenu; // 0x558(0x8)
		UCommonActivatableWidget* TitleBar; // 0x560(0x8)
		TSet<EUIExtensionSlot> RelevantExtensionSlots; // 0x568(0x50)
		TWeakObjectPtr<UClass*> NewEmotePicker; // 0x5B8(0x20)
		TWeakObjectPtr<UClass*> SquadComsPickerClass; // 0x5D8(0x20)
		TWeakObjectPtr<UClass*> WeaponWheelClass; // 0x5F8(0x20)
		TWeakObjectPtr<UClass*> QuickWeaponClass; // 0x618(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDBase");
			return ret;
		}

		void SetZoneCompleted(bool bValue); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB1890(relative to base address)
		void OnHUDScaleChanged(float HUDScale); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetRemoved(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearUIExtensions(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpdateMinigameUIExtensions(AFortMinigame* Minigame); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0720(relative to base address)
		void HandleRecoverFromPostGame(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB02A8(relative to base address)
		void HandlePickerOpenRequest(EFortPickerMode Mode, int32_t InitialOption, bool bIgnoreFirstAccept); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAFDDC(relative to base address)
		void HandleOnMutatorRemoved(AFortGameplayMutator* NewMutator); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAFC60(relative to base address)
		void HandleOnMutatorAdded(AFortGameplayMutator* NewMutator); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAFBE0(relative to base address)
		void HandleNewPanelFromMutator(UClass* PanelClass); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAFB4C(relative to base address)
		void HandleMinigamePlayModeChanged(AFortMinigame* Minigame, bool bIsInPlayMode); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF9E8(relative to base address)
		void HandleMinigameHideHUD(bool bLoading); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF968(relative to base address)
		void HandleCursorModeChanging(bool bCursorModeEnabled, FName ActionName); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF760(relative to base address)
		void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetZoneCompleted(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF48C(relative to base address)
		void BindVolumeEvents(); // Flags: Native|Protected, Memory Exec: 0x7FF74F49E694(relative to base address)
	};


	// Class FortniteUI.AthenaMobileHUD
	// Inherited from UAthenaHUDBase -> UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x658 - 0x638)
	class UAthenaMobileHUD : public UAthenaHUDBase	
	{
	public:
		TArray<FUIExtension> TournamentUIExtensions; // 0x638(0x10)
		TArray<FUIExtension> ArenaTournamentUIExtensions; // 0x648(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMobileHUD");
			return ret;
		}

		bool IsDynamicMobileHUDActive(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC4FC64(relative to base address)
	};


	// Class FortniteUI.AthenaMosaicWidget
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x208 - 0x158)
	class UAthenaMosaicWidget : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x158(0x10) UNKNOWN PROPERTY
		UDataTable* TilesDataTable; // 0x168(0x8)
		float MosaicScale; // 0x170(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x174(0x4) UNKNOWN PROPERTY
		UMaterialInterface* TilesMaterial; // 0x178(0x8)
		FName MatTileTextureParameterName; // 0x180(0x4)
		FName MatTileDiscoveredParameterName; // 0x184(0x4)
		unsigned char UnknownData02_6[0x10]; // 0x188(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnPostUpdateTilesDelegate; // 0x198(0x10)
		TArray<UMaterialInstanceDynamic*> TilesMaterials; // 0x1A8(0x10)
		TMap<FString, TWeakObjectPtr> CachedQuests; // 0x1B8(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMosaicWidget");
			return ret;
		}

		void OnPostUpdateTiles__DelegateSignature(bool bIsEntirelyCollected); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMosaicWidgetContainer
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaMosaicWidgetContainer : public UUserWidget	
	{
	public:
		UAthenaMosaicWidget* MosaicWidget; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMosaicWidgetContainer");
			return ret;
		}
	};


	// Class FortniteUI.AthenaNPCCustomMapWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UAthenaNPCCustomMapWidget : public UUserWidget	
	{
	public:
		FGameplayTag NPCTag; // 0x2B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2B4(0x4) UNKNOWN PROPERTY
		TWeakObjectPtr<UObject*> NPCIconOverride; // 0x2B8(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaNPCCustomMapWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaNPCQuestRewardsPanel
	// Inherited from UAthenaNPCCustomMapWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaNPCQuestRewardsPanel : public UAthenaNPCCustomMapWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaNPCQuestRewardsPanel");
			return ret;
		}

		void BP_Show(FText& NPCTitle, TWeakObjectPtr<UObject*>& NPCPicture, bool bIsLocked); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaNPCQuestServicesPanel
	// Inherited from UAthenaNPCCustomMapWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaNPCQuestServicesPanel : public UAthenaNPCCustomMapWidget	
	{
	public:
		UCollectionNPCServiceContainer* Services; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaNPCQuestServicesPanel");
			return ret;
		}

		void BP_Show(FText& NPCTitle, TWeakObjectPtr<UObject*>& NPCPicture); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaObjectiveTaskEntryBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UAthenaObjectiveTaskEntryBase : public UUserWidget	
	{
	public:
		UFortRichTextBlockKeybind* Text_ObjectiveDescriptionText; // 0x2B0(0x8)
		bool bCompleted; // 0x2B8(0x1)
		unsigned char UnknownData00_6[0xF]; // 0x2B9(0xF) UNKNOWN PROPERTY
		UUserWidget* ProgressWidget; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaObjectiveTaskEntryBase");
			return ret;
		}

		void OverridePrimaryColor(bool bShouldOverride, FLinearColor& DesiredColor); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateOptionalObjectiveProgress(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveRewardSetWithNonstandardReward(int32_t RewardQuantity, UTexture2D* PreviewTexture); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveRewardSet(int32_t RewardQuantity, EFortEarnedSubRewardType RewardType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewlyCompleted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsActiveSet(bool bNewIsActive); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerInfoBaseWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaPlayerInfoBaseWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerInfoBaseWidgetInterface");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPlayerNameInfoBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x208 (0x520 - 0x318)
	class UAthenaPlayerNameInfoBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		TWeakObjectPtr<AFortPlayerStateAthena*> WeakPlayerStateAthena; // 0x490(0x8)
		bool bIsLocalPlayer; // 0x498(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x499(0x3) UNKNOWN PROPERTY
		FSlateColor Color_PlayerNameAlive; // 0x49C(0x14)
		FSlateColor Color_PlayerNameDead; // 0x4B0(0x14)
		FSlateColor Color_PlayerNameDisconnected; // 0x4C4(0x14)
		UImage* Image_Marker; // 0x4D8(0x8)
		UImage* Image_MarkerMobile; // 0x4E0(0x8)
		UCommonTextBlock* CommonTextBlock_PlayerName; // 0x4E8(0x8)
		UCommonTextBlock* CommonTextBlock_PlayerNameMobile; // 0x4F0(0x8)
		UAthenaLevelEffects* LevelEffects; // 0x4F8(0x8)
		UAthenaLevelEffects* LevelEffectsMobile; // 0x500(0x8)
		UImage* Image_PlatformIcon; // 0x508(0x8)
		UFortVoiceChatStatusIconProxyAnim* SpeakerWidgetAnim; // 0x510(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x518(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerNameInfoBase");
			return ret;
		}

		void UpdateRankedProgress(FRankedProgressReplicatedData& RankedProgress); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC51684(relative to base address)
		void ResetRankedProgress(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleTalkingVisualDisplayChanged(bool bTalkingVisualsActive); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleSeasonLevelUIDisplayChanged(int32_t Level); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlayerNameReplicated(FString PlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPOIProgressExtensionWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x490 - 0x318)
	class UAthenaPOIProgressExtensionWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x318(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPOIProgressExtensionWidget");
			return ret;
		}

		void OnExtensionWidgetRemoved(UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPostMatchScreenContainerTabInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaPostMatchScreenContainerTabInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPostMatchScreenContainerTabInterface");
			return ret;
		}
	};


	// Class FortniteUI.AthenaQuestCategoryCompletedTracker
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UAthenaQuestCategoryCompletedTracker : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		FText MoreInTimerCompletionText; // 0x2B8(0x10)
		bool bShowCompletionTextUpperCase; // 0x2C8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2C9(0x7) UNKNOWN PROPERTY
		UAthenaChallengeDateTimeTextBlock* DateTimeText_MoreQuestsLater; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuestCategoryCompletedTracker");
			return ret;
		}

		bool GetIsProgressBarEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC51498(relative to base address)
	};


	// Class FortniteUI.AthenaReplayActionFeedRowProxyInstance
	// Inherited from UObject
	// Size: 0x158 (0x180 - 0x28)
	class UAthenaReplayActionFeedRowProxyInstance : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FReplayEliminationEventInfo RowData; // 0x30(0x150)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayActionFeedRowProxyInstance");
			return ret;
		}
	};


	// Class FortniteUI.AthenaReplayBrowserRowProxyInstance
	// Inherited from UObject
	// Size: 0x40 (0x68 - 0x28)
	class UAthenaReplayBrowserRowProxyInstance : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x40]; // 0x28(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayBrowserRowProxyInstance");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpecialEventEntryIcon
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UAthenaSpecialEventEntryIcon : public UUserWidget	
	{
	public:
		UCommonTextBlock* Text_UrgentIcon; // 0x2B0(0x8)
		UImage* Image_UrgentIcon; // 0x2B8(0x8)
		UImage* Image_AlertBackground; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpecialEventEntryIcon");
			return ret;
		}

		bool LoadAndSetIcon(FUrgentQuestData& UrgentQuestData); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC515D4(relative to base address)
	};


	// Class FortniteUI.BacchusLocalPlayerInfoBase
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x380 - 0x368)
	class UBacchusLocalPlayerInfoBase : public UBacchusHUDElement	
	{
	public:
		UAthenaPlayerNameInfoBase* AthenaPlayerNameInfo; // 0x368(0x8)
		UAthenaPlayerViewModel* CachedPlayerViewModel; // 0x370(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x378(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusLocalPlayerInfoBase");
			return ret;
		}

		void HandleSquadMemberDisconnected(AFortPlayerStateAthena* Player); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BacchusQuickbarViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UBacchusQuickbarViewModel : public UMVVMViewModelBase	
	{
	public:
		int32_t CombatQuickbarsCount; // 0x68(0x4)
		int32_t BackwardsCombatQuickbarsCount; // 0x6C(0x4)
		TArray<UBacchusQuickbar*> Quickbars; // 0x70(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusQuickbarViewModel");
			return ret;
		}
	};


	// Class FortniteUI.BacchusRadialDisplayBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UBacchusRadialDisplayBase : public UFortHUDElementWidget	
	{
	public:
		FGameplayTag TrackedCueTag; // 0x318(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x31C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusRadialDisplayBase");
			return ret;
		}

		void OnUpdateRadialCounterEvent_Blueprint(float NewCounterFillPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC514B0(relative to base address)
	};


	// Class FortniteUI.BasicInteractionWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UBasicInteractionWidgetBase : public UCommonUserWidget	
	{
	public:
		UCommonRichTextBlock* RichText_Description; // 0x2D8(0x8)
		UMultiInteractDisplayWidgetBase* MultiInteractDisplayWidget; // 0x2E0(0x8)
		UBorder* OuterBorder; // 0x2E8(0x8)
		UHorizontalBox* SubTextBox; // 0x2F0(0x8)
		UImage* SubDescriptionAlertImage; // 0x2F8(0x8)
		UCommonRichTextBlock* TextSubDescription; // 0x300(0x8)
		FText InitialDescription; // 0x308(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BasicInteractionWidgetBase");
			return ret;
		}

		void UpdateMultiInteractionCount(int32_t NewInteractionCount); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC51B20(relative to base address)
		void UpdateDescription(FText Description, FLinearColor DescriptionColor, FText SubDescription, FLinearColor SubDescriptionColor, int32_t InteractionCount); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC5172C(relative to base address)
	};


	// Class FortniteUI.BattlePassInputData
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UBattlePassInputData : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassInputData");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassEnabledInputData
	// Inherited from UBattlePassInputData -> UObject
	// Size: 0x8 (0x30 - 0x28)
	class UBattlePassEnabledInputData : public UBattlePassInputData	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x28(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassEnabledInputData");
			return ret;
		}

		void GetData(bool& InIsEnabled); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC51410(relative to base address)
	};


	// Class FortniteUI.BattlePassBulkBuyInputData
	// Inherited from UBattlePassInputData -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UBattlePassBulkBuyInputData : public UBattlePassInputData	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x28(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassBulkBuyInputData");
			return ret;
		}

		void GetData(bool& IsPageCompleted, int32_t& StartingPage, int32_t& EndingPage, int32_t& PurchaseCost); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC511CC(relative to base address)
	};


	// Class FortniteUI.BattlePassSubPageInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UBattlePassSubPageInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassSubPageInterface");
			return ret;
		}

		void OnEnterSubPage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CheckDismissableActivatableWidget
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UCheckDismissableActivatableWidget : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CheckDismissableActivatableWidget");
			return ret;
		}
	};


	// Class FortniteUI.CreativeContentBrowserTab_CreationCondition
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UCreativeContentBrowserTab_CreationCondition : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativeContentBrowserTab_CreationCondition");
			return ret;
		}
	};


	// Class FortniteUI.DonutChallengeIdleGame
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8B8 (0xB90 - 0x2D8)
	class UDonutChallengeIdleGame : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnNewHighScore; // 0x2D8(0x10)
		FMulticastInlineDelegate OnDistanceScoreChanged; // 0x2E8(0x10)
		FMulticastInlineDelegate OnSpeedScoreChanged; // 0x2F8(0x10)
		FMulticastInlineDelegate OnStyleScoreChanged; // 0x308(0x10)
		FMulticastInlineDelegate OnEndMatchScore; // 0x318(0x10)
		FMulticastInlineDelegate OnDayNightCycleChanged; // 0x328(0x10)
		unsigned char UnknownData00_6[0x140]; // 0x338(0x140) UNKNOWN PROPERTY
		FLinearColor BoundsColor; // 0x478(0x10)
		float DayNightCycleTime; // 0x488(0x4)
		float PlayerTopSpeed; // 0x48C(0x4)
		float BumpyRideSpeedReduction; // 0x490(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x494(0x4) UNKNOWN PROPERTY
		FVector2D MapSize; // 0x498(0x10)
		FVector2D PlayerCollisionOffset; // 0x4A8(0x10)
		FVector2D PlayerCollisionSize; // 0x4B8(0x10)
		float MapScale; // 0x4C8(0x4)
		float MaxNumLevels; // 0x4CC(0x4)
		float ObjectSpawnPlacementRadius; // 0x4D0(0x4)
		int32_t NumOfTreeSpawnAttempts; // 0x4D4(0x4)
		int32_t NumOfRockSpawnAttempts; // 0x4D8(0x4)
		int32_t NumOfBigRockSpawnAttempts; // 0x4DC(0x4)
		int32_t NumOfJumpPadSpawnAttempts; // 0x4E0(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x4E4(0x4) UNKNOWN PROPERTY
		UCurveFloat* Curve_BonusSpawn_Trees; // 0x4E8(0x8)
		UCurveFloat* Curve_BonusSpawn_SmallBumps; // 0x4F0(0x8)
		UCurveFloat* Curve_BonusSpawn_Bumps; // 0x4F8(0x8)
		UCurveFloat* Curve_BonusSpawn_JumpPads; // 0x500(0x8)
		FName Param_Player_Direction; // 0x508(0x4)
		FName Param_Player_FacingLeft; // 0x50C(0x4)
		FSlateBrush PlayerBrush; // 0x510(0xB0)
		FSlateBrush TreeBrush; // 0x5C0(0xB0)
		FSlateBrush RockBrush; // 0x670(0xB0)
		FSlateBrush BigRockBrush; // 0x720(0xB0)
		FSlateBrush JumpPadBrush; // 0x7D0(0xB0)
		FSlateBrush TorchBrush; // 0x880(0xB0)
		FSlateBrush MonsterBrush; // 0x930(0xB0)
		FSlateBrush ChimiBrush; // 0x9E0(0xB0)
		FSlateBrush ArmBrush; // 0xA90(0xB0)
		UWidgetAnimation* Anim_Jump; // 0xB40(0x8)
		UWidgetAnimation* Anim_MediumJump; // 0xB48(0x8)
		UWidgetAnimation* Anim_SuperJump; // 0xB50(0x8)
		UWidgetAnimation* Anim_BumpyRide; // 0xB58(0x8)
		UImage* Image_Player; // 0xB60(0x8)
		UImage* Image_MobileInput; // 0xB68(0x8)
		UImage* Image_MobileInput_Background; // 0xB70(0x8)
		UCommonButtonLegacy* Button_Jump; // 0xB78(0x8)
		UCommonButtonLegacy* Button_MobileJump; // 0xB80(0x8)
		unsigned char UnknownData03_7[0x8]; // 0xB88(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DonutChallengeIdleGame");
			return ret;
		}

		void TryJump(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC51718(relative to base address)
		void StartGame(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC51704(relative to base address)
		void EndSuperJump(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC511B0(relative to base address)
		void EndJump(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC51198(relative to base address)
		void EndBumpyRide(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC51174(relative to base address)
		void DebugBPFloat(float InFloat); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPUpdateStyle(int32_t NewStyle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPUpdateSpeed(int32_t NewSpeed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPUpdateDistance(int32_t NewDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPShowHighScore(int32_t inNewHighScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnSpeedUpdated(int32_t NewCurSpeed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnNextLevelReached(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnMonsterNearChanged(bool bIsNearLevelMonster); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnJump(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnGameInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnFailedJumpPress(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnFacingDirectionChanged(bool bIsLeftFacing); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnCrash(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPOnCollision(TEnumAsByte<EFortDonutIdleGameObject> ObjectType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPGameOver(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivatablePanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x560 - 0x528)
	class UFortActivatablePanel : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		bool bIsPushedOnToContentPanelStack; // 0x530(0x1)
		bool bIsAlreadyOnContentPanelStack; // 0x531(0x1)
		EInputPriority InputPriority; // 0x532(0x1)
		bool bIsClosableByPlayerInput; // 0x533(0x1)
		FPrimaryContentSetup PrimaryContentSetup; // 0x534(0x3)
		unsigned char UnknownData01_7[0x29]; // 0x537(0x29) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatablePanel");
			return ret;
		}

		void RestoreScrollWidget(UWidget* FallbackWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354D04(relative to base address)
		void RestoreCenterWidget(UWidget* FallbackWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354C84(relative to base address)
		void AsyncPlaySound2D(UObject* WorldContextObject, TWeakObjectPtr<USoundBase*> SoundToLoad, float VolumeMultiplier, float PitchMultiplier, float StartTime); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC6CA0(relative to base address)
	};


	// Class FortniteUI.DonutIdleGameScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x570 - 0x560)
	class UDonutIdleGameScreen : public UFortActivatablePanel	
	{
	public:
		UWidgetAnimation* Anim_Intro; // 0x560(0x8)
		UDonutChallengeIdleGame* Widget_GameLayer; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DonutIdleGameScreen");
			return ret;
		}
	};


	// Class FortniteUI.EndOfMatchQuestEntryWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UEndOfMatchQuestEntryWidget : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnEndOfMatchQuestIntroFinishedDelegate; // 0x2D8(0x10)
		FMulticastInlineDelegate OnEndOfMatchQuestMoveDownFinishedDelegate; // 0x2E8(0x10)
		float MoveDownDuration; // 0x2F8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2FC(0x4) UNKNOWN PROPERTY
		UFortNotificationEntry_Quest* QuestNotification; // 0x300(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x308(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EndOfMatchQuestEntryWidget");
			return ret;
		}

		void OnEndOfMatchQuestMoveDownFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEndOfMatchQuestCreateFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleNotificationDisplayed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD16E74(relative to base address)
		void HandleMoveDownFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD16E58(relative to base address)
	};


	// Class FortniteUI.EndOfMatchQuestEntryWidget_Auto
	// Inherited from UEndOfMatchQuestEntryWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x360 - 0x318)
	class UEndOfMatchQuestEntryWidget_Auto : public UEndOfMatchQuestEntryWidget	
	{
	public:
		FGameplayTagContainer InclusiveFilterTags; // 0x318(0x20)
		FGameplayTagContainer ExclusiveFilterTags; // 0x338(0x20)
		bool bShowFirstQuestFound; // 0x358(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x359(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EndOfMatchQuestEntryWidget_Auto");
			return ret;
		}

		bool InitializeQuestNotification(UFortQuestItem* InQuestData); // Flags: Final|Native|Private|Const, Memory Exec: 0x7FF74FC532C8(relative to base address)
		bool FilterQuest(UFortQuestItem* InQuestData); // Flags: Final|Native|Private|Const, Memory Exec: 0x7FF74FC52C34(relative to base address)
	};


	// Class FortniteUI.EnhancedInputInjectable
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UEnhancedInputInjectable : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EnhancedInputInjectable");
			return ret;
		}
	};


	// Class FortniteUI.FortFireModeStreamingVideo
	// Inherited from UFortBaseStreamingVideo -> UEpicBaseStreamingVideo -> UObject
	// Size: 0x0 (0x1C0 - 0x1C0)
	class UFortFireModeStreamingVideo : public UFortBaseStreamingVideo	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFireModeStreamingVideo");
			return ret;
		}
	};


	// Class FortniteUI.FortActivityBrowserAttributionsModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x460 - 0x3F0)
	class UFortActivityBrowserAttributionsModal : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Back; // 0x400(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x408(0x8)
		UCommonButtonBase* Button_OpenLink; // 0x410(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x418(0x8)
		UScrollBox* ScrollBox_Details; // 0x420(0x8)
		UCommonTextBlock* Text_ActivityName; // 0x428(0x8)
		UCommonRichTextBlock* Text_ActivityOrigin; // 0x430(0x8)
		UCommonRichTextBlock* Text_LinkCode; // 0x438(0x8)
		float ScrollAmount; // 0x440(0x4)
		unsigned char UnknownData01_7[0x1C]; // 0x444(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityBrowserAttributionsModal");
			return ret;
		}

		void OnCreditsModalInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAttributionsModalInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetLinkCodeTextFormat(FText& LinkCode); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FC530C4(relative to base address)
		FText GetCreatorTextFormat(FText& CreatorName); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FC53000(relative to base address)
		FText GetAttributionsTextFormat(FText& Title, FText& Author, FText& License); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FC52E6C(relative to base address)
	};


	// Class FortniteUI.FortActivityView
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x440 - 0x3F0)
	class UFortActivityView : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x3F0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityView");
			return ret;
		}

		void BP_OnPartySizeChanged(int32_t PartySize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnLocalPlayerPromotedToLeader(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnLocalPlayerDemoted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivityDetailsModalBase
	// Inherited from UFortActivityView -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x130 (0x570 - 0x440)
	class UFortActivityDetailsModalBase : public UFortActivityView	
	{
	public:
		unsigned char UnknownData00_1[0x130]; // 0x440(0x130) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityDetailsModalBase");
			return ret;
		}
	};


	// Class FortniteUI.FortActivityModeSetSelectionModalBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortActivityModeSetSelectionModalBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityModeSetSelectionModalBase");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaSurvivorTierBadge
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortAthenaSurvivorTierBadge : public UUserWidget	
	{
	public:
		EFortAthenaSurvivorTierBadgeSize BadgeSize; // 0x2B0(0x1)
		unsigned char UnknownData00_7[0xF]; // 0x2B1(0xF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaSurvivorTierBadge");
			return ret;
		}

		void SetBadgeSize(EFortAthenaSurvivorTierBadgeSize InBadgeSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5356C(relative to base address)
		void OverrideTierAndPrestigeLevel(int32_t CustomTier, int32_t CustomPrestigeLvl); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC53498(relative to base address)
		void HandlePostMatchVisibility(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC532B4(relative to base address)
		void BP_OnSurvivorTierStateChanged(int32_t Tier, int32_t PrestigeLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPresentAnimation(int32_t BeforeTier, int32_t BeforePrestigeLevel, int32_t AfterTier, int32_t AfterPrestigeLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnBadgeSizeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaSurvivorTiersQuestRewardsPanel
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortAthenaSurvivorTiersQuestRewardsPanel : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaSurvivorTiersQuestRewardsPanel");
			return ret;
		}

		void OnSurvivorTierStateChanged(int32_t Prestige, int32_t TierRaw, int32_t TierDisplay); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC533A4(relative to base address)
		void BP_OnSurvivorTierStateChanged(int32_t PrestigeLevel, int32_t TierRaw, int32_t TierDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMobileHUDElementProxy
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x3C0 - 0x348)
	class UFortMobileHUDElementProxy : public UFortMobileHUDElement	
	{
	public:
		FText WidgetName; // 0x348(0x10)
		bool AppendWidgetAndBehaviorNames; // 0x358(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x359(0x3) UNKNOWN PROPERTY
		FLinearColor InBoundsHighlightColor; // 0x35C(0x10)
		FLinearColor OutOfBoundsProxyHighlightColor; // 0x36C(0x10)
		unsigned char UnknownData01_6[0x34]; // 0x37C(0x34) UNKNOWN PROPERTY
		UImage* Image_SelectionHighlight; // 0x3B0(0x8)
		UImage* Image_OutOfBoundsIndicator; // 0x3B8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDElementProxy");
			return ret;
		}
	};


	// Class FortniteUI.FortAutorunLockHUDElementProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3C8 - 0x3C0)
	class UFortAutorunLockHUDElementProxy : public UFortMobileHUDElementProxy	
	{
	public:
		UOverlay* Overlay_AutorunLockZone; // 0x3C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAutorunLockHUDElementProxy");
			return ret;
		}
	};


	// Class FortniteUI.FortAutorunLockZoneButton
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x370 - 0x368)
	class UFortAutorunLockZoneButton : public UBacchusHUDElement	
	{
	public:
		UFortAutorunLockZone* AutorunLockZone; // 0x368(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAutorunLockZoneButton");
			return ret;
		}
	};


	// Class FortniteUI.FortBangWrapperContentInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortBangWrapperContentInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBangWrapperContentInterface");
			return ret;
		}

		void OnStopCallout(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartCallout(FName TutorialObjectiveName, ETutorialType TutorialType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBangStateChanged(bool bEnabled, int32_t Count); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPerUserViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x70 - 0x68)
	class UFortPerUserViewModel : public UMVVMViewModelBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x68(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPerUserViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortBatchViewModel
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x88 - 0x70)
	class UFortBatchViewModel : public UFortPerUserViewModel	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x70(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBatchViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortBladeWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortBladeWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x38]; // 0x2D8(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBladeWidget");
			return ret;
		}

		void OnViewportResized(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCabinEmailManagementWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x348 - 0x2B0)
	class UFortCabinEmailManagementWidget : public UUserWidget	
	{
	public:
		UOverlay* Overlay_EmailEntry; // 0x2B0(0x8)
		UCommonTextBlock* Text_Warning; // 0x2B8(0x8)
		UCommonTextBlock* Text_MainDescription; // 0x2C0(0x8)
		UCommonButtonBase* Button_Done; // 0x2C8(0x8)
		UCommonButtonBase* Button_Cancel; // 0x2D0(0x8)
		UFortCTAButton* Button_ResendEmail; // 0x2D8(0x8)
		UFortCTAButton* Button_EditEmail; // 0x2E0(0x8)
		UFortInputField* InputField_Email; // 0x2E8(0x8)
		UCommonTextBlock* Text_Email; // 0x2F0(0x8)
		unsigned char UnknownData00_7[0x50]; // 0x2F8(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCabinEmailManagementWidget");
			return ret;
		}

		void OnShowFailureReason(FText& ErrorText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnScreenStateChange(ECabinEmailViewState NewState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChangeEmailEditMode(bool bIsInEditMode); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleConfirmEmail(FText& NewText, TEnumAsByte<ETextCommit> CommitInfo); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FC53188(relative to base address)
	};


	// Class FortniteUI.FortColorPickerConfiguration
	// Inherited from UDataAsset -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UFortColorPickerConfiguration : public UDataAsset	
	{
	public:
		bool bNoColorOptionAvailable; // 0x30(0x1)
		EColorPickerType ColorPickerType; // 0x31(0x1)
		bool bInitializeCustomColorFromSelectedSwatch; // 0x32(0x1)
		EColorPickerColorRepresentation CustomColorRepresentation; // 0x33(0x1)
		unsigned char UnknownData00_7[0x4]; // 0x34(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorPickerConfiguration");
			return ret;
		}
	};


	// Class FortniteUI.FortCompassWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x158 (0x470 - 0x318)
	class UFortCompassWidget : public UFortHUDElementWidget	
	{
	public:
		UMaterialInstanceDynamic* CompassMaterial; // 0x318(0x8)
		UImage* Image_Compass; // 0x320(0x8)
		FName CompassMaterialParam; // 0x328(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x32C(0x4) UNKNOWN PROPERTY
		FSlateFontInfo HeadingFont; // 0x330(0x58)
		unsigned char UnknownData01_6[0x8]; // 0x388(0x8) UNKNOWN PROPERTY
		FSlateBrush HeadingIndicatorBrush; // 0x390(0xB0)
		float MarkerVerticalOffset; // 0x440(0x4)
		float CompassPanOffset; // 0x444(0x4)
		unsigned char UnknownData02_7[0x28]; // 0x448(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCompassWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortContentGatingIntroModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortContentGatingIntroModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_CloseTouch; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortContentGatingIntroModal");
			return ret;
		}

		void ExitModal(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC52C20(relative to base address)
	};


	// Class FortniteUI.FortControllerHighlightDiagram
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x450 - 0x3F0)
	class UFortControllerHighlightDiagram : public UCommonActivatableWidget	
	{
	public:
		UWidget* CurrentHighlightedElement; // 0x3F0(0x8)
		TMap<FName, UWidget*> ControllerHighlights; // 0x3F8(0x50)
		UCanvasPanel* CanvasPanel_Highlights; // 0x448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortControllerHighlightDiagram");
			return ret;
		}
	};


	// Class FortniteUI.FortCountdownTimerVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xA0 - 0x68)
	class UFortCountdownTimerVM : public UMVVMViewModelBase	
	{
	public:
		ECountdownTimerState TimerState; // 0x68(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x69(0x7) UNKNOWN PROPERTY
		FText TimeLeftText; // 0x70(0x10)
		unsigned char UnknownData01_7[0x20]; // 0x80(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCountdownTimerVM");
			return ret;
		}

		void StartTimer(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5382C(relative to base address)
		void SetupViewModel(FDateTime& InFutureTime, FText& InLiveText); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC53734(relative to base address)
		void ResetTimer(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC53558(relative to base address)
		void ClearCountdownData(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC52C0C(relative to base address)
	};


	// Class FortniteUI.FortCreativeCreateBuildModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x4D0 - 0x3F0)
	class UFortCreativeCreateBuildModal : public UCommonActivatableWidget	
	{
	public:
		UCommonAnimatedSwitcher* Switcher_Content; // 0x3F0(0x8)
		UPanelWidget* Panel_CreateBuild; // 0x3F8(0x8)
		UPanelWidget* Panel_CreateBuildInProgress; // 0x400(0x8)
		UPanelWidget* Panel_CreateBuildSucceeded; // 0x408(0x8)
		UPanelWidget* Panel_CreateBuildFailed; // 0x410(0x8)
		UCommonButtonBase* Button_PrimaryFunction; // 0x418(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x420(0x8)
		UCommonButtonBase* Button_CopyMnemonic; // 0x428(0x8)
		UButton* Button_CreatorPortalUrl; // 0x430(0x8)
		UCommonTextBlock* Text_CreatorPortalUrl; // 0x438(0x8)
		UCommonTextBlock* Text_Mnemonic; // 0x440(0x8)
		UCommonTextBlock* Text_CreateBuildError; // 0x448(0x8)
		UFortLazyImage* LazyImage_CreatorPortalQrCode; // 0x450(0x8)
		bool bCreateBuildInProgress; // 0x458(0x1)
		bool bClearPersistentData; // 0x459(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x45A(0x6) UNKNOWN PROPERTY
		FString CreatedMnemonic; // 0x460(0x10)
		FDataTableRowHandle ClearPersistentDataInputRowHandle; // 0x470(0x10)
		unsigned char UnknownData01_7[0x50]; // 0x480(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCreateBuildModal");
			return ret;
		}

		void SetClearPersistentDataInputEnabled(bool bEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC53678(relative to base address)
		void SetClearPersistentData(bool bInClearPersistentData); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC535F8(relative to base address)
		void OnReceivedDoesIslandContainFabricDevices(bool bIslandContainsFabricDevices); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQrCodeImageUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMnemonicCopied(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreateBuildSucceeded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreateBuildStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreateBuildFailed(FString ErrorCode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnContentSwitcherTransitioningChanged(bool bIsTransitioning); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnContentSwitcherActiveWidgetChanged(UWidget* ActiveWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearPersistentDataSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCreatorPortalUrlButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC532A0(relative to base address)
		void BP_Reset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeCreatorAttributions
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x140 (0x530 - 0x3F0)
	class UFortCreativeCreatorAttributions : public UCommonActivatableWidget	
	{
	public:
		UFortDynamicEntryBox* DynamicEntryBox_CreditsContainer; // 0x3F0(0x8)
		FText CreatorTitle; // 0x3F8(0x10)
		FText AttributionsTitle; // 0x408(0x10)
		UUserWidget* AttributionsTitleWidget; // 0x418(0x8)
		FText CreditsTitle; // 0x420(0x10)
		UUserWidget* CreditsTitleWidget; // 0x430(0x8)
		FText AttributionsTextFormat; // 0x438(0x10)
		UClass* CreditsTeamTitleCardClass; // 0x448(0x8)
		UClass* CreditsCreatorAttributionsClass; // 0x450(0x8)
		TWeakObjectPtr<UClass*> CreditsAttributionsModalClass; // 0x458(0x20)
		UFortCreativeCreditsTeamTitleCard* Button_CreditsTeamTitleCard; // 0x478(0x8)
		UFortCreativeCreditsAttributions* Button_CreditsAttributions; // 0x480(0x8)
		UFortCreativeCreditsAttributions* Button_Credits; // 0x488(0x8)
		FMargin SectionTitlePadding; // 0x490(0x10)
		FMargin TitleCardButtonPadding; // 0x4A0(0x10)
		FMargin TeamMemberButtonPadding; // 0x4B0(0x10)
		FMargin AttributionsButtonPadding; // 0x4C0(0x10)
		FMargin CreditsButtonPadding; // 0x4D0(0x10)
		unsigned char UnknownData00_7[0x50]; // 0x4E0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCreatorAttributions");
			return ret;
		}

		void OnTitleCardButtonCreated(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTeamMemberTitleCardButtonCreated(UFortCreativeCreditsTeamTitleCard* TeamMemberButton); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSectionTitleCreated(UFortCreativeCreditsSectionTitle* SectionTitle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreditsButtonCreated(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAttributionsButtonCreated(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeCreditsAttributions
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UFortCreativeCreditsAttributions : public UCommonButtonBase	
	{
	public:
		UTimelineComponent* HoverAnimationTimeline; // 0x1390(0x8)
		UCommonRichTextBlock* RichText_CreditsAttributionsShortDescription; // 0x1398(0x8)
		int32_t AttributionsPreviewTextWordLimit; // 0x13A0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x13A4(0x4) UNKNOWN PROPERTY
		UCurveLinearColor* HoverAnimationCurve; // 0x13A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCreditsAttributions");
			return ret;
		}

		void OnAnimationUpdate(FLinearColor Color); // Flags: Final|Native|Private|HasDefaults|Const, Memory Exec: 0x7FF74FC55224(relative to base address)
		float GetHoverAnimationLength(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeCreditsSectionTitle
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortCreativeCreditsSectionTitle : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCreditsSectionTitle");
			return ret;
		}

		void SetTitleText(FText& TitleText); // Flags: Final|Native|Public|HasOutParms|Const, Memory Exec: 0x7FF74FC55454(relative to base address)
	};


	// Class FortniteUI.FortCreativeCreditsTeamTitleCard
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UFortCreativeCreditsTeamTitleCard : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_CreatorTitle; // 0x1390(0x8)
		UCommonTextBlock* Text_CreatorName; // 0x1398(0x8)
		UCommonTextBlock* Text_CreatorDescription; // 0x13A0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCreditsTeamTitleCard");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandInfoViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x88 (0xF0 - 0x68)
	class UFortCreativeIslandInfoViewModel : public UMVVMViewModelBase	
	{
	public:
		FMulticastInlineDelegate OnIslandMetaDataUpdateComplete; // 0x68(0x10)
		FMulticastInlineDelegate OnFailedToUpdateCreativePlotData; // 0x78(0x10)
		TArray<FText> IslandIntroduction; // 0x88(0x10)
		EDynamicXpCalibrationPhase XpCalibrationPhase; // 0x98(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x99(0x7) UNKNOWN PROPERTY
		UTexture2DDynamic* ThumbnailTexture; // 0xA0(0x8)
		UTexture2D* LobbyBackgroundTexture; // 0xA8(0x8)
		FString PublishedCreatorName; // 0xB0(0x10)
		bool bIsUpdatingIslandMetaData; // 0xC0(0x1)
		unsigned char UnknownData01_7[0x2F]; // 0xC1(0x2F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandInfoViewModel");
			return ret;
		}

		void UpdateCreativePlotData(FString NewIslandTitle, TArray<FString>& NewIslandIntroductions); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC555A0(relative to base address)
		void UnbindViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC554F0(relative to base address)
		void SetIslandDescriptionTags(TArray<FCreativeIslandDescriptionTag>& IslandDescriptionTags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC553BC(relative to base address)
		void OnIslandMetaDataUpdateComplete__DelegateSignature(FString Error); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFailedToUpdateCreativePlotData__DelegateSignature(FCreativeIslandInfo& IslandInfo); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsPlayerInAnExperienceTheyOwn(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54FF0(relative to base address)
		void InitializeViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC54FA4(relative to base address)
		void HandleLinkDataQueryComplete(bool bSuccess, FString ErrorMessage, UFortGameActivity* LinkData); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC548A4(relative to base address)
		void HandleIslandMetaDataUpdateComplete(FString Error); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC54814(relative to base address)
		void HandleDownloadThumbnailComplete(bool bSuccess, UTexture2DDynamic* InThumbnailTexture); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC54750(relative to base address)
		FText GetIslandTitle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54644(relative to base address)
		TArray GetIslandDescriptionTags(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54608(relative to base address)
		FText GetIslandCode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC545CC(relative to base address)
	};


	// Class FortniteUI.FortMatchmakingKnobsModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x2C8 (0x6B8 - 0x3F0)
	class UFortMatchmakingKnobsModal : public UCommonActivatableWidget	
	{
	public:
		float MobileOptionListEntrySpacing; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		TArray<FString> ScrolledOffWhitelistedPlayers; // 0x3F8(0x10)
		bool bInitializeDataInNativeConstruct; // 0x408(0x1)
		unsigned char UnknownData01_6[0x27]; // 0x409(0x27) UNKNOWN PROPERTY
		UPlaylistUserOptions* OptionsAsset; // 0x430(0x8)
		TArray<UObject*> OptionDataProviders; // 0x438(0x10)
		unsigned char UnknownData02_6[0x20]; // 0x448(0x20) UNKNOWN PROPERTY
		TMap<FString, FString> LoadedOptionValues; // 0x468(0x50)
		unsigned char UnknownData03_6[0x48]; // 0x4B8(0x48) UNKNOWN PROPERTY
		UCommonListView* OptionsList; // 0x500(0x8)
		UCommonTextBlock* TextBlock_TitleText; // 0x508(0x8)
		UCommonTextBlock* TextBlock_DescriptionText; // 0x510(0x8)
		UImage* Image_DisplayImage; // 0x518(0x8)
		FDataTableRowHandle RestoreDefaultsInputRowHandle; // 0x520(0x10)
		UClass* SubcategoryHeaderWidgetClass; // 0x530(0x8)
		bool bBindToOnLoadedOptionsChanged; // 0x538(0x1)
		unsigned char UnknownData04_6[0x7]; // 0x539(0x7) UNKNOWN PROPERTY
		TMap<FGameplayTag, UFortCreativePropertySubcategoryHeaderListItem*> SubcategoryHeaderTagToListItems; // 0x540(0x50)
		unsigned char UnknownData05_7[0x128]; // 0x590(0x128) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingKnobsModal");
			return ret;
		}

		void SetSearchString(FString InSearchString); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750024F04(relative to base address)
		void SetOptionCategoryTagFilter(FGameplayTagContainer& InOptionCategoryTagFilter); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750024D34(relative to base address)
		void SetListDataSource(TEnumAsByte<UFortMatchmakingKnobsDataSource> ListType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750024644(relative to base address)
		void RestoreOptionsToDefault(bool bRestoreAllOptions); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750023CBC(relative to base address)
		void OnSetInGameMode(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectionUpdated(UFortMatchmakingKnobsSpinnerButton* CurrentSelection); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOptionsFiltered(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitForUserOptionValues(TScriptInterface<Class>& UserOptionValues); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitForOptionsComponent(UFortActorOptionsComponent* OptionsComponent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHoveredItemChanged(UObject* Item, bool bIsHovered); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500228C0(relative to base address)
		bool OnHandleRestoreDefaultsInput(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDataInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentItemSelectionChanged(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750022748(relative to base address)
		void OnAcceptAnimationComplete(bool bApplyAllOptions); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500223F4(relative to base address)
		void InitializeData(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D0988B4(relative to base address)
		void InitForToyOptionsActor(AActor* InActor); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF645D4(relative to base address)
		bool HasNonEventProperties(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750021E58(relative to base address)
		bool HasMatchingTags(UObject* Option, FGameplayTagContainer& CategoryTags, FGameplayTagContainer& ContextTags); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750021B78(relative to base address)
		bool HasEventFunctionProperty(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750021AE4(relative to base address)
		bool HasEventDescriptorProperty(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750021A50(relative to base address)
		void HandleRestorePropertiesClicked(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74E313DD4(relative to base address)
		void HandleRestoreFunctionsClicked(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74E3138BC(relative to base address)
		void HandleRestoreEventsClicked(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB41C(relative to base address)
		void HandleLeaveIsland(AFortPlayerPawn* PlayerPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500212F4(relative to base address)
		void HandleForcedOffIsland(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500211E4(relative to base address)
		void HandleCancelClicked(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
		EFortModifiedStatus GetSpinnerModificationStatus(UFortMatchmakingKnobsSpinnerButton* SpinnerButton); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020C08(relative to base address)
		void GetSearchStringFilteredOptionCategoryTags(FGameplayTagContainer& OutSearchStringFilteredOptionCategoryTags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750020B50(relative to base address)
		FString GetSearchString(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020B34(relative to base address)
		TArray GetScrolledOffWhitelistedPlayers(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750020AF8(relative to base address)
		EFortModifiedStatus GetModificationStatus(UObject* Option); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020690(relative to base address)
		bool DoesContainString(UObject* Option, FString String); // Flags: Final|Native|Static|Protected|BlueprintCallable, Memory Exec: 0x7FF750020364(relative to base address)
		TScriptInterface BP_GetUserOptionValuesInterface(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020158(relative to base address)
		UFortActorOptionsComponent BP_GetOptionsComponent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020130(relative to base address)
		TScriptInterface BP_GetLabelOverrideInterface(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500200B4(relative to base address)
		void ApplyChanges(bool bApplySettingsFromCachedData, bool bApplyAllOptions); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75001FFEC(relative to base address)
	};


	// Class FortniteUI.FortCreativeMyIslandContentDebugPanel
	// Inherited from UFortMatchmakingKnobsModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x6D0 - 0x6B8)
	class UFortCreativeMyIslandContentDebugPanel : public UFortMatchmakingKnobsModal	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x6B8(0x8) UNKNOWN PROPERTY
		TArray<FString> OwnerPermissionAllowList; // 0x6C0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMyIslandContentDebugPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeMyIslandContentKnobsPanel
	// Inherited from UFortMatchmakingKnobsModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x6C0 - 0x6B8)
	class UFortCreativeMyIslandContentKnobsPanel : public UFortMatchmakingKnobsModal	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x6B8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMyIslandContentKnobsPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeMyIslandContentPanelInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortCreativeMyIslandContentPanelInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMyIslandContentPanelInterface");
			return ret;
		}

		void BP_ShouldShowPanel(bool& bOutShouldShowPanel, EFortMinigameState MinigameState, bool bIsInReadOnlyExperience, bool bIsOwnerOfCurrentExperience); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeSettingsFlow
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1E0 (0x5D0 - 0x3F0)
	class UFortCreativeSettingsFlow : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UWidgetSwitcher* Switcher_EditorConnected; // 0x3F8(0x8)
		FName TabNameID; // 0x400(0x4)
		unsigned char UnknownData01_6[0xC]; // 0x404(0xC) UNKNOWN PROPERTY
		FFortTabButtonLabelInfo TabButtonLabelInfo; // 0x410(0xF0)
		FDataTableRowHandle ChannelBrowserInputRowHandle; // 0x500(0x10)
		TWeakObjectPtr<UClass*> SoftChannelBrowserClass; // 0x510(0x20)
		FDataTableRowHandle DeviceBrowserInputRowHandle; // 0x530(0x10)
		TWeakObjectPtr<UClass*> SoftDeviceBrowserClass; // 0x540(0x20)
		unsigned char UnknownData02_7[0x70]; // 0x560(0x70) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeSettingsFlow");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeMyIslandPanel
	// Inherited from UFortCreativeSettingsFlow -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x6B0 - 0x5D0)
	class UFortCreativeMyIslandPanel : public UFortCreativeSettingsFlow	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x5D0(0x20) UNKNOWN PROPERTY
		UFortTabListWidgetBase* TabList_MainContent; // 0x5F0(0x8)
		UCommonAnimatedSwitcher* Switcher_MainContent; // 0x5F8(0x8)
		FAthenaMapScreenContainerTabInfo MapScreenContainerTabInfo; // 0x600(0x40)
		bool bLinkTabListToSwitcher; // 0x640(0x1)
		bool bBindToMinigame; // 0x641(0x1)
		bool bIsDefaultMyIslandInfo; // 0x642(0x1)
		bool bIsOverriddenMyIslandInfo; // 0x643(0x1)
		unsigned char UnknownData01_6[0x4]; // 0x644(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle StartEndMinigameInputRowHandle; // 0x648(0x10)
		FText StartMinigameText; // 0x658(0x10)
		FText EndMinigameText; // 0x668(0x10)
		TArray<FName> BlockedTabNames; // 0x678(0x10)
		unsigned char UnknownData02_7[0x28]; // 0x688(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMyIslandPanel");
			return ret;
		}

		void UpdateStartEndMinigameInput(AFortMinigame* Minigame); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC556C0(relative to base address)
		void UpdateBackButtonText(FText NewText); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC55504(relative to base address)
		void ShouldShowTab(bool& bOutShouldShowTab, FName TabID, EFortMinigameState MinigameState, bool bIsInReadOnlyExperience, bool bIsOwnerOfCurrentExperience); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabVisibilitiesUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartEndMinigameInput(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameStateChanged(EFortMinigameState MinigameState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameSettingsChanged(AFortMinigameSettingsBuilding* MinigameSettings); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActiveMainContentWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsUpdatingTabVisibilities(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC550E4(relative to base address)
		bool IsOwnerOfCurrentExperience(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54FCC(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC54A84(relative to base address)
		void HandleMinigameSettingsMachineChanged(UFortMinigameVolumeComponent* MinigameVolumeComponent, AFortMinigameSettingsBuilding* MinigameSettings); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC549C0(relative to base address)
		void HandleCreativePermissionsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5473C(relative to base address)
		UFortMinigameVolumeComponent GetMinigameVolumeComponent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54714(relative to base address)
		AFortMinigameSettingsBuilding GetMinigameSettingsMachine(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC546EC(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyCategoryTagToTextMap
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UFortCreativePropertyCategoryTagToTextMap : public UDataAsset	
	{
	public:
		TMap<FGameplayTag, FText> CategoryTagToTextMap; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyCategoryTagToTextMap");
			return ret;
		}

		FText GetDisplayName(FGameplayTag& CategoryTag); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC544EC(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertySubcategoryHeaderListItem
	// Inherited from UObject
	// Size: 0x40 (0x68 - 0x28)
	class UFortCreativePropertySubcategoryHeaderListItem : public UObject	
	{
	public:
		FMulticastInlineDelegate OnIsExpandedChangedDynamicDelegate; // 0x28(0x10)
		TArray<UObject*> Options; // 0x38(0x10)
		unsigned char UnknownData00_7[0x20]; // 0x48(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem");
			return ret;
		}

		void SetIsExpanded(bool bInIsExpanded); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5533C(relative to base address)
		void OnIsExpandedChangedDynamic__DelegateSignature(bool bIsExpanded); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsExpanded(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54FB8(relative to base address)
		FGameplayTag GetSubcategoryTag(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C5D1AC8(relative to base address)
	};


	// Class FortniteUI.FortCreativeScoreboardPanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x540 - 0x528)
	class UFortCreativeScoreboardPanel : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle MainMenuInputRowHandle; // 0x530(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeScoreboardPanel");
			return ret;
		}

		void KickOffMatchmaking(FOnlineLinkId IslandToMatchmakeTo); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC550FC(relative to base address)
	};


	// Class FortniteUI.FortCreativeTimerContainerWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x398 - 0x318)
	class UFortCreativeTimerContainerWidget : public UFortHUDElementWidget	
	{
	public:
		UClass* TimerViewModelClass; // 0x318(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x320(0x10) UNKNOWN PROPERTY
		UClass* TimerWidgetDefaultClass; // 0x330(0x8)
		TMap<UObject*, FViewModelRelation> InterfaceViewModelMap; // 0x338(0x50)
		TScriptInterface<Class> ActiveInterface; // 0x388(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeTimerContainerWidget");
			return ret;
		}

		void OnTimerWidgetCreated(UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTimerWidgetActorUpdated(AActor* TimerWidgetActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC54C80(relative to base address)
		void HandlePlayerEnterVolume(APlayerState* PlayerState, AFortVolume* FortVolume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC54B48(relative to base address)
	};


	// Class FortniteUI.FortCreativeTimerViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x50 (0xB8 - 0x68)
	class UFortCreativeTimerViewModel : public UMVVMViewModelBase	
	{
	public:
		FName DefaultTextStyle; // 0x68(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x6C(0x4) UNKNOWN PROPERTY
		FText DisplayText; // 0x70(0x10)
		FText DisplayRichText; // 0x80(0x10)
		FText LabelText; // 0x90(0x10)
		FText TimeText; // 0xA0(0x10)
		int32_t RemainingSeconds; // 0xB0(0x4)
		int32_t TotalSeconds; // 0xB4(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeTimerViewModel");
			return ret;
		}

		bool IsTextStyleValid(FName& TextStyle); // Flags: Native|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FC55044(relative to base address)
	};


	// Class FortniteUI.FortDiscoverSurfaceViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x68 (0xD0 - 0x68)
	class UFortDiscoverSurfaceViewModel : public UMVVMViewModelBase	
	{
	public:
		bool bQueryingPageInProgress; // 0x68(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x69(0x7) UNKNOWN PROPERTY
		TArray<UFortDiscoverProviderViewModel*> Providers; // 0x70(0x10)
		FName SurfaceName; // 0x80(0x4)
		unsigned char UnknownData01_7[0x4C]; // 0x84(0x4C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverSurfaceViewModel");
			return ret;
		}

		void UpdateCachedSurfaceData(bool bShouldForceUpdate); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749FBC25C(relative to base address)
		void StopVisibleImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749FC7F80(relative to base address)
		void StartVisibleImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749FC7FB8(relative to base address)
		void StartAnalyticsImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749FCCCB8(relative to base address)
		bool ShouldQueryOnConstruct(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF749ACFEB8(relative to base address)
		void SendSubviewEvent(UWidget* Widget, FString Label, FString Value); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF9632C(relative to base address)
		int32_t GetProviderIndexFromPanelName(FName PanelName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94980(relative to base address)
		UFortDiscoverProviderViewModel GetProviderFromPanelName(FName PanelName); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF948F4(relative to base address)
		void FireExitedImpressionsFromSurface(); // Flags: RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF746F37328(relative to base address)
		void FetchNextPageFromPanelName(int32_t SelectionIndex, FName PanelName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93CAC(relative to base address)
		void FetchNextPageFromIndex(int32_t SelectionIndex, int32_t ProviderIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93BEC(relative to base address)
	};


	// Class FortniteUI.FortDiscoverBrowseViewModel
	// Inherited from UFortDiscoverSurfaceViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x40 (0x110 - 0xD0)
	class UFortDiscoverBrowseViewModel : public UFortDiscoverSurfaceViewModel	
	{
	public:
		TArray<UFortDiscoverTileItemVM*> FeaturedCategories; // 0xD0(0x10)
		TArray<UFortDiscoverTileItemVM*> AllCategories; // 0xE0(0x10)
		FText FeaturedCategoriesPanelDisplayName; // 0xF0(0x10)
		FText AllCategoriesPanelDisplayName; // 0x100(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverBrowseViewModel");
			return ret;
		}

		void SetDataFromProviders(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748BEDE70(relative to base address)
		UFortDiscoverProviderViewModel GetFeaturedCategoriesProviderViewModel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5459C(relative to base address)
		UFortDiscoverProviderViewModel GetAllCategoriesProviderViewModel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC544B8(relative to base address)
	};


	// Class FortniteUI.FortDiscoverItemSelectorBase
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortDiscoverItemSelectorBase : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverItemSelectorBase");
			return ret;
		}

		UClass GetTileItemClass(UFortDiscoverTileItemVM* InTileItemViewModel); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74FC564A8(relative to base address)
		UClass GetRowItemClass(UFortGameActivityProvider* InCategory); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74FC56418(relative to base address)
	};


	// Class FortniteUI.FortDiscoverSearchViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x148 (0x1B0 - 0x68)
	class UFortDiscoverSearchViewModel : public UMVVMViewModelBase	
	{
	public:
		FString SearchTerm; // 0x68(0x10)
		bool bIsSearchInProgress; // 0x78(0x1)
		bool bIsCreatorSearchInProgress; // 0x79(0x1)
		bool bIsLinkCodeSearch; // 0x7A(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x7B(0x5) UNKNOWN PROPERTY
		FString ResultsTerm; // 0x80(0x10)
		TArray<UFortDiscoverTileItemVM*> SearchResults; // 0x90(0x10)
		EDiscoverSearchMode SearchMode; // 0xA0(0x1)
		bool bWasLastCreatorQueryResultSuccessful; // 0xA1(0x1)
		ELinkEntryQueryResult LastLinkEntryQueryResult; // 0xA2(0x1)
		unsigned char UnknownData01_7[0x10D]; // 0xA3(0x10D) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverSearchViewModel");
			return ret;
		}

		void StopAnalyticsVisibilityImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57A44(relative to base address)
		void StartAnalyticsVisibilityImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC578A4(relative to base address)
		void StartAnalyticsSession(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57890(relative to base address)
		void StartAnalyticsImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5787C(relative to base address)
		bool IsAnySearchActiveOrInProgress(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7499AFC14(relative to base address)
		int32_t GetIslandResultCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC56328(relative to base address)
		int32_t GetCreatorResultCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC56300(relative to base address)
		void FireAnalyticsForBrowseAndSearch(UFortDiscoverBrowseViewModel* BrowseViewModel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5626C(relative to base address)
		void ClearSearch(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5621C(relative to base address)
		void ActionSearch(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC560D8(relative to base address)
	};


	// Class FortniteUI.FortDiscoverTileItemVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x70 (0xE0 - 0x70)
	class UFortDiscoverTileItemVM : public UFortPerUserViewModel	
	{
	public:
		unsigned char UnknownData00_3[0x60]; // 0x70(0x60) UNKNOWN PROPERTY
		char ItemType; // 0xD0(0x1)
		unsigned char UnknownData01_6[0x3]; // 0xD1(0x3) UNKNOWN PROPERTY
		int32_t ColumnSize; // 0xD4(0x4)
		bool bDisplayAsSquareTile; // 0xD8(0x1)
		unsigned char UnknownData02_7[0x7]; // 0xD9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverTileItemVM");
			return ret;
		}

		void StopVisibilityImpression(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57A60(relative to base address)
		void StopActiveImpression(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57A2C(relative to base address)
		void StartVisibilityImpression(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57A00(relative to base address)
		void StartActiveImpression(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57864(relative to base address)
		void ResetAnalytics(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC56BBC(relative to base address)
	};


	// Class FortniteUI.FortDynamicMotdFullscreenTile
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UFortDynamicMotdFullscreenTile : public UCommonActivatableWidget	
	{
	public:
		UMotdViewModel* Motd; // 0x3F0(0x8)
		UFortDynamicMotdMediaPlayer* MediaPlayer; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicMotdFullscreenTile");
			return ret;
		}

		void SetMotd(UMotdViewModel* InMotd); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57058(relative to base address)
		void OnVideoBackgroundsAllowedChanged(bool bAllowVideoBackgrounds); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnButtonPressed(UMotdActionBase* Action, EMotdButtonStyle Style); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC56614(relative to base address)
	};


	// Class FortniteUI.FortDynamicMotdFullscreenWidget
	// Inherited from UMotdWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x410 - 0x408)
	class UFortDynamicMotdFullscreenWidget : public UMotdWidgetBase	
	{
	public:
		UAthenaScrollBox* ScrollBox; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicMotdFullscreenWidget");
			return ret;
		}

		void SwipeRight(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SwipeLeft(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetSlideIndex(int32_t Index); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SendManualVideoControlEvent(bool bEnableSecondary); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC56BD0(relative to base address)
		void OnScrollInput(float ScrollDirection); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC569E4(relative to base address)
		void OnMotdShown(FString ContentHash); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC568F4(relative to base address)
		void OnCurrentMotdSet(int32_t Index); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC56838(relative to base address)
		void OnButtonPressed(EButtonAction ButtonPressed, FString ContentHash); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC56728(relative to base address)
		void HandleInputMethodChanged(ECommonInputType NewInputType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC56538(relative to base address)
	};


	// Class FortniteUI.FortDynamicMotdMediaPlayer
	// Inherited from UObject
	// Size: 0xD0 (0xF8 - 0x28)
	class UFortDynamicMotdMediaPlayer : public UObject	
	{
	public:
		FMulticastInlineDelegate Loaded; // 0x28(0x10)
		FMulticastInlineDelegate Playing; // 0x38(0x10)
		FMulticastInlineDelegate Closed; // 0x48(0x10)
		FMulticastInlineDelegate Ended; // 0x58(0x10)
		FMulticastInlineDelegate TerminalErrorEvent; // 0x68(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x78(0x8) UNKNOWN PROPERTY
		UFortBaseStreamingVideo* BasePlayer; // 0x80(0x8)
		UMediaTexture* MediaTexture; // 0x88(0x8)
		unsigned char UnknownData01_7[0x68]; // 0x90(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicMotdMediaPlayer");
			return ret;
		}

		void VideoOnTerminalError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57B60(relative to base address)
		void VideoOnStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57B4C(relative to base address)
		void VideoOnSeeked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57B34(relative to base address)
		void VideoOnOpened(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57B20(relative to base address)
		void VideoOnEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57B0C(relative to base address)
		void VideoOnClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC57AF8(relative to base address)
		void Stop(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC57A18(relative to base address)
		void Start(FMotdVideo& MotdVideo, UMediaTexture* InMediaTexture, int32_t InMaxYResolution, bool bDisableCDNFailover, bool bManualLoop, int32_t InLoopOverride); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC573B0(relative to base address)
		void SetPriority(bool bInPriority); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC570E4(relative to base address)
		void Play(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC56A64(relative to base address)
		void MetadataSuccess(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC56600(relative to base address)
	};


	// Class FortniteUI.DynamicMotdVideoPlayerState
	// Inherited from UObject
	// Size: 0xF8 (0x120 - 0x28)
	class UDynamicMotdVideoPlayerState : public UObject	
	{
	public:
		FMulticastInlineDelegate PlayingEvent; // 0x28(0x10)
		FMulticastInlineDelegate TerminalEvent; // 0x38(0x10)
		FMulticastInlineDelegate EndedEvent; // 0x48(0x10)
		UFortDynamicMotdMediaPlayer* MediaPlayer; // 0x58(0x8)
		FString Name; // 0x60(0x10)
		bool bPreloaded; // 0x70(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x71(0x3) UNKNOWN PROPERTY
		FName TextureParam; // 0x74(0x4)
		bool bPlayImmediately; // 0x78(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x79(0x7) UNKNOWN PROPERTY
		UMediaTexture* MediaTexture; // 0x80(0x8)
		unsigned char UnknownData02_6[0x88]; // 0x88(0x88) UNKNOWN PROPERTY
		UGameInstance* GameInstance; // 0x110(0x8)
		unsigned char UnknownData03_7[0x8]; // 0x118(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DynamicMotdVideoPlayerState");
			return ret;
		}

		void TerminalError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC57A78(relative to base address)
		void Playing(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC56A78(relative to base address)
		void Loaded(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC565EC(relative to base address)
		bool IsValid(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC565D0(relative to base address)
		bool IsFree(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC565B8(relative to base address)
		void Free(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC562EC(relative to base address)
		void Ended(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC56258(relative to base address)
		void Closed(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC56244(relative to base address)
	};


	// Class FortniteUI.FortDynamicMotdTeaserWidget
	// Inherited from UMotdWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x470 - 0x408)
	class UFortDynamicMotdTeaserWidget : public UMotdWidgetBase	
	{
	public:
		FMulticastInlineDelegate FullscreenWidgetCreated; // 0x408(0x10)
		FMulticastInlineDelegate VideoPlayerReady; // 0x418(0x10)
		bool bVideoReady; // 0x428(0x1)
		bool bShouldBeActive; // 0x429(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x42A(0x6) UNKNOWN PROPERTY
		UMotdViewModel* CurrentMotd; // 0x430(0x8)
		TArray<UDynamicMotdVideoPlayerState*> MediaPlayerStates; // 0x438(0x10)
		UFortDynamicMotdFullscreenWidget* CreatedFullscreenWidget; // 0x448(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x450(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicMotdTeaserWidget");
			return ret;
		}

		UDynamicMotdVideoPlayerState StartVideo(UMotdViewModel* Motd, UMediaTexture* InTexture, FName InTextureParam, bool bPlayImmediately); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC578C0(relative to base address)
		void SetCurrentMotd(int32_t Index); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC56D4C(relative to base address)
		void ReleaseMediaPlayer(FText& Name, bool bAll); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC56A8C(relative to base address)
		void OnVideoBackgroundsAllowedChanged(bool bAllowVideoBackgrounds); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMotdShown(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC569D0(relative to base address)
		float GetMotdUpdateDebounce(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC563FC(relative to base address)
		UDynamicMotdVideoPlayerState GetMediaPlayer(FString& Name); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC56350(relative to base address)
		void AddFullScreenWidget(TWeakObjectPtr<UClass*> FullScreenWidget, int32_t Index); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC560EC(relative to base address)
	};


	// Class FortniteUI.FortEulaWidgetsContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortEulaWidgetsContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* Switcher_EulaWidgets; // 0x400(0x8)
		UFortEulaWidget* Widget_OldEula; // 0x408(0x8)
		UFortEulaWidget* Widget_NewEula; // 0x410(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEulaWidgetsContainer");
			return ret;
		}
	};


	// Class FortniteUI.FortEventDateTimeTextBlock
	// Inherited from UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x380 - 0x328)
	class UFortEventDateTimeTextBlock : public UCommonTextBlock	
	{
	public:
		unsigned char UnknownData00_1[0x58]; // 0x328(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventDateTimeTextBlock");
			return ret;
		}

		void SetTimespanValue(FTimespan InTimespan, TEnumAsByte<DateFormat> InFormatStyle); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC571D8(relative to base address)
		void SetDateTimeValue(FDateTime InDateTime, TEnumAsByte<DateFormat> InFormatStyle, float InRefreshDelay); // Flags: Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC56DCC(relative to base address)
		void SetCountDownCompletionText(FText InCompletionText); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC56C90(relative to base address)
		void OnCurrentTimeTextBlockUpdated__DelegateSignature(double Seconds); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FDateTime GetDateTime(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D097B08(relative to base address)
		void ClearTimer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC56230(relative to base address)
	};


	// Class FortniteUI.FortEventLevelData
	// Inherited from UDataAsset -> UObject
	// Size: 0x60 (0x90 - 0x30)
	class UFortEventLevelData : public UDataAsset	
	{
	public:
		FString EventLevelStoreFrontName; // 0x30(0x10)
		TWeakObjectPtr<UAthenaRewardEventGraph*> EventLevelRewards; // 0x40(0x20)
		UClass* CinematicMovieWidget; // 0x60(0x8)
		UFortStreamMediaSource* ElectraMediaSource; // 0x68(0x8)
		UMediaPlayer* StreamedMediaPlayer; // 0x70(0x8)
		FName CinematicVideoName; // 0x78(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle InteractionHandle; // 0x80(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLevelData");
			return ret;
		}
	};


	// Class FortniteUI.FortEditableFilteredCountedTextBox
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x120 (0x3D0 - 0x2B0)
	class UFortEditableFilteredCountedTextBox : public UUserWidget	
	{
	public:
		int32_t EntryCharLimit; // 0x2B0(0x4)
		EVirtualKeyboardTrigger VirtualKeyboardTrigger; // 0x2B4(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2B5(0x3) UNKNOWN PROPERTY
		int32_t EnforcedEntryCharLimit; // 0x2B8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x2BC(0x4) UNKNOWN PROPERTY
		FText SuggestionText; // 0x2C0(0x10)
		unsigned char UnknownData02_6[0x1]; // 0x2D0(0x1) UNKNOWN PROPERTY
		bool bUseChatSanitizer; // 0x2D1(0x1)
		bool bShouldValidatePersistentID; // 0x2D2(0x1)
		bool bAllowLineBreaks; // 0x2D3(0x1)
		bool bAllowStyleEditing; // 0x2D4(0x1)
		bool bIgnoreCharLimitValidation; // 0x2D5(0x1)
		unsigned char UnknownData03_6[0x2]; // 0x2D6(0x2) UNKNOWN PROPERTY
		FCharRangeList AllowedCharacters; // 0x2D8(0x10)
		bool bReplaceUserTextWithSanitizedString; // 0x2E8(0x1)
		bool bAllowSanitizedStrings; // 0x2E9(0x1)
		unsigned char UnknownData04_6[0x6]; // 0x2EA(0x6) UNKNOWN PROPERTY
		FText DefaultSanitizationErrorText; // 0x2F0(0x10)
		FText AdditionalValidationErrorText; // 0x300(0x10)
		bool bCurrentlyValid; // 0x310(0x1)
		unsigned char UnknownData05_7[0xBF]; // 0x311(0xBF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEditableFilteredCountedTextBox");
			return ret;
		}

		void ValidatePersistentID(FText& Text); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateCharacterCount(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF2944(relative to base address)
		void SetTextWithForcedSanitization(FText& Text); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFF1FD4(relative to base address)
		void SetEntryCharLimit(int32_t InCharLimit); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74DC6700C(relative to base address)
		void OnEditableTextHintChanged(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEditableTextChanged(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDirtyTextAttempted(bool bIsBadText, bool bAdditionalValidationFailed); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCharCountTextChanged(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEFFB0(relative to base address)
		void HandleTextChanged(FText& Text); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEFF14(relative to base address)
		bool GetSomeBool(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748CDD424(relative to base address)
		bool GetIgnoreCharLimitValidation(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEE9C(relative to base address)
		int32_t GetEntryCharLimit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749FCCC20(relative to base address)
		FText GetEditedText(); // Flags: Native|Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF74FFEED3C(relative to base address)
		bool GetAllowStyleEditing(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1F7C(relative to base address)
		bool GetAllowLineBreaks(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEE8F0(relative to base address)
		FString GetAllowedCharactersAsString(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEE908(relative to base address)
		void ForceSetText(FText& Text); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEE790(relative to base address)
	};


	// Class FortniteUI.FortFilteredNameEntryWidget
	// Inherited from UFortEditableFilteredCountedTextBox -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x400 - 0x3D0)
	class UFortFilteredNameEntryWidget : public UFortEditableFilteredCountedTextBox	
	{
	public:
		TEnumAsByte<ETextCommit> LastTextCommittedType; // 0x3D0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3D1(0x7) UNKNOWN PROPERTY
		UCommonButtonBase* Button_RenameInputButton; // 0x3D8(0x8)
		FMulticastInlineDelegate OnTextCommitByEnter; // 0x3E0(0x10)
		FMulticastInlineDelegate OnRenameInput; // 0x3F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFilteredNameEntryWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortFrontendExperienceFlowInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortFrontendExperienceFlowInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendExperienceFlowInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortFrontendOverlayInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortFrontendOverlayInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendOverlayInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortFrontendSurvivorTier
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortFrontendSurvivorTier : public UUserWidget	
	{
	public:
		FGameplayTag AssociatedQuestCategory; // 0x2B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2B4(0x4) UNKNOWN PROPERTY
		UCommonButtonBase* Button_GoToQuests; // 0x2B8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendSurvivorTier");
			return ret;
		}
	};


	// Class FortniteUI.FortGameFeature_FortGameRegistryObserver
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortGameFeature_FortGameRegistryObserver : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortGameSettingRegistry*> AssociatedSettingsRegistry; // 0x30(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameFeature_FortGameRegistryObserver");
			return ret;
		}
	};


	// Class FortniteUI.FortGameSettingRegistryExtension
	// Inherited from UFortGameSettingRegistryExtensionBase -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortGameSettingRegistryExtension : public UFortGameSettingRegistryExtensionBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameSettingRegistryExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortGameSettingSubsystem
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UFortGameSettingSubsystem : public UFortLocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x30(0x18) UNKNOWN PROPERTY
		UFortGameSettingRegistry* SettingRegistry; // 0x48(0x8)
		UFortGameFeature_FortGameRegistryObserver* SettingRegistryObserver; // 0x50(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x58(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameSettingSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.FortGlobalActionDetailsDataSource
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortGlobalActionDetailsDataSource : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGlobalActionDetailsDataSource");
			return ret;
		}

		void RemoveOnChangeDelegate(FDelegateProperty& InDelegate); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FC58CE4(relative to base address)
		FFortGlobalActionDetails GetValue(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74FC58CB8(relative to base address)
		void AddOnChangeDelegate(FDelegateProperty& InDelegate); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E2608AC(relative to base address)
	};


	// Class FortniteUI.FortGlobalVMResolver
	// Inherited from UMVVMViewModelContextResolver -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortGlobalVMResolver : public UMVVMViewModelContextResolver	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGlobalVMResolver");
			return ret;
		}
	};


	// Class FortniteUI.FortHabaneroGenericEntry
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UFortHabaneroGenericEntry : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHabaneroGenericEntry");
			return ret;
		}

		FText DateTimeAsTimeZoneTimeShort(FDateTime& InDateTime, FString InTimeZone); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC58B08(relative to base address)
	};


	// Class FortniteUI.FortHabaneroInfoEntry
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortHabaneroInfoEntry : public UCommonActivatableWidget	
	{
	public:
		UFortHabaneroDisplayData* HabaneroDisplayData; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHabaneroInfoEntry");
			return ret;
		}

		void OnSetGameMode(FString GameMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHabaneroInfoModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x440 - 0x3F0)
	class UFortHabaneroInfoModal : public UCommonActivatableWidget	
	{
	public:
		UVerticalBox* Vbox_Panels; // 0x3F0(0x8)
		UCommonButtonBase* Button_Close; // 0x3F8(0x8)
		UCommonButtonBase* Button_Close_Alt; // 0x400(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x408(0x8)
		UAthenaScrollBox* ScrollBox_Panels; // 0x410(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x418(0x10) UNKNOWN PROPERTY
		bool bIsHabaneroTimerEnabled; // 0x428(0x1)
		unsigned char UnknownData01_7[0x17]; // 0x429(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHabaneroInfoModal");
			return ret;
		}

		void SetTimerVisibility(ESlateVisibility TimerVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetTimerText(FTimespan& Timespan); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetProgress(FString ProgressKey, int32_t CurrentHabanero, int32_t CurrentPosition, float ProgressPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetGameType(FString GameMode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC58ED4(relative to base address)
		void SendPanelFocusedAnalytics(UWidget* Panel, FString Text); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FC58D88(relative to base address)
		void BP_OnScrollCompleted(bool bScrolledDown); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHabaneroTierWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortHabaneroTierWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY
		UFortHabaneroDisplayData* HabaneroDisplayData; // 0x410(0x8)
		bool bInitializeToRepresentLocalUser; // 0x418(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x419(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHabaneroTierWidget");
			return ret;
		}

		void UpdateWidgetDisplay(FFortHabaneroTier& DisplayData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartQueryForRank(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FailedToFindRank(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHabaneroLobbyWidget
	// Inherited from UFortHabaneroTierWidget -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x438 - 0x420)
	class UFortHabaneroLobbyWidget : public UFortHabaneroTierWidget	
	{
	public:
		UCommonButtonBase* Button_Info; // 0x420(0x8)
		FGameplayTag RankedInfoBangTag; // 0x428(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x42C(0x4) UNKNOWN PROPERTY
		UClass* InfoModalClass; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHabaneroLobbyWidget");
			return ret;
		}

		void UpdateProgressToNextHabanero(int32_t UnrealRankPlayerPosition, float ProgressPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBangVisible(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDVisibilityData
	// Inherited from UDataAsset -> UObject
	// Size: 0x30 (0x60 - 0x30)
	class UFortHUDVisibilityData : public UDataAsset	
	{
	public:
		FGameplayTag HUDVisibilityGameplayTag; // 0x30(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x34(0x4) UNKNOWN PROPERTY
		FText DisplayText; // 0x38(0x10)
		FText ToolTipText; // 0x48(0x10)
		bool Visible; // 0x58(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x59(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDVisibilityData");
			return ret;
		}
	};


	// Class FortniteUI.FortSetting
	// Inherited from UObject
	// Size: 0x158 (0x180 - 0x28)
	class UFortSetting : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x28(0x48) UNKNOWN PROPERTY
		UFortLocalPlayer* LocalPlayer; // 0x70(0x8)
		TWeakObjectPtr<UFortSetting*> SettingParent; // 0x78(0x8)
		UFortSettingRegistry* OwningRegistry; // 0x80(0x8)
		unsigned char UnknownData01_6[0x48]; // 0x88(0x48) UNKNOWN PROPERTY
		FFortSettingNameExtensions CustomExtensions; // 0xD0(0x18)
		unsigned char UnknownData02_7[0x98]; // 0xE8(0x98) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSetting");
			return ret;
		}

		FText GetWarningRichText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E150(relative to base address)
		FText GetDynamicDetails(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E0D4(relative to base address)
		ESlateVisibility GetDisplayNameVisibility(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74EFB9D68(relative to base address)
		FText GetDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E0B8(relative to base address)
		FString GetDevName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025DF64(relative to base address)
		FText GetDescriptionRichText(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3331D4(relative to base address)
	};


	// Class FortniteUI.FortSettingValue
	// Inherited from UFortSetting -> UObject
	// Size: 0x0 (0x180 - 0x180)
	class UFortSettingValue : public UFortSetting	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValue");
			return ret;
		}
	};


	// Class FortniteUI.FortInputSettingBase
	// Inherited from UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x8 (0x188 - 0x180)
	class UFortInputSettingBase : public UFortSettingValue	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x180(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInputSettingBase");
			return ret;
		}
	};


	// Class FortniteUI.FortInventoryScreenContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortInventoryScreenContainer : public UCommonActivatableWidget	
	{
	public:
		UInputComponent* InventoryScreenInputComponent; // 0x3F0(0x8)
		FDataTableRowHandle BackInputRowHandle; // 0x3F8(0x10)
		TArray<FName> BlockedInputActions; // 0x408(0x10)
		TArray<FName> BlockedInputAxes; // 0x418(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInventoryScreenContainer");
			return ret;
		}
	};


	// Class FortniteUI.FortItemManagementMulchPanel
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemManagementMulchPanel : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementMulchPanel");
			return ret;
		}

		void ShowMulchConfirmationModal(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF748D7CC28(relative to base address)
		void NotifyPanelDeactivated(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748F06970(relative to base address)
		void NotifyPanelActivated(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74EEDF7EC(relative to base address)
		void HideMulchConfirmationModal(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF749263428(relative to base address)
	};


	// Class FortniteUI.FortFrontendInventoryFilterFunctionLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortFrontendInventoryFilterFunctionLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendInventoryFilterFunctionLibrary");
			return ret;
		}

		FText ToText(EFortFrontendInventoryFilter FrontendInventoryFilter); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC5AE38(relative to base address)
	};


	// Class FortniteUI.FortItemPreviewScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1B8 (0x718 - 0x560)
	class UFortItemPreviewScreen : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x560(0x10) UNKNOWN PROPERTY
		FDataTableRowHandle ItemViewUnifiedSupportsCameraControlInputAction; // 0x570(0x10)
		FDataTableRowHandle ItemViewUnifiedZoomInputAction; // 0x580(0x10)
		FDataTableRowHandle ItemViewZoomOutInputAction; // 0x590(0x10)
		FDataTableRowHandle ItemViewZoomInInputAction; // 0x5A0(0x10)
		FDataTableRowHandle ItemViewRotateInputAction; // 0x5B0(0x10)
		UWidgetAnimation* AnimationToHideItemInfo; // 0x5C0(0x8)
		bool bAutoShowDetails; // 0x5C8(0x1)
		bool bFireAnalyticsViewEvent; // 0x5C9(0x1)
		bool bItemDetailsHidden; // 0x5CA(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x5CB(0x1) UNKNOWN PROPERTY
		float HideItemInfoHeaderDurationSecs; // 0x5CC(0x4)
		unsigned char UnknownData02_6[0x8]; // 0x5D0(0x8) UNKNOWN PROPERTY
		bool bAllowItemRotation; // 0x5D8(0x1)
		bool bAllowItemZooming; // 0x5D9(0x1)
		unsigned char UnknownData03_6[0x2]; // 0x5DA(0x2) UNKNOWN PROPERTY
		FGameplayTag PreviewSceneChangerTag; // 0x5DC(0x4)
		FGameplayTag PreviewSceneChangerOverrideTag; // 0x5E0(0x4)
		unsigned char UnknownData04_6[0x4]; // 0x5E4(0x4) UNKNOWN PROPERTY
		AFortItemPreviewSceneChanger* PreviewSceneChanger; // 0x5E8(0x8)
		UFortItemView* ItemViewObject; // 0x5F0(0x8)
		float CameraEntryTransitionDuration; // 0x5F8(0x4)
		unsigned char UnknownData05_6[0x4]; // 0x5FC(0x4) UNKNOWN PROPERTY
		UCurveFloat* CameraEntryTransitionCurve; // 0x600(0x8)
		unsigned char UnknownData06_6[0x59]; // 0x608(0x59) UNKNOWN PROPERTY
		bool bPreviewActionsEnabled; // 0x661(0x1)
		unsigned char UnknownData07_6[0x1E]; // 0x662(0x1E) UNKNOWN PROPERTY
		UWidget* Widget_CameraFrame; // 0x680(0x8)
		UCommonButtonBase* Button_PreviewAction; // 0x688(0x8)
		UCommonButtonBase* Button_PreviewAction1; // 0x690(0x8)
		UCommonButtonBase* Button_Camera; // 0x698(0x8)
		TSet<UCommonButtonBase*> PreviewActionButtons; // 0x6A0(0x50)
		UCommonActivatableWidget* OverrideFocusWidget; // 0x6F0(0x8)
		FMulticastInlineDelegate OnShowItemInfo; // 0x6F8(0x10)
		UFortItemDownloadIndicator* ItemDownloadIndicator; // 0x708(0x8)
		UCommonTextBlock* Text_DebugPreviewDetails; // 0x710(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPreviewScreen");
			return ret;
		}

		void ShowItemDetails(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500788B8(relative to base address)
		void RequestChangeFloorMaterialScalarParameter(FName ParameterName, float Value); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077E40(relative to base address)
		void RequestChangeBackgroundMaterialScalarParameter(FName ParameterName, float Value); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077D7C(relative to base address)
		void PreviewAction(FName ActionName); // Flags: Final|RequiredAPI|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750077C28(relative to base address)
		void OnPreviewActionButtonUpdated(FText& RowDisplayName, UCommonButtonBase* Button); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideItemDetails(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500777F8(relative to base address)
		AFortItemPreviewSceneChanger GetPreviewSceneChanger(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C1E1CD4(relative to base address)
	};


	// Class FortniteUI.FortItemPreviewWidget
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x778 - 0x718)
	class UFortItemPreviewWidget : public UFortItemPreviewScreen	
	{
	public:
		FMulticastInlineDelegate OnPreviewItemShown; // 0x718(0x10)
		UFortItemVM* CurrentItemVM; // 0x728(0x8)
		UFortTypedModularLoadoutVM* CurrentLoadoutVM; // 0x730(0x8)
		UFortItemVM* FallbackItemVM; // 0x738(0x8)
		TArray<FMcpVariantChannelInfo> VariantOverrides; // 0x740(0x10)
		bool bCanDisplayUserBackpack; // 0x750(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x751(0x7) UNKNOWN PROPERTY
		FGameplayTag ProductOverride; // 0x758(0x4)
		EItemPreviewRestrictionMode RestrictionMode; // 0x75C(0x1)
		bool bAllowPawnOverrideOnExclusiveItems; // 0x75D(0x1)
		bool bAllowUpdateWhileDeactivated; // 0x75E(0x1)
		bool bRestrictZoomToWidget; // 0x75F(0x1)
		unsigned char UnknownData01_7[0x18]; // 0x760(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPreviewWidget");
			return ret;
		}

		void UpdatePreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC5AF64(relative to base address)
		void ToggleVariantOverrideOnCurrentItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5AED0(relative to base address)
		void SetVariantOverrides(TArray<FMcpVariantChannelInfo>& InVariantOverrides); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC5AD94(relative to base address)
		void SetSlotIndexOverrideAndCurrentItem(int32_t InSlotIndex, UFortItemVM* InItemVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5ACC4(relative to base address)
		void SetSlotIndexOverride(int32_t SlotIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74782F2FC(relative to base address)
		void SetRotationOffset(FRotator& InRotationOffset); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC5AC38(relative to base address)
		void SetFallbackPreviewItem(UFortItemVM* ItemVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5ABA4(relative to base address)
		void SetCurrentPreviewLoadout(UFortTypedModularLoadoutVM* LoadoutVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5AB00(relative to base address)
		void SetCurrentPreviewItem(UFortItemVM* ItemVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74782F084(relative to base address)
		TArray GetSpecialPreviewActions(UFortItemVM* ItemVM); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A588(relative to base address)
		void ClearPreviewItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5A318(relative to base address)
		bool AllowToggleVariantOverrideOnCurrentItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A1E4(relative to base address)
	};


	// Class FortniteUI.FortPresentationItemLootInfo
	// Inherited from UObject
	// Size: 0x218 (0x240 - 0x28)
	class UFortPresentationItemLootInfo : public UObject	
	{
	public:
		FFortReceivedItemLootInfo ItemReceivedInfo; // 0x28(0x218)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPresentationItemLootInfo");
			return ret;
		}
	};


	// Class FortniteUI.ItemReceivedHeaderBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UItemReceivedHeaderBase : public UUserWidget	
	{
	public:
		UFortGiftBoxItem* GiftBoxItem; // 0x2B0(0x8)
		FString FromUsername; // 0x2B8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemReceivedHeaderBase");
			return ret;
		}

		void SetBlueprintGiftBoxItem(UFortGiftBoxItem* GiftBox, FString FromUser, TArray<FFortReceivedItemLootInfo>& ItemDefs, bool bSelfGift); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitFromGiftBoxItem_BP(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortKeyboardPresetRotator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortKeyboardPresetRotator : public UCommonUserWidget	
	{
	public:
		int32_t SelectedIndex; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortKeyboardPresetRotator");
			return ret;
		}
	};


	// Class FortniteUI.FortLevelSaveComponentViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x30 (0x98 - 0x68)
	class UFortLevelSaveComponentViewModel : public UMVVMViewModelBase	
	{
	public:
		EBackupSaveState CachedBackupSaveState; // 0x68(0x1)
		EBackupSaveState CachedBackupRestoreState; // 0x69(0x1)
		bool bCachedIsOnPublishedIsland; // 0x6A(0x1)
		unsigned char UnknownData00_7[0x2D]; // 0x6B(0x2D) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLevelSaveComponentViewModel");
			return ret;
		}

		void UnbindViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5AF50(relative to base address)
		void RestoreIslandFromBackup(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5AA98(relative to base address)
		void ResetIsland(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5AA54(relative to base address)
		bool IsPublishingEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A910(relative to base address)
		bool IsLastCheckpointDateSet(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A8F8(relative to base address)
		void InitializeViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5A8E4(relative to base address)
		void HandleCheckpointDateChanged(FDateTime CheckpointDate); // Flags: Final|Native|Private|HasDefaults, Memory Exec: 0x7FF74FC5A7D4(relative to base address)
		void HandleBackupSaveStateChanged(EBackupSaveState SaveState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5A754(relative to base address)
		void HandleBackupRestoreStateChanged(EBackupSaveState RestoreState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5A6D4(relative to base address)
		FTimespan GetTimeSinceLastCheckpoint(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A680(relative to base address)
		bool CanResetIsland(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A2B8(relative to base address)
		bool CanBackupAndRestoreIsland(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A294(relative to base address)
		void BackupIsland(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5A22C(relative to base address)
	};


	// Class FortniteUI.FortLoadingScreenCustomWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortLoadingScreenCustomWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoadingScreenCustomWidgetInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingErrorViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x68 - 0x68)
	class UFortMatchmakingErrorViewModel : public UMVVMViewModelBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingErrorViewModel");
			return ret;
		}

		bool HasRedirect(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		bool HasError(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		FText GetPlayButtonOverrideText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A540(relative to base address)
		FMatchmakingWidgetErrorVisuals GetErrorVisuals(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A404(relative to base address)
		EFortUIMatchmakingError GetCurrentError(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
	};


	// Class FortniteUI.FortMatchmakingSuggestionWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UFortMatchmakingSuggestionWidget : public UCommonUserWidget	
	{
	public:
		UWidget* SharedDataTestVoting_Container; // 0x2D8(0x8)
		UCommonButtonBase* Button_SharedDataTest_Accept; // 0x2E0(0x8)
		UCommonButtonBase* Button_SharedDataTest_Reject; // 0x2E8(0x8)
		UCommonTextBlock* Text_RequestedTextChange; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingSuggestionWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UFortMatchmakingViewModel : public UMVVMViewModelBase	
	{
	public:
		EFortUIMatchmakingStatus MatchmakingStatus; // 0x68(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x69(0x3) UNKNOWN PROPERTY
		int32_t TimeElapsed; // 0x6C(0x4)
		UFortMatchmakingErrorViewModel* ErrorViewModel; // 0x70(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingViewModel");
			return ret;
		}

		void ReadyUp(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC5AA18(relative to base address)
		void OpenModeSettings(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC5A9DC(relative to base address)
		void LaunchMatch(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC5A9A0(relative to base address)
		bool IsModeSettingsButtonEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		bool IsDebugStartMatchButtonEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		char GetTotalPlayerCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		FText GetModeSettingsSecondaryText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A4DC(relative to base address)
		FText GetModeSettingsPrimaryText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A478(relative to base address)
		UClass GetMatchFoundIslandWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D7895EC(relative to base address)
		EIslandJoinability GetGameStatus(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		float GetDownloadProgress(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E12724C(relative to base address)
		char GetCurrentReadyPlayerCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		FText GetCurrentIslandTitle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5A3A0(relative to base address)
		UClass GetCurrentIslandCustomLogo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D7895EC(relative to base address)
		void CancelMatchmaking(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC5A2DC(relative to base address)
	};


	// Class FortniteUI.MatchmakingWidgetErrorVisualsContainer
	// Inherited from UObject
	// Size: 0x40 (0x68 - 0x28)
	class UMatchmakingWidgetErrorVisualsContainer : public UObject	
	{
	public:
		bool bDefaultDataIsProductSpecific; // 0x28(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x29(0x7) UNKNOWN PROPERTY
		FMatchmakingWidgetErrorVisualsDefaultData DefaultData; // 0x30(0x28)
		TArray<FMatchmakingWidgetErrorVisuals> ErrorVisualsData; // 0x58(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MatchmakingWidgetErrorVisualsContainer");
			return ret;
		}
	};


	// Class FortniteUI.MatchmakingWidgetErrorVisualsForFortnite
	// Inherited from UMatchmakingWidgetErrorVisualsContainer -> UObject
	// Size: 0x0 (0x68 - 0x68)
	class UMatchmakingWidgetErrorVisualsForFortnite : public UMatchmakingWidgetErrorVisualsContainer	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MatchmakingWidgetErrorVisualsForFortnite");
			return ret;
		}
	};


	// Class FortniteUI.OnPlayButtonClickedWhenErrorAction
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UOnPlayButtonClickedWhenErrorAction : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OnPlayButtonClickedWhenErrorAction");
			return ret;
		}
	};


	// Class FortniteUI.OpenParentalControlScreenAction
	// Inherited from UOnPlayButtonClickedWhenErrorAction -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UOpenParentalControlScreenAction : public UOnPlayButtonClickedWhenErrorAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OpenParentalControlScreenAction");
			return ret;
		}
	};


	// Class FortniteUI.OpenDetailsScreenAction
	// Inherited from UOnPlayButtonClickedWhenErrorAction -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UOpenDetailsScreenAction : public UOnPlayButtonClickedWhenErrorAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OpenDetailsScreenAction");
			return ret;
		}
	};


	// Class FortniteUI.OpenCampaignScreenAction
	// Inherited from UOnPlayButtonClickedWhenErrorAction -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UOpenCampaignScreenAction : public UOnPlayButtonClickedWhenErrorAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OpenCampaignScreenAction");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingWidgetContext
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0xC8 (0xF8 - 0x30)
	class UFortMatchmakingWidgetContext : public UFortLocalPlayerSubsystem	
	{
	public:
		TScriptInterface<Class> WidgetExtension; // 0x30(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x40(0x18) UNKNOWN PROPERTY
		FMatchmakingWidgetErrorVisualsDefaultData ErrorVisualsDefaultData; // 0x58(0x28)
		FMatchmakingWidgetErrorVisualsDefaultData ProductSpecificErrorVisualsDefaultData; // 0x80(0x28)
		TMap<FName, FMatchmakingWidgetErrorVisuals> ErrorVisualsByName; // 0xA8(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingWidgetContext");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingWidgetExtensionInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortMatchmakingWidgetExtensionInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingWidgetExtensionInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortMediaVideoWidgetConfig
	// Inherited from UEpicMediaVideoWidgetConfig -> UObject
	// Size: 0x8 (0x58 - 0x50)
	class UFortMediaVideoWidgetConfig : public UEpicMediaVideoWidgetConfig	
	{
	public:
		bool bUseSkipBoundaries; // 0x50(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x51(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMediaVideoWidgetConfig");
			return ret;
		}
	};


	// Class FortniteUI.FortMinigameInfoViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x28 (0x90 - 0x68)
	class UFortMinigameInfoViewModel : public UMVVMViewModelBase	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x68(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMinigameInfoViewModel");
			return ret;
		}

		void UnbindViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5C564(relative to base address)
		void InitializeViewModel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5C37C(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C2BC(relative to base address)
		void HandleMinigameSettingsMachineChanged(UFortMinigameVolumeComponent* MinigameVolumeComponent, AFortMinigameSettingsBuilding* MinigameSettings); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C1FC(relative to base address)
		UFortMinigameVolumeComponent GetMinigameVolumeComponent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5C058(relative to base address)
		EFortMinigameState GetMinigameState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5C030(relative to base address)
		AFortMinigameSettingsBuilding GetMinigameSettings(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5BFF8(relative to base address)
		AFortMinigame GetMinigame(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5BFC4(relative to base address)
	};


	// Class FortniteUI.HUDWidgetBehavior
	// Inherited from UObject
	// Size: 0x90 (0xB8 - 0x28)
	class UHUDWidgetBehavior : public UObject	
	{
	public:
		FText HUDLayoutToolName; // 0x28(0x10)
		TArray<UFortMobileHudWidgetContentComponent*> HudWidgetContentComponents; // 0x38(0x10)
		TMap<FGameplayTag, FString> CustomPropertyDefaultOverrides; // 0x48(0x50)
		TArray<UFortMobileHUDWidgetBehaviorExtension*> BehaviorExtensions; // 0x98(0x10)
		TArray<FMobileEnhancedInputData> InputActionsData; // 0xA8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDWidgetBehavior");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior
	// Inherited from UHUDWidgetBehavior -> UObject
	// Size: 0x78 (0x130 - 0xB8)
	class UFortMobileActionButtonBehavior : public UHUDWidgetBehavior	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0xB8(0x8) UNKNOWN PROPERTY
		TArray<FName> ActionNames; // 0xC0(0x10)
		UPaperSprite* Sprite; // 0xD0(0x8)
		TWeakObjectPtr<UPaperSprite*> DeferredBestSprite; // 0xD8(0x8)
		FGameplayTag HUDLayoutToolSaveTag_Legacy; // 0xE0(0x4)
		unsigned char UnknownData01_6[0x14]; // 0xE4(0x14) UNKNOWN PROPERTY
		TArray<UFortMobileButtonBehaviorComponent*> ButtonBehaviorComponents; // 0xF8(0x10)
		TArray<UFortButtonBehaviorComponentOverride*> ButtonBehaviorComponentOverrides; // 0x108(0x10)
		int32_t ForcedZOrder; // 0x118(0x4)
		unsigned char UnknownData02_6[0xC]; // 0x11C(0xC) UNKNOWN PROPERTY
		bool bIsToggleButtonDefaultValue; // 0x128(0x1)
		unsigned char UnknownData03_7[0x7]; // 0x129(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior");
			return ret;
		}

		void HandleInputStackChanged(); // Flags: RequiredAPI|Native|Protected, Memory Exec: 0x7FF747A5CDF4(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_Reload
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x0 (0x130 - 0x130)
	class UFortMobileActionButtonBehavior_Reload : public UFortMobileActionButtonBehavior	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_Reload");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UFortMobileButtonBehaviorComponent : public UObject	
	{
	public:
		UFortMobileActionButtonBehavior* ButtonBehavior; // 0x28(0x8)
		TArray<UFortButtonBehaviorComponentOverride*> ButtonBehaviorComponentOverrides; // 0x30(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x40(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_IconPicker
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x48 - 0x48)
	class UFortMobileButtonBehaviorComponent_IconPicker : public UFortMobileButtonBehaviorComponent	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_IconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComboComponent_IconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComboComponent_IconPicker : public UFortMobileButtonBehaviorComponent_IconPicker	
	{
	public:
		TArray<FQueriedResultIconAssignment> IconAssignementQueries; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComboComponent_IconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_Visibility
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x48 - 0x48)
	class UFortMobileButtonBehaviorComponent_Visibility : public UFortMobileButtonBehaviorComponent	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_Visibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComboComponent_Visibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComboComponent_Visibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		TArray<FQueriedResultVisibilityAssignment> VisibilityAssignementQueries; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComboComponent_Visibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_Color
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x48 - 0x48)
	class UFortMobileButtonBehaviorComponent_Color : public UFortMobileButtonBehaviorComponent	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_Color");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagColor
	// Inherited from UFortMobileButtonBehaviorComponent_Color -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x18 (0x60 - 0x48)
	class UFortMobileButtonBehaviorComponent_AbilityTagColor : public UFortMobileButtonBehaviorComponent_Color	
	{
	public:
		TArray<FTagColor> ColorOverrides; // 0x48(0x10)
		UAbilitySystemComponent* AbilitySystemComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagColor");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_InteractionVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x50 - 0x48)
	class UFortMobileButtonBehaviorComponent_InteractionVisibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		FInteractionVisibility InteractionVisibility; // 0x48(0x3)
		unsigned char UnknownData00_7[0x5]; // 0x4B(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_TexturePicker
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortMobileButtonBehaviorComponent_TexturePicker : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_TexturePicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileEasyLootGrid
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x3A0 - 0x348)
	class UFortMobileEasyLootGrid : public UFortMobileHUDElement	
	{
	public:
		UButton* Button_AutoPickUp; // 0x348(0x8)
		UButton* Button_CollapsedList; // 0x350(0x8)
		UVerticalBox* LootGridListBox; // 0x358(0x8)
		UImage* Panel_Background; // 0x360(0x8)
		UCommonListView* ListView_Items; // 0x368(0x8)
		UOverlay* Overlay_FullBackpack; // 0x370(0x8)
		TWeakObjectPtr<UFortControllerComponent_Interaction*> InteractionComponent; // 0x378(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x380(0x8) UNKNOWN PROPERTY
		TArray<UFortMobileEasyLootGridItemEntry*> LootGridListItems; // 0x388(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileEasyLootGrid");
			return ret;
		}

		void UpdateListPostAnimation(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5C578(relative to base address)
		void OnLootFeedBack(bool bEnable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCollapsedListPressed(bool bShouldCollapseList); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBackpackFullChanged(bool bFull); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoPickupPressed(bool bEnable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsEasyLootGridEnabledForActor(AFortPlayerController* FortPC, AActor* PickupItem); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC5C410(relative to base address)
		bool IsEasyLootGridEnabled(AFortPlayerController* FortPC); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC5C390(relative to base address)
		void HandleCollapsedListPressed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C0A0(relative to base address)
		void HandleAutoPickUpPressed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C08C(relative to base address)
	};


	// Class FortniteUI.FortMobileEasyLootGridItemEntry
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortMobileEasyLootGridItemEntry : public UObject	
	{
	public:
		TWeakObjectPtr<AActor*> LootGridItem; // 0x28(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x30(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileEasyLootGridItemEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileEasyLootGridListEntry
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x2F8 - 0x2B0)
	class UFortMobileEasyLootGridListEntry : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		UCommonButtonBase* Button_PickUp; // 0x2B8(0x8)
		UCommonButtonBase* Button_Consume; // 0x2C0(0x8)
		USizeBox* Box_SecondaryAbility; // 0x2C8(0x8)
		UTextBlock* Text_WeaponName; // 0x2D0(0x8)
		UTextBlock* Text_WeaponRarity; // 0x2D8(0x8)
		UAthenaItemIcon* ItemIcon; // 0x2E0(0x8)
		TWeakObjectPtr<UFortMobileEasyLootGridItemEntry*> LootGridItemEntry; // 0x2E8(0x8)
		bool bAnimItemAdded; // 0x2F0(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x2F1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileEasyLootGridListEntry");
			return ret;
		}

		void SecondaryButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C51C(relative to base address)
		void PrimaryButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C508(relative to base address)
		void OnItemRemoved(UFortMobileEasyLootGrid* List); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemAdded(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_Active_Visibility
	// Inherited from UObject
	// Size: 0x18 (0x40 - 0x28)
	class UFortMobileHudWidgetContentComponent_Active_Visibility : public UObject	
	{
	public:
		UFortMobileHudWidgetContentComponent_Active* WidgetComponent; // 0x28(0x8)
		TArray<FTagVisibility> TagVisibilities; // 0x30(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_Active_Visibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_Active_PlayerTagVisibility
	// Inherited from UFortMobileHudWidgetContentComponent_Active_Visibility -> UObject
	// Size: 0x8 (0x48 - 0x40)
	class UFortMobileHudWidgetContentComponent_Active_PlayerTagVisibility : public UFortMobileHudWidgetContentComponent_Active_Visibility	
	{
	public:
		UAbilitySystemComponent* AbilitySystemComponent; // 0x40(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_Active_PlayerTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent
	// Inherited from UObject
	// Size: 0x18 (0x40 - 0x28)
	class UFortMobileHudWidgetContentComponent : public UObject	
	{
	public:
		UHUDWidgetBehavior* WidgetBehavior; // 0x28(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x30(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_InteractionRadialCooldown
	// Inherited from UFortMobileHudWidgetContentComponent -> UObject
	// Size: 0x28 (0x68 - 0x40)
	class UFortMobileHudWidgetContentComponent_InteractionRadialCooldown : public UFortMobileHudWidgetContentComponent	
	{
	public:
		TWeakObjectPtr<UClass*> RadialCooldownSoftClass; // 0x40(0x20)
		UInteractionRadialBacchusButton* CurrentRadialCooldownWidget; // 0x60(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_InteractionRadialCooldown");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel
	// Inherited from UObject
	// Size: 0x30 (0x58 - 0x28)
	class UFortMobileHUDWidgetCustomPropertyModel : public UObject	
	{
	public:
		bool bIsVisibleToTheUser; // 0x28(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x29(0x7) UNKNOWN PROPERTY
		FString PropertyDevName; // 0x30(0x10)
		FText PropertyDisplayName; // 0x40(0x10)
		FGameplayTag PropertyTag; // 0x50(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x54(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Bool
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileHUDWidgetCustomPropertyModel_Bool : public UFortMobileHUDWidgetCustomPropertyModel	
	{
	public:
		bool DefaultValue; // 0x58(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x59(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Bool");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_AutorunPreference
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel_Bool -> UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x0 (0x60 - 0x60)
	class UFortMobileHUDWidgetCustomPropertyModel_AutorunPreference : public UFortMobileHUDWidgetCustomPropertyModel_Bool	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_AutorunPreference");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileStickBehavior
	// Inherited from UHUDWidgetBehavior -> UObject
	// Size: 0x40 (0xF8 - 0xB8)
	class UFortMobileStickBehavior : public UHUDWidgetBehavior	
	{
	public:
		TArray<FMobileEnhancedInputData> XInputActionsData; // 0xB8(0x10)
		TArray<FMobileEnhancedInputData> YInputActionsData; // 0xC8(0x10)
		TArray<FMobileEnhancedInputData> SignedSizeInputActionsData; // 0xD8(0x10)
		TArray<FMobileEnhancedInputData> RotationInputActionsData; // 0xE8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileStickBehavior");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetBehaviorExtension
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortMobileHUDWidgetBehaviorExtension : public UObject	
	{
	public:
		TArray<UFortMobileHudWidgetContentComponent*> HudWidgetContentComponents; // 0x28(0x10)
		UHUDWidgetBehavior* OwnerWidgetBehavior; // 0x38(0x8)
		TArray<FMobileEnhancedInputData> InputActionsData; // 0x40(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetBehaviorExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileStickBehaviorExtension
	// Inherited from UFortMobileHUDWidgetBehaviorExtension -> UObject
	// Size: 0x40 (0x90 - 0x50)
	class UFortMobileStickBehaviorExtension : public UFortMobileHUDWidgetBehaviorExtension	
	{
	public:
		TArray<FMobileEnhancedInputData> XInputActionsData; // 0x50(0x10)
		TArray<FMobileEnhancedInputData> YInputActionsData; // 0x60(0x10)
		TArray<FMobileEnhancedInputData> SignedSizeInputActionsData; // 0x70(0x10)
		TArray<FMobileEnhancedInputData> RotationInputActionsData; // 0x80(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileStickBehaviorExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileTextIconDataMapping
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UFortMobileTextIconDataMapping : public UPrimaryDataAsset	
	{
	public:
		TMap<FString, UPaperSprite*> Mapping; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileTextIconDataMapping");
			return ret;
		}
	};


	// Class FortniteUI.FortModalContainerData
	// Inherited from UDataAsset -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UFortModalContainerData : public UDataAsset	
	{
	public:
		TArray<FFortModalContainerSizeEntry> Entries; // 0x30(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortModalContainerData");
			return ret;
		}
	};


	// Class FortniteUI.FortMoveStickHUDElementProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3F0 - 0x3C0)
	class UFortMoveStickHUDElementProxy : public UFortMobileHUDElementProxy	
	{
	public:
		UOverlay* Overlay_Highlights; // 0x3C0(0x8)
		USizeBox* SizeBox_AutorunLockZoneHidden; // 0x3C8(0x8)
		USizeBox* SizeBox_AutorunLockZoneSize; // 0x3D0(0x8)
		USizeBox* SizeBox_AutorunDirectionArrowSpaceSize; // 0x3D8(0x8)
		FGameplayTag AutorunLockZoneSizePropertyTag; // 0x3E0(0x4)
		FGameplayTag AutoRunPaddingPropertyTag; // 0x3E4(0x4)
		float DefaultAutorunLockZoneSize; // 0x3E8(0x4)
		float DefaultAutorunLockZoneTopPadding; // 0x3EC(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMoveStickHUDElementProxy");
			return ret;
		}
	};


	// Class FortniteUI.FortMPItemShopRow
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortMPItemShopRow : public UUserWidget	
	{
	public:
		FMulticastInlineDelegate OnOfferTileFocusedEvent; // 0x2B0(0x10)
		FString FocusedOfferId; // 0x2C0(0x10)
		UUIKitGridPanel* GridPanel_Tiles; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopRow");
			return ret;
		}

		bool ShouldLoadPresentationsOnScrollComplete(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5C530(relative to base address)
		void OnOfferTileFocused__DelegateSignature(FString OfferId); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UCommonButtonBase CreateEntryTile(UFortItemShopOfferVM* OfferVM, UClass* TileEntryWidgetClass); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5BEE8(relative to base address)
	};


	// Class FortniteUI.FortMPLobbyOnboardingModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortMPLobbyOnboardingModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_GetStarted; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPLobbyOnboardingModal");
			return ret;
		}

		void ExitModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortMtxStorePanelContainerInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortMtxStorePanelContainerInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMtxStorePanelContainerInterface");
			return ret;
		}
	};


	// Class FortniteUI.UIKitSelectableButtonViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UUIKitSelectableButtonViewModel : public UMVVMViewModelBase	
	{
	public:
		FText Label; // 0x68(0x10)
		UTexture2D* Icon; // 0x78(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitSelectableButtonViewModel");
			return ret;
		}
	};


	// Class FortniteUI.UIKitTabGroupButtonViewModel
	// Inherited from UUIKitSelectableButtonViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x90 - 0x80)
	class UUIKitTabGroupButtonViewModel : public UUIKitSelectableButtonViewModel	
	{
	public:
		bool bEnableTabID; // 0x80(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x81(0x3) UNKNOWN PROPERTY
		FName TabID; // 0x84(0x4)
		bool bEnableSubGroupID; // 0x88(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x89(0x3) UNKNOWN PROPERTY
		FName SubGroupID; // 0x8C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroupButtonViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortTabViewModel
	// Inherited from UUIKitTabGroupButtonViewModel -> UUIKitSelectableButtonViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x1E0 (0x270 - 0x90)
	class UFortTabViewModel : public UUIKitTabGroupButtonViewModel	
	{
	public:
		bool bEnabled; // 0x90(0x1)
		bool bCollapsed; // 0x91(0x1)
		unsigned char UnknownData00_6[0xE]; // 0x92(0xE) UNKNOWN PROPERTY
		FFortTopBarTabButtonInfo TabInfo; // 0xA0(0x1D0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabViewModel");
			return ret;
		}

		void SetBangType(EFortBangType Type); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61BD8(relative to base address)
		FText GetTabDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F6E04A4(relative to base address)
		UClass GetOverrideTabWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7494839FC(relative to base address)
		EFortUIFeature GetLinkedUIFeature(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749297D20(relative to base address)
		EFortUIFeature GetForwardOnRemoval(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC6180C(relative to base address)
		EFortTopBarTabButtonGroup GetButtonGroup(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74959FD90(relative to base address)
		EFortBangType GetBangType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749652AB8(relative to base address)
	};


	// Class FortniteUI.FortMTXTabViewModel
	// Inherited from UFortTabViewModel -> UUIKitTabGroupButtonViewModel -> UUIKitSelectableButtonViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x270 - 0x270)
	class UFortMTXTabViewModel : public UFortTabViewModel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMTXTabViewModel");
			return ret;
		}

		void HandleLocalAccountInfoChanged(FFortPrivateAccountInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC5C0B4(relative to base address)
	};


	// Class FortniteUI.FortNodeCanvasEntityInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortNodeCanvasEntityInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNodeCanvasEntityInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortNullHUD
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x448 - 0x408)
	class UFortNullHUD : public UFortUIStateWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x408(0x30) UNKNOWN PROPERTY
		UCommonUserWidget* AthenaHUDMenu; // 0x438(0x8)
		UCommonUserWidget* ActionBar_BottomBar; // 0x440(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNullHUD");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialUserViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UFortSocialUserViewModel : public UMVVMViewModelBase	
	{
	public:
		TWeakObjectPtr<UFortSocialUser*> SocialUser; // 0x68(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x70(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserViewModel");
			return ret;
		}

		void SetSocialUser(UFortSocialUser* InSocialUser); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7480730C8(relative to base address)
		void SetShouldForceUpdateUser(bool bNewForceUpdateUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC60168(relative to base address)
		UFortSocialUser GetSocialUser(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5F920(relative to base address)
	};


	// Class FortniteUI.FortOnlineStatusViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x80 - 0x78)
	class UFortOnlineStatusViewModel : public UFortSocialUserViewModel	
	{
	public:
		EPresenceIndicatorState OnlineStatus; // 0x78(0x1)
		bool bHideStatus; // 0x79(0x1)
		bool bIsLocalPlayerSharingActivity; // 0x7A(0x1)
		unsigned char UnknownData00_7[0x5]; // 0x7B(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOnlineStatusViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortOptionsCategoryHeader
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortOptionsCategoryHeader : public UObject	
	{
	public:
		FText DisplayText; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsCategoryHeader");
			return ret;
		}
	};


	// Class FortniteUI.FortOptionsMenuInputData
	// Inherited from UDataAsset -> UObject
	// Size: 0xB0 (0xE0 - 0x30)
	class UFortOptionsMenuInputData : public UDataAsset	
	{
	public:
		FName ActionName; // 0x30(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x34(0x4) UNKNOWN PROPERTY
		FText DisplayText; // 0x38(0x10)
		FText PrimaryText; // 0x48(0x10)
		FText SecondaryText; // 0x58(0x10)
		int32_t ElementNumber; // 0x68(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x6C(0x4) UNKNOWN PROPERTY
		UCommonTextBlock* TabText; // 0x70(0x8)
		FFortActionKeyMapping ActionKeyMapping; // 0x78(0x68)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsMenuInputData");
			return ret;
		}

		float GetInputScale(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C8DFC24(relative to base address)
		EFortInputActionGroup GetInputActionGroup(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5E860(relative to base address)
	};


	// Class FortniteUI.FortPassLevelViewModel
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x30 (0xA0 - 0x70)
	class UFortPassLevelViewModel : public UFortPerUserViewModel	
	{
	public:
		FString CurrentChapter; // 0x70(0x10)
		FString CurrentSeason; // 0x80(0x10)
		int32_t NumBattleStars; // 0x90(0x4)
		int32_t CurrentLevel; // 0x94(0x4)
		int32_t CurrentXP; // 0x98(0x4)
		int32_t XpToNextLevel; // 0x9C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPassLevelViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortPersistentTabObject
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPersistentTabObject : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPersistentTabObject");
			return ret;
		}

		void OnTabInitialized(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabExited(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabEntered(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabDestroyed(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPinScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x538 - 0x528)
	class UFortPinScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x528(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerAvatar
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortPlayerAvatar : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerAvatar");
			return ret;
		}

		void ResetPlayerAvatar(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RepresentLocalPlayer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749F9E36C(relative to base address)
		void OnSetSocialUser(UFortSocialUser* InUser); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerAvatarViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xB0 - 0x78)
	class UFortPlayerAvatarViewModel : public UFortSocialUserViewModel	
	{
	public:
		bool bUseLargeImage; // 0x78(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x79(0x7) UNKNOWN PROPERTY
		UTexture2D* AvatarTexture; // 0x80(0x8)
		bool bLoading; // 0x88(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x89(0x3) UNKNOWN PROPERTY
		FColor BackgroundColor; // 0x8C(0x4)
		FColor HighlightColor; // 0x90(0x4)
		unsigned char UnknownData02_7[0x1C]; // 0x94(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerAvatarViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerBannerViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x58 (0xD0 - 0x78)
	class UFortPlayerBannerViewModel : public UFortSocialUserViewModel	
	{
	public:
		FName IconId; // 0x78(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY
		UTexture2D* IconTexture; // 0x80(0x8)
		FName ColorId; // 0x88(0x4)
		FLinearColor PrimaryColor; // 0x8C(0x10)
		FLinearColor SecondaryColor; // 0x9C(0x10)
		int32_t CurrentLevel; // 0xAC(0x4)
		bool bUseLargeTexture; // 0xB0(0x1)
		unsigned char UnknownData01_7[0x1F]; // 0xB1(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerBannerViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyResponseChoiceBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortPlayerSurveyResponseChoiceBase : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_Response; // 0x1390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyResponseChoiceBase");
			return ret;
		}

		void SetChoiceType(TEnumAsByte<EFortPlayerSurveyResponseChoiceType> Type); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSurveyResetChoice(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerSurveyResponseWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortPlayerSurveyResponseWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyResponseWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortPluginWidgetInjectionSlot
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortPluginWidgetInjectionSlot : public UUserWidget	
	{
	public:
		FString PluginId; // 0x2B0(0x10)
		FString PluginWidgetId; // 0x2C0(0x10)
		UNamedSlot* InjectionSlot; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPluginWidgetInjectionSlot");
			return ret;
		}

		TArray GetValidPluginIds(); // Flags: Final|Native|Private|Const, Memory Exec: 0x7FF74FC5E904(relative to base address)
		TArray GetValidInjectableWidgetIds(); // Flags: Final|Native|Private|Const, Memory Exec: 0x7FF74FC5E8C0(relative to base address)
	};


	// Class FortniteUI.FortPolymorphicTileView
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortPolymorphicTileView : public UCommonActivatableWidget	
	{
	public:
		UFortCommonTileView* TileView; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPolymorphicTileView");
			return ret;
		}

		void SetListItems(TArray<UObject*>& InListItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC5EA08(relative to base address)
		UClass GetDesiredEntryClassForItem(UObject* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPolymorphicListView
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortPolymorphicListView : public UCommonActivatableWidget	
	{
	public:
		UCommonListView* ListView; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPolymorphicListView");
			return ret;
		}

		void SetListItems(TArray<UObject*>& InListItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC5EA08(relative to base address)
		UClass GetDesiredEntryClassForItem(UObject* Item); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPopupModal
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortPopupModal : public UUserWidget	
	{
	public:
		UCommonButtonBase* IconTextButton_Close; // 0x2B0(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x2B8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPopupModal");
			return ret;
		}
	};


	// Class FortniteUI.FortRankedViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xA0 - 0x68)
	class UFortRankedViewModel : public UMVVMViewModelBase	
	{
	public:
		UFortSocialUser* SocialUser; // 0x68(0x8)
		bool bIsIslandRanked; // 0x70(0x1)
		bool bIsPlayerRanked; // 0x71(0x1)
		bool bHasRankProtection; // 0x72(0x1)
		bool bHasSeenRankProtectionFTUE; // 0x73(0x1)
		unsigned char UnknownData00_6[0x4]; // 0x74(0x4) UNKNOWN PROPERTY
		FString RankType; // 0x78(0x10)
		int32_t CurrentRank; // 0x88(0x4)
		int32_t HighestRank; // 0x8C(0x4)
		int32_t CurrentPlayerPosition; // 0x90(0x4)
		float Progress; // 0x94(0x4)
		unsigned char UnknownData01_7[0x8]; // 0x98(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRankedViewModel");
			return ret;
		}

		void SetHasSeenRankProtectionFTUE(bool bInHasSeenRankProtectionFTUE); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5E988(relative to base address)
		void InitializeRankedViewModal(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74812CC24(relative to base address)
	};


	// Class FortniteUI.FortRankedWidgetExtensionInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortRankedWidgetExtensionInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRankedWidgetExtensionInterface");
			return ret;
		}

		TWeakObjectPtr GetRankInfoModalOverride(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5E874(relative to base address)
	};


	// Class FortniteUI.FortRedirectorVariantWrapper
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x328 - 0x2D8)
	class UFortRedirectorVariantWrapper : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UFortVariantEditorWidgetBase* VariantPicker; // 0x2E0(0x8)
		UPanelWidget* Container; // 0x2E8(0x8)
		FMulticastInlineDelegate OnRotationRequestedEvent; // 0x2F0(0x10)
		UFortVariantItemVM* VariantItemVM; // 0x300(0x8)
		TArray<UFortVariantChannelVM*> WaitingChannelVMs; // 0x308(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x318(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRedirectorVariantWrapper");
			return ret;
		}

		void OnRotationRequestedEvent__DelegateSignature(FRotator& RotationOffset, bool bSnap); // Flags: MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleVariantEngaged(FMcpVariantChannelInfo& InVariantChannelInfo, UFortVariantItemVM* ItemVM); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleRotationOffsetRequested(FRotator& RotationOffset, bool bSnap); // Flags: Event|Public|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddVariantChannelVM(UFortVariantChannelVM* ChannelVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5E6EC(relative to base address)
	};


	// Class FortniteUI.FortRichTextTextureDecorator
	// Inherited from URichTextBlockDecorator -> UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFortRichTextTextureDecorator : public URichTextBlockDecorator	
	{
	public:
		UObject* LoadedResourceObject; // 0x28(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRichTextTextureDecorator");
			return ret;
		}
	};


	// Class FortniteUI.FortRichTextTextureDecoratorHelpers
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortRichTextTextureDecoratorHelpers : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRichTextTextureDecoratorHelpers");
			return ret;
		}

		FText MakeFortRichTextTexture(TWeakObjectPtr<UTexture2D*> InTexture, bool bUseDesiredSize, int32_t Width, int32_t Height); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC5FE4C(relative to base address)
		FText MakeFortRichTextMaterial(TWeakObjectPtr<UMaterialInterface*> InMaterial, bool bUseDesiredSize, int32_t Width, int32_t Height); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC5FE4C(relative to base address)
	};


	// Class FortniteUI.FortSaveLoadoutPopup
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UFortSaveLoadoutPopup : public UFortActivatablePanel	
	{
	public:
		UFortEditableFilteredCountedTextBox* Text_EditableLoadoutName; // 0x560(0x8)
		FMulticastInlineDelegate OnActionConfirmedEvent; // 0x568(0x10)
		FMulticastInlineDelegate OnActionDeclinedEvent; // 0x578(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSaveLoadoutPopup");
			return ret;
		}

		void SanitizeText(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC60154(relative to base address)
		void OnSanitizationReady(bool bSuccess, FString Sanitizedtext); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadoutActionSaveEvent__DelegateSignature(FString NewName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadoutActionDeclineEvent__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleActionDeclined(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5FA24(relative to base address)
		void HandleActionConfirmed(FString OptionalNewName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC5F944(relative to base address)
	};


	// Class FortniteUI.FortServerBrowserActionData
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0xE0 (0x110 - 0x30)
	class UFortServerBrowserActionData : public UPrimaryDataAsset	
	{
	public:
		EFortServerBrowserAction ActionType; // 0x30(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x31(0x7) UNKNOWN PROPERTY
		FText Title; // 0x38(0x10)
		FText Description; // 0x48(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x58(0x8) UNKNOWN PROPERTY
		FSlateBrush TileImage; // 0x60(0xB0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserActionData");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowserActionDataPopup
	// Inherited from UFortServerBrowserActionData -> UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x20 (0x130 - 0x110)
	class UFortServerBrowserActionDataPopup : public UFortServerBrowserActionData	
	{
	public:
		TWeakObjectPtr<UClass*> PopupClass; // 0x110(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserActionDataPopup");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingExperiencePluginTrackerSubsystem
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UFortSettingExperiencePluginTrackerSubsystem : public UFortLocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x30(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingExperiencePluginTrackerSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingPreviewInput
	// Inherited from UFortInputSettingBase -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x78 (0x200 - 0x188)
	class UFortSettingPreviewInput : public UFortInputSettingBase	
	{
	public:
		unsigned char UnknownData00_1[0x78]; // 0x188(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingPreviewInput");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsListEntrySetting_Category
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortSettingsListEntrySetting_Category : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Category; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_Category");
			return ret;
		}

		void SetCategoryName(FText& InCategoryName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ExpandCategory(bool bIsInstant); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CollapseCategory(bool bIsInstant); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_SetIsSelected(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_ResetCategory(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsPanelBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x3C8 (0x7B8 - 0x3F0)
	class UFortSettingsPanelBase : public UCommonActivatableWidget	
	{
	public:
		UFortSettingRegistry* Registry; // 0x3F0(0x8)
		FFortSettingsFilterState FilterState; // 0x3F8(0x3A0)
		unsigned char UnknownData00_6[0x10]; // 0x798(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate BP_OnExecuteNamedAction; // 0x7A8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsPanelBase");
			return ret;
		}

		void OnExecuteNamedActionBP__DelegateSignature(UFortSetting* Setting, FName Action); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SettingsScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x5D0 - 0x560)
	class USettingsScreen : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x60]; // 0x560(0x60) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortSettingRegistry*> SettingRegistry; // 0x5C0(0x8)
		UFortSettingsPanelBase* Settings_Panel; // 0x5C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsScreen");
			return ret;
		}

		void SaveSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D3760(relative to base address)
		void ResetSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D374C(relative to base address)
		void OnSettingsDirtyStateChanged(bool bSettingsDirty); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigateToSettings(TArray<FName> SettingsCollectionNames); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D3658(relative to base address)
		bool HaveSettingsBeenChanged(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEF50(relative to base address)
		void CloseSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D3214(relative to base address)
		bool AttemptToPopNavigation(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D3174(relative to base address)
	};


	// Class FortniteUI.FortSettingsScreen
	// Inherited from USettingsScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x170 (0x740 - 0x5D0)
	class UFortSettingsScreen : public USettingsScreen	
	{
	public:
		FVector2D IconOnlyTabIconSize; // 0x5D0(0x10)
		UClass* TabButtonClass; // 0x5E0(0x8)
		USettingsScreenTabSchemaCollection* TabSchemaCollection; // 0x5E8(0x8)
		UNamedSettingActionCollection* NamedSettingActionCollection; // 0x5F0(0x8)
		FDataTableRowHandle ApplySettingsActionRowHandle; // 0x5F8(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x608(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle ResetSettingsToDefaultActionRowHandle; // 0x610(0x10)
		FDataTableRowHandle BackActionRowHandle; // 0x620(0x10)
		UClass* SaveProgressModalClass; // 0x630(0x8)
		UFortProgressModal* SaveProgressModalInstance; // 0x638(0x8)
		FDataTableRowHandle TestSettingsActionRowHandle; // 0x640(0x10)
		FDataTableRowHandle ApplyAndTestSettingsActionRowHandle; // 0x650(0x10)
		unsigned char UnknownData01_6[0xC0]; // 0x660(0xC0) UNKNOWN PROPERTY
		UNamedSlot* SaveProgressLayer; // 0x720(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x728(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x730(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsScreen");
			return ret;
		}

		void NavigateToSetting(FName SettingCategory, FString SettingToSelect); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6002C(relative to base address)
		void HandleTestSettings(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FCF0(relative to base address)
		void HandleTabSelected(FName TabID); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC5FC70(relative to base address)
		void HandleResetSettingsToDefault(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FBE4(relative to base address)
		void HandleBack(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FB58(relative to base address)
		void HandleApplySettings(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FACC(relative to base address)
		void HandleApplyAndTestSettings(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FA40(relative to base address)
	};


	// Class FortniteUI.FortSettingsScreenViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UFortSettingsScreenViewModel : public UMVVMViewModelBase	
	{
	public:
		TArray<UUIKitTabGroupButtonViewModel*> TopNavTabs; // 0x68(0x10)
		FName SelectedTopNavTabID; // 0x78(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsScreenViewModel");
			return ret;
		}

		void Reset(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC60140(relative to base address)
	};


	// Class FortniteUI.FortSettingTimeWindows
	// Inherited from UFortSetting -> UObject
	// Size: 0x20 (0x1A0 - 0x180)
	class UFortSettingTimeWindows : public UFortSetting	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x180(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingTimeWindows");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete
	// Inherited from UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x8 (0x188 - 0x180)
	class UFortSettingValueDiscrete : public UFortSettingValue	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x180(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete");
			return ret;
		}

		TArray GetDiscreteOptions(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E078(relative to base address)
		int32_t GetDiscreteOptionInitialIndex(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E050(relative to base address)
		int32_t GetDiscreteOptionIndex(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E028(relative to base address)
		int32_t GetDiscreteOptionDefaultIndex(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E000(relative to base address)
		TArray GetDisabledOptionsReasons(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025DFC0(relative to base address)
		TArray GetDisabledOptions(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025DF80(relative to base address)
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x80 (0x208 - 0x188)
	class UFortSettingValueDiscreteDynamic : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x80]; // 0x188(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Vector2D
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Vector2D : public UFortSettingValueDiscreteDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Vector2D");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Anchors
	// Inherited from UFortSettingValueDiscreteDynamic_Vector2D -> UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Anchors : public UFortSettingValueDiscreteDynamic_Vector2D	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Anchors");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_ControllerPreset
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscreteDynamic_ControllerPreset : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_ControllerPreset");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialPanelContainerInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortSocialPanelContainerInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanelContainerInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialSidebarPanelInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortSocialSidebarPanelInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialSidebarPanelInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialStyle
	// Inherited from UDataAsset -> UObject
	// Size: 0x9000 (0x9030 - 0x30)
	class UFortSocialStyle : public UDataAsset	
	{
	public:
		FSocialStyle Style; // 0x30(0x8FF0)
		USocialStyleDataAsset* OverrideStyle; // 0x9020(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x9028(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialStyle");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialUserInfoViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xB0 - 0x78)
	class UFortSocialUserInfoViewModel : public UFortSocialUserViewModel	
	{
	public:
		FText LastInteractionInfo; // 0x78(0x10)
		FText UserRichPresenceText; // 0x88(0x10)
		FText MutualFriendsText; // 0x98(0x10)
		bool bShouldEncourageEpicFriendship; // 0xA8(0x1)
		bool bIsRebootRallyEligible; // 0xA9(0x1)
		bool bIsFriend; // 0xAA(0x1)
		bool bIsSocialBanned; // 0xAB(0x1)
		bool bIsInviteSent; // 0xAC(0x1)
		bool bIsInZone; // 0xAD(0x1)
		unsigned char UnknownData00_7[0x2]; // 0xAE(0x2) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserInfoViewModel");
			return ret;
		}

		bool InZonePresenceEnabled(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74997AB38(relative to base address)
	};


	// Class FortniteUI.FortReplayViewSettingsTabBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x528 - 0x528)
	class UFortReplayViewSettingsTabBase : public UCommonActivatablePanelLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayViewSettingsTabBase");
			return ret;
		}

		void SetWidgetValues(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetToDefault(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D8BB404(relative to base address)
		void ResetFocusedElement(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCameraTypeChanged(AFortPlayerControllerSpectating* FortPlayerControllerSpectating, ESpectatorCameraType CameraType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CenterOnTab(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSpectatorCameraFXTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortSpectatorCameraFXTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		UCommonUserWidget* Rotator_CameraFX; // 0x528(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorCameraFXTab");
			return ret;
		}
	};


	// Class FortniteUI.FortSqueegeeWidgetInjectionSlot
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x328 - 0x2B0)
	class UFortSqueegeeWidgetInjectionSlot : public UUserWidget	
	{
	public:
		ESqueegeeWidgetInjection DesiredInjection; // 0x2B0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2B1(0x7) UNKNOWN PROPERTY
		FSqueegeeStyleParams StyleParams; // 0x2B8(0x30)
		UNamedSlot* InjectionSlot; // 0x2E8(0x8)
		unsigned char UnknownData01_6[0x20]; // 0x2F0(0x20) UNKNOWN PROPERTY
		UFortSqueegeeWidget* InjectedSqueegeeWidget; // 0x310(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x318(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSqueegeeWidgetInjectionSlot");
			return ret;
		}

		void ShowActivityDataFromViewModel(UFortActivityViewModel* GameActivityViewModel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6037C(relative to base address)
		void ShowActivityData(UFortGameActivity* GameActivity); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC602E4(relative to base address)
		void SetUnlockPlayer(AFortPlayerController* UnlockPlayer); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC601E4(relative to base address)
	};


	// Class FortniteUI.FortSqueegeeWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UFortSqueegeeWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x2D8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSqueegeeWidget");
			return ret;
		}

		void ShowUnlockPinForActivity(AFortPlayerController* UnlockPlayerController); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FC6049C(relative to base address)
		void ShowParentalControls(AFortPlayerController* UnlockPlayerController); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FC60410(relative to base address)
		void SetUnlockPlayer(AFortPlayerController* UnlockPlayer); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetGameActivity(UFortGameActivity* GameActivity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsCabinModeEnabled(AFortPlayerController* UnlockPlayerController); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5FD7C(relative to base address)
		bool AreParentalControlsEnabled(AFortPlayerController* UnlockPlayerController); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5F854(relative to base address)
	};


	// Class FortniteUI.FortStandaloneFrontendScreenInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortStandaloneFrontendScreenInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandaloneFrontendScreenInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortStartLoginContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UFortStartLoginContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* Switcher_StartLogin; // 0x410(0x8)
		UFortPlayedBeforeSelect* Widget_PlayedBeforeSelect; // 0x418(0x8)
		UFortStartLoginWidget* Widget_StartLogin; // 0x420(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStartLoginContainer");
			return ret;
		}
	};


	// Class FortniteUI.FortStartLoginWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortStartLoginWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Login; // 0x400(0x8)
		UBackgroundBlur* BackgroundBlur_PendingSpinner; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStartLoginWidget");
			return ret;
		}
	};


	// Class FortniteUI.UIKitTabGroupViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UUIKitTabGroupViewModel : public UMVVMViewModelBase	
	{
	public:
		TArray<UUIKitTabGroupButtonViewModel*> Tabs; // 0x68(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroupViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortTabGroupViewModel
	// Inherited from UUIKitTabGroupViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x78 - 0x78)
	class UFortTabGroupViewModel : public UUIKitTabGroupViewModel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabGroupViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortTeamMemberPedestalNameplateViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x50 (0xB8 - 0x68)
	class UFortTeamMemberPedestalNameplateViewModel : public UMVVMViewModelBase	
	{
	public:
		TWeakObjectPtr<UFortSocialUser*> SocialUser; // 0x68(0x8)
		UFortSocialUserNameViewModel* NameInfo; // 0x70(0x8)
		UFortSocialUserPartyViewModel* PartyInfo; // 0x78(0x8)
		UFortSocialUserInfoViewModel* UserInfo; // 0x80(0x8)
		UFortOnlineStatusViewModel* OnlineStatusInfo; // 0x88(0x8)
		UFortRankedViewModel* RankedInfo; // 0x90(0x8)
		UFortPlayerBannerViewModel* BannerInfo; // 0x98(0x8)
		bool bIsLocalPlayer; // 0xA0(0x1)
		bool bIsTalking; // 0xA1(0x1)
		bool bIsMutedByLocalPlayer; // 0xA2(0x1)
		unsigned char UnknownData00_6[0x1]; // 0xA3(0x1) UNKNOWN PROPERTY
		float VolumeLevel; // 0xA4(0x4)
		EPedestalNameplateMatchmakingStatus MatchmakingStatus; // 0xA8(0x1)
		bool bIsInLobby; // 0xA9(0x1)
		EPedestalNameplateAction CurrentAvailableAction; // 0xAA(0x1)
		bool bIsActionInProgress; // 0xAB(0x1)
		int32_t DownloadProgress; // 0xAC(0x4)
		UClass* OpenProfileActionMenuClass; // 0xB0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberPedestalNameplateViewModel");
			return ret;
		}

		void Whisper(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61F44(relative to base address)
		void ViewProfile(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61F30(relative to base address)
		void ToggleMute(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61EB8(relative to base address)
		void SetSocialUserFromPlayerUniqueNetId(FUniqueNetIdRepl& UniqueID); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC61DE8(relative to base address)
		void SetSocialUser(UFortSocialUser* InSocialUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61CE8(relative to base address)
		void PromoteToLeader(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61AB8(relative to base address)
		void PerformAction(EPedestalNameplateAction Action); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC619B8(relative to base address)
		void OpenSidebar(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC619A4(relative to base address)
		void KickFromParty(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61910(relative to base address)
		void HandleOnLobbyStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC618D4(relative to base address)
		void HandleOnLobbyDisconnected(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC618AC(relative to base address)
		UFortSocialUser GetSocialUser(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5F920(relative to base address)
	};


	// Class FortniteUI.FortTeamMemberPedestalSocialNudgeViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x28 (0x90 - 0x68)
	class UFortTeamMemberPedestalSocialNudgeViewModel : public UMVVMViewModelBase	
	{
	public:
		TWeakObjectPtr<UFortSocialUser*> SocialUser; // 0x68(0x8)
		UFortSocialUserNameViewModel* NameInfo; // 0x70(0x8)
		UFortSocialUserInfoViewModel* UserInfo; // 0x78(0x8)
		UFortPlayerAvatarViewModel* AvatarInfo; // 0x80(0x8)
		EPedestalSocialNudgeAction CurrentAvailableAction; // 0x88(0x1)
		bool bIsInviteInProgress; // 0x89(0x1)
		bool bIsJoining; // 0x8A(0x1)
		bool bIsInLobby; // 0x8B(0x1)
		bool bIslandAllowsJoinInProgress; // 0x8C(0x1)
		unsigned char UnknownData00_7[0x3]; // 0x8D(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberPedestalSocialNudgeViewModel");
			return ret;
		}

		void SetSocialUserFromPlayerUniqueNetId(FUniqueNetIdRepl& UniqueID); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF748CEF57C(relative to base address)
		void SetSocialUser(UFortSocialUser* InSocialUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61D68(relative to base address)
		void PerformAction(EPedestalSocialNudgeAction Action); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61A38(relative to base address)
		void OpenSidebar(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC619A4(relative to base address)
		void HandleOnLobbyStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC618E8(relative to base address)
		void HandleOnLobbyDisconnected(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC618C0(relative to base address)
		UFortSocialUser GetSocialUser(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC5F920(relative to base address)
	};


	// Class FortniteUI.FortTextChatSendingMessageVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UFortTextChatSendingMessageVM : public UMVVMViewModelBase	
	{
	public:
		FString MessageToSend; // 0x68(0x10)
		FName ChannelId; // 0x78(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextChatSendingMessageVM");
			return ret;
		}

		void Reset(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61B10(relative to base address)
		bool NeedsChannelPicker(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC61968(relative to base address)
	};


	// Class FortniteUI.FortTextChatChannelVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x20 (0x88 - 0x68)
	class UFortTextChatChannelVM : public UMVVMViewModelBase	
	{
	public:
		FString ChannelName; // 0x68(0x10)
		EFortTextChatChannelType ChannelType; // 0x78(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x79(0x3) UNKNOWN PROPERTY
		int32_t UnreadMessagesCount; // 0x7C(0x4)
		bool bIsMuted; // 0x80(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x81(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextChatChannelVM");
			return ret;
		}
	};


	// Class FortniteUI.FortTextChatMessageVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x58 (0xC0 - 0x68)
	class UFortTextChatMessageVM : public UMVVMViewModelBase	
	{
	public:
		FName MessageId; // 0x68(0x4)
		EFortTextChatMessageType MessageType; // 0x6C(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x6D(0x3) UNKNOWN PROPERTY
		FText Text; // 0x70(0x10)
		FDateTime DateReceived; // 0x80(0x8)
		UFortPlayerAvatarViewModel* PlayerAvatar; // 0x88(0x8)
		FString DisplayName; // 0x90(0x10)
		bool bPreviousMessageWasFromSameSender; // 0xA0(0x1)
		bool bPreviousMessageIsSameGameOrParty; // 0xA1(0x1)
		unsigned char UnknownData01_7[0x1E]; // 0xA2(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextChatMessageVM");
			return ret;
		}

		void ViewProfile(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void Report(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74921B8F8(relative to base address)
	};


	// Class FortniteUI.FortTextChatPlayerVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xA8 - 0x70)
	class UFortTextChatPlayerVM : public UFortPerUserViewModel	
	{
	public:
		TArray<UFortTextChatChannelVM*> Channels; // 0x70(0x10)
		TArray<UFortTextChatMessageVM*> Messages; // 0x80(0x10)
		FName CurrentChannelId; // 0x90(0x4)
		EFortTextChatChannelType CurrentChannelType; // 0x94(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x95(0x3) UNKNOWN PROPERTY
		UFortTextChatSendingMessageVM* MessageToSend; // 0x98(0x8)
		bool bNewerMessagesAppearedForTheCurrentChannel; // 0xA0(0x1)
		bool bIsFirstNewMessageForTheCurrentChannel; // 0xA1(0x1)
		unsigned char UnknownData01_7[0x6]; // 0xA2(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextChatPlayerVM");
			return ret;
		}

		void SetNewerMessagesAppearedForTheCurrentChannel(bool bInNewerMessagesAppearedForTheCurrentChannel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61C68(relative to base address)
		void Send(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC61B5C(relative to base address)
		void InitializeTextChatVM(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC618FC(relative to base address)
		bool GetNewerMessagesAppearedForTheCurrentChannel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E228C6C(relative to base address)
		UFortTextChatMessageVM GetMessageVM(FString MessageId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC61700(relative to base address)
		UFortTextChatSendingMessageVM GetMessageToSend(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B40548(relative to base address)
		TArray GetMessages(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC6183C(relative to base address)
		bool GetIsFirstNewMessageForTheCurrentChannel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC61824(relative to base address)
		EFortTextChatChannelType GetCurrentChannelType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC617F4(relative to base address)
		FName GetCurrentChannelId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F92EA60(relative to base address)
		UFortTextChatChannelVM GetChannelVM(FString ChannelId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC61700(relative to base address)
		TArray GetChannels(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC61788(relative to base address)
		void ChangeCurrentChannel(FName& InChannelId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC6162C(relative to base address)
	};


	// Class FortniteUI.FortTimespanDataSource
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortTimespanDataSource : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTimespanDataSource");
			return ret;
		}

		void RemoveOnChangeDelegate(FDelegateProperty& InDelegate); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FC58CE4(relative to base address)
		FTimespan GetValue(); // Flags: Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74FC58CB8(relative to base address)
		void AddOnChangeDelegate(FDelegateProperty& InDelegate); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E2608AC(relative to base address)
	};


	// Class FortniteUI.FortTouchStick
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x378 - 0x368)
	class UFortTouchStick : public UBacchusHUDElement	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x368(0x8) UNKNOWN PROPERTY
		UHUDWidgetBehavior* WidgetBehavior; // 0x370(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchStick");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction
	// Inherited from UGameFeatureAction -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortUIGameFeatureAction : public UGameFeatureAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_ExtendMatchmakingWidget
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x98 (0xC0 - 0x28)
	class UFortUIGameFeatureAction_ExtendMatchmakingWidget : public UFortUIGameFeatureAction	
	{
	public:
		TWeakObjectPtr<UClass*> ExtensionClass; // 0x28(0x20)
		TWeakObjectPtr<UClass*> ErrorVisualsClass; // 0x48(0x20)
		TWeakObjectPtr<UObject*> ActiveExtension; // 0x68(0x8)
		unsigned char UnknownData00_7[0x50]; // 0x70(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_ExtendMatchmakingWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_ExtendRankedWidget
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x80 (0xA8 - 0x28)
	class UFortUIGameFeatureAction_ExtendRankedWidget : public UFortUIGameFeatureAction	
	{
	public:
		TWeakObjectPtr<UClass*> ExtensionClass; // 0x28(0x20)
		TArray<TWeakObjectPtr> ActiveRankedWidgetExtensions; // 0x48(0x10)
		unsigned char UnknownData00_7[0x50]; // 0x58(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_ExtendRankedWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_SetLobbyData
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0xD8 (0x100 - 0x28)
	class UFortUIGameFeatureAction_SetLobbyData : public UFortUIGameFeatureAction	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FFrontendLobbyData FrontendLobbyData; // 0x30(0xA8)
		TArray<FFrontendLobbyActor> LoadedLobbyActors; // 0xD8(0x10)
		unsigned char UnknownData01_7[0x18]; // 0xE8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_SetLobbyData");
			return ret;
		}
	};


	// Class FortniteUI.FortUISpecialEventSubsystem
	// Inherited from UGameInstanceSubsystem -> USubsystem -> UObject
	// Size: 0x28 (0x58 - 0x30)
	class UFortUISpecialEventSubsystem : public UGameInstanceSubsystem	
	{
	public:
		FMulticastInlineDelegate OnNewUISpecialEventState; // 0x30(0x10)
		FMulticastInlineDelegate OnTemporarySpecialUIEvent; // 0x40(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x50(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUISpecialEventSubsystem");
			return ret;
		}

		void SpecialUIEventDelegate__DelegateSignature(TEnumAsByte<EFortUISpecialEvents> InEventName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetCurrentUISpecialEventState(TEnumAsByte<EFortUISpecialEvents> InNewEventState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63C68(relative to base address)
		TEnumAsByte GetCurrentUIEventState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C3166E0(relative to base address)
		void CallTemporarySpecialUIEvent(TEnumAsByte<EFortUISpecialEvents> InNewTemporaryEvent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63990(relative to base address)
	};


	// Class FortniteUI.FortUIStyleDefinitionAsset
	// Inherited from UDataAsset -> UObject
	// Size: 0xDC0 (0xDF0 - 0x30)
	class UFortUIStyleDefinitionAsset : public UDataAsset	
	{
	public:
		FFortUIStyleDefinition StyleDefinition; // 0x30(0xDC0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStyleDefinitionAsset");
			return ret;
		}
	};


	// Class FortniteUI.FortUserWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortUserWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		bool bConsumePointerInput; // 0x2B8(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x2B9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUserWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortUserChoiceWidget
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2C0 - 0x2C0)
	class UFortUserChoiceWidget : public UFortUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUserChoiceWidget");
			return ret;
		}

		void SetChoices(FChoiceData& ChoiceItems); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVariantChannelVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x100 (0x168 - 0x68)
	class UFortVariantChannelVM : public UMVVMViewModelBase	
	{
	public:
		TArray<UFortVariantItemVM*> VariantItems; // 0x68(0x10)
		FText RowDisplayName; // 0x78(0x10)
		UFortItemVM* CosmeticItem; // 0x88(0x8)
		ECosmeticVariantRowType RowType; // 0x90(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x91(0x7) UNKNOWN PROPERTY
		FMcpVariantChannelInfo VariantChannelInfo; // 0x98(0x40)
		UFortVariantItemVM* SelectedVariantItem; // 0xD8(0x8)
		UFortVariantItemVM* EquippedVariantItem; // 0xE0(0x8)
		bool bAllowOwnershipVisibility; // 0xE8(0x1)
		bool bShowUnownedAsLocked; // 0xE9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0xEA(0x6) UNKNOWN PROPERTY
		FText DisclaimerText; // 0xF0(0x10)
		unsigned char UnknownData02_7[0x68]; // 0x100(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantChannelVM");
			return ret;
		}

		void ShowVariantEngaged(UFortVariantItemVM* InVariant); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63DD8(relative to base address)
		void HandleVariantEngaged(UFortVariantItemVM* InVariant); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63A98(relative to base address)
		UFortVariantItemVM GetSelectedVariantItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D691680(relative to base address)
	};


	// Class FortniteUI.FortVariantTiledChannelVM
	// Inherited from UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x168 - 0x168)
	class UFortVariantTiledChannelVM : public UFortVariantChannelVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantTiledChannelVM");
			return ret;
		}
	};


	// Class FortniteUI.FortRankedVariantTiledChannelVM
	// Inherited from UFortVariantTiledChannelVM -> UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x170 - 0x168)
	class UFortRankedVariantTiledChannelVM : public UFortVariantTiledChannelVM	
	{
	public:
		AFortPlayerController* OwningPlayer; // 0x168(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRankedVariantTiledChannelVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantRichColorChannelVM
	// Inherited from UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x40 (0x1A8 - 0x168)
	class UFortVariantRichColorChannelVM : public UFortVariantChannelVM	
	{
	public:
		TArray<UCustomColorSwatch*> ColorSwatches; // 0x168(0x10)
		UFortCosmeticRichColorVariant* CachedCosmeticVariant; // 0x178(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x180(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantRichColorChannelVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantNumericChannelVM
	// Inherited from UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x30 (0x198 - 0x168)
	class UFortVariantNumericChannelVM : public UFortVariantChannelVM	
	{
	public:
		UFortVariantItemVM* ItemVM; // 0x168(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x170(0x10) UNKNOWN PROPERTY
		UFortCosmeticNumericalVariant* NumericalVariant; // 0x180(0x8)
		FText NumDisplay; // 0x188(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantNumericChannelVM");
			return ret;
		}

		void ChangeNumericalValue(int32_t NumericalDelta); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63A18(relative to base address)
	};


	// Class FortniteUI.FortVariantSliderChannelVM
	// Inherited from UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x40 (0x1A8 - 0x168)
	class UFortVariantSliderChannelVM : public UFortVariantChannelVM	
	{
	public:
		UFortVariantItemVM* ItemVM; // 0x168(0x8)
		UFortCosmeticFloatSliderVariant* FloatVariant; // 0x170(0x8)
		AFortPlayerController* OwningPlayer; // 0x178(0x8)
		float SliderStep; // 0x180(0x4)
		float CurrentFloatValue; // 0x184(0x4)
		float CurrentProgress; // 0x188(0x4)
		float CurrentProgressBar; // 0x18C(0x4)
		FText SliderDisplayText; // 0x190(0x10)
		bool bIsLocked; // 0x1A0(0x1)
		bool bRealTimePreviewUpdate; // 0x1A1(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x1A2(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSliderChannelVM");
			return ret;
		}

		void SetFloatValue(float InFloatValue, bool bCommit); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63CFC(relative to base address)
	};


	// Class FortniteUI.FortVariantTextureChannelVM
	// Inherited from UFortVariantChannelVM -> UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x178 - 0x168)
	class UFortVariantTextureChannelVM : public UFortVariantChannelVM	
	{
	public:
		AFortPlayerController* OwningPlayer; // 0x168(0x8)
		unsigned char UnknownData00_6[0x4]; // 0x170(0x4) UNKNOWN PROPERTY
		bool bShowArchivedItems; // 0x174(0x1)
		unsigned char UnknownData01_7[0x3]; // 0x175(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantTextureChannelVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantItemButtonMP
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x1460 - 0x13E0)
	class UFortVariantItemButtonMP : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		FLinearColor LockedTintColor; // 0x13F0(0x10)
		FName IconParamName; // 0x1400(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x1404(0x4) UNKNOWN PROPERTY
		TWeakObjectPtr<UMaterialInstance*> VariantMaterial; // 0x1408(0x20)
		TWeakObjectPtr<UTexture2D*> ExplicitlyNoneIcon; // 0x1428(0x20)
		UImage* Image_VariantDisplay; // 0x1448(0x8)
		UFortApplyVarianceToInterfaceMaterialFlow* MaterialVarianceFlowUI; // 0x1450(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x1458(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantItemButtonMP");
			return ret;
		}

		void SetupVariantPreviewImage(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC63DC4(relative to base address)
		UFortVariantItemVM GetAssociatedVariant(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVariantItemVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0xC8 (0x130 - 0x68)
	class UFortVariantItemVM : public UMVVMViewModelBase	
	{
	public:
		UFortItemVM* CosmeticItem; // 0x68(0x8)
		UFortApplyVarianceToInterfaceMaterialFlow* MaterialVarianceFlowUI; // 0x70(0x8)
		UMaterialInterface* OriginalMaterial; // 0x78(0x8)
		bool bOwned; // 0x80(0x1)
		bool bEquipped; // 0x81(0x1)
		bool bDisabled; // 0x82(0x1)
		bool bHasConflict; // 0x83(0x1)
		bool bIsOwnershipVisibilityAllowed; // 0x84(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x85(0x3) UNKNOWN PROPERTY
		FGameplayTag VariantChannel; // 0x88(0x4)
		FGameplayTag VariantTag; // 0x8C(0x4)
		FString VariantCustomData; // 0x90(0x10)
		FVariantDisplayInfo VariantDisplayInfo; // 0xA0(0x38)
		FText ConflictingText; // 0xD8(0x10)
		bool bIsConflicting; // 0xE8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0xE9(0x7) UNKNOWN PROPERTY
		FText AgeGateText; // 0xF0(0x10)
		bool bHasAgeGate; // 0x100(0x1)
		bool bShowUnownedAsLocked; // 0x101(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x102(0x6) UNKNOWN PROPERTY
		FText UnlockRequirements; // 0x108(0x10)
		bool bIsLocked; // 0x118(0x1)
		unsigned char UnknownData03_6[0x7]; // 0x119(0x7) UNKNOWN PROPERTY
		FText DisclaimerText; // 0x120(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantItemVM");
			return ret;
		}

		void ApplyMaterialVariance(UImage* Image); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63910(relative to base address)
	};


	// Class FortniteUI.FortVariantRichColorItemVM
	// Inherited from UFortVariantItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x140 - 0x130)
	class UFortVariantRichColorItemVM : public UFortVariantItemVM	
	{
	public:
		FText ColorName; // 0x130(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantRichColorItemVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantTextureItemVM
	// Inherited from UFortVariantItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortVariantTextureItemVM : public UFortVariantItemVM	
	{
	public:
		UAthenaCosmeticItemDefinition* VariantCosmeticDef; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantTextureItemVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantRankedItemVM
	// Inherited from UFortVariantItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x130 - 0x130)
	class UFortVariantRankedItemVM : public UFortVariantItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantRankedItemVM");
			return ret;
		}

		void OnRankUpdated(int32_t InNewRank, uint32_t InPlayerId); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FC63B1C(relative to base address)
	};


	// Class FortniteUI.FortVariantSelectorFilterVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0xA0 (0x108 - 0x68)
	class UFortVariantSelectorFilterVM : public UMVVMViewModelBase	
	{
	public:
		FText Label; // 0x68(0x10)
		UFortVariantSelectorSubFilterVM* MainFilter; // 0x78(0x8)
		FFortVariantFilterTabInfo_Primary PrimaryFilterInfo; // 0x80(0x88)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSelectorFilterVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantSelectorSubFilterVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0xA8 (0x110 - 0x68)
	class UFortVariantSelectorSubFilterVM : public UMVVMViewModelBase	
	{
	public:
		unsigned char UnknownData00_3[0x78]; // 0x68(0x78) UNKNOWN PROPERTY
		TWeakObjectPtr<UObject*> Icon; // 0xE0(0x20)
		FText Label; // 0x100(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSelectorSubFilterVM");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantSelectorVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x198 (0x208 - 0x70)
	class UFortVariantSelectorVM : public UFortPerUserViewModel	
	{
	public:
		TMap<FGameplayTag, FGameplayTag> ProductOverrideChannels; // 0x70(0x50)
		UAthenaVariantPickerConfig* ConfigurationData; // 0xC0(0x8)
		TArray<UFortVariantSelectorFilterVM*> PrimaryFilters; // 0xC8(0x10)
		TArray<UFortVariantSelectorSubFilterVM*> SecondaryFilters; // 0xD8(0x10)
		TArray<UFortVariantSetVM*> VariantSets; // 0xE8(0x10)
		unsigned char UnknownData00_6[0x10]; // 0xF8(0x10) UNKNOWN PROPERTY
		TArray<FMcpVariantChannelInfo> CurrentVariantOverrides; // 0x108(0x10)
		UFortLockerCategoryItemVM* SelectedCategory; // 0x118(0x8)
		UFortItemVM* SelectedItem; // 0x120(0x8)
		UFortVariantItemVM* InspectedVariantItemVM; // 0x128(0x8)
		TArray<UFortVariantChannelVM*> VariantChannels; // 0x130(0x10)
		unsigned char UnknownData01_6[0x30]; // 0x140(0x30) UNKNOWN PROPERTY
		UFortVariantSelectorFilterVM* CurrentPrimaryFilter; // 0x170(0x8)
		UFortVariantSelectorSubFilterVM* CurrentSecondaryFilter; // 0x178(0x8)
		unsigned char UnknownData02_6[0x50]; // 0x180(0x50) UNKNOWN PROPERTY
		bool bAllowDisplayUnownedVariants; // 0x1D0(0x1)
		unsigned char UnknownData03_6[0x1]; // 0x1D1(0x1) UNKNOWN PROPERTY
		bool bShowUnownedAsLocked; // 0x1D2(0x1)
		bool bShowAgeGateWarnings; // 0x1D3(0x1)
		bool bShowFilterFullSize; // 0x1D4(0x1)
		unsigned char UnknownData04_6[0x3]; // 0x1D5(0x3) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnVariantEngagedEvent; // 0x1D8(0x10)
		FMulticastInlineDelegate OnVariantOverridesChangedEvent; // 0x1E8(0x10)
		FMulticastInlineDelegate OnRotationRequestedEvent; // 0x1F8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSelectorVM");
			return ret;
		}

		void UpdateVariantChannels(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC66860(relative to base address)
		void UpdateVariantChannelConflicts(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6684C(relative to base address)
		void SetShowArchivedVariants(bool bShow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65FDC(relative to base address)
		void SetSelectedItem(UFortItemVM* InSelectedItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65F5C(relative to base address)
		void SetSelectedCategory(UFortLockerCategoryItemVM* InSelectedCategory); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65EDC(relative to base address)
		void SetCurrentSecondaryFilter(UFortVariantSelectorSubFilterVM* InCurrentSecondaryFilter); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65714(relative to base address)
		void SetCurrentPrimaryFilter(UFortVariantSelectorFilterVM* InCurrentPrimaryFilter); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65694(relative to base address)
		void SetConfigurationData(UAthenaVariantPickerConfig* InConfigurationData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65614(relative to base address)
		void OnVariantOverridesChangedEvent__DelegateSignature(TArray<FMcpVariantChannelInfo>& InVariantOverridesInfo); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVariantChangedEvent__DelegateSignature(FMcpVariantChannelInfo& InChannelInfo); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRotationRequestedEvent__DelegateSignature(FRotator& RotationOffset, bool bSnap); // Flags: MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DismissVariantChannels(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC651F4(relative to base address)
	};


	// Class FortniteUI.FortVariantSetVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x30 (0x98 - 0x68)
	class UFortVariantSetVM : public UMVVMViewModelBase	
	{
	public:
		TArray<UFortVariantChannelVM*> VariantChannels; // 0x68(0x10)
		ECosmeticVariantRowType RowType; // 0x78(0x1)
		unsigned char UnknownData00_7[0x1F]; // 0x79(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSetVM");
			return ret;
		}

		void HandleRotationRequested(FRotator& RotationOffset, bool bSnap); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC65378(relative to base address)
		ECosmeticVariantRowType GetRowType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC65364(relative to base address)
	};


	// Class FortniteUI.FortVehicleFuelGauge
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F8 (0x4A8 - 0x2B0)
	class UFortVehicleFuelGauge : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x1A8]; // 0x2B0(0x1A8) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* ImageSecondaryMeterMaterial; // 0x458(0x8)
		FName ImageMeterFillParamName; // 0x460(0x4)
		FName SecondaryMeterFillLineColorParamName; // 0x464(0x4)
		FLinearColor SecondaryMeterFillLineColorDefault; // 0x468(0x10)
		FLinearColor SecondaryMeterFillLineColorLowFuel; // 0x478(0x10)
		UOverlay* Overlay_Meter; // 0x488(0x8)
		UOverlay* Overlay_FuelIcon; // 0x490(0x8)
		UImage* Image_MeterIconGlow; // 0x498(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x4A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVehicleFuelGauge");
			return ret;
		}

		void UpdateFuelChanged(float FuelPercent, bool bIsFuelLow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6605C(relative to base address)
		void ShowInfiniteFuel(bool bHasInfiniteFuel); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetMeterOverlayVisibility(ESlateVisibility NewVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC65968(relative to base address)
		void SetIconOverlayVisibility(ESlateVisibility NewVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6585C(relative to base address)
		void OnVehicleUpdated(AFortAthenaVehicle* NewVehicle); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTankFull(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void OnRefuelingCosmeticsStarted(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74F0F9DB4(relative to base address)
		void OnRefuelingCosmeticsFinished(bool bIsFuelLow); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74FC65590(relative to base address)
		float GetCurrentFuelValue(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC65338(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVideoWidgetBase
	// Inherited from UEpicMediaVideoWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x4D8 - 0x498)
	class UFortVideoWidgetBase : public UEpicMediaVideoWidgetBase	
	{
	public:
		FMulticastInlineDelegate MediaPreEndEvent; // 0x498(0x10)
		UFortMediaSubtitlesPlayer* SubtitlePlayer; // 0x4A8(0x8)
		ULocalizedOverlays* SubtitleOverlays; // 0x4B0(0x8)
		USubtitleDisplay* Subtitles; // 0x4B8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x4C0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVideoWidgetBase");
			return ret;
		}

		void SetMediaPreEndTimeSeconds(float InSeconds); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC658DC(relative to base address)
	};


	// Class FortniteUI.FortViewModelsManager
	// Inherited from UGameInstanceSubsystem -> USubsystem -> UObject
	// Size: 0xF0 (0x120 - 0x30)
	class UFortViewModelsManager : public UGameInstanceSubsystem	
	{
	public:
		TMap<UObject*, EFortViewModelsDestructionType> ViewModelCache; // 0x30(0x50)
		unsigned char UnknownData00_7[0xA0]; // 0x80(0xA0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortViewModelsManager");
			return ret;
		}
	};


	// Class FortniteUI.FortWeaponReticleRechargeStackBasePipBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortWeaponReticleRechargeStackBasePipBase : public UUserWidget	
	{
	public:
		UImage* ImagePip; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponReticleRechargeStackBasePipBase");
			return ret;
		}

		void SetPipProgressColor(FLinearColor Color, FName PipColorMatParamName); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC65D00(relative to base address)
		void SetImagePip(UImage* Image); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74EA4CBC8(relative to base address)
		void SetFillPercent(float FillPercent, FName PipPercentMatParamName); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FC65794(relative to base address)
	};


	// Class FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortWeaponReticleRechargeStackBasePipCollectionBase : public UUserWidget	
	{
	public:
		UDynamicEntryBox* PipDynamicEntryBox; // 0x2B0(0x8)
		int32_t CurrentCount; // 0x2B8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2BC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase");
			return ret;
		}

		void UpdateRemainingRechargeTimeAtIndex(float FillPercent, int32_t Index, FName PipPercentMatParamName, bool ShouldSetPipColor, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC664B8(relative to base address)
		void UpdateRemainingRechargeTime(float TimeRemaining, float TotalDuration, FName PipPercentMatParamName, bool ShouldSetPipColor, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC66124(relative to base address)
		void SetPipColor(float Progress, int32_t Index, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FC659E8(relative to base address)
		void SetDynamicEntryBox(UDynamicEntryBox* DynamicEntryBox); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74EA4CBC8(relative to base address)
		UDynamicEntryBox GetDynamicEntryBox(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EA4AE60(relative to base address)
		int32_t GetCurrentCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749FCCC20(relative to base address)
	};


	// Class FortniteUI.GamePhaseWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UGamePhaseWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GamePhaseWidget");
			return ret;
		}

		void OnMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState NewMinigameState); // Flags: Native|Protected, Memory Exec: 0x7FF74F0F9CEC(relative to base address)
		void OnMinigameReady(AFortMinigame* Minigame); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void MinigameStateChangedEvent(AFortMinigame* Minigame, EFortMinigameState NewMinigameState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.GameStateComponent_PlayerFeedback
	// Inherited from UGameStateComponent -> UGameFrameworkComponent -> UActorComponent -> UObject
	// Size: 0x0 (0xA0 - 0xA0)
	class UGameStateComponent_PlayerFeedback : public UGameStateComponent	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GameStateComponent_PlayerFeedback");
			return ret;
		}
	};


	// Class FortniteUI.HudBindingCheckInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UHudBindingCheckInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HudBindingCheckInterface");
			return ret;
		}

		void ShowBindWidgets(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF748E753C0(relative to base address)
		bool ShouldShowPromptInHud(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF747A09D0C(relative to base address)
		void HideBindWidgets(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF749263428(relative to base address)
		void GetBindActions(TArray<FName>& OutActions); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74FC6525C(relative to base address)
	};


	// Class FortniteUI.HUDLayoutToolV2_WidgetPreview
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UHUDLayoutToolV2_WidgetPreview : public UCommonUserWidget	
	{
	public:
		UCreateHUDWidgetDragDropOperation* CreateHUDWidgetOperation; // 0x2D8(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x2E0(0x10) UNKNOWN PROPERTY
		float DragDistanceThresholdMillimeters; // 0x2F0(0x4)
		unsigned char UnknownData01_6[0x1C]; // 0x2F4(0x1C) UNKNOWN PROPERTY
		UCommonTextBlock* TextBlock_InstancesLeftCounter; // 0x310(0x8)
		UBorder* Border_Background; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_WidgetPreview");
			return ret;
		}

		void HandleOperationDrop(UDragDropOperation* Operation); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE86FF4(relative to base address)
	};


	// Class FortniteUI.HUDLayoutToolV2_AutorunPreview
	// Inherited from UHUDLayoutToolV2_WidgetPreview -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x328 - 0x320)
	class UHUDLayoutToolV2_AutorunPreview : public UHUDLayoutToolV2_WidgetPreview	
	{
	public:
		UOverlay* Overlay_AutorunLockZone; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_AutorunPreview");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_MoveStickPreview
	// Inherited from UHUDLayoutToolV2_WidgetPreview -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x330 - 0x320)
	class UHUDLayoutToolV2_MoveStickPreview : public UHUDLayoutToolV2_WidgetPreview	
	{
	public:
		UOverlay* Overlay_ImprovedMoveStick; // 0x320(0x8)
		UOverlay* Overlay_OriginalMoveStick; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_MoveStickPreview");
			return ret;
		}
	};


	// Class FortniteUI.InteractionRadialBacchusButton
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UInteractionRadialBacchusButton : public UFortHUDElementWidget	
	{
	public:
		UImage* Timer_Image; // 0x318(0x8)
		UWidgetAnimation* RadialTimerAnimation; // 0x320(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x328(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InteractionRadialBacchusButton");
			return ret;
		}

		void OnInteractionTimerChanged(AActor* TrackedActor, float duration, float Remaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC65498(relative to base address)
	};


	// Class FortniteUI.ItemCostWidgetBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x390 - 0x2B0)
	class UItemCostWidgetBase : public UUserWidget	
	{
	public:
		UBorder* RarityBorder; // 0x2B0(0x8)
		UHorizontalBox* ResourceWidgetsContainer; // 0x2B8(0x8)
		bool bShowRarityData : 1; // 0x2C0:0(0x1)
		bool bUseBackgroundForAffordabilityFeedback : 1; // 0x2C0:1(0x1)
		unsigned char UnknownData00_5[0x7]; // 0x2C1(0x7) UNKNOWN PROPERTY
		TArray<UFortResourceWidget*> ResourceWidgets; // 0x2C8(0x10)
		unsigned char UnknownData01_7[0xB8]; // 0x2D8(0xB8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemCostWidgetBase");
			return ret;
		}

		void SetRarityData(FFortRarityItemData& RarityData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC6930C(relative to base address)
		void SetItemCostInternal(TMap<TEnumAsByte, int32_t>& Costs); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC6923C(relative to base address)
		UFortResourceWidget CreateResourceCountWidget(bool bInUseBackgroundForAffordabilityFeedback, TEnumAsByte<EFortResourceType> ResourceType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ItemShopPreviewData
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UItemShopPreviewData : public UObject	
	{
	public:
		UFortItemVM* ItemVM; // 0x28(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x30(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemShopPreviewData");
			return ret;
		}

		bool HasLoadoutOverride(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC6915C(relative to base address)
	};


	// Class FortniteUI.LastKillerInfoExtensionWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class ULastKillerInfoExtensionWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LastKillerInfoExtensionWidgetInterface");
			return ret;
		}
	};


	// Class FortniteUI.MobileHUDElementCanvas
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x368 - 0x348)
	class UMobileHUDElementCanvas : public UFortMobileHUDElement	
	{
	public:
		UClass* HUDElementClassToCreate; // 0x348(0x8)
		UFortMobileHUDElement* CreatedWidget; // 0x350(0x8)
		UCanvasPanelSlot* AsCanvasPanelSlot; // 0x358(0x8)
		UCanvasPanel* CanvasPanel_Wrapper; // 0x360(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MobileHUDElementCanvas");
			return ret;
		}
	};


	// Class FortniteUI.MotdActionBase
	// Inherited from UObject
	// Size: 0x8 (0x30 - 0x28)
	class UMotdActionBase : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x28(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdActionBase");
			return ret;
		}

		bool ShouldCloseWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C5D1E6C(relative to base address)
		void CallToAction(AFortPlayerController* PlayerController); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC63DD8(relative to base address)
	};


	// Class FortniteUI.PrmChannel
	// Inherited from UObject
	// Size: 0x80 (0xA8 - 0x28)
	class UPrmChannel : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x80]; // 0x28(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PrmChannel");
			return ret;
		}
	};


	// Class FortniteUI.MotdChannel
	// Inherited from UPrmChannel -> UObject
	// Size: 0xC8 (0x170 - 0xA8)
	class UMotdChannel : public UPrmChannel	
	{
	public:
		unsigned char UnknownData00_1[0xC8]; // 0xA8(0xC8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdChannel");
			return ret;
		}
	};


	// Class FortniteUI.MotdDiscoveryAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x20 (0x50 - 0x30)
	class UMotdDiscoveryAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x30(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdDiscoveryAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdDiscoverySearchAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UMotdDiscoverySearchAction : public UMotdActionBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdDiscoverySearchAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdIslandSelectAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UMotdIslandSelectAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x30(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdIslandSelectAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdListViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xA0 - 0x68)
	class UMotdListViewModel : public UMVVMViewModelBase	
	{
	public:
		TArray<UMotdViewModel*> Motds; // 0x68(0x10)
		TArray<UMotdViewModel*> MotdCache; // 0x78(0x10)
		unsigned char UnknownData00_7[0x18]; // 0x88(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdListViewModel");
			return ret;
		}
	};


	// Class FortniteUI.MotdNavigateToLockerAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UMotdNavigateToLockerAction : public UMotdActionBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdNavigateToLockerAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdSettingsAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UMotdSettingsAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x30(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdSettingsAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdVideoAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x60 (0x90 - 0x30)
	class UMotdVideoAction : public UMotdActionBase	
	{
	public:
		FMulticastInlineDelegate VideoEnded; // 0x30(0x10)
		FMulticastInlineDelegate VideoStarted; // 0x40(0x10)
		unsigned char UnknownData00_7[0x40]; // 0x50(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdVideoAction");
			return ret;
		}

		void HandleMotdVideoTerminalError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC690B4(relative to base address)
		void HandleMotdVideoEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC690A0(relative to base address)
		void HandleMotdVideoClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC6908C(relative to base address)
	};


	// Class FortniteUI.MotdViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x108 (0x170 - 0x68)
	class UMotdViewModel : public UMVVMViewModelBase	
	{
	public:
		FText FullScreenTitle; // 0x68(0x10)
		FText FullScreenBody; // 0x78(0x10)
		FText TeaserTitle; // 0x88(0x10)
		FMotdBackground FullScreenBackground; // 0x98(0x48)
		FMotdBackground TeaserBackground; // 0xE0(0x48)
		TArray<FMotdButton> Buttons; // 0x128(0x10)
		bool bIsVerticalTextLayout; // 0x138(0x1)
		unsigned char UnknownData00_7[0x37]; // 0x139(0x37) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdViewModel");
			return ret;
		}

		bool HasTeaserVideoBackground(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC69178(relative to base address)
		bool HasFullScreenVideoBackground(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC69134(relative to base address)
		FString GetContentHash(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC68FA8(relative to base address)
		bool GetbIsVerticalTextLayout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F70E808(relative to base address)
	};


	// Class FortniteUI.MultiInteractDisplayWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UMultiInteractDisplayWidgetBase : public UCommonUserWidget	
	{
	public:
		UCommonVisibilitySwitcher* VisibilitySwitcher; // 0x2D8(0x8)
		UHorizontalBox* HorBoxInteractionIconContainer; // 0x2E0(0x8)
		UTextBlock* Text_InteractionCount; // 0x2E8(0x8)
		bool bTextVersion; // 0x2F0(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x2F1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MultiInteractDisplayWidgetBase");
			return ret;
		}

		void CheckCurrentInteractionCount(int32_t CurrentCount); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC68F28(relative to base address)
	};


	// Class FortniteUI.NamedSettingAction
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UNamedSettingAction : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingActionCollection
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UNamedSettingActionCollection : public UDataAsset	
	{
	public:
		TMap<FName, UNamedSettingAction*> NamedSettingActions; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingActionCollection");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_PushWidgetAsActivatablePanel
	// Inherited from UNamedSettingAction -> UObject
	// Size: 0x28 (0x50 - 0x28)
	class UNamedSettingAction_PushWidgetAsActivatablePanel : public UNamedSettingAction	
	{
	public:
		TWeakObjectPtr<UClass*> ModalWidgetClass; // 0x28(0x20)
		bool bSuspendUntilComplete; // 0x48(0x1)
		EActivatePanelOption Header; // 0x49(0x1)
		EActivatePanelOption Footer; // 0x4A(0x1)
		EActivatePanelOption ChatWidget; // 0x4B(0x1)
		unsigned char UnknownData00_7[0x4]; // 0x4C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_PushWidgetAsActivatablePanel");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_ColorCalibration
	// Inherited from UNamedSettingAction_PushWidgetAsActivatablePanel -> UNamedSettingAction -> UObject
	// Size: 0x8 (0x58 - 0x50)
	class UNamedSettingAction_ColorCalibration : public UNamedSettingAction_PushWidgetAsActivatablePanel	
	{
	public:
		bool bSetupForColorConfiguration; // 0x50(0x1)
		bool bSetupForFullRangeTest; // 0x51(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x52(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_ColorCalibration");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_InputPresets
	// Inherited from UNamedSettingAction -> UObject
	// Size: 0x58 (0x80 - 0x28)
	class UNamedSettingAction_InputPresets : public UNamedSettingAction	
	{
	public:
		TWeakObjectPtr<UUserWidget*> WeakSettingWidget; // 0x28(0x8)
		TWeakObjectPtr<AFortPlayerController*> WeakFortPlayerController; // 0x30(0x8)
		TWeakObjectPtr<UFortSetting*> WeakInstigatorSetting; // 0x38(0x8)
		TWeakObjectPtr<UClass*> ModalWidgetClass; // 0x40(0x20)
		bool bSuspendUntilComplete; // 0x60(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x61(0x7) UNKNOWN PROPERTY
		FText DialogTitle; // 0x68(0x10)
		FName ConfirmAction; // 0x78(0x4)
		FName DeclineAction; // 0x7C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_InputPresets");
			return ret;
		}

		void HandleConfirmationDialogResult(EFortDialogResult Result, FName ResultName); // Flags: Native|Protected, Memory Exec: 0x7FF74FC68FC4(relative to base address)
	};


	// Class FortniteUI.NamedSettingAction_ControllerPresets
	// Inherited from UNamedSettingAction_InputPresets -> UNamedSettingAction -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UNamedSettingAction_ControllerPresets : public UNamedSettingAction_InputPresets	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_ControllerPresets");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_KeyboardPresets
	// Inherited from UNamedSettingAction_InputPresets -> UNamedSettingAction -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UNamedSettingAction_KeyboardPresets : public UNamedSettingAction_InputPresets	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_KeyboardPresets");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_PushModalWidget
	// Inherited from UNamedSettingAction -> UObject
	// Size: 0x28 (0x50 - 0x28)
	class UNamedSettingAction_PushModalWidget : public UNamedSettingAction	
	{
	public:
		TWeakObjectPtr<UClass*> ModalWidgetClass; // 0x28(0x20)
		bool bSuspendUntilComplete; // 0x48(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x49(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_PushModalWidget");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_SafeZone
	// Inherited from UNamedSettingAction_PushModalWidget -> UNamedSettingAction -> UObject
	// Size: 0x0 (0x50 - 0x50)
	class UNamedSettingAction_SafeZone : public UNamedSettingAction_PushModalWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_SafeZone");
			return ret;
		}
	};


	// Class FortniteUI.NamedSettingAction_ViewPurchaseHistory
	// Inherited from UNamedSettingAction -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UNamedSettingAction_ViewPurchaseHistory : public UNamedSettingAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NamedSettingAction_ViewPurchaseHistory");
			return ret;
		}
	};


	// Class FortniteUI.PrmSurface
	// Inherited from UObject
	// Size: 0xA8 (0xD0 - 0x28)
	class UPrmSurface : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0xA8]; // 0x28(0xA8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PrmSurface");
			return ret;
		}
	};


	// Class FortniteUI.PrmMotdSurface
	// Inherited from UPrmSurface -> UObject
	// Size: 0x120 (0x1F0 - 0xD0)
	class UPrmMotdSurface : public UPrmSurface	
	{
	public:
		unsigned char UnknownData00_1[0x120]; // 0xD0(0x120) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PrmMotdSurface");
			return ret;
		}
	};


	// Class FortniteUI.ProductModeUserFacingData
	// Inherited from UObject
	// Size: 0x50 (0x78 - 0x28)
	class UProductModeUserFacingData : public UObject	
	{
	public:
		TMap<FString, FProductModeUserFacingDataItem> ProductModeValueMap; // 0x28(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ProductModeUserFacingData");
			return ret;
		}
	};


	// Class FortniteUI.RebootRallyQRCode
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x1390 - 0x1390)
	class URebootRallyQRCode : public UCommonButtonBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallyQRCode");
			return ret;
		}

		void SetIsInvite(bool bIsInvite); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ScrollableActivatableWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UScrollableActivatableWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ScrollableActivatableWidget");
			return ret;
		}

		void TransitionToFullscreen(bool bIsFullscreen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC693B0(relative to base address)
		bool IsFullscreen(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC691A0(relative to base address)
		void HandleSwipeUp(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSwipeDown(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SettingCategoryNavigator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class USettingCategoryNavigator : public UCommonUserWidget	
	{
	public:
		UObject* SelectedItem; // 0x2D8(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x2E0(0x20) UNKNOWN PROPERTY
		UListView* ListView_Categories; // 0x300(0x8)
		UWidgetAnimation* CollapseNavigatorAnim; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingCategoryNavigator");
			return ret;
		}

		void OnInputMethodChanged(ECommonInputType CurrentInput); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC691B8(relative to base address)
		void BP_ExpandNavigator(bool bInstant); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_CollapseNavigator(bool bInstant); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SettingsScreenTabSchemaCollection
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class USettingsScreenTabSchemaCollection : public UDataAsset	
	{
	public:
		TMap<FName, FSettingsScreenTabSchema> TabSchemaCollection; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsScreenTabSchemaCollection");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_Disabled
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_Disabled : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_Disabled");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyGameplayTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyGameplayTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyGameplayTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyGameUITabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyGameUITabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyGameUITabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyAudioTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyAudioTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyAudioTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyVideoTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyVideoTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyVideoTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyTouchAndMotionTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyTouchAndMotionTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyTouchAndMotionTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyTouchWeaponTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyTouchWeaponTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyTouchWeaponTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyMouseAndKeyboardTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyMouseAndKeyboardTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyMouseAndKeyboardTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyControllerTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyControllerTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyControllerTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyKeyboardKeybindingsTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyKeyboardKeybindingsTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyKeyboardKeybindingsTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyControllerKeybindingsTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyControllerKeybindingsTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyControllerKeybindingsTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SettingsTabDisplayCondition_LegacyAccountTabCondition
	// Inherited from USettingsTabDisplayCondition -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USettingsTabDisplayCondition_LegacyAccountTabCondition : public USettingsTabDisplayCondition	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SettingsTabDisplayCondition_LegacyAccountTabCondition");
			return ret;
		}
	};


	// Class FortniteUI.SidebarListEmptyPanelButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class USidebarListEmptyPanelButton : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* ButtonText; // 0x1390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SidebarListEmptyPanelButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialStyleChallengeScreenData
	// Inherited from UDataAsset -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UAthenaSpatialStyleChallengeScreenData : public UDataAsset	
	{
	public:
		TArray<FAthenaSpatialStyleCharacterData> CharacterStyleChallenges; // 0x30(0x10)
		UFortChallengeBundleScheduleDefinition* CharacterStyleChallengesSchedule; // 0x40(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialStyleChallengeScreenData");
			return ret;
		}
	};


	// Class FortniteUI.SpatialWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class USpatialWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialWidgetInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortSubscriptionContentInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortSubscriptionContentInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionContentInterface");
			return ret;
		}
	};


	// Class FortniteUI.ThresholdScrollBox
	// Inherited from UScrollBox -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0xB40 - 0xB38)
	class UThresholdScrollBox : public UScrollBox	
	{
	public:
		float ScrollThreshold; // 0xB38(0x4)
		unsigned char UnknownData00_7[0x4]; // 0xB3C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ThresholdScrollBox");
			return ret;
		}
	};


	// Class FortniteUI.TimerDeviceConversionFunctions
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UTimerDeviceConversionFunctions : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TimerDeviceConversionFunctions");
			return ret;
		}

		FSlateColor GetSlateColorFromRemainingSeconds(int32_t RemainingSeconds, int32_t SecondsThreshold, FLinearColor FirstColor, FLinearColor SecondColor); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6A7CC(relative to base address)
		FSlateColor GetSlateColorFromMappedSecondsRange(int32_t RemainingSeconds, int32_t Start, int32_t End, FLinearColor FirstValue, FLinearColor LastValue); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6A538(relative to base address)
		float GetFloatFromRemainingSeconds(int32_t RemainingSeconds, int32_t SecondsThreshold, float FirstValue, float SecondValue); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6A404(relative to base address)
		float GetFloatFromMappedSecondsRange(int32_t RemainingSeconds, int32_t Start, int32_t End, float FirstValue, float LastValue); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6A288(relative to base address)
		FLinearColor GetColorFromRemainingSeconds(int32_t RemainingSeconds, int32_t SecondsThreshold, FLinearColor FirstColor, FLinearColor SecondColor); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6A038(relative to base address)
		FLinearColor GetColorFromMappedSecondsRange(int32_t RemainingSeconds, int32_t Start, int32_t End, FLinearColor FirstValue, FLinearColor LastValue); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC69DAC(relative to base address)
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x28 (0x80 - 0x58)
	class UFortMobileHUDWidgetCustomPropertyModel_Scalar : public UFortMobileHUDWidgetCustomPropertyModel	
	{
	public:
		double DefaultValue; // 0x58(0x8)
		double PropertyLowerBound; // 0x60(0x8)
		double PropertyUpperBound; // 0x68(0x8)
		double PropertyStepSize; // 0x70(0x8)
		EFormatStyle FormatStyle; // 0x78(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x79(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar_AutorunPreference
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel_Scalar -> UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UFortMobileHUDWidgetCustomPropertyModel_Scalar_AutorunPreference : public UFortMobileHUDWidgetCustomPropertyModel_Scalar	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar_AutorunPreference");
			return ret;
		}
	};


	// Class FortniteUI.UIKitBlock
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class UUIKitBlock : public UUserWidget	
	{
	public:
		FUIKitBlockTiming TransitionTiming; // 0x2B0(0x2C)
		unsigned char UnknownData00_7[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitBlock");
			return ret;
		}

		void SetBlockTiming(FUIKitBlockTiming& Timing); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7488CD88C(relative to base address)
		void RequestTransition(EUIKitBlockVisualState State); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7488CD644(relative to base address)
		void RequestInstantTransition(EUIKitBlockInstantTransitionState State); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7488CD794(relative to base address)
		void PlayTransition(UWidgetAnimation* Animation, bool bPlayForward); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7474A9668(relative to base address)
		void OnTransitionUnhoveredRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionUnfocusedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionSelectedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionReleasedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionPressedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionHoveredRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionFocusedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionEnabledRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionDisabledRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionDeselectedIdleRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionDeselectedFocusedRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToUnlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToSelected(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToLocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToEnabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToDisabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstantTransitionToDeselected(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		float GetTransitionTime(EUIKitBlockVisualState State); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6AAB0(relative to base address)
	};


	// Class FortniteUI.UIKitBlueprintFunctionLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UUIKitBlueprintFunctionLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitBlueprintFunctionLibrary");
			return ret;
		}

		FVector2f TrackedInputPointer_GetScreenSpacePosition(FTrackedInputPointer& TrackedInput); // Flags: Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC6ADF4(relative to base address)
		void PlayAnimationDuringTime(UUserWidget* Widget, UWidgetAnimation* Animation, float playtime, bool bPlayForward); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6AC1C(relative to base address)
	};


	// Class FortniteUI.UIKitModularButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UUIKitModularButton : public UCommonButtonBase	
	{
	public:
		TArray<UUIKitBlock*> ModularBlocks; // 0x1390(0x10)
		bool bEnableOnClickedAnalytics; // 0x13A0(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x13A1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitModularButton");
			return ret;
		}

		void UnregisterModularBlock(UUIKitBlock* bLock); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748A04604(relative to base address)
		void UnregisterAllModularBlocks(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748F10854(relative to base address)
		void SetBlocksTiming(FUIKitBlockTiming& Timing); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7488CD814(relative to base address)
		void RequestTransitionOnBlocks(EUIKitBlockVisualState State); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7488CD6C4(relative to base address)
		void RequestInstantTransitionOnBlocks(EUIKitBlockInstantTransitionState State); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7488CDAAC(relative to base address)
		void RegisterModularBlock(UUIKitBlock* bLock); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748A046DC(relative to base address)
	};


	// Class FortniteUI.UIKitHoldableModularButton
	// Inherited from UUIKitModularButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE8 (0x1490 - 0x13A8)
	class UUIKitHoldableModularButton : public UUIKitModularButton	
	{
	public:
		UClass* HoldInputData; // 0x13A8(0x8)
		FMulticastInlineDelegate OnModularButtonHoldTriggered; // 0x13B0(0x10)
		bool bHoldConsumeInput; // 0x13C0(0x1)
		unsigned char UnknownData00_7[0xCF]; // 0x13C1(0xCF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitHoldableModularButton");
			return ret;
		}

		FEventReply BP_OnHoldTriggered(ECommonInputType CurrentInputType); // Flags: BlueprintCosmetic|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.UIKitTabGroup
	// Inherited from UCommonTabListWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x4E8 - 0x450)
	class UUIKitTabGroup : public UCommonTabListWidgetBase	
	{
	public:
		FMulticastInlineDelegate OnUIKitTabSelected; // 0x450(0x10)
		FMulticastInlineDelegate OnUIKitTabClicked; // 0x460(0x10)
		FMulticastInlineDelegate OnTabClicked; // 0x470(0x10)
		TArray<UUIKitTabGroupButtonViewModel*> LocalTabsViewModels; // 0x480(0x10)
		TMap<FName, UMVVMViewModelBase*> CachedViewModels; // 0x490(0x50)
		bool bEnableTabAnalytics; // 0x4E0(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x4E1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroup");
			return ret;
		}

		void SetInputActions(FDataTableRowHandle NextTab, FDataTableRowHandle PreviousTab); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF747FD2974(relative to base address)
		bool SelectTabByIndex(int32_t Index, bool bSuppressClickFeedback); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74826B09C(relative to base address)
		void SelectPreviousTab(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6ADD8(relative to base address)
		void SelectNextTab(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC6ADBC(relative to base address)
		void OnTabInteraction__DelegateSignature(FName TabID, UMVVMViewModelBase* TabVM); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTabViewModelValid(UUIKitTabGroupButtonViewModel* TabVM); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7492F9100(relative to base address)
		bool IsRebuildingTabList(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC6AC04(relative to base address)
		void HandleTabSelected(FName TabID); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74964E488(relative to base address)
		void HandleTabButtonClicked(UCommonButtonBase* SelectedTabButton, int32_t ButtonIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC6AB40(relative to base address)
		UUIKitTabGroupButtonViewModel GetTabViewModelByID(FName TabNameID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74826CA94(relative to base address)
		UMVVMViewModelBase GetTabViewModel(FName TabID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74964E3FC(relative to base address)
		int32_t GetTabIndexByID(FName TabNameID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74826C884(relative to base address)
		FName GetTabIDbyIndex(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749BC4AD0(relative to base address)
		UCommonButtonBase GetTabButtonBaseByViewModel(UMVVMViewModelBase* TabViewModel); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC6AA20(relative to base address)
		int32_t GetSelectedTabIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C99FC0(relative to base address)
		void DeselectAll(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC69D74(relative to base address)
	};


	// Class FortniteUI.UIKitTabGroupCategories
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UUIKitTabGroupCategories : public UCommonUserWidget	
	{
	public:
		TArray<UUIKitTabGroupCategoryViewModel*> LocalCategoriesViewModels; // 0x2D8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroupCategories");
			return ret;
		}
	};


	// Class FortniteUI.UIKitTabGroupCategoriesViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UUIKitTabGroupCategoriesViewModel : public UMVVMViewModelBase	
	{
	public:
		TArray<UUIKitTabGroupCategoryViewModel*> Categories; // 0x68(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroupCategoriesViewModel");
			return ret;
		}
	};


	// Class FortniteUI.UIKitUserWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF8 (0x3D0 - 0x2D8)
	class UUIKitUserWidget : public UCommonUserWidget	
	{
	public:
		FTrackedInputPointerConfig MouseKeyboardTrackedInputPointerConfig; // 0x2D8(0x18)
		FTrackedInputPointerConfig TouchInputTrackedInputPointerConfig; // 0x2F0(0x18)
		unsigned char UnknownData00_6[0x50]; // 0x308(0x50) UNKNOWN PROPERTY
		TMap<uint32_t, FTrackedInjectedPointerInputActions> InjectedInputActions; // 0x358(0x50)
		unsigned char UnknownData01_7[0x28]; // 0x3A8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitUserWidget");
			return ret;
		}

		FInputActionValue GetInputValueForAction(FPointerInjectedInputActionContext& InputContext, FTrackedInputPointer& PointerData); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF74FC8BE50(relative to base address)
		FEventReply BP_OnTrackedInputPointerStarted(FTrackedInputPointer& PointerData); // Flags: BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FEventReply BP_OnTrackedInputPointerMoved(FTrackedInputPointer& PointerData); // Flags: BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FEventReply BP_OnTrackedInputPointerEnded(FTrackedInputPointer& PointerData); // Flags: BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.VehicleTagEffectListenerWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UVehicleTagEffectListenerWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.VehicleTagEffectListenerWidgetInterface");
			return ret;
		}

		void OnPlayerPawnSet(); // Flags: Native|Protected, Memory Exec: 0x7FF748E753C0(relative to base address)
	};


	// Class FortniteUI.VoiceRepModal
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x548 - 0x528)
	class UVoiceRepModal : public UCommonActivatablePanelLegacy	
	{
	public:
		UVoiceRepModalPanelContainer* WBP_StepWizard_Base; // 0x528(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x530(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.VoiceRepModal");
			return ret;
		}

		void BeginReportingFlow(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.VoiceRepModalPanelContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UVoiceRepModalPanelContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.VoiceRepModalPanelContainer");
			return ret;
		}

		void SubmitReport(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCloseButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8C570(relative to base address)
	};


	// Class FortniteUI.VoiceRepPanel_Reporting
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UVoiceRepPanel_Reporting : public UCommonActivatableWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_ChannelPortraits; // 0x3F0(0x8)
		UAthenaScrollBox* AthenaScrollBox_Content; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.VoiceRepPanel_Reporting");
			return ret;
		}

		void SubmitReport(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8F6FC(relative to base address)
		void ReportIsReadyToSubmit(EVoiceRepUploadRecordResult Result); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void EnableSubmission(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CompleteReport(bool bSucceeded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortWidgetCameraRotationEffects
	// Inherited from UObject
	// Size: 0x70 (0x98 - 0x28)
	class UFortWidgetCameraRotationEffects : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x70]; // 0x28(0x70) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWidgetCameraRotationEffects");
			return ret;
		}

		void Update(float DeltaTime); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8F710(relative to base address)
		void Setup(APlayerCameraManager* InPlayerCameraManager, TArray<FParallaxEffectData>& InParallaxEffectData, FBasicEffectData& InPitchMeterEffectData, float InMinMaxPitchRate, float InMinMaxYawRate, float InOffsetInterpSpeed, float InResetInterpSpeed, float InVelocityMultiplier); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC8DA80(relative to base address)
	};


	// Class FortniteUI.FortWidgetPawnVelocityEffects
	// Inherited from UObject
	// Size: 0x30 (0x58 - 0x28)
	class UFortWidgetPawnVelocityEffects : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x28(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWidgetPawnVelocityEffects");
			return ret;
		}

		void Update(float DeltaTime, bool bIsFlying); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8F790(relative to base address)
		void Setup(APawn* InPawn, FBasicEffectData& InSpeedEffectData, FBasicEffectData& InOverdriveEffectData, float InMaxSpeed); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC8DFAC(relative to base address)
	};


	// Class FortniteUI.WidgetEffectsLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UWidgetEffectsLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WidgetEffectsLibrary");
			return ret;
		}

		UFortWidgetPawnVelocityEffects CreatePawnVelocityEffectsObject(UObject* Outer); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8BCB0(relative to base address)
		UFortWidgetCameraRotationEffects CreateCameraRotationEffectsObject(UObject* Outer); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8BC30(relative to base address)
	};


	// Class FortniteUI.FortActiveFriendsViolator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortActiveFriendsViolator : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ActivePlayerCount; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActiveFriendsViolator");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowser
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x4A0 - 0x3F0)
	class UFortServerBrowser : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		TArray<UFortServerBrowserActionData*> SupportedActions; // 0x400(0x10)
		TArray<TWeakObjectPtr> ExcludedSupportedActions; // 0x410(0x10)
		TWeakObjectPtr<UFortServerBrowserActionData*> DefaultSelectedAction; // 0x420(0x20)
		UFortServerBrowserListView* ListView_ServerBrowser; // 0x440(0x8)
		FDataTableRowHandle NavigateLeftInputAction; // 0x448(0x10)
		FDataTableRowHandle NavigateRightInputAction; // 0x458(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x468(0x10) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Cancel; // 0x478(0x8)
		UCommonButtonLegacy* Button_CloseTouch; // 0x480(0x8)
		unsigned char UnknownData02_7[0x18]; // 0x488(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowser");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowserCreative
	// Inherited from UFortServerBrowser -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x508 - 0x4A0)
	class UFortServerBrowserCreative : public UFortServerBrowser	
	{
	public:
		TWeakObjectPtr<UFortServerBrowserActionData*> DefaultActionIfDiscoveryDisabled; // 0x4A0(0x20)
		unsigned char UnknownData00_7[0x48]; // 0x4C0(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserCreative");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowserHelper
	// Inherited from UObject
	// Size: 0x68 (0x90 - 0x28)
	class UFortServerBrowserHelper : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x68]; // 0x28(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserHelper");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowserListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x3C8 - 0x280)
	class UFortServerBrowserListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		TEnumAsByte<EOrientation> orientation; // 0x368(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x369(0x3) UNKNOWN PROPERTY
		float EntrySpacing; // 0x36C(0x4)
		unsigned char UnknownData02_6[0x18]; // 0x370(0x18) UNKNOWN PROPERTY
		UClass* CreativeServerInfoTileEntryClass; // 0x388(0x8)
		UClass* ServerActionTileEntryClass; // 0x390(0x8)
		UClass* OwnServerActionTileEntryClass; // 0x398(0x8)
		UClass* PlaylistSelectionActionTileEntryClass; // 0x3A0(0x8)
		unsigned char UnknownData03_7[0x20]; // 0x3A8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserListView");
			return ret;
		}
	};


	// Class FortniteUI.FortServerBrowserPlayground
	// Inherited from UFortServerBrowser -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x4B8 - 0x4A0)
	class UFortServerBrowserPlayground : public UFortServerBrowser	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x4A0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerBrowserPlayground");
			return ret;
		}
	};


	// Class FortniteUI.FortServerInfoFriendEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortServerInfoFriendEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_FriendName; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerInfoFriendEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortServerTileBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UFortServerTileBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x38]; // 0x13E0(0x38) UNKNOWN PROPERTY
		UCommonTextBlock* Text_ServerWarning; // 0x1418(0x8)
		UCommonButtonLegacy* Button_Launch; // 0x1420(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerTileBase");
			return ret;
		}

		void OnLaunchButtonEnableChanged(bool bEnableValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortServerActionTile
	// Inherited from UFortServerTileBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1430 - 0x1428)
	class UFortServerActionTile : public UFortServerTileBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerActionTile");
			return ret;
		}
	};


	// Class FortniteUI.FortNamedServerActionTile
	// Inherited from UFortServerActionTile -> UFortServerTileBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1450 - 0x1430)
	class UFortNamedServerActionTile : public UFortServerActionTile	
	{
	public:
		UCommonTextBlock* Text_ActionTitle; // 0x1430(0x8)
		UCommonTextBlock* Text_ActionDescription; // 0x1438(0x8)
		UImage* Image_Background; // 0x1440(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1448(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNamedServerActionTile");
			return ret;
		}

		void UpdateButtonText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsActionIslandSelectType(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC8CA9C(relative to base address)
	};


	// Class FortniteUI.FortPlaylistSelectionActionTile
	// Inherited from UFortNamedServerActionTile -> UFortServerActionTile -> UFortServerTileBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x1450 - 0x1450)
	class UFortPlaylistSelectionActionTile : public UFortNamedServerActionTile	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlaylistSelectionActionTile");
			return ret;
		}
	};


	// Class FortniteUI.FortServerInfoTileBase
	// Inherited from UFortServerTileBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x1450 - 0x1428)
	class UFortServerInfoTileBase : public UFortServerTileBase	
	{
	public:
		UCommonTextBlock* Text_PlayerCount; // 0x1428(0x8)
		UDynamicEntryBox* EntryBox_ServerFriendList; // 0x1430(0x8)
		UCommonTextBlock* Text_OwnerName; // 0x1438(0x8)
		UVerticalBox* VerticalBox_Ownership; // 0x1440(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerInfoTileBase");
			return ret;
		}

		void RequestUpdateBackgroundImage(int32_t FriendListHash); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerNameUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeServerInfoTile
	// Inherited from UFortServerInfoTileBase -> UFortServerTileBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1460 - 0x1448)
	class UFortCreativeServerInfoTile : public UFortServerInfoTileBase	
	{
	public:
		UCommonTextBlock* Text_FriendsPlaying; // 0x1448(0x8)
		URichTextBlock* RichText_RemainingFriends; // 0x1450(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1458(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeServerInfoTile");
			return ret;
		}
	};


	// Class FortniteUI.ApolloIntroShimBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UApolloIntroShimBase : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x2B0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ApolloIntroShimBase");
			return ret;
		}
	};


	// Class FortniteUI.FortAsyncAction_CheckForStwMfaReward
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x28 (0x58 - 0x30)
	class UFortAsyncAction_CheckForStwMfaReward : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate OnCompleted; // 0x30(0x10)
		FMulticastInlineDelegate OnFailed; // 0x40(0x10)
		AFortPlayerController* PlayerController; // 0x50(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_CheckForStwMfaReward");
			return ret;
		}

		UFortAsyncAction_CheckForStwMfaReward CheckForStwMfaReward(AFortPlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8BB8C(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_CreateWidgetAsync
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x70 (0xA0 - 0x30)
	class UFortAsyncAction_CreateWidgetAsync : public UBlueprintAsyncActionBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x30(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnComplete; // 0x40(0x10)
		unsigned char UnknownData01_7[0x50]; // 0x50(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_CreateWidgetAsync");
			return ret;
		}

		UFortAsyncAction_CreateWidgetAsync CreateWidgetAsync(UObject* WorldContextObject, TWeakObjectPtr<UClass*> UserWidgetSoftClass, APlayerController* OwningPlayer, bool bSuspendInputUntilComplete); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF747F7601C(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_LoadBannerAsset
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x40 (0x70 - 0x30)
	class UFortAsyncAction_LoadBannerAsset : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate BannerAssetLoadComplete; // 0x30(0x10)
		unsigned char UnknownData00_7[0x30]; // 0x40(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_LoadBannerAsset");
			return ret;
		}

		UFortAsyncAction_LoadBannerAsset AsyncLoadBannerAsset(UObject* WorldContextObject, TWeakObjectPtr<UObject*> AssetToLoad, UMaterialInstanceDynamic* MIDRef, FName BannerColorName); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7491DF668(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_LoadCurrentSubgameProfiles
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x28 (0x58 - 0x30)
	class UFortAsyncAction_LoadCurrentSubgameProfiles : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
		FMulticastInlineDelegate OnFailure; // 0x40(0x10)
		AFortPlayerController* PlayerController; // 0x50(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_LoadCurrentSubgameProfiles");
			return ret;
		}

		UFortAsyncAction_LoadCurrentSubgameProfiles LoadCurrentSubgameProfiles(AFortPlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CACC(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_ShowConfirmation_NUI
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x170 (0x1A0 - 0x30)
	class UFortAsyncAction_ShowConfirmation_NUI : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate DialogResult; // 0x30(0x10)
		UObject* WorldContextObject; // 0x40(0x8)
		UFortLocalPlayer* TargetLocalPlayer; // 0x48(0x8)
		FFortDialogDescription_NUI Description; // 0x50(0x140)
		unsigned char UnknownData00_7[0x10]; // 0x190(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_ShowConfirmation_NUI");
			return ret;
		}

		UFortAsyncAction_ShowConfirmation_NUI ShowSimpleConfirmationDialog_NUI(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, bool bShowConfirm, bool bShowDecline, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, ULocalPlayer* TargetPlayer); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8EFB4(relative to base address)
		UFortAsyncAction_ShowConfirmation_NUI ShowSimpleConfirmationDialog_CustomInput(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, FName ConfirmAction, FName DeclineAction, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, bool Cancelable, ULocalPlayer* TargetPlayer); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8E7FC(relative to base address)
		UFortAsyncAction_ShowConfirmation_NUI ShowConfirmationDialog_NUI(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, TArray<FConfirmationDialogAction>& ConfirmButtonInputActions, FName& DeclineButtonInputAction, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, ULocalPlayer* TargetPlayer); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC8E194(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_PushPrimaryContent
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x40 (0x70 - 0x30)
	class UFortAsyncAction_PushPrimaryContent : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate OnPrimaryContentPushed; // 0x30(0x10)
		unsigned char UnknownData00_7[0x30]; // 0x40(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_PushPrimaryContent");
			return ret;
		}

		UFortAsyncAction_PushPrimaryContent PushPrimaryContentSoftClassAsyncForPlayer(APlayerController* ContextPC, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CE80(relative to base address)
		UFortAsyncAction_PushPrimaryContent PushPrimaryContentSoftClassAsync(UUserWidget* ContextWidget, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CD50(relative to base address)
		UFortAsyncAction_PushPrimaryContent PushPrimaryContentClassAsyncForPlayer(APlayerController* ContextPC, UClass* WidgetClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CC74(relative to base address)
		UFortAsyncAction_PushPrimaryContent PushPrimaryContentClassAsync(UUserWidget* ContextWidget, UClass* WidgetClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CB98(relative to base address)
		void OnPrimaryContentPushed__DelegateSignature(UCommonActivatableWidget* ActivatableWidget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_QueueModalWidget
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x48 (0x78 - 0x30)
	class UFortAsyncAction_QueueModalWidget : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate OnModalWidgetQueued; // 0x30(0x10)
		unsigned char UnknownData00_7[0x38]; // 0x40(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_QueueModalWidget");
			return ret;
		}

		UFortAsyncAction_QueueModalWidget QueueModalWidgetSoftClassAsyncForPlayer(APlayerController* PlayerController, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D4A4(relative to base address)
		UFortAsyncAction_QueueModalWidget QueueModalWidgetSoftClassAsyncForLocalPlayer(ULocalPlayer* LocalPlayer, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D374(relative to base address)
		UFortAsyncAction_QueueModalWidget QueueModalWidgetSoftClassAsync(UUserWidget* ContextWidget, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D244(relative to base address)
		UFortAsyncAction_QueueModalWidget QueueModalWidgetClassAsyncForPlayer(APlayerController* PlayerController, UClass* WidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D168(relative to base address)
		UFortAsyncAction_QueueModalWidget QueueModalWidgetClassAsyncForLocalPlayer(ULocalPlayer* LocalPlayer, UClass* WidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D08C(relative to base address)
		UFortAsyncAction_QueueModalWidget QueueModalWidgetClassAsync(UUserWidget* ContextWidget, UClass* WidgetClass); // Flags: Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8CFB0(relative to base address)
		void OnModalWidgetQueued__DelegateSignature(UCommonActivatableWidget* ActivatableWidget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFPSBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaFPSBase : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* FPS; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2E0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFPSBase");
			return ret;
		}

		void HandleShowFPSChanged(bool bInShowFPS); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC8CA08(relative to base address)
	};


	// Class FortniteUI.AthenaMinimap
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x10 (0x168 - 0x158)
	class UAthenaMinimap : public UWidget	
	{
	public:
		FVector2D DesiredSize; // 0x158(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMinimap");
			return ret;
		}
	};


	// Class FortniteUI.AthenaRecordingBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UAthenaRecordingBase : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRecordingBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaTemperatureBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaTemperatureBase : public UCommonUserWidget	
	{
	public:
		UTextBlock* Temperature; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTemperatureBase");
			return ret;
		}

		void StopTimer(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC8F6E8(relative to base address)
		void StartTimer(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FC8F6D4(relative to base address)
	};


	// Class FortniteUI.AthenaLoadingScreenPreviewPanelBase
	// Inherited from UAthenaLoadingScreenPreviewPanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x550 - 0x530)
	class UAthenaLoadingScreenPreviewPanelBase : public UAthenaLoadingScreenPreviewPanel	
	{
	public:
		UNativeWidgetHost* LoadingScreenSlot; // 0x530(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x538(0x8) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Close; // 0x540(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x548(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLoadingScreenPreviewPanelBase");
			return ret;
		}
	};


	// Class FortniteUI.ApolloIntroLoadingPanel
	// Inherited from UAthenaLoadingScreenPreviewPanelBase -> UAthenaLoadingScreenPreviewPanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x558 - 0x550)
	class UApolloIntroLoadingPanel : public UAthenaLoadingScreenPreviewPanelBase	
	{
	public:
		UFortPlaylistAthena* ApolloIntroPlaylist; // 0x550(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ApolloIntroLoadingPanel");
			return ret;
		}
	};


	// Class FortniteUI.AthenaAIKillsBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaAIKillsBase : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* KillsText; // 0x318(0x8)
		UObject* KillsSource; // 0x320(0x8)
		bool bCustomKillSource; // 0x328(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x329(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAIKillsBase");
			return ret;
		}

		void SetKillsSourcePlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8DA00(relative to base address)
		void SetKillsSourcePlayerController(AFortPlayerControllerAthena* InPlayerController); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8DA00(relative to base address)
	};


	// Class FortniteUI.AthenaAvailableSquadSlotsListBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaAvailableSquadSlotsListBase : public UFortHUDElementWidget	
	{
	public:
		int32_t MaxNumberOfAvailableSquadSlots; // 0x318(0x4)
		bool bAlwaysDisplayTopEntryAsDetailed; // 0x31C(0x1)
		unsigned char UnknownData00_6[0xB]; // 0x31D(0xB) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_AvailableSlotsList; // 0x328(0x8)
		UAthenaPlayerViewModel* CachedPlayerVM; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAvailableSquadSlotsListBase");
			return ret;
		}

		void UpdateSquadFromMinigameOptionChange(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8FC44(relative to base address)
		void UpdateIsTeamMiniGameOnMinigameVolumeChanged(AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8F914(relative to base address)
		void UpdateIsTeamMiniGameOnGameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8F850(relative to base address)
		void HandleSquadMemberDisconnected(AFortPlayerStateAthena* Player); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePlayerUniqueIdReplicated(FUniqueNetIdRepl& UniqueID); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC8C944(relative to base address)
		void HandlePlayerExitVolume(APlayerState* ClientPlayerState, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8C880(relative to base address)
		void HandlePlayerEnterVolume(APlayerState* ClientPlayerState, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8C7BC(relative to base address)
		void HandleGameMemberChanged(char InSquadId, char InTeamIndex, AFortPlayerStateAthena* ChangedPS); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FC8C6C4(relative to base address)
	};


	// Class FortniteUI.AthenaAvailableSquadSlotsListEntryBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaAvailableSquadSlotsListEntryBase : public UFortHUDElementWidget	
	{
	public:
		EAvailableSquadSlotsListEntryState CurrentEntryState; // 0x318(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x319(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAvailableSquadSlotsListEntryBase");
			return ret;
		}

		void BP_OnEntryStateUpdated(EAvailableSquadSlotsListEntryState NewEntryState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCareerScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x5D8 - 0x528)
	class UAthenaCareerScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		TWeakObjectPtr<UClass*> LeaderboardsScreenClass; // 0x528(0x20)
		TWeakObjectPtr<UClass*> ReplayBrowserScreenClass; // 0x548(0x20)
		FDataTableRowHandle BackToSocialTabInputActionRowHandle; // 0x568(0x10)
		UCommonTextBlock* Text_AccountLevel; // 0x578(0x8)
		UCommonButtonBase* Button_Leaderboards; // 0x580(0x8)
		UCommonButtonBase* Button_Replays; // 0x588(0x8)
		UAthenaFeatTimelineListView* ListView_FeatTimeline; // 0x590(0x8)
		UCommonTextBlock* Text_ChapterContext; // 0x598(0x8)
		UBacchusCloseButton* Button_TouchClose; // 0x5A0(0x8)
		UCommonTextBlock* Text_MobileTabLabel; // 0x5A8(0x8)
		UImage* Image_LeftFill; // 0x5B0(0x8)
		UImage* Image_RightFill; // 0x5B8(0x8)
		UImage* Image_Gradient; // 0x5C0(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x5C8(0x8) UNKNOWN PROPERTY
		UDataTable* RankSeasonData; // 0x5D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCareerScreen");
			return ret;
		}

		void ShowFeats(bool bHasCompletedFeats); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestToUpdateSeasonStatsIfNeeded(FString SeasonName); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8D7A8(relative to base address)
		FStatPageData RequestScreenData(FString SeasonName, bool bRanked, FString GameMode, FString SubMode); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8D5D4(relative to base address)
		void PopulateScreenData(FStatPageData Data); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OpenReplaysScreen(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8CB70(relative to base address)
		void HandleStatsLoaded(bool Success); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetSeasonNames(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC8C42C(relative to base address)
	};


	// Class FortniteUI.AthenaCareerStatsScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x5B8 - 0x528)
	class UAthenaCareerStatsScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		TWeakObjectPtr<UClass*> ReplayBrowserScreenClass; // 0x528(0x20)
		FDataTableRowHandle BackToSocialTabInputActionRowHandle; // 0x548(0x10)
		bool bHasAvailableAthenaProfile; // 0x558(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x559(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* PlayerName; // 0x560(0x8)
		UCommonTextBlock* Text_AccountLevel; // 0x568(0x8)
		UBacchusCloseButton* Button_TouchClose; // 0x570(0x8)
		UCommonTextBlock* Text_MobileTabLabel; // 0x578(0x8)
		UFortHabaneroTierWidget* WBP_Habanero_Icon; // 0x580(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x588(0x8) UNKNOWN PROPERTY
		UFortHabaneroDisplayData* HabaneroDisplayData; // 0x590(0x8)
		UDataTable* RankSeasonData; // 0x598(0x8)
		bool bIsOpenedFromLeaderboardsScreen; // 0x5A0(0x1)
		unsigned char UnknownData02_7[0x17]; // 0x5A1(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCareerStatsScreen");
			return ret;
		}

		void RequestToUpdateSeasonStatsIfNeeded(FString SeasonName); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8D868(relative to base address)
		void OpenReplaysScreen(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8CB84(relative to base address)
		void InitSeasonsData(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8CA88(relative to base address)
		void HandleStatsLoaded(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleRanksLoaded(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetSeasonNames(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC8C4E0(relative to base address)
		void GetReplaysButtonDesiredState(bool& bVisible, bool& bEnabled); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC8C354(relative to base address)
		FFortHabaneroTier GetRankDisplayData(FString HabaneroType, int32_t Habanero); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FC8C248(relative to base address)
		void GetLoadedScreenData(FString SeasonName, bool bRanked, FString GameMode, FString SubMode, FStatPageData& OutStatPageData, bool& bSuccess); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FC8BFA8(relative to base address)
		void DisplayRankBadge(FString HabaneroType, int32_t Habanero); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8BD64(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeEntry
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaChallengeEntry : public UUserWidget	
	{
	public:
		UCommonRichTextBlock* Text_ObjectiveTitle; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeEntry");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengesWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x3B8 - 0x318)
	class UAthenaChallengesWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UDynamicEntryBox* DynamicEntryBox_ChallengeEntries; // 0x358(0x8)
		unsigned char UnknownData01_6[0x50]; // 0x360(0x50) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizedWidgetData; // 0x3B0(0x2)
		bool bXPSystemRequiredForChallenges; // 0x3B2(0x1)
		unsigned char UnknownData02_7[0x5]; // 0x3B3(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengesWidget");
			return ret;
		}

		bool IsXPSystemRequiredForChallenges(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC8CAB4(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // Flags: Native|Protected, Memory Exec: 0x7FF74FC8C5C4(relative to base address)
		void BP_WidgetIsFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnWidgetActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x138 (0x528 - 0x3F0)
	class UAthenaCollectionScreenContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x420(0x40)
		UCommonVisibilitySwitcher* VisibilitySwitcher_Content; // 0x460(0x8)
		TArray<FAthenaCollectionScreenContainerTabInfo> TabInfos; // 0x468(0x10)
		FDataTableRowHandle NextTabInputAction; // 0x478(0x10)
		FDataTableRowHandle PreviousTabInputAction; // 0x488(0x10)
		UDynamicEntryBox* EntryBox_TabButtons; // 0x498(0x8)
		UCommonTextBlock* Text_TabTitle; // 0x4A0(0x8)
		TArray<FAthenaCollectionScreenContainerTabInfo> ActiveTabInfos; // 0x4A8(0x10)
		unsigned char UnknownData01_7[0x70]; // 0x4B8(0x70) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenContainer");
			return ret;
		}

		void EnableTabActions(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8BE3C(relative to base address)
		void DisableTabActions(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FC8BD30(relative to base address)
		void BP_OnShowTabsSet(bool bShowTabs); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenContainerTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x1440 - 0x13E0)
	class UAthenaCollectionScreenContainerTabButton : public UCommonButtonLegacy	
	{
	public:
		UCommonLazyImage* LazyImage_Icon; // 0x13E0(0x8)
		FString CollectionType; // 0x13E8(0x10)
		FVector2D ImageSize_Mobile; // 0x13F8(0x10)
		FText TabTitle; // 0x1408(0x10)
		FGameplayTagContainer CategoryTags; // 0x1418(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenContainerTabButton");
			return ret;
		}

		void SetIcon(TWeakObjectPtr<UObject*> LazyObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FC8D904(relative to base address)
		void BP_ShowBang(bool bShow); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_ResetTabButton(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCommonPrioritizedWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x360 - 0x318)
	class UAthenaCommonPrioritizedWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		bool bAutoManagePriorityByVisibility; // 0x358(0x1)
		FFortPrioritizedWidgetData PrioritizationData; // 0x359(0x2)
		unsigned char UnknownData01_7[0x5]; // 0x35B(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCommonPrioritizedWidget");
			return ret;
		}

		void OnStompFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStompedByOtherWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeInactive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeActive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCompassBase
	// Inherited from UFortCompassWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x470 (0x8E0 - 0x470)
	class UAthenaCompassBase : public UFortCompassWidget	
	{
	public:
		FSlateBrush MarkerBrush; // 0x470(0xB0)
		FSlateBrush StormIndicatorBrush; // 0x520(0xB0)
		float DistanceTextVerticalOffset; // 0x5D0(0x4)
		float DistanceTextHorizontalOffset; // 0x5D4(0x4)
		FSlateFontInfo DistanceTextFont; // 0x5D8(0x58)
		FSlateBrush TeammateGunshotIndicatorBrush; // 0x630(0xB0)
		FSlateBrush EnemyGunshotIndicatorBrush; // 0x6E0(0xB0)
		float TimeToShowGunshotIndicators; // 0x790(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x794(0x4) UNKNOWN PROPERTY
		UCurveFloat* GunshotIndicatorScaleOverTime; // 0x798(0x8)
		UCurveFloat* GunshotIndicatorScaleByStrength; // 0x7A0(0x8)
		UCurveFloat* GunshotIndicatorAlphaOverTime; // 0x7A8(0x8)
		UCurveFloat* GunshotIndicatorAlphaByHeading; // 0x7B0(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x7B8(0x8) UNKNOWN PROPERTY
		FSlateBrush DefaultPinnedQuestIconBrush; // 0x7C0(0xB0)
		float PinnedQuestAlphaRotCutoff; // 0x870(0x4)
		float PinnedQuestDistanceRotCutoff; // 0x874(0x4)
		float PinnedQuestIconVerticalOffset; // 0x878(0x4)
		float PinnedQuestDistanceTextVerticalOffset; // 0x87C(0x4)
		FSlateFontInfo PinnedQuestDistanceTextFont; // 0x880(0x58)
		unsigned char UnknownData02_7[0x8]; // 0x8D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCompassBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaConfirmationWindow
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x470 - 0x3F0)
	class UAthenaConfirmationWindow : public UCommonActivatableWidget	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x3F0(0x8)
		UCommonTextBlock* Text_PostConfirmation; // 0x3F8(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x400(0x8)
		UFortLazyImage* Image_MainIcon; // 0x408(0x8)
		UDynamicEntryBox* EntryBox_Buttons; // 0x410(0x8)
		UBacchusCloseButton* Button_CloseTouch; // 0x418(0x8)
		UCommonBorder* Border_TapToCloseZone; // 0x420(0x8)
		UWidgetAnimation* BoundAnim_PostConfirm; // 0x428(0x8)
		FDataTableRowHandle CancelAction; // 0x430(0x10)
		UClass* ConfirmButtonClass; // 0x440(0x8)
		UClass* DeclineButtonClass; // 0x448(0x8)
		UClass* CancelButtonClass; // 0x450(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x458(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaConfirmationWindow");
			return ret;
		}

		void OnShowConfirmationContent(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetButtonText(UCommonButtonBase* Button, FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FEventReply HandleTapToCloseZoneMouseButtonDown(FGeometry MyGeometry, FPointerEvent& MouseEvent); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FCB0440(relative to base address)
	};


	// Class FortniteUI.FortActorIndicatorWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x3C0 - 0x318)
	class UFortActorIndicatorWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		AActor* IndicatedActor; // 0x320(0x8)
		UPrimitiveComponent* IndicatedActorComponent; // 0x328(0x8)
		FVector RelativeLocation; // 0x330(0x18)
		float MaxDistance; // 0x348(0x4)
		bool bClampOnScreen; // 0x34C(0x1)
		bool bShowClampToScreenArrow; // 0x34D(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x34E(0x2) UNKNOWN PROPERTY
		FElevationArrowData ElevationArrowData; // 0x350(0x1C)
		bool bUseScreenSpacePosition; // 0x36C(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x36D(0x3) UNKNOWN PROPERTY
		FVector2D ScreenSpaceRelativeOffset; // 0x370(0x10)
		int32_t ScreenPriority; // 0x380(0x4)
		unsigned char UnknownData03_7[0x3C]; // 0x384(0x3C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActorIndicatorWidget");
			return ret;
		}

		void SetOverrideTextPositionMobile(bool OverrideTextPositionMobile); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC3554(relative to base address)
		void SetIndicatedActor(AActor* NewIndicatorActor); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74E94BB5C(relative to base address)
		void OnTargetActorChanged(AActor* TargetedActor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsIndicatingActor(AActor* OtherActor); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95C84(relative to base address)
		void Init(AActor* TargetedActor); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF95ABC(relative to base address)
		void Deinit(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93B00(relative to base address)
	};


	// Class FortniteUI.AthenaMarkedActorIndicator
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F0 (0x5B0 - 0x3C0)
	class UAthenaMarkedActorIndicator : public UFortActorIndicatorWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3C0(0x30) UNKNOWN PROPERTY
		FFortWorldMarkerData MarkerData; // 0x3F0(0xE8)
		FMarkedActorDisplayInfo MarkerDisplay; // 0x4D8(0xA0)
		UFortMarkerDetailsTable* DetailsTable; // 0x578(0x8)
		float FreshLargeItemShowTime; // 0x580(0x4)
		float IndicatorDotSizeThreshold; // 0x584(0x4)
		USoundBase* MarkerConfirmationSound; // 0x588(0x8)
		UWidgetSwitcher* Switcher_IndicatorSize; // 0x590(0x8)
		UPanelWidget* Panel_SmallIndicator; // 0x598(0x8)
		UPanelWidget* Panel_LargeIndicator; // 0x5A0(0x8)
		UCommonTextBlock* Text_Distance; // 0x5A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMarkedActorIndicator");
			return ret;
		}

		void OnSetMarkerData(FFortWorldMarkerData& FortWorldMarkerData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaContextTutorialIndicator
	// Inherited from UAthenaMarkedActorIndicator -> UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x5F0 - 0x5B0)
	class UAthenaContextTutorialIndicator : public UAthenaMarkedActorIndicator	
	{
	public:
		float OffscreenMaxTreshold; // 0x5B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x5B4(0x4) UNKNOWN PROPERTY
		UOverlay* Overlay_Icon; // 0x5B8(0x8)
		unsigned char UnknownData01_6[0x4]; // 0x5C0(0x4) UNKNOWN PROPERTY
		float ScreenEdgePaddingSizePercent; // 0x5C4(0x4)
		unsigned char UnknownData02_7[0x28]; // 0x5C8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaContextTutorialIndicator");
			return ret;
		}

		void SwitchIndicatorSize(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB1DD4(relative to base address)
		void SetScreenPercent(float Percent); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIndicatorText(FText& Text); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayOutAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayInAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayBounceAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		float GetMinTreshold(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF358(relative to base address)
		float GetMaxTreshold(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F9EFB90(relative to base address)
		float GetMaxOffscreenTreshold(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF340(relative to base address)
		float GetCurrentDotProduct(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF270(relative to base address)
	};


	// Class FortniteUI.AthenaContextualChallengesWidget
	// Inherited from UAthenaChallengesWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3B8 - 0x3B8)
	class UAthenaContextualChallengesWidget : public UAthenaChallengesWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaContextualChallengesWidget");
			return ret;
		}

		bool ShouldOutroAutomatically(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCB1910(relative to base address)
		void OnResetOutroDelay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewContextualHeader(FText& NewText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleToggleFullscreenMap(bool bFullscreenMapVisible); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB0620(relative to base address)
		void HandleNewContextualObjectives(TArray<UFortQuestItem*>& InContextualQuests); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCAFAB0(relative to base address)
		float GetOutroDelay(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF3B0(relative to base address)
	};


	// Class FortniteUI.AthenaCosmeticUnlockingInfo
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UAthenaCosmeticUnlockingInfo : public UCommonUserWidget	
	{
	public:
		UCommonRichTextBlock* RichText_StaticUnlockingText; // 0x2D8(0x8)
		UCommonRichTextBlock* RichText_UnlockingText; // 0x2E0(0x8)
		UProgressBar* ProgressBar_StepsCompleted; // 0x2E8(0x8)
		UCommonRichTextBlock* RichText_ProgressCompletion; // 0x2F0(0x8)
		FString EmphasisStyle; // 0x2F8(0x10)
		FString ProgressCompletionNumericStyle; // 0x308(0x10)
		UAthenaCosmeticItemDefinition* CosmeticItemDef; // 0x318(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x320(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCosmeticUnlockingInfo");
			return ret;
		}

		void ShowUnlockingInfoForCosmeticVariant(UAthenaCosmeticItemDefinition* InCosmeticItemDef, FGameplayTag& InVariantChannel, FGameplayTag& InVariant); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FCB1CB4(relative to base address)
		void ShowUnlockingInfoForCosmetic(UAthenaCosmeticItemDefinition* InCosmeticItemDef); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1C18(relative to base address)
		void ShowUnlockingInfo(UAthenaCosmeticItemDefinition* UnlockItem, UFortItemDefinition* UnlockSource); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1B28(relative to base address)
		void ShowSeasonUnlockingInfo(int32_t SeasonNumber, int32_t TierNumber); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1A68(relative to base address)
		void RequestUpdateAnim(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestOutroAnim(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestIntroAnim(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OutroAnimFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB1618(relative to base address)
		void OnUnlockingInfoSet(bool bShowProgression); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideUnlockingInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB0D34(relative to base address)
	};


	// Class FortniteUI.AthenaCountdownWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x378 - 0x318)
	class UAthenaCountdownWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x358(0x2)
		unsigned char UnknownData01_7[0x1E]; // 0x35A(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCountdownWidgetBase");
			return ret;
		}

		void OnDisplayWarningMessage(FText& FirstLineText, FText& SecondLineText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownUpdate(int32_t TimeRemaining, FText& CountdownUpdateText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownStopped(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownStarted(int32_t TimeRemaining, FText& CountdownIntroText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCountdownUpdate(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF660(relative to base address)
		void HandleCountdownStopped(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF64C(relative to base address)
		void HandleCountdownStarted(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF5CC(relative to base address)
		void HandleCountdownFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCAF5B8(relative to base address)
	};


	// Class FortniteUI.AthenaCurieStatusWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x360 - 0x318)
	class UAthenaCurieStatusWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x48]; // 0x318(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCurieStatusWidget");
			return ret;
		}

		void SetPlayerState(AFortPlayerStateAthena* PlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB17D0(relative to base address)
		void OnPlayerStatePawnChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB1540(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* NewSpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB134C(relative to base address)
		void OnCurieStateRemoved(FGameplayTag& RemovedState); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurieStateDetachedFromSpectator(UObject* InOwner, FCurieContainerHandle ContainerHandle, FGameplayTag& ElementIdentifier); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCB113C(relative to base address)
		void OnCurieStateAttachedToSpectator(UObject* InOwner, FCurieContainerHandle ContainerHandle, FGameplayTag& ElementIdentifier); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCB0FB0(relative to base address)
		void OnCurieStateAdded(FGameplayTag& AddedState); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasState(FGameplayTag CurieState); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCB0B24(relative to base address)
	};


	// Class FortniteUI.AthenaCustomizationPickerSortAndFilterBlade
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x128 (0x400 - 0x2D8)
	class UAthenaCustomizationPickerSortAndFilterBlade : public UCommonUserWidget	
	{
	public:
		UWidget* Widget_Sorts; // 0x2D8(0x8)
		UWidget* Widget_Filters; // 0x2E0(0x8)
		UFortDynamicEntryBox* DynamicEntryBox_SortButtons; // 0x2E8(0x8)
		UFortDynamicEntryBox* DynamicEntryBox_FilterButtons; // 0x2F0(0x8)
		UCommonButtonGroupBase* ButtonGroup_Sorts; // 0x2F8(0x8)
		UCommonButtonGroupBase* ButtonGroup_Filters; // 0x300(0x8)
		unsigned char UnknownData00_7[0xF8]; // 0x308(0xF8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade");
			return ret;
		}

		bool IsBladeOpen(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCB0D48(relative to base address)
		void HandleCloseAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCAF578(relative to base address)
		UCommonButtonBase GetSortButtonAtIndex(int32_t DesiredIndex); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF3CC(relative to base address)
		int32_t GetNumSorts(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF390(relative to base address)
		int32_t GetNumFilters(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF370(relative to base address)
		UCommonButtonBase GetFilterButtonAtIndex(int32_t DesiredIndex); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF288(relative to base address)
		TArray GetAllSortAndFilterButtons(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCAF1B8(relative to base address)
		void CloseBlade(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCAF020(relative to base address)
		void BP_SetSortOrFilterButtonDisplayName(UCommonButtonBase* SortOrFilterButton, FText& DisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnBladeOpen(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnBladeClose(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnArchiveFilteringSet(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HighlightSortOrFilterButton(UCommonButtonBase* SortOrFilterButton, bool bHighlight); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCustomizationScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UAthenaCustomizationScreenBase : public UFortActivatablePanel	
	{
	public:
		UCommonButtonBase* Button_BackToGame; // 0x560(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x568(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCustomizationScreenBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaDiscoverabilityBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class UAthenaDiscoverabilityBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x318(0x48) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x360(0x2)
		unsigned char UnknownData01_6[0x6]; // 0x362(0x6) UNKNOWN PROPERTY
		UFortControllerComponent_MapDiscoverability* AssociatedComponent; // 0x368(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDiscoverabilityBase");
			return ret;
		}

		void OnStompFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStompedByOtherWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeInactive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeActive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CommonVisitedEvent(FGameplayTag& NewTag); // Flags: Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCAF0C4(relative to base address)
		void CommonDiscoveredEvent(FGameplayTag& NewTag); // Flags: Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCAF034(relative to base address)
		void CommonArrivalEvent(FGameplayTag& NewTag); // Flags: Native|Protected|HasOutParms, Memory Exec: 0x7FF74EBBC9D0(relative to base address)
	};


	// Class FortniteUI.AthenaDiscoverabilityDisplay_Extension
	// Inherited from UAthenaCommonPrioritizedWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x368 - 0x360)
	class UAthenaDiscoverabilityDisplay_Extension : public UAthenaCommonPrioritizedWidget	
	{
	public:
		bool bShouldHandleLastPOITag; // 0x360(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x361(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDiscoverabilityDisplay_Extension");
			return ret;
		}

		void OnCommonArrivalEvent(FGameplayTag& NewTag); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaDiscoveredAreaOverlay
	// Inherited from UAthenaDiscoverabilityBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x4E8 - 0x370)
	class UAthenaDiscoveredAreaOverlay : public UAthenaDiscoverabilityBase	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x370(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDiscoveredAreaOverlay");
			return ret;
		}

		void OnNewDiscovery(FText& LocalizedLocationName, TWeakObjectPtr<USoundCue*>& DiscoveredSoundCue, bool bIsNamedLocation, bool bIsDiscovered); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEliminationIndicator
	// Inherited from UAthenaMarkedActorIndicator -> UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5B8 - 0x5B0)
	class UAthenaEliminationIndicator : public UAthenaMarkedActorIndicator	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x5B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEliminationIndicator");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEliminationOverlayBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UAthenaEliminationOverlayBase : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEliminationOverlayBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEventGamesBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UAthenaEventGamesBase : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventGamesBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGamePhaseWidgetBase
	// Inherited from UGamePhaseWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x388 - 0x320)
	class UAthenaGamePhaseWidgetBase : public UGamePhaseWidget	
	{
	public:
		UTextBlock* Text_RemainingTime; // 0x320(0x8)
		UMaterialInterface* StormComingFontMaterial; // 0x328(0x8)
		float StormComingWarningTime; // 0x330(0x4)
		unsigned char UnknownData00_7[0x54]; // 0x334(0x54) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGamePhaseWidgetBase");
			return ret;
		}

		void OnUpdateGamePhaseIcon(EAthenaGamePhaseStep GamePhaseStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCountdownUpdate(int32_t TimeRemaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCAF6E0(relative to base address)
	};


	// Class FortniteUI.AthenaGenericHUDTimerWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x358 - 0x318)
	class UAthenaGenericHUDTimerWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x318(0x10) UNKNOWN PROPERTY
		UTextBlock* TimeText; // 0x328(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x330(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGenericHUDTimerWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGlobalCurrencyWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaGlobalCurrencyWidget : public UCommonUserWidget	
	{
	public:
		UCommonNumericTextBlock* CurrencyTotalText; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2E0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGlobalCurrencyWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaHUDGamePhaseChangingBase
	// Inherited from UGamePhaseWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1D8 (0x4F8 - 0x320)
	class UAthenaHUDGamePhaseChangingBase : public UGamePhaseWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x320(0x40) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x360(0x2)
		unsigned char UnknownData01_6[0x6]; // 0x362(0x6) UNKNOWN PROPERTY
		USoundMix* LaunchingSoundMix; // 0x368(0x8)
		TMap<EAthenaGamePhaseStep, UMaterialInterface*> IconMaterials; // 0x370(0x50)
		FText PlayersText; // 0x3C0(0x10)
		FText DeployingInText; // 0x3D0(0x10)
		EAthenaGamePhaseStep CurrentPhase; // 0x3E0(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x3E1(0x7) UNKNOWN PROPERTY
		FVector2D MessageTranslationTop; // 0x3E8(0x10)
		FVector2D MessageTranslationBottom; // 0x3F8(0x10)
		FText BusStateMessageGetReadyLine1; // 0x408(0x10)
		FText BusStateMessageGetReadyLine2; // 0x418(0x10)
		FText BusStateMessageBusLockedLine1; // 0x428(0x10)
		FText BusStateMessageBusLockedLine2; // 0x438(0x10)
		FText BusStateMessageBusFlyingLine1; // 0x448(0x10)
		FText BusStateMessageBusFlyingLine2; // 0x458(0x10)
		unsigned char UnknownData03_6[0x8]; // 0x468(0x8) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_AlertType; // 0x470(0x8)
		UCommonVisibilitySwitcher* Switcher_BusIconState; // 0x478(0x8)
		UCommonTextBlock* TimeText; // 0x480(0x8)
		UCommonTextBlock* Message; // 0x488(0x8)
		UCommonTextBlock* Text_BusTimer; // 0x490(0x8)
		UCommonTextBlock* Text_BusLine1; // 0x498(0x8)
		UCommonTextBlock* Text_BusLine2; // 0x4A0(0x8)
		UImage* Icon; // 0x4A8(0x8)
		unsigned char UnknownData04_7[0x48]; // 0x4B0(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDGamePhaseChangingBase");
			return ret;
		}

		void UpdateActiveWidgetIndex(EAthenaGamePhaseStep Index); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FCB1DE8(relative to base address)
		void ToggleCompass(bool bHide); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIntroAnimation(EAthenaGamePhaseStep Step); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayGamePhaseAlertSound(EAthenaGamePhaseStep Step); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayCountdownAudio(FText& NewTimeText, EAthenaGamePhaseStep Step); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsRiftSpawning(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsGamePhaseStepNotificationWidgetVisible(EAthenaGamePhaseStep PhaseStepType); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCB0D64(relative to base address)
		UActorComponent GetSpawnOverrideComponent(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7480134BC(relative to base address)
		bool GetShowRankedProgressCvar(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7493E2D58(relative to base address)
		bool DoesMinigamePreventUpdatesAtPhase(char Value); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_UpdateMessaging(EAthenaGamePhaseStep Step, FText& NewMessage, FText& NewTimeText); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7472A3EC0(relative to base address)
		void BP_SetRankedProgress(FString ProgressKey, int32_t RankedTier, int32_t RankedPosition, float RankedPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_SetPlaylistName(FText& PlaylistName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_SetIsRanked(bool bIsRanked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleGamePhaseStepChanged(EAthenaGamePhaseStep Step); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7472A5514(relative to base address)
	};


	// Class FortniteUI.AthenaHUDPlayerActionAlertBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaHUDPlayerActionAlertBase : public UFortHUDElementWidget	
	{
	public:
		FGameplayTag HideStormAlertTag; // 0x318(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x31C(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDPlayerActionAlertBase");
			return ret;
		}

		void RequestNextAlert(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74851BDCC(relative to base address)
		void BP_ShowAlert(EAthenaPlayerActionAlert Alert, FText& DetailText, FRankedProgressReplicatedData& RankedProgress); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnAlertsCleared(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaIndicatorLayerBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x3E8 - 0x318)
	class UAthenaIndicatorLayerBase : public UFortHUDElementWidget	
	{
	public:
		UFortActorCanvas* GeneralIndicators; // 0x318(0x8)
		UFortActorCanvas* NameIndicators; // 0x320(0x8)
		UClass* PlayerIndicatorClass; // 0x328(0x8)
		int32_t PlayerIndicatorPoolSize; // 0x330(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x334(0x4) UNKNOWN PROPERTY
		FUserWidgetPool PlayerIndicatorWidgetPool; // 0x338(0x88)
		UAthenaPlayerViewModel* PlayerVM; // 0x3C0(0x8)
		USlateVectorArtData* TeamIndicatorMesh; // 0x3C8(0x8)
		bool bWasTargeting; // 0x3D0(0x1)
		unsigned char UnknownData01_7[0x17]; // 0x3D1(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaIndicatorLayerBase");
			return ret;
		}

		void OnTargetingChanged(bool bTargeting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetChangedNative(bool bTargeting); // Flags: Final|Native|Protected, Memory Exec: 0x7FF748412C4C(relative to base address)
		void HandleIndicatorModeChanged(bool bIndicatorsEnabled); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FC8CA08(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryEquipButtonBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UAthenaInventoryEquipButtonBase : public UCommonButtonLegacy	
	{
	public:
		UFortMultiSizeItemCard* ItemWidget; // 0x13E0(0x8)
		UWidget* EmptyImage; // 0x13E8(0x8)
		int32_t SlotIndex; // 0x13F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x13F4(0x4) UNKNOWN PROPERTY
		TArray<FVector2D> ButtonSizeBySlotUsage; // 0x13F8(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryEquipButtonBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryItemTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UAthenaInventoryItemTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UAthenaItemIcon* ItemIcon; // 0x13E8(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x13F0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryItemTileButton");
			return ret;
		}

		void OnItemChanged(UFortItem* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortItem GetItemToRepresent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF318(relative to base address)
	};


	// Class FortniteUI.AthenaLeaderboardScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x238 (0x798 - 0x560)
	class UAthenaLeaderboardScreenBase : public UFortActivatablePanel	
	{
	public:
		UFortTabListWidgetBase_Legacy* LeaderboardTabList; // 0x560(0x8)
		UCommonRotator* MatchRotator; // 0x568(0x8)
		UCommonRotator* LeaderboardTypeRotator; // 0x570(0x8)
		UCommonTextBlock* RefreshTimeText; // 0x578(0x8)
		UCommonTextBlock* NoDataMessageText; // 0x580(0x8)
		UCommonBorder* BorderLocalUserFocus; // 0x588(0x8)
		UWidget* Widget_ProfileStats; // 0x590(0x8)
		UFortProfileStatsRow* AthenaStats_Wins; // 0x598(0x8)
		UFortProfileStatsRow* AthenaStats_SecondTierFinishes; // 0x5A0(0x8)
		UFortProfileStatsRow* AthenaStats_ThirdTierFinishes; // 0x5A8(0x8)
		UFortProfileStatsRow* AthenaStats_Eliminations; // 0x5B0(0x8)
		UFortProfileStatsRow* AthenaStats_MatchesPlayer; // 0x5B8(0x8)
		FName LTMPlaylistDefaultName; // 0x5C0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x5C4(0x4) UNKNOWN PROPERTY
		TMap<FName, UFortProfileStatsRow*> ActiveProfileRows; // 0x5C8(0x50)
		unsigned char UnknownData01_6[0x90]; // 0x618(0x90) UNKNOWN PROPERTY
		UDataTable* PlaylistsData; // 0x6A8(0x8)
		TMap<FName, UCommonButtonBase*> ActiveTabButtons; // 0x6B0(0x50)
		TArray<UFortLeaderboardRowProxyInstance*> RowProxies; // 0x700(0x10)
		UFortLeaderboardRowProxyInstance* LocalUserRowProxy; // 0x710(0x8)
		FLeaderboardFilter CurrentLeaderboardFilter; // 0x718(0x18)
		unsigned char UnknownData02_6[0x50]; // 0x730(0x50) UNKNOWN PROPERTY
		FDataTableRowHandle BackAction; // 0x780(0x10)
		unsigned char UnknownData03_7[0x8]; // 0x790(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLeaderboardScreenBase");
			return ret;
		}

		void OnUpdateTabButtonText(UCommonButtonBase* Button, FAthenaPlaylistLeaderboardData& PlaylistTabData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateListHeader(FAthenaPlaylistLeaderboardData& PlaylistTabData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateLeaderboardListUI(bool bWasSuccessful, UFortLeaderboardRowProxyInstance* LocalUserRow, FText& QueryErrorStr); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQueryStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQueryFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaylistChanged(FName NewPlaylistName, ECommonInputType NewInputType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB1554(relative to base address)
		void OnMatchTypeChanged(int32_t MatchTypeIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB1464(relative to base address)
		void OnFriendsFilterChanged(int32_t FriendsFilterIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB12C8(relative to base address)
		void OnActiveLeaderboardTabChanged(int32_t ActiveWidgetIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB0F1C(relative to base address)
		bool CanShowFriendsOnlyLeaderboard(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749859FE0(relative to base address)
	};


	// Class FortniteUI.AthenaLevelBarBase
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3C0 - 0x3C0)
	class UAthenaLevelBarBase : public UFortActorIndicatorWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLevelBarBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLoadoutEntryWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaLoadoutEntryWidget : public UCommonUserWidget	
	{
	public:
		UFortAthenaInventoryLoadout* SelectedLoadout; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLoadoutEntryWidget");
			return ret;
		}

		void SetLoadout(UFortAthenaInventoryLoadout* NewLoadout); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74DC86EF4(relative to base address)
		void OnLoadoutPicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1450(relative to base address)
	};


	// Class FortniteUI.AthenaLoadoutWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UAthenaLoadoutWidget : public UFortActivatablePanel	
	{
	public:
		TArray<UAthenaLoadoutEntryWidget*> EntryWidgets; // 0x560(0x10)
		UClass* EntryWidgetClass; // 0x570(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x578(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLoadoutWidget");
			return ret;
		}

		void OnLoadoutChosen(UFortAthenaInventoryLoadout* SelectedLoadout); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74FCB13CC(relative to base address)
		void AddEntryWidget(UAthenaLoadoutEntryWidget* NewWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLobbyWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x618 - 0x560)
	class UFortLobbyWidget : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x560(0x10) UNKNOWN PROPERTY
		AAthenaSquadPedestalGroup* SquadPedestalGroup; // 0x570(0x8)
		TArray<AFortTeamMemberPedestal*> VisualOrderedPedestals; // 0x578(0x10)
		unsigned char UnknownData01_6[0x50]; // 0x588(0x50) UNKNOWN PROPERTY
		UFortRadialPicker* Radial_EmotePicker; // 0x5D8(0x8)
		unsigned char UnknownData02_6[0x20]; // 0x5E0(0x20) UNKNOWN PROPERTY
		UFortLobbyPlayerPanel* PlayerPanel_PlayerOptions; // 0x600(0x8)
		FDataTableRowHandle EmoteInputAction; // 0x608(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLobbyWidget");
			return ret;
		}

		void OnPlayerPanelHidden(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerClicked(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsAnyFauxModelOpen(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750077A48(relative to base address)
		void HandleEmoteClicked(bool& bPassThrough); // Flags: Native|Protected|HasOutParms, Memory Exec: 0x7FF750076EB4(relative to base address)
		void DynamicHandleLoadingScreenVisibilityChanged(bool IsVisible); // Flags: Final|Native|Protected, Memory Exec: 0x7FF748900B6C(relative to base address)
	};


	// Class FortniteUI.AthenaLobbyBase
	// Inherited from UFortLobbyWidget -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x478 (0xA90 - 0x618)
	class UAthenaLobbyBase : public UFortLobbyWidget	
	{
	public:
		unsigned char UnknownData00_3[0x1C8]; // 0x618(0x1C8) UNKNOWN PROPERTY
		UContentWidget* Content_MatchmakingWidget; // 0x7E0(0x8)
		UEmergencyNoticeBase* Notice_Emergency; // 0x7E8(0x8)
		UContentWidget* Content_MotdTeaserWidget; // 0x7F0(0x8)
		UCommonBorder* LobbyDetails_Default; // 0x7F8(0x8)
		UFortTournamentLobbyPanel* LobbyDetails_Tournament; // 0x800(0x8)
		UFortDivisionLobbyPanel* LobbyDetails_ShowdownDivision; // 0x808(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_LobbyDetailsMode; // 0x810(0x8)
		UCommonButtonBase* Button_GenericLink; // 0x818(0x8)
		UCommonButtonBase* Button_Quests; // 0x820(0x8)
		UCommonButtonBase* Button_ShadowPlayHighlights; // 0x828(0x8)
		UVerticalBox* VerticalBox_LobbyDetails; // 0x830(0x8)
		UVerticalBox* VerticalBox_LobbyDetails_ExtensionHolder; // 0x838(0x8)
		UOverlay* Overlay_DynamicExtensions; // 0x840(0x8)
		UOverlay* Overlay_Discover; // 0x848(0x8)
		TWeakObjectPtr<UClass*> NewEmotePicker; // 0x850(0x20)
		UCatalogMessaging* CatalogMessaging; // 0x870(0x8)
		FDataTableRowHandle SquadFormationInputAction; // 0x878(0x10)
		UClass* SquadFormationClass; // 0x888(0x8)
		UClass* MotdTeaserWidgetClass; // 0x890(0x8)
		UClass* DefaultMatchmakingWidgetClass; // 0x898(0x8)
		UCommonUserWidget* MatchmakingWidget; // 0x8A0(0x8)
		UFortGlobalSeasonResourceWidget* SeasonalResources; // 0x8A8(0x8)
		FVector2D SwipeThreshold; // 0x8B0(0x10)
		unsigned char UnknownData01_6[0x20]; // 0x8C0(0x20) UNKNOWN PROPERTY
		UFortHabaneroLobbyWidget* HabaneroDisplayWidget; // 0x8E0(0x8)
		UCommonActivatableWidget* Discover; // 0x8E8(0x8)
		unsigned char UnknownData02_6[0xD8]; // 0x8F0(0xD8) UNKNOWN PROPERTY
		UFortActivityViewModel* CurrentActivityVM; // 0x9C8(0x8)
		FFortSwipeDetector SwipeDetector; // 0x9D0(0x98)
		unsigned char UnknownData03_7[0x28]; // 0xA68(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLobbyBase");
			return ret;
		}

		void UpdateGenericLinkText(FText& NewText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ShouldShowHomeBarOnActivated(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF749A0090C(relative to base address)
		void SetHomeBarShownOnActivated(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF749FC54EC(relative to base address)
		void OnRankedProgressDisplayUpdated(bool bPlayingRanked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQuestsButtonVisibilityChanged(ESlateVisibility NewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaylistChanged(EFortLobbyType LobbyType, UFortPlaylistAthena* PlaylistData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnNavigateToRightContent(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnNavigateToLeftContent(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingWidgetChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLobbyTypeChanged(EFortLobbyType LobbyType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLobbyDataCleared(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLobbyDataChanged(FFrontendLobbyData LobbyData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigateToMatchmaking(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB0EAC(relative to base address)
		bool NavigateToDiscover(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FCB0E88(relative to base address)
		void NavigateFromRightContent(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB0E50(relative to base address)
		void NavigateFromLeftContent(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCB0E1C(relative to base address)
		bool IsDiscoverFullscreen(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7488B633C(relative to base address)
		bool HasUnseenQuests(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCB0C68(relative to base address)
		void HandleUnseenQuestsChanged(bool bHasUnseenQuests); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleToggleFullscreenMap(bool bVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCB06A0(relative to base address)
		void HandleSwipeGesture(int32_t SwipeDirection); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCB03C0(relative to base address)
		bool HandlePlayerTouchInput(TEnumAsByte<ETouchType> Type, FVector2D& TouchLocation, float Force, FDateTime DeviceTimestamp, uint32_t TouchpadIndex); // Flags: Final|Native|Private|HasOutParms|HasDefaults, Memory Exec: 0x7FF74FCAFFCC(relative to base address)
		void HandlePickerOpenRequest(EFortPickerMode Mode, int32_t InitialOption, bool bIgnoreFirstAccept); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCAFED4(relative to base address)
		void HandleHideLobbySeasonResources(bool bShouldHide); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCAF824(relative to base address)
		void HandleActiveWidgetChanged(UWidget* NewActiveWidget, int32_t WidgetIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCAF4A4(relative to base address)
		bool GetSurvivorTierWidgetAllowed(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF45C(relative to base address)
		TWeakObjectPtr GetMotdTeaserClass(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74976D818(relative to base address)
		bool ExitDiscover(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FCAF154(relative to base address)
		void DisplayStoreUpdated(UStoreToastRequest* StoreUpdatedRequest); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DisplayGlyphQuestUpdated(int32_t NewGlyphs); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaLockerItemInfo
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaLockerItemInfo : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ItemType; // 0x2D8(0x8)
		UCommonTextBlock* Text_ItemRarity; // 0x2E0(0x8)
		UCommonTextBlock* Text_ItemName; // 0x2E8(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerItemInfo");
			return ret;
		}

		void SetItem(UFortItemVM* Item); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1634(relative to base address)
		void OnUpdateAccessRestrictionWarning(bool bShouldShow, FText& WarningText, EAthenaLockerInfoRestrictionWarning WarningType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNoItemSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemSet(UFortItemVM* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaLockerUtils
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaLockerUtils : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerUtils");
			return ret;
		}

		void ShowProgressModal(UUserWidget* ContextWidget, FText Title, FText Description); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB1934(relative to base address)
		bool IsMPLockerEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCB0DF0(relative to base address)
		void HideProgressModal(UUserWidget* ContextWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FCB0C80(relative to base address)
	};


	// Class FortniteUI.AthenaLootStoreScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UAthenaLootStoreScreenBase : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLootStoreScreenBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapLayer
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x28 (0x180 - 0x158)
	class UAthenaMapLayer : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x158(0x18) UNKNOWN PROPERTY
		ULocalPlayer* LocalPlayer; // 0x170(0x8)
		UWidget* QuestContent; // 0x178(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapLayer");
			return ret;
		}

		void SetLocalPlayer(ULocalPlayer* LocalPlayer); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9D8C(relative to base address)
		void FlashPlayerIcon(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD8038(relative to base address)
		void ClearTouches(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD7EB4(relative to base address)
	};


	// Class FortniteUI.AthenaMapLayerContainer
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x568 - 0x528)
	class UAthenaMapLayerContainer : public UCommonActivatablePanelLegacy	
	{
	public:
		FVector2D NormalizedMapWidgetPosition; // 0x528(0x10)
		UAthenaMapLayer* AthenaMapLayer; // 0x538(0x8)
		UAthenaFullScreenMapBrowsingControlsWidget* MapBrowsingControlsPanel; // 0x540(0x8)
		UAthenaInGameMapIconsOverlay* AthenaMapIconsOverlay_Main; // 0x548(0x8)
		UAthenaMapChallengeListView* ListView_NonLocationIconsBelowMap; // 0x550(0x8)
		UCommonTextBlock* Text_CreativeTeleportCountdown; // 0x558(0x8)
		bool bConsumePointerOnTouchInteraction; // 0x560(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x561(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapLayerContainer");
			return ret;
		}

		void OnTeleportToMarkerTimeChanged(float TimeLeftBeforeTeleport); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD96AC(relative to base address)
	};


	// Class FortniteUI.AthenaMapScreenContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x420 (0x810 - 0x3F0)
	class UAthenaMapScreenContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x180]; // 0x3F0(0x180) UNKNOWN PROPERTY
		TArray<TWeakObjectPtr> DefaultTabs; // 0x570(0x10)
		FGameplayTagContainer HideWithMapTags; // 0x580(0x20)
		TArray<FString> DisabledTabs; // 0x5A0(0x10)
		bool bHideTabs; // 0x5B0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x5B1(0x7) UNKNOWN PROPERTY
		FDataTableRowHandle BackInputAction; // 0x5B8(0x10)
		FDataTableRowHandle NextTabInputAction; // 0x5C8(0x10)
		FDataTableRowHandle PreviousTabInputAction; // 0x5D8(0x10)
		UCommonVisibilitySwitcher* VisibilitySwitcher_Content; // 0x5E8(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x5F0(0x8)
		UPanelWidget* Panel_PlayerProfile; // 0x5F8(0x8)
		UFortSocialAvatarIcon* SocialAvatarIcon; // 0x600(0x8)
		UFortAutoRunNotificationWidget* Widget_AutoRunNotification; // 0x608(0x8)
		UPanelWidget* Panel_TabButtonsContainer; // 0x610(0x8)
		UClass* TabButtonClass; // 0x618(0x8)
		UInputComponent* MapPanelInputComp; // 0x620(0x8)
		UCommonButtonGroupBase* VisibleTabButtonGroup; // 0x628(0x8)
		TMap<FName, UCommonButtonBase*> AllTabIDsToTabButtons; // 0x630(0x50)
		TMap<FName, UCommonButtonBase*> VisibleTabIDsToTabButtons; // 0x680(0x50)
		unsigned char UnknownData02_7[0x140]; // 0x6D0(0x140) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapScreenContainer");
			return ret;
		}

		bool ShouldShowActionBarForCurrentTab(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCDA0EC(relative to base address)
		bool ShouldAlwaysShowXpBar(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD9FA4(relative to base address)
		void OnUpdateActionBar(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDamageReceived(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsQuestsTabActive(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD924C(relative to base address)
		UWidget GetActiveWidget(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD8168(relative to base address)
		void BP_OnShowTabsSet(bool bShowTabs); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapScreenContainerTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UAthenaMapScreenContainerTabButton : public UCommonButtonLegacy	
	{
	public:
		UCommonLazyImage* LazyImage_Icon; // 0x13E0(0x8)
		UCommonTextBlock* Text_Title; // 0x13E8(0x8)
		FVector2D ImageSize_Mobile; // 0x13F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapScreenContainerTabButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapScreenTabBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x458 - 0x3F0)
	class UAthenaMapScreenTabBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x3F0(0x28) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x418(0x40)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapScreenTabBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMarkerConfirmationWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UAthenaMarkerConfirmationWidget : public UUserWidget	
	{
	public:
		UPanelWidget* ConfirmationIconParent; // 0x2B0(0x8)
		UMaterialInterface* ConfirmationIconAsset; // 0x2B8(0x8)
		TArray<UImage*> ConfirmationIconPool; // 0x2C0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMarkerConfirmationWidget");
			return ret;
		}

		void ShowMarkerConfirmations(FFortWorldMarkerData& InMarkerData); // Flags: Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FCDA16C(relative to base address)
	};


	// Class FortniteUI.AthenaMarkerDetails
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x4B0 - 0x318)
	class UAthenaMarkerDetails : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		UAthenaMarkerPointer* MarkerPointer; // 0x490(0x8)
		UFortMarkerDetailsTable* DetailsTable; // 0x498(0x8)
		UFortWorldMarker* FortWorldMarker; // 0x4A0(0x8)
		UVerticalBox* VerticalBox_ExtensionWidgetHolder; // 0x4A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMarkerDetails");
			return ret;
		}

		void UpdateMarkerData(FFortWorldMarkerData& MarkerData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMarkerConfirmations(FFortWorldMarkerData& MarkerData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMarkerAction(EFortMarkerActions MarkerAction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMarkerDetailsExtension
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UAthenaMarkerDetailsExtension : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMarkerDetailsExtension");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMarkerPointer
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x28 (0x180 - 0x158)
	class UAthenaMarkerPointer : public UWidget	
	{
	public:
		UMaterialInterface* LineMeshMaterial; // 0x158(0x8)
		FVector2D TargetScreenPosition; // 0x160(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x170(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMarkerPointer");
			return ret;
		}

		void SetTargetScreenPosition(FVector2D InTargetScreenPosition); // Flags: Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FCD9E8C(relative to base address)
		void SetLineMeshMaterial(UMaterialInterface* Material); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9CEC(relative to base address)
	};


	// Class FortniteUI.AthenaMatchmakingViolator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UAthenaMatchmakingViolator : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_MainText; // 0x2D8(0x8)
		UCommonTextBlock* Text_SubText; // 0x2E0(0x8)
		FName FirstTimeUser_DialogName; // 0x2E8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2EC(0x4) UNKNOWN PROPERTY
		FText FirstTimeUser_MainText; // 0x2F0(0x10)
		FText FirstTimeUser_SubText; // 0x300(0x10)
		unsigned char UnknownData01_7[0x20]; // 0x310(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMatchmakingViolator");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMatchReadyDesktopPopup
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UAthenaMatchReadyDesktopPopup : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x2B0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMatchReadyDesktopPopup");
			return ret;
		}

		void UserDismissedDialog(bool bBringToFront); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCDA5B8(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerHitPointBarBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1B0 (0x460 - 0x2B0)
	class UAthenaPlayerHitPointBarBase : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x188]; // 0x2B0(0x188) UNKNOWN PROPERTY
		UAthenaPlayerViewModel* PlayerVM; // 0x438(0x8)
		EHealthBarType BarType; // 0x440(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x441(0x3) UNKNOWN PROPERTY
		float ValueCurrent; // 0x444(0x4)
		float BeginDeltaInterpDelayMin; // 0x448(0x4)
		float BeginDeltaInterpDelayMax; // 0x44C(0x4)
		float ValueLast; // 0x450(0x4)
		float ValueMax; // 0x454(0x4)
		float LastToCurrentUpdateRate; // 0x458(0x4)
		bool bShouldDisplayShieldBar; // 0x45C(0x1)
		bool bCanAddExtensionWidgets; // 0x45D(0x1)
		EUIExtensionSlot ExtensionSlotToUse; // 0x45E(0x1)
		unsigned char UnknownData02_7[0x1]; // 0x45F(0x1) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerHitPointBarBase");
			return ret;
		}

		void SetProgressBarFillColors(FLinearColor ColorA, FLinearColor ColorB); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMaxValueChanged(float Value); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeltaChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDBNOStateChanged(bool IsDBNO); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsShieldSegmented(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD9270(relative to base address)
		float GetLastValuePercentage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD81E8(relative to base address)
		float GetCurrentValuePercentage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD8194(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerHitPointInfo
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaPlayerHitPointInfo : public UFortHUDElementWidget	
	{
	public:
		bool bUseLargeFormat; // 0x318(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x319(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerHitPointInfo");
			return ret;
		}

		void HandleTetherChanged(bool bTethered); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCD9120(relative to base address)
		void HandleExitVehicle(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEnterVehicle(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerIndicatorBase
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1E8 (0x5A8 - 0x3C0)
	class UAthenaPlayerIndicatorBase : public UFortActorIndicatorWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x3C0(0x178) UNKNOWN PROPERTY
		FVector2D MinMaxSizeDistance; // 0x538(0x10)
		FVector2D MinMaxScale; // 0x548(0x10)
		float FarAwayScaleMultiplier; // 0x558(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x55C(0x4) UNKNOWN PROPERTY
		FVector RelativeLocationWhenDBNO; // 0x560(0x18)
		FVector RelativeLocationWhenNotDBNO; // 0x578(0x18)
		FVector2D UnscaledScreenSpaceRelativeOffset; // 0x590(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerIndicatorBase");
			return ret;
		}

		void OnExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCurrentPawnChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74876D154(relative to base address)
		void BP_UpdateElementVisibility(bool bDisplayWorldName, bool bDisplayVoiceIndicator); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleTeamMemberStateChanged(ETeamMemberState TeamMemberState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleTalkingStateChanged(bool bIsTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandlePlayerStateSet(AFortPlayerStateAthena* PlayerStateAthena); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandlePlayerNameReplicated(FString PlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandlePinColorChanged(FLinearColor& PinColor); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleDBNOStateChanged(bool bIsDBNO); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleBeingRevivedStateChanged(bool bIsBeingRevived, float MaxReviveTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerIndicatorExtensionInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaPlayerIndicatorExtensionInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerIndicatorExtensionInterface");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPlayerInfoBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x238 (0x550 - 0x318)
	class UAthenaPlayerInfoBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		TWeakObjectPtr<AFortPlayerStateAthena*> WeakPSA; // 0x490(0x8)
		bool bIsLocalPlayer; // 0x498(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x499(0x7) UNKNOWN PROPERTY
		UOverlay* Overlay_TeamMemberInfo; // 0x4A0(0x8)
		UImage* Image_HealthBar; // 0x4A8(0x8)
		UImage* Image_ShieldBar; // 0x4B0(0x8)
		UContentWidget* Content_StormCN; // 0x4B8(0x8)
		UImage* Image_StormCN; // 0x4C0(0x8)
		UImage* Image_DBNOBar; // 0x4C8(0x8)
		UAthenaPlayerNameInfoBase* AthenaPlayerNameInfo; // 0x4D0(0x8)
		UAthenaTeamMemberDBNOState* DBNOStateWidget; // 0x4D8(0x8)
		UImage* Image_DeadIndicator; // 0x4E0(0x8)
		UImage* Image_DisconnectedIndicator; // 0x4E8(0x8)
		UImage* Image_ResurrectChip; // 0x4F0(0x8)
		UImage* Image_ResurrectionChipExpirationBar; // 0x4F8(0x8)
		UCommonWidgetSwitcherLegacy* WidgetSwitcher_Avatar; // 0x500(0x8)
		UFortSocialAvatarIcon* Icon_AvatarSocial; // 0x508(0x8)
		UImage* Image_AvatarOverride; // 0x510(0x8)
		UOverlay* Overlay_HealthAndShieldInfo; // 0x518(0x8)
		unsigned char UnknownData02_7[0x30]; // 0x520(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerInfoBase");
			return ret;
		}

		void SetPlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9E0C(relative to base address)
		void HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCD8CCC(relative to base address)
		void HandlePlayerMutatorDataChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8BAC(relative to base address)
		void BP_HandleTalkingVisualDisplayChanged(bool bTalkingVisualsActive); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleTalkingStateChanged(bool bIsTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleSeasonLevelUIDisplayChanged(int32_t Level); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleResurrectionStateChanged(FFortResurrectionUIData& ResurrectionStateData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePlayerNameReplicated(FString PlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleMutedStateChanged(bool bIsMuted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleIsBeingRevivedStateChanged(bool bIsTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleGameModeIconChanged(UTexture2D* GameModeIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleDBNOStateChanged(bool bDBNO); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerKillsBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaPlayerKillsBase : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* KillsText; // 0x318(0x8)
		UObject* KillsSource; // 0x320(0x8)
		bool bCustomKillSource; // 0x328(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x329(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerKillsBase");
			return ret;
		}

		void SetKillsSourcePlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9C6C(relative to base address)
		void SetKillsSourcePlayerController(AFortPlayerControllerAthena* InPlayerController); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9C6C(relative to base address)
		void HandlePlayerViewTargetChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8C90(relative to base address)
	};


	// Class FortniteUI.FortAccountWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortAccountWidgetBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x38]; // 0x2D8(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAccountWidgetBase");
			return ret;
		}

		void OnAccountInfoChanged(FFortPublicAccountInfo& Result); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo); // Flags: Native|Protected, Memory Exec: 0x7FF750076C2C(relative to base address)
		FAthenaSeasonBannerLevel GetSeasonBannerInfo(int32_t Level); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076A5C(relative to base address)
		bool GetNextSeasonReward(FFortItemQuantityPair& Reward, int32_t& RewardLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076934(relative to base address)
		bool GetNextSeasonChaseReward(FFortItemQuantityPair& Reward, int32_t& RewardLevel, int32_t StartingLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076744(relative to base address)
		FText GetCurrentSeasonNumberAsText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076140(relative to base address)
		FText GetCurrentChapterAsText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500760AC(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerLevelDisplay
	// Inherited from UFortAccountWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x320 - 0x310)
	class UAthenaPlayerLevelDisplay : public UFortAccountWidgetBase	
	{
	public:
		UCommonTextBlock* Text_Level; // 0x310(0x8)
		UAthenaSeasonItemRewardIcon* RewardIcon; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerLevelDisplay");
			return ret;
		}

		void UpdateBPStatus(EBPStatus Status); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateXpBar(float Progress, bool bIsMaxLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateRewardIcon(UFortItem* RewardItem, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bHasAdditionalStylesToDisplay, int32_t RewardLevel, bool bRequiresBattlePass); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayersLeftBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaPlayersLeftBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x318(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayersLeftBase");
			return ret;
		}

		void UpdatePlayersLeft(); // Flags: Native|Public, Memory Exec: 0x7FF7476407DC(relative to base address)
		void SetPlayersLeftText(FText& PlayersText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetHumansLeftText(FText& HumansText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBotsLeftText(FText& BotsText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerTeamKillsBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaPlayerTeamKillsBase : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* KillsText; // 0x318(0x8)
		UAthenaPlayerViewModel* PlayerVM; // 0x320(0x8)
		AFortPlayerStateAthena* SourcePlayerState; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerTeamKillsBase");
			return ret;
		}

		void HandlePlayerViewTargetChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8CA4(relative to base address)
	};


	// Class FortniteUI.AthenaPlayerVitalityBarBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaPlayerVitalityBarBase : public UUserWidget	
	{
	public:
		UAthenaPlayerViewModel* PlayerVM; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerVitalityBarBase");
			return ret;
		}

		void SetDataSource(UAthenaPlayerViewModel* PlayerViewModel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74EA4CBC8(relative to base address)
	};


	// Class FortniteUI.AthenaQuestActorIndicator
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3D8 - 0x3C0)
	class UAthenaQuestActorIndicator : public UFortActorIndicatorWidget	
	{
	public:
		UImage* Image_QuestActorBrush; // 0x3C0(0x8)
		UFortQuestIconComponent* QuestIconComponent; // 0x3C8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuestActorIndicator");
			return ret;
		}
	};


	// Class FortniteUI.AthenaQuickbarEditorBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UAthenaQuickbarEditorBase : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UAthenaInventoryPanel*> ParentInventoryPanel; // 0x2D8(0x8)
		int32_t NumQuickBarSlots; // 0x2E0(0x4)
		int32_t FirstQuickBarSlotIndex; // 0x2E4(0x4)
		bool bIsBackwards; // 0x2E8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E9(0x7) UNKNOWN PROPERTY
		UCommonButtonGroupBase* EquipButtonGroup; // 0x2F0(0x8)
		bool bCheckVisibilityBasedOffInventoryCapacity; // 0x2F8(0x1)
		EFortQuickBars QuickbarIndex; // 0x2F9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x2FA(0x6) UNKNOWN PROPERTY
		UClass* QuickBarSlotButtonClass; // 0x300(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x308(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuickbarEditorBase");
			return ret;
		}

		void SelectPreviousQuickBarSlot(bool bSetFocus); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9BC4(relative to base address)
		void SelectNextQuickBarSlot(bool bSetFocus); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9B1C(relative to base address)
		void OnQuickBarSlotButtonCreated(UAthenaQuickBarSlotButtonBase* QuickBarSlotButton); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget GetFirstEquipSlotButton(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD81C4(relative to base address)
		void ChangeQuickbarOrder(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRebootCardIndicator
	// Inherited from UAthenaMarkedActorIndicator -> UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x5E0 - 0x5B0)
	class UAthenaRebootCardIndicator : public UAthenaMarkedActorIndicator	
	{
	public:
		UCommonTextBlock* Text_PlayerName; // 0x5B0(0x8)
		UImage* Image_PlayerMarker; // 0x5B8(0x8)
		UTextBlock* TimeText; // 0x5C0(0x8)
		UWidgetAnimation* UpdateTime; // 0x5C8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x5D0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRebootCardIndicator");
			return ret;
		}

		void HandleDisplayForSelf(bool bSelf); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRebootChipDirective
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaRebootChipDirective : public UFortHUDElementWidget	
	{
	public:
		UAthenaPlayerViewModel* PlayerVM; // 0x318(0x8)
		TArray<AFortPlayerStateAthena*> RebootableAllies; // 0x320(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x330(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRebootChipDirective");
			return ret;
		}

		void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74EA4B7CC(relative to base address)
	};


	// Class FortniteUI.AthenaRebootVanIndicator
	// Inherited from UAthenaMarkedActorIndicator -> UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5C0 - 0x5B0)
	class UAthenaRebootVanIndicator : public UAthenaMarkedActorIndicator	
	{
	public:
		int32_t SpawnMachineIndex; // 0x5B0(0x4)
		ESpawnMachineState SpawnMachineState; // 0x5B4(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x5B5(0x3) UNKNOWN PROPERTY
		float SpawnMachineCooldownStartTime; // 0x5B8(0x4)
		float SpawnMachineCooldownEndTime; // 0x5BC(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRebootVanIndicator");
			return ret;
		}

		void OnSpawnMachineStateChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRespawnBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UAthenaRespawnBase : public UFortHUDElementWidget	
	{
	public:
		ERespawnUIState RespawnState; // 0x318(0x1)
		unsigned char UnknownData00_7[0x2F]; // 0x319(0x2F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRespawnBase");
			return ret;
		}

		void UpdateAllUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCDA210(relative to base address)
		void OnUpdateRespawnState(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateLives(int32_t Lives); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaScorePopWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UAthenaScorePopWidgetBase : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaScorePopWidgetBase");
			return ret;
		}

		void OnNewScoreEarned(int32_t NewScoreValue, FText& NewScoreTypeText, int32_t BigScoreThreshold); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleNewScoreEarned(int32_t NewPoints, EAthenaScoringEvent ScoreType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8960(relative to base address)
	};


	// Class FortniteUI.AthenaScrollBox
	// Inherited from UScrollBox -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0xB60 - 0xB38)
	class UAthenaScrollBox : public UScrollBox	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0xB38(0x20) UNKNOWN PROPERTY
		bool bEnableFixedPageOffset; // 0xB58(0x1)
		bool bEnableClickThrough; // 0xB59(0x1)
		unsigned char UnknownData01_7[0x6]; // 0xB5A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaScrollBox");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSeasonStatusWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaSeasonStatusWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSeasonStatusWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSkewedTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UAthenaSkewedTabButton : public UCommonButtonLegacy	
	{
	public:
		UCommonLazyImage* LazyImage_Icon; // 0x13E0(0x8)
		UCommonTextBlock* Text_Title; // 0x13E8(0x8)
		UWidget* Widget_Bang; // 0x13F0(0x8)
		FVector2D ImageSize_Mobile; // 0x13F8(0x10)
		bool bUseMobileSize; // 0x1408(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x1409(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSkewedTabButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSkydivingInformation
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaSkydivingInformation : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x318(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSkydivingInformation");
			return ret;
		}

		void OnStartSkydive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewVerticalSpeed(float NewVerticalSpeed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewRating(float NewRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewNormalizedPlayerAltitude(float NormalizedPlayerAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewNormalizedOpeningAltitude(float NormalizedOpeningAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewNormalizedGroundAltitude(float NormalizedGroundAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewHorizontalSpeed(float NewHorizontalSpeed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewGroundAltitude(float NewGroundAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewDuration(float NewDuration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewCurrentAltitude(float NewCurrentAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewAltitude(float NewAltitude); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitSkydive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnterGlider(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSocialScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UAthenaSocialScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		UCommonButtonBase* Button_ViewCareer; // 0x528(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSocialScreen");
			return ret;
		}

		void ShowCareerScreen(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FCDA158(relative to base address)
	};


	// Class FortniteUI.AthenaSquadIndicator
	// Inherited from UAthenaMarkedActorIndicator -> UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x748 - 0x5B0)
	class UAthenaSquadIndicator : public UAthenaMarkedActorIndicator	
	{
	public:
		unsigned char UnknownData00_3[0x4]; // 0x5B0(0x4) UNKNOWN PROPERTY
		float IndicatorWorldOffsetProperty; // 0x5B4(0x4)
		float IndicatorItemOffset; // 0x5B8(0x4)
		float IndicatorSpecialServerOffset; // 0x5BC(0x4)
		FVector2D SmallIndicatorScale; // 0x5C0(0x10)
		float WorldOffsetInterpValue; // 0x5D0(0x4)
		FName MIDParam_LocationColor; // 0x5D4(0x4)
		FName MIDParam_ItemIcon; // 0x5D8(0x4)
		FName MIDParam_ItemRarityColor; // 0x5DC(0x4)
		FName MIDParam_SquadCommsPingIcon; // 0x5E0(0x4)
		FName MIDParam_NPCCommandPingIconCrop; // 0x5E4(0x4)
		UTexture2D* LoadingPlaceholder; // 0x5E8(0x8)
		FMarkerLargeIndicatorType LocationMarker; // 0x5F0(0x18)
		FMarkerLargeIndicatorType ItemMarker; // 0x608(0x18)
		FMarkerLargeIndicatorType DangerMarker; // 0x620(0x18)
		FMarkerLargeIndicatorType SpecialLocalMarker; // 0x638(0x18)
		FMarkerLargeIndicatorType SpecialServerMarker; // 0x650(0x18)
		FMarkerLargeIndicatorType SquadCommsMarker; // 0x668(0x18)
		UMaterialInterface* DefaultIconMaterial; // 0x680(0x8)
		UMaterialInterface* SquadCommsPingMaterial; // 0x688(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x690(0x28) UNKNOWN PROPERTY
		UImage* Image_SmallIndicator; // 0x6B8(0x8)
		UImage* Image_LocationFlare; // 0x6C0(0x8)
		UImage* Image_LargeIndicator; // 0x6C8(0x8)
		UWidgetAnimation* Anim_LocationPlaced; // 0x6D0(0x8)
		UWidgetAnimation* Anim_DangerPlaced; // 0x6D8(0x8)
		UWidgetAnimation* Anim_ItemPlaced; // 0x6E0(0x8)
		UWidgetAnimation* Anim_Hovered; // 0x6E8(0x8)
		UImage* Image_TrajectoryLargeIndicator; // 0x6F0(0x8)
		UImage* Image_TrajectorySmallIndicator; // 0x6F8(0x8)
		UAthenaMarkerConfirmationWidget* MarkerConfirmationWidget; // 0x700(0x8)
		unsigned char UnknownData02_7[0x40]; // 0x708(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSquadIndicator");
			return ret;
		}

		void OnItemIconSet(UTexture2D* NewIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSquadListBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x3A0 - 0x318)
	class UAthenaSquadListBase : public UFortHUDElementWidget	
	{
	public:
		ESlateVisibility LocalPlayerVisibility; // 0x318(0x1)
		unsigned char UnknownData00_6[0xF]; // 0x319(0xF) UNKNOWN PROPERTY
		UAthenaPlayerInfoBase* LocalPlayerInfo; // 0x328(0x8)
		UDynamicEntryBox* EntryBox_SquadList; // 0x330(0x8)
		UAthenaPlayerViewModel* CachedPlayerVM; // 0x338(0x8)
		unsigned char UnknownData01_7[0x60]; // 0x340(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSquadListBase");
			return ret;
		}

		void UpdateSquadFromMinigameOptionChange(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCDA578(relative to base address)
		void UpdateIsTeamMiniGameOnMinigameVolumeChanged(AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCDA2AC(relative to base address)
		void OnExtensionWidgetRemoved(UUserWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot SlotType, UUserWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSquadMemberDisconnected(AFortPlayerStateAthena* Player); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePlayerUniqueIdReplicated(FUniqueNetIdRepl& UniqueID); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FCD8BC0(relative to base address)
		void HandlePlayerExitVolume(APlayerState* Client, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCD8AE8(relative to base address)
		void HandlePlayerEnterVolume(APlayerState* Client, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCD8A24(relative to base address)
		void HandleGameMemberChanged(char InSquadId, char InTeamIndex, AFortPlayerStateAthena* ChangedPS); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FCD8738(relative to base address)
	};


	// Class FortniteUI.AthenaStatsScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1C0 (0x720 - 0x560)
	class UAthenaStatsScreenBase : public UFortActivatablePanel	
	{
	public:
		UCommonTabListWidgetBase* StatsTabList; // 0x560(0x8)
		UFortProfileStatsMainTile* WinsTile; // 0x568(0x8)
		UFortProfileStatsMainTile* SecondTierTile; // 0x570(0x8)
		UFortProfileStatsMainTile* ThirdTierTile; // 0x578(0x8)
		UFortProfileStatsRow* KillsRow; // 0x580(0x8)
		UFortProfileStatsRow* MatchesPlayedRow; // 0x588(0x8)
		UCommonTextBlock* LastUpdatedTime; // 0x590(0x8)
		UCommonTextBlock* PlayerName; // 0x598(0x8)
		UWidget* SeasonContainer; // 0x5A0(0x8)
		UWidget* AccountContainer; // 0x5A8(0x8)
		UWidget* MainStatsContainer; // 0x5B0(0x8)
		UCommonButtonBase* PlatformButton; // 0x5B8(0x8)
		UImage* Image_PlatformIcon; // 0x5C0(0x8)
		UCommonTextBlock* LTM_Disclaimer; // 0x5C8(0x8)
		UCommonButtonBase* Button_ChangeFlag; // 0x5D0(0x8)
		UFortFlagImage* Image_YourFlag; // 0x5D8(0x8)
		UFortFlagImage* Image_OtherUserFlag; // 0x5E0(0x8)
		UWidgetSwitcher* Switcher_FlagDisplay; // 0x5E8(0x8)
		bool bWasLastQuerySuccessful; // 0x5F0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x5F1(0x7) UNKNOWN PROPERTY
		UDataTable* PlaylistsData; // 0x5F8(0x8)
		FName LTMPlaylistDefaultName; // 0x600(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x604(0x4) UNKNOWN PROPERTY
		UClass* FortFlagSelectionModalClass; // 0x608(0x8)
		FText PlatformButtonDisplayText; // 0x610(0x10)
		unsigned char UnknownData02_6[0xD0]; // 0x620(0xD0) UNKNOWN PROPERTY
		USocialUser* QueriedSocialUser; // 0x6F0(0x8)
		unsigned char UnknownData03_6[0x10]; // 0x6F8(0x10) UNKNOWN PROPERTY
		FDataTableRowHandle BackAction; // 0x708(0x10)
		unsigned char UnknownData04_7[0x8]; // 0x718(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStatsScreenBase");
			return ret;
		}

		void SetPlatformButtonText(FText& PlatformButtonText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabSelected(FName TabName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD962C(relative to base address)
		void OnQueryStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQueryFinished(bool bWasSuccessful, bool bHasStatsToDisplay); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DisplayQueriedUserPlatformProfile(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD8024(relative to base address)
	};


	// Class FortniteUI.AthenaStormSurgeWarningBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x378 - 0x318)
	class UAthenaStormSurgeWarningBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x358(0x2)
		unsigned char UnknownData01_7[0x1E]; // 0x35A(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStormSurgeWarningBase");
			return ret;
		}

		void OnStopDisplaying(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartDisplaying(FText& TitleText, FText& SubTitleText, bool bDisplaySubtitle, bool bPlayDamageActiveSound); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaStormSurgeWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x350 - 0x318)
	class UAthenaStormSurgeWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x38]; // 0x318(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStormSurgeWidgetBase");
			return ret;
		}

		void UpdateUI(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7490A913C(relative to base address)
		void OnUpdateThresholdDisplay(FText& ThresholdText, EStormSurgeThresholdType ThresholdType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStopDisplaying(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartDisplaying(FText& TitleText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaTeamAliveCountBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaTeamAliveCountBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x318(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamAliveCountBase");
			return ret;
		}

		void SetTeamSlotData(int32_t TeamIdx, FAthenaTeamCountSlotData& TeamSlotData); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaTeamScoreWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaTeamScoreWidgetBase : public UFortHUDElementWidget	
	{
	public:
		AFortPlayerStateAthena* CurrPlayerState; // 0x318(0x8)
		int32_t GoalScore; // 0x320(0x4)
		int32_t PreviousScore; // 0x324(0x4)
		int32_t PreviousScorePlacement; // 0x328(0x4)
		int32_t PreviousDeltaScore; // 0x32C(0x4)
		bool bPreviousIsWinner; // 0x330(0x1)
		bool bPreviousHasScore; // 0x331(0x1)
		unsigned char UnknownData00_7[0xE]; // 0x332(0xE) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamScoreWidgetBase");
			return ret;
		}

		void OnScoreChanged(int32_t Score); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlacementChanged(int32_t Placement); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardChanged(int32_t ScoreDelta, bool bIsWinner, bool bHasScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpdate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD91A0(relative to base address)
		void HandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD9020(relative to base address)
		void HandleScoreChanged(int32_t Score); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8DC8(relative to base address)
	};


	// Class FortniteUI.AthenaTimeWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x3B8 - 0x318)
	class UAthenaTimeWidgetBase : public UFortHUDElementWidget	
	{
	public:
		FTimerHandle UpdateTimerHandle; // 0x318(0x8)
		FText CachedDisplayText; // 0x320(0x10)
		FName CachedDisplayTextStyle; // 0x330(0x4)
		bool bIsDisplaying; // 0x334(0x1)
		unsigned char UnknownData00_7[0x83]; // 0x335(0x83) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTimeWidgetBase");
			return ret;
		}

		bool UseLegacyTimerInCreative(); // Flags: Final|Native|Static|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCDA5A0(relative to base address)
		void UpdateTimeText(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCDA58C(relative to base address)
		void UpdateDisplay(FText& DisplayText, FName& DisplayTextStyle); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTimerWidgetActorUpdated(AActor* TimerWidgetActor); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD972C(relative to base address)
		void OnStopTimeDisplay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartTimeDisplay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameStarted(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74E94B630(relative to base address)
		void OnMinigameEnded(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74E94BA1C(relative to base address)
		bool IsTextStyleValid(FName& DisplayTextStyle); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FCD92E4(relative to base address)
		void ClientEnteredVolume(APlayerState* PlayerState, AFortVolume* FortVolume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD7EC8(relative to base address)
	};


	// Class FortniteUI.AthenaTravelLogFormatting
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaTravelLogFormatting : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTravelLogFormatting");
			return ret;
		}

		bool ShouldDisplayText(FAthenaTravelLogEntry& Entry); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCDA014(relative to base address)
		bool IsTravelLogTextDisplayEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCD9384(relative to base address)
		FText FormatTravelLogEntry(UObject* WorldContextObject, FAthenaTravelLogEntry& Entry); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCD804C(relative to base address)
	};


	// Class FortniteUI.AthenaTrickFeedBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaTrickFeedBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x318(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTrickFeedBase");
			return ret;
		}

		void UpdateTrickStats(FText& StatsText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateScore(UFortVehicleTrickSet* TrickSet, int32_t TotalScore); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMultiplier(int32_t Multiplier); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TrickSequenceStarted(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TrickSequenceFailed(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TrickSequenceComplete(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TrickSequenceCanceled(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestNextSequence(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FCD9B08(relative to base address)
		void AddTrick(FText& TrickName); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaViewStreamingReplayModalBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UAthenaViewStreamingReplayModalBase : public UFortActivatablePanel	
	{
	public:
		UEditableText* EditableText_SessionSearch; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaViewStreamingReplayModalBase");
			return ret;
		}

		void PlayStreamingDSSReplay(FString GameSessionId); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FCD9A78(relative to base address)
		bool IsValidGameSessionId(FString GameSessionId); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD93A8(relative to base address)
	};


	// Class FortniteUI.AthenaVisitedAreaDisplay
	// Inherited from UAthenaDiscoverabilityBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x188 (0x4F8 - 0x370)
	class UAthenaVisitedAreaDisplay : public UAthenaDiscoverabilityBase	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x370(0x178) UNKNOWN PROPERTY
		UCommonTextBlock* CommonTextBlock_AvailableChallenges; // 0x4E8(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x4F0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaVisitedAreaDisplay");
			return ret;
		}

		void OnNewVisited(FText& LocalizedLocationName, TWeakObjectPtr<USoundCue*>& DiscoveredSoundCue, bool bIsNamedLocation, bool bIsDiscovered); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleNewContextualObjectives(TArray<UFortQuestItem*>& ContextualQuests); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FCD88C4(relative to base address)
		void HandleContextualObjectivesInvalidated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD83CC(relative to base address)
		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaWatchers
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaWatchers : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* Text_Watchers; // 0x318(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x320(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWatchers");
			return ret;
		}

		void SpectatorsEnded(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SpectatorsBegan(bool bBigGroup); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SpectatorsAdded(bool bBigGroup); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SpectatorRemoved(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SpectatorCountChanged_BP(int32_t NewCount); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSpectatorCountChanged(int32_t NewSpectatorCount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD90A0(relative to base address)
	};


	// Class FortniteUI.AthenaWidgetLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaWidgetLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWidgetLibrary");
			return ret;
		}

		bool IsPlayingReplay(UObject* WorldContextObject); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCD91B4(relative to base address)
		APlayerState GetRelevantPlayerState(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FCD8218(relative to base address)
	};


	// Class FortniteUI.AthenaWinConditionMsgBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x3F0 - 0x318)
	class UAthenaWinConditionMsgBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0xD0]; // 0x318(0xD0) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizedWidgetData; // 0x3E8(0x2)
		unsigned char UnknownData01_7[0x6]; // 0x3EA(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWinConditionMsgBase");
			return ret;
		}

		void OnShowHUDMessage(FHUDMessageData MessageData); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD94F4(relative to base address)
		void HandleSpatialLoadingStateChanged(ESpatialLoadingState NewState, AFortVolume* Volume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8E44(relative to base address)
		void HandlePlaylistInitialized(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8CB8(relative to base address)
		void HandleMinigameEnded(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD88B0(relative to base address)
		void HandleGameStateInitialized(AFortGameState* GameState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD8830(relative to base address)
		void HandleExitVolume(APlayerState* ClientState, AFortVolume* Volume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD858C(relative to base address)
		void HandleEnteredVolume(APlayerState* ClientState, AFortVolume* Volume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD83E0(relative to base address)
		FSlateColor GetTextFillColor(FRichTextStyleRow& Row); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD8320(relative to base address)
		void BP_OnShowHUDMessage(FHUDMessageData MessageData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnMinigameEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnGameStateInitialized(AFortGameState* GameState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BindVolumeManagerEvents(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD7EA0(relative to base address)
	};


	// Class FortniteUI.AthenaWinnerDialogCN
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaWinnerDialogCN : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWinnerDialogCN");
			return ret;
		}

		void OnWinnerLeavingGame(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FCD9A64(relative to base address)
		void OnWinConditionWasMet(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FCD9A50(relative to base address)
		void OnOpenMessage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaWorldUILabelWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaWorldUILabelWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		TArray<float> SqrDistanceThresholds; // 0x320(0x10)
		int32_t CurrentDistanceThreshold; // 0x330(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x334(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWorldUILabelWidgetBase");
			return ret;
		}

		void UpdateDistanceSqr(float DistanceSqr); // Flags: Native|Protected, Memory Exec: 0x7FF74FCDA224(relative to base address)
		void OnDistanceUpdate(int32_t PrevDistanceThreshold, int32_t NextDistanceThreshold); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaZebulonDroneWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaZebulonDroneWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x318(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaZebulonDroneWidgetBase");
			return ret;
		}

		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FCD9474(relative to base address)
		void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeCountdownDisplay
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x3B0 - 0x2B0)
	class UAthenaChallengeCountdownDisplay : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2B0(0x10) UNKNOWN PROPERTY
		FDateTime UnlockTime; // 0x2C0(0x8)
		ECountdownDisplay DisplayType; // 0x2C8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2C9(0x7) UNKNOWN PROPERTY
		FTimerDisplayData DisplayData; // 0x2D0(0xC0)
		unsigned char UnknownData02_6[0x18]; // 0x390(0x18) UNKNOWN PROPERTY
		UCommonTextBlock* Text_TimeRemaining; // 0x3A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeCountdownDisplay");
			return ret;
		}

		void OnChallengeSet(FTimerDisplayData& DisplayStyle); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeDateTimeRichTextBlock
	// Inherited from UCommonRichTextBlock -> URichTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x840 - 0x7D0)
	class UAthenaChallengeDateTimeRichTextBlock : public UCommonRichTextBlock	
	{
	public:
		FText LabelFormat; // 0x7D0(0x10)
		bool bShowUpperCase; // 0x7E0(0x1)
		unsigned char UnknownData00_7[0x5F]; // 0x7E1(0x5F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock");
			return ret;
		}

		void SetTimespanValue(FTimespan InTimespan); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FD18AAC(relative to base address)
		void SetLabelFormat(FText& InLabelFormat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD187D0(relative to base address)
		void SetDateTimeValue(FDateTime InDateTime, bool bShowAsCountdown, float InRefreshDelay); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FD184BC(relative to base address)
		void SetCountDownCompletionText(FText InCompletionText); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD18420(relative to base address)
		FDateTime GetDateTime(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD16820(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeDateTimeTextBlock
	// Inherited from UCommonDateTimeTextBlock -> UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3B0 - 0x390)
	class UAthenaChallengeDateTimeTextBlock : public UCommonDateTimeTextBlock	
	{
	public:
		FText LabelFormat; // 0x390(0x10)
		bool bShowUpperCase; // 0x3A0(0x1)
		unsigned char UnknownData00_7[0xF]; // 0x3A1(0xF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeDateTimeTextBlock");
			return ret;
		}

		void SetLabelFormat(FText& InLabelFormat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD18870(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeDetailBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaChallengeDetailBase : public UCommonUserWidget	
	{
	public:
		UFortItemBaseWidget* ItemInfo_PreviewedItem; // 0x2D8(0x8)
		USizeBox* SB_MainContent; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeDetailBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x178 (0x1A8 - 0x30)
	class UAthenaChallengeDisplayData : public UDataAsset	
	{
	public:
		int32_t SoonDisplayMinuteThreshold; // 0x30(0x4)
		FLinearColor PartyAssistFontColor; // 0x34(0x10)
		FLinearColor DifficultChallengeFontColor; // 0x44(0x10)
		unsigned char UnknownData00_6[0x4]; // 0x54(0x4) UNKNOWN PROPERTY
		UTexture2D* PartyAssistIcon; // 0x58(0x8)
		UTexture2D* ExternalPartyAssistIcon; // 0x60(0x8)
		FFortChallengeSetStyle DefaultChallengeStyle; // 0x68(0x90)
		FFortChallengeSetStyle DailyChallengeStyle; // 0xF8(0x90)
		TArray<FGameplayTagContainer> PunchCardSortOrder; // 0x188(0x10)
		TArray<FFortChallengePunchCardStyles> ChallengePunchCardStyles; // 0x198(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeDisplayLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaChallengeDisplayLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeDisplayLibrary");
			return ret;
		}

		FLinearColor GetChallengeStyleLightAccentColor(FFortChallengeSetStyle& DisplayStyle); // Flags: Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FD166A8(relative to base address)
		void ApplyChallengeSetStyleColorsToMaterial(FFortChallengeSetStyle& DisplayStyle, UMaterialInstanceDynamic* StyleMaterial); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD16298(relative to base address)
		void ApplyChallengeSetStyleColorsToImageMaterial(FFortChallengeSetStyle& DisplayStyle, UImage* ImageWidget); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD160FC(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeInviteFriendPrompt
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaChallengeInviteFriendPrompt : public UUserWidget	
	{
	public:
		URichTextBlock* RichText_InviteFriendMessage; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeInviteFriendPrompt");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeListEntryBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UAthenaChallengeListEntryBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		TScriptInterface<Class> EntryContext; // 0x2F0(0x10)
		unsigned char UnknownData01_7[0x18]; // 0x300(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntryBase");
			return ret;
		}

		void StartHighlight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void EndHighlight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnChallengeInfoSet(bool bDisabled); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_Header
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaChallengeListEntry_Header : public UAthenaChallengeListEntryBase	
	{
	public:
		UCommonTextBlock* Text_SectionTitle; // 0x318(0x8)
		USpacer* Spacer_Top; // 0x320(0x8)
		USpacer* Spacer_Bottom; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_Header");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeListEntryControls
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaChallengeListEntryControls : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UFortCTAButton* Button_ViewPlaylist; // 0x2E8(0x8)
		FDataTableRowHandle ViewPlaylistInputAction; // 0x2F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntryControls");
			return ret;
		}

		void OnViewPlaylistButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_Custom
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaChallengeListEntry_Custom : public UAthenaChallengeListEntryBase	
	{
	public:
		URichTextBlock* RichTextBlock_DisplayText; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_Custom");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeListEntry_PartyUp
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UAthenaChallengeListEntry_PartyUp : public UAthenaChallengeListEntryBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_PartyUp");
			return ret;
		}

		void HandleTransientQuestStarted(UFortQuestItem* QuestItem, UFortQuestItemDefinition_Athena* PreceedingQuestDefAthena); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17584(relative to base address)
		void HandleTransientQuestRemoved(UFortQuestItem* QuestItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17488(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_AllQuestsComplete
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UAthenaChallengeListEntry_AllQuestsComplete : public UAthenaChallengeListEntryBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_AllQuestsComplete");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeListEntry_GiftCard
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaChallengeListEntry_GiftCard : public UAthenaChallengeListEntryBase	
	{
	public:
		UOverlay* RootContainer; // 0x318(0x8)
		UAthenaGoalsPageGiftCard* GiftCard; // 0x320(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x328(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_GiftCard");
			return ret;
		}

		void OnChallengeDataSet(bool bDisabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_GoalCard
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UAthenaChallengeListEntry_GoalCard : public UAthenaChallengeListEntryBase	
	{
	public:
		UCommonVisibilitySwitcher* SwitcherContent; // 0x318(0x8)
		UAthenaGoalsPageQuestCard* GoalCardVertical; // 0x320(0x8)
		UAthenaGoalsPageHorizontalQuestCard* GoalCardHorizontal; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_GoalCard");
			return ret;
		}

		void OnChallengeDataSet(bool bDisabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_LockedQuest
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1C8 (0x4E0 - 0x318)
	class UAthenaChallengeListEntry_LockedQuest : public UAthenaChallengeListEntryBase	
	{
	public:
		UAthenaChallengeDateTimeRichTextBlock* DateTimeRichText_TimeUntilQuestUnlocks; // 0x318(0x8)
		URichTextBlock* RichTextBlock_ChallengesUntilUnlocked; // 0x320(0x8)
		URichTextBlock* RichTextBlock_TimeUntilUnlocked; // 0x328(0x8)
		UAthenaChallengeRewards* UserWidget_Rewards; // 0x330(0x8)
		UCommonTextBlock* Text_SourceObject; // 0x338(0x8)
		UCommonTextBlock* Text_RepresentedObject; // 0x340(0x8)
		FText TimeUntilQuestUnlockCompletionText; // 0x348(0x10)
		FLockedQuestRuntimeData LockedQuestData; // 0x358(0x180)
		unsigned char UnknownData00_7[0x8]; // 0x4D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_LockedQuest");
			return ret;
		}

		void OnRewardsPopulated(bool bHasRewards); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitDisplayText(ELockedWidgetUnlockType& InUnlockType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FTimespan GetTimeSinceEventStart(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD1688C(relative to base address)
		FTimespan GetStartingUnlockTime(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD16874(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_ProductCompatibility
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x3C8 - 0x318)
	class UAthenaChallengeListEntry_ProductCompatibility : public UAthenaChallengeListEntryBase	
	{
	public:
		FText AvailableInFmtText; // 0x318(0x10)
		FText UnavailableInFmtText; // 0x328(0x10)
		FText ListDelimiterText; // 0x338(0x10)
		FText AndDelimiterText; // 0x348(0x10)
		FText OrDelimiterText; // 0x358(0x10)
		FText FallbackProductText; // 0x368(0x10)
		UCommonTextBlock* Text_DebugWarning; // 0x378(0x8)
		unsigned char UnknownData00_7[0x48]; // 0x380(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_ProductCompatibility");
			return ret;
		}

		void SetProductCompatibilityQuery(FGameplayTagQuery& Query); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD189B0(relative to base address)
		void BP_SetText(FText& CompatibilityText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListEntry_Quest
	// Inherited from UAthenaChallengeListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x130 (0x448 - 0x318)
	class UAthenaChallengeListEntry_Quest : public UAthenaChallengeListEntryBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		URichTextBlock* RichText_ChallengeDesc; // 0x320(0x8)
		URichTextBlock* RichText_ObjectivesCompletedSelected; // 0x328(0x8)
		URichTextBlock* RichText_ObjectivesCompletedUnselected; // 0x330(0x8)
		URichTextBlock* RichText_FlavorText; // 0x338(0x8)
		UAthenaChallengeDateTimeTextBlock* DateTimeText_TimeRemaining; // 0x340(0x8)
		USizeBox* SizeBox_CornerUL; // 0x348(0x8)
		UFortLazyImage* LazyImage_IconPinned; // 0x350(0x8)
		UFortLazyImage* LazyImage_IconUL; // 0x358(0x8)
		UAthenaChallengeRewards* UserWidget_Rewards; // 0x360(0x8)
		UCommonTextBlock* Text_QuestID; // 0x368(0x8)
		USizeBox* SizeBox_StyleSize; // 0x370(0x8)
		UAthenaChallengeListEntryControls* Panel_ChallengeControls; // 0x378(0x8)
		FText TextExpiredQuest; // 0x380(0x10)
		FText TextExpiredQuestFrontEnd; // 0x390(0x10)
		TWeakObjectPtr<UObject*> DefaultPortraitDisplayAsset; // 0x3A0(0x20)
		TWeakObjectPtr<UObject*> MySharedQuestIcon; // 0x3C0(0x20)
		TWeakObjectPtr<UObject*> PartySharedQuestIcon; // 0x3E0(0x20)
		unsigned char UnknownData01_6[0x18]; // 0x400(0x18) UNKNOWN PROPERTY
		UHorizontalBox* HorizontalBox_DefaultWidgetsRoot; // 0x418(0x8)
		EChallengeListEntryType EntryType; // 0x420(0x1)
		unsigned char UnknownData02_6[0x1F]; // 0x421(0x1F) UNKNOWN PROPERTY
		bool bBangsOnUnseenSuppressed; // 0x440(0x1)
		unsigned char UnknownData03_7[0x7]; // 0x441(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListEntry_Quest");
			return ret;
		}

		void UpdateIconsUL(FAthenaPinnedQuestData& PinnedQuestData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD1900C(relative to base address)
		void OnSetState(bool bIsCompleted, bool bIsLocked, bool bIsPartyAssisted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSelected(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD177DC(relative to base address)
		bool IsChallengeRefreshingDaily(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74795F8DC(relative to base address)
		bool HasVisibleRewards(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74945EEBC(relative to base address)
		void HandleViewPlaylistButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17704(relative to base address)
		void HandleQuestSeen(UFortAccountItem* AccountItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD16F9C(relative to base address)
		void HandleObjectiveUpdate(FObjectiveUpdateData& ObjectiveUpdateData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD16E88(relative to base address)
		bool GetIsCompleted(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7496973B0(relative to base address)
		void BP_OnTimerSet(EAthenaChallengeTimerState TimerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnSelectedForQuestReplacing(bool bSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnRaritySet(EFortRarity Rarity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnQuestGiverIconSet(UObject* QuestIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnChallengeSeenChanged(bool bChallengeSeen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeListViewBase
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x398 - 0x280)
	class UAthenaChallengeListViewBase : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		UAthenaQuestEntryVisualData* VisualData; // 0x368(0x8)
		unsigned char UnknownData01_6[0x20]; // 0x370(0x20) UNKNOWN PROPERTY
		float EntrySpacing; // 0x390(0x4)
		unsigned char UnknownData02_7[0x4]; // 0x394(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeListViewBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeNpcQuestCounter
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x310 - 0x2B0)
	class UAthenaChallengeNpcQuestCounter : public UUserWidget	
	{
	public:
		FGameplayTagContainer ExcludedTabs; // 0x2B0(0x20)
		FText Text_PartyTab; // 0x2D0(0x10)
		FText Text_PersonalTab; // 0x2E0(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x2F0(0x8) UNKNOWN PROPERTY
		URichTextBlock* RichText_HeaderDesc; // 0x2F8(0x8)
		URichTextBlock* RichText_MaxQuests; // 0x300(0x8)
		URichTextBlock* RichText_NumActiveQuests; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeNpcQuestCounter");
			return ret;
		}

		void UpdateVisibility(FGameplayTag& CurrentTabTag); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FD19098(relative to base address)
		void HandleTransientQuestStarted(UFortQuestItem* QuestItem, UFortQuestItemDefinition_Athena* PreceedingQuestDefAthena); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17640(relative to base address)
		void HandleTransientQuestRemoved(UFortQuestItem* QuestItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17504(relative to base address)
		void HandleQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool bDisplayStatusUpdate, bool bDisplayAnnouncementUpdate); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17034(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeProgressBar
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UAthenaChallengeProgressBar : public UUserWidget	
	{
	public:
		bool bHideProgressBar; // 0x2B0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2B1(0x7) UNKNOWN PROPERTY
		UProgressBar* ProgressBar_StepsCompleted; // 0x2B8(0x8)
		UCommonRichTextBlock* RichText_Progress; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeProgressBar");
			return ret;
		}

		void SetPercentValueForMaterialNumber(int32_t PercentValue); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengePunchCard
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x340 - 0x2D8)
	class UAthenaChallengePunchCard : public UCommonUserWidget	
	{
	public:
		int32_t MaxPunchesAllowed; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UDynamicEntryBox* Box_PunchSlots; // 0x2E0(0x8)
		UCommonTextBlock* Text_Title; // 0x2E8(0x8)
		UCommonTextBlock* Text_Description; // 0x2F0(0x8)
		unsigned char UnknownData01_6[0x30]; // 0x2F8(0x30) UNKNOWN PROPERTY
		bool bInitializedWidgetPool; // 0x328(0x1)
		bool bBundleIsKnown; // 0x329(0x1)
		bool bBangShown; // 0x32A(0x1)
		unsigned char UnknownData02_6[0x1]; // 0x32B(0x1) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortChallengeBundleItemDefinition*> WeakBundleDef; // 0x32C(0x8)
		unsigned char UnknownData03_6[0x4]; // 0x334(0x4) UNKNOWN PROPERTY
		FDateTime MostRecentPunch; // 0x338(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengePunchCard");
			return ret;
		}

		void UpdateChallengePunchCard(UFortChallengeBundleItem* Bundle, UFortQuestItem* CopmpletedQuest); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD18F48(relative to base address)
		void UnfocusPunchCard(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TryToClearBangState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD18EB4(relative to base address)
		void ShowWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetUpEncodedName(FString Name, int32_t Count); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetUnkownState(bool bKnown); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetStyle(FFortChallengePunchCardStyles& PunchStyle); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetProgressCount(int32_t AchivedCount, int32_t GoalCount); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBangState(bool bShowBang); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideProgressCount(bool bBundleCompleted); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FocusPunchCard(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FinishedPunchingCard(bool bPlayOutro); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengePunchCardEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UAthenaChallengePunchCardEntry : public UCommonUserWidget	
	{
	public:
		FName IconParamName; // 0x2D8(0x4)
		int32_t SlotIndex; // 0x2DC(0x4)
		bool bIsBeingPlaced; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x1F]; // 0x2E1(0x1F) UNKNOWN PROPERTY
		UCommonTextBlock* Text_RewardQuantity; // 0x300(0x8)
		UCommonRichTextBlock* Text_UnlockDate; // 0x308(0x8)
		UFortLazyImage* LazyImage_Stamp; // 0x310(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengePunchCardEntry");
			return ret;
		}

		void SetToDefaultSlot(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetStyle(FFortChallengePunchCardStyles& PunchStyle); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIsNonsequentialSlot(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIsLastSlot(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIsFirstSlot(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlacedEntry(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinishedPlacingEntry(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD17924(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeQuestListView
	// Inherited from UAthenaChallengeListViewBase -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3C8 - 0x398)
	class UAthenaChallengeQuestListView : public UAthenaChallengeListViewBase	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x398(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeQuestListView");
			return ret;
		}
	};


	// Class FortniteUI.AthenaChallengeRecapEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UAthenaChallengeRecapEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x2D8(0x48) UNKNOWN PROPERTY
		UCommonTextBlock* Text_QuestObjective; // 0x320(0x8)
		UCommonTextBlock* Text_CompletionCount; // 0x328(0x8)
		UWidgetSwitcher* Switcher_Progression; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeRecapEntry");
			return ret;
		}

		void UpdateProgressBar(float StartingPercent, float EndingPercent); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartOutroAnim(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartIntroAnim(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OutroFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD180A8(relative to base address)
		void IntroFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD17718(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeRewardItem
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UAthenaChallengeRewardItem : public UUserWidget	
	{
	public:
		UFortLazyImage* LazyImage_RewardIcon; // 0x2B0(0x8)
		UCommonTextBlock* Text_RewardCount; // 0x2B8(0x8)
		UImage* Image_RewardBacking; // 0x2C0(0x8)
		UPanelWidget* Panel_Lock; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeRewardItem");
			return ret;
		}

		void BP_OnSetSelected(bool bIsSelected); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeRewards
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x138 (0x3E8 - 0x2B0)
	class UAthenaChallengeRewards : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		bool bEnableRewardCountText; // 0x2B8(0x1)
		ESlateVisibility DisabledVisibility; // 0x2B9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x2BA(0x6) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> ItemRewardWidgetClass; // 0x2C0(0x20)
		TMap<UScriptStruct*, TWeakObjectPtr> CustomRewardWidgetClassesDictionary; // 0x2E0(0x50)
		UOverlay* ItemContainer; // 0x330(0x8)
		UFortDynamicEntryBox* DynamicBox_MultiMarkers; // 0x338(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x340(0x8) UNKNOWN PROPERTY
		TArray<FChallengeRewardCarouselData> CarouselData; // 0x348(0x10)
		FUserWidgetPool RewardWidgetsPool; // 0x358(0x88)
		unsigned char UnknownData03_7[0x8]; // 0x3E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeRewards");
			return ret;
		}

		void SetIsSelected(bool bIsSelected); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD18750(relative to base address)
		void BP_OnItemPresented(UItemDefinitionBase* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeRewardsMultiMarker
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UAthenaChallengeRewardsMultiMarker : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeRewardsMultiMarker");
			return ret;
		}

		void BP_OnSetSelected(bool bIsSelected); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnSetMarkerActive(bool bIsActive); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaChallengeRewardSurvivorBadge
	// Inherited from UAthenaChallengeComponentWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaChallengeRewardSurvivorBadge : public UAthenaChallengeComponentWidget	
	{
	public:
		UFortAthenaSurvivorTierBadge* SurvivorTierBadge; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaChallengeRewardSurvivorBadge");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGroupChallengeTag
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaGroupChallengeTag : public UUserWidget	
	{
	public:
		UWidgetAnimation* Anim_Flash; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGroupChallengeTag");
			return ret;
		}

		void HandleOnToggleFullScreenMap(bool bIsMapVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD16F1C(relative to base address)
	};


	// Class FortniteUI.AthenaMiniChallengeEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x340 - 0x2D8)
	class UAthenaMiniChallengeEntry : public UCommonUserWidget	
	{
	public:
		UFortLazyImage* QuestIcon; // 0x2D8(0x8)
		UFortQuestItemDefinition* QuestDef; // 0x2E0(0x8)
		UFortQuestItemDefinition* PendingQuestDef; // 0x2E8(0x8)
		int32_t DisplayGoal; // 0x2F0(0x4)
		int32_t DisplayAchivedCount; // 0x2F4(0x4)
		int32_t PendingGoalCount; // 0x2F8(0x4)
		int32_t PendingLastKnown; // 0x2FC(0x4)
		int32_t PendingAchivedCount; // 0x300(0x4)
		int32_t PendingXpValue; // 0x304(0x4)
		bool bPendingUpdate; // 0x308(0x1)
		bool bIsFirstTimeBoosted; // 0x309(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x30A(0x2) UNKNOWN PROPERTY
		FName ParamName; // 0x30C(0x4)
		unsigned char UnknownData01_7[0x30]; // 0x310(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMiniChallengeEntry");
			return ret;
		}

		void UpdateQuestDescription(FText& Description); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateProgressBar(int32_t LastKnownCount, int32_t AchivedCount, int32_t GoalCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TriggerNewQuestGranted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetXpValue(int32_t XpRewardValue); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RefeshWithNewQuest(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void QuestCompletedFinishFill(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FinishedQuestUpdate(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD16694(relative to base address)
	};


	// Class FortniteUI.AthenaMiniChallenges
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UAthenaMiniChallenges : public UCommonActivatableWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_MiniChallenges; // 0x3F0(0x8)
		bool bPlacedAtEndOfMatch; // 0x3F8(0x1)
		unsigned char UnknownData00_6[0x1F]; // 0x3F9(0x1F) UNKNOWN PROPERTY
		int32_t UpdatingWidgets; // 0x418(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x41C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMiniChallenges");
			return ret;
		}

		void InspectModeEnabled(bool bEnabled); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearQuestDescriptions(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddQuestDetails(FText& QuestDescription, int32_t AchivedCount, int32_t GoalCount); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaQuestEntryVisualData
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UAthenaQuestEntryVisualData : public UDataAsset	
	{
	public:
		TMap<EChallengeListEntryType, FQuestEntryVisualData> EntryWidgetData; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuestEntryVisualData");
			return ret;
		}
	};


	// Class FortniteUI.EndOfMatchQuestCategoryWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x358 - 0x2D8)
	class UEndOfMatchQuestCategoryWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnEndOfMatchQuestMoveDownFinishedDelegate; // 0x2E8(0x10)
		FMulticastInlineDelegate OnEndOfMatchQuestCategoryShowingNewEntryDelegate; // 0x2F8(0x10)
		float MoveDownDuration; // 0x308(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x30C(0x4) UNKNOWN PROPERTY
		UWidgetSwitcher* Switcher_CategoryType; // 0x310(0x8)
		USizeBox* EntryBox_SizeBox; // 0x318(0x8)
		UDynamicEntryBox* EntryBox_QuestUpdates; // 0x320(0x8)
		TArray<UEndOfMatchQuestEntryWidget*> QuestWidgetsToShow; // 0x328(0x10)
		unsigned char UnknownData02_7[0x20]; // 0x338(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EndOfMatchQuestCategoryWidget");
			return ret;
		}

		void StartMoveEntriesDown(UEndOfMatchQuestEntryWidget* NextWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD18C9C(relative to base address)
		void StartFirstEntryIntro(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD18C88(relative to base address)
		void ShowNextUpdate(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD18BD4(relative to base address)
		void MoveAllEntriesDown(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD178FC(relative to base address)
	};


	// Class FortniteUI.EndOfMatchQuestUpdateWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x3C8 - 0x2D8)
	class UEndOfMatchQuestUpdateWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		TArray<FQuestRecapData> QuestUpdates; // 0x2F0(0x10)
		TArray<UEndOfMatchQuestCategoryWidget*> CreatedWidgets; // 0x300(0x10)
		TArray<UEndOfMatchQuestCategoryWidget*> PreviousWidgets; // 0x310(0x10)
		int32_t MaxNumQuestWidgets; // 0x320(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x324(0x4) UNKNOWN PROPERTY
		FGameplayTagContainer InclusiveFilterTags; // 0x328(0x20)
		FGameplayTagContainer ExclusiveFilterTags; // 0x348(0x20)
		USizeBox* SizeBox_EntryContainer; // 0x368(0x8)
		UDynamicEntryBox* EntryBox_QuestUpdates; // 0x370(0x8)
		UScrollBox* ScrollBox_Quest; // 0x378(0x8)
		unsigned char UnknownData02_6[0x38]; // 0x380(0x38) UNKNOWN PROPERTY
		UEndOfMatchQuestCategoryWidget* InProgressCategoryEntryWidget; // 0x3B8(0x8)
		UEndOfMatchQuestCategoryWidget* CompletedCategoryEntryWidget; // 0x3C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EndOfMatchQuestUpdateWidget");
			return ret;
		}

		void TryToShowNextQuestUpdate(bool bShouldStartShowingQuests); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD18EC8(relative to base address)
		void TryPlayCreatedWidgets(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD18EA0(relative to base address)
		void TryMoveDownPreviousCategories(float Amount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD18E20(relative to base address)
		void StartCategoryPlay(UEndOfMatchQuestCategoryWidget* CategoryWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD18BE8(relative to base address)
		void RunIntroAnim(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void QuestUpdated(UFortQuestItem* InUpdateData); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD183A0(relative to base address)
		void QuestUpdateCompleted(UAthenaChallengeRecapEntry* EntryWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD180C4(relative to base address)
		void HandleTileFocused(UCommonUserWidget* QuestEntry); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD173F4(relative to base address)
		void FinishedUpdateingQuests(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionLeaderboard
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UAthenaCollectionLeaderboard : public UCommonActivatableWidget	
	{
	public:
		float LeaderboardScrollSpeed; // 0x3F0(0x4)
		float LeaderboardScrollInitialDelay; // 0x3F4(0x4)
		UScrollBox* ScrollBox_Leaderboard; // 0x3F8(0x8)
		UDynamicEntryBox* EntryBox_Leaderboard; // 0x400(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x408(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionLeaderboard");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCollectionOverlayEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaCollectionOverlayEntry : public UCommonUserWidget	
	{
	public:
		FText EmptyDisplayNameText; // 0x2D8(0x10)
		UCommonTextBlock* Text_DisplayName; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionOverlayEntry");
			return ret;
		}

		void BP_OnDisplayNameSet(FString DisplayName); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionLeaderboardEntry
	// Inherited from UAthenaCollectionOverlayEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x328 - 0x2F0)
	class UAthenaCollectionLeaderboardEntry : public UAthenaCollectionOverlayEntry	
	{
	public:
		FText ValueTextFormat; // 0x2F0(0x10)
		int32_t ValueMinimumFractionalDigits; // 0x300(0x4)
		int32_t ValueMaximumFractionalDigits; // 0x304(0x4)
		bool bValueIsFloat; // 0x308(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x309(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Placement; // 0x310(0x8)
		UCommonRichTextBlock* RichText_Value; // 0x318(0x8)
		UFortSocialAvatarIcon* AvatarIcon; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionLeaderboardEntry");
			return ret;
		}

		void BP_OnValueSet(float Value); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPlacementSet(int32_t Placement); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnLeaderboardEntryReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnLeaderboardEntryInitialized(bool bIsLocalPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionLeaderboardEntryFishing
	// Inherited from UAthenaCollectionLeaderboardEntry -> UAthenaCollectionOverlayEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x338 - 0x328)
	class UAthenaCollectionLeaderboardEntryFishing : public UAthenaCollectionLeaderboardEntry	
	{
	public:
		FName ParamName_Has2Stars; // 0x328(0x4)
		FName ParamName_Has3Stars; // 0x32C(0x4)
		UImage* Image_Stars; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionLeaderboardEntryFishing");
			return ret;
		}

		void BP_OnStarRatingSet(int32_t StarRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionListEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x1470 - 0x13E0)
	class UAthenaCollectionListEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UImage* Image_Icon; // 0x13F0(0x8)
		UImage* Image_SecondaryIcon; // 0x13F8(0x8)
		unsigned char UnknownData01_6[0x1]; // 0x1400(0x1) UNKNOWN PROPERTY
		bool bResetInProgress; // 0x1401(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x1402(0x6) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Number; // 0x1408(0x8)
		UCommonTextBlock* Text_ItemName; // 0x1410(0x8)
		unsigned char UnknownData03_7[0x58]; // 0x1418(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionListEntry");
			return ret;
		}

		void BP_OnEntryReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnEntryImageSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnEntryIconLoaded(UObject* EntryIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCollectionStateSet(EFortCollectedState CollectedState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCollectedByFriendSet(bool bCollectedByFriend); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionListEntryCharacter
	// Inherited from UAthenaCollectionListEntry -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1490 - 0x1470)
	class UAthenaCollectionListEntryCharacter : public UAthenaCollectionListEntry	
	{
	public:
		UImage* Image_Background; // 0x1470(0x8)
		FName ParamName_ItemIcon; // 0x1478(0x4)
		FName ParamName_IsDiscovered; // 0x147C(0x4)
		FName ParamName_IsComplete; // 0x1480(0x4)
		FName ParamName_SecondaryIcon; // 0x1484(0x4)
		unsigned char UnknownData00_7[0x8]; // 0x1488(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionListEntryCharacter");
			return ret;
		}

		void BP_OnLocationsFoundSet(int32_t NumFound, int32_t NumAvailable, bool bAllFound); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionListEntryFishing
	// Inherited from UAthenaCollectionListEntry -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1490 - 0x1470)
	class UAthenaCollectionListEntryFishing : public UAthenaCollectionListEntry	
	{
	public:
		FName ParamName_ItemIcon; // 0x1470(0x4)
		FName ParamName_IsDiscovered; // 0x1474(0x4)
		FName ParamName_ItemSize; // 0x1478(0x4)
		FName ParamName_Has2Stars; // 0x147C(0x4)
		FName ParamName_Has3Stars; // 0x1480(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x1484(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionListEntryFishing");
			return ret;
		}

		void BP_OnStarRatingSet(int32_t StarRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionListGroupEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x360 - 0x2D8)
	class UAthenaCollectionListGroupEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_ListEntries; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x78]; // 0x2E8(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionListGroupEntry");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCollectionListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x1B8 (0x438 - 0x280)
	class UAthenaCollectionListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0x120]; // 0x280(0x120) UNKNOWN PROPERTY
		float EntrySpacing; // 0x3A0(0x4)
		float FinalEntrySpacing; // 0x3A4(0x4)
		TEnumAsByte<EOrientation> orientation; // 0x3A8(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x3A9(0x3) UNKNOWN PROPERTY
		int32_t NumRows; // 0x3AC(0x4)
		bool bOverrideNumRowsMobile; // 0x3B0(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x3B1(0x3) UNKNOWN PROPERTY
		int32_t NumRowsMobile; // 0x3B4(0x4)
		int32_t NumColumns; // 0x3B8(0x4)
		bool bOverrideNumColumnsMobile; // 0x3BC(0x1)
		unsigned char UnknownData03_6[0x3]; // 0x3BD(0x3) UNKNOWN PROPERTY
		int32_t NumColumnsMobile; // 0x3C0(0x4)
		unsigned char UnknownData04_6[0x6C]; // 0x3C4(0x6C) UNKNOWN PROPERTY
		bool bSelectEntryOnFocusForTouch; // 0x430(0x1)
		unsigned char UnknownData05_7[0x7]; // 0x431(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionListView");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCollectionLocationEntry
	// Inherited from UAthenaCollectionOverlayEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2F0 - 0x2F0)
	class UAthenaCollectionLocationEntry : public UAthenaCollectionOverlayEntry	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionLocationEntry");
			return ret;
		}

		void BP_OnLocationsFoundSet(ELocationEntryState EntryState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionPlayerProgress
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaCollectionPlayerProgress : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_PlayerName; // 0x2D8(0x8)
		UCommonTextBlock* Text_Progress; // 0x2E0(0x8)
		UFortSocialAvatarIcon* AvatarIcon; // 0x2E8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2F0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionPlayerProgress");
			return ret;
		}

		bool IsLocalPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD177A0(relative to base address)
		int32_t GetNumCollected(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD1685C(relative to base address)
		void BP_OnShowPlayerInfoSet(bool bShowPlayerInfo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPlayerProgressInitialized(bool bIsLocalPlayer, int32_t NumCollected, int32_t NumToCollect); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionPlayerProgressContainer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UAthenaCollectionPlayerProgressContainer : public UCommonUserWidget	
	{
	public:
		UClass* PlayerProgressClass; // 0x2D8(0x8)
		float CycleDelay; // 0x2E0(0x4)
		int32_t ShowLocalPlayerAfterNumEntries; // 0x2E4(0x4)
		TArray<UAthenaCollectionPlayerProgress*> CachedPlayerProgressEntries; // 0x2E8(0x10)
		unsigned char UnknownData00_7[0x20]; // 0x2F8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionPlayerProgressContainer");
			return ret;
		}

		void BP_OnPlayerProgressEntriesCreated(TArray<UAthenaCollectionPlayerProgress*>& PlayerProgressEntries, int32_t NumToCollect); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPlayerProgressContainerReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x248 (0x638 - 0x3F0)
	class UAthenaCollectionScreenBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x420(0x40)
		bool bUseMcpProfileData; // 0x460(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x461(0x7) UNKNOWN PROPERTY
		FText CollectionName; // 0x468(0x10)
		FString CollectionType; // 0x478(0x10)
		FString CollectionCategory; // 0x488(0x10)
		FText UnknownText; // 0x498(0x10)
		FText UnknownDescription; // 0x4A8(0x10)
		TWeakObjectPtr<UObject*> KnownEntryImage; // 0x4B8(0x20)
		TWeakObjectPtr<UObject*> UnknownEntryImage; // 0x4D8(0x20)
		TWeakObjectPtr<UObject*> KnownOverlayImage; // 0x4F8(0x20)
		TWeakObjectPtr<UObject*> UnknownOverlayImage; // 0x518(0x20)
		TWeakObjectPtr<UObject*> SecondaryIconImage; // 0x538(0x20)
		FText PersonalBestTextFormat; // 0x558(0x10)
		char PersonalBestMinimumFractionalDigits; // 0x568(0x1)
		char PersonalBestMaximumFractionalDigits; // 0x569(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x56A(0x6) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> SoftInfoOverlayClass; // 0x570(0x20)
		bool bQuickJumpAllowed; // 0x590(0x1)
		unsigned char UnknownData03_6[0x7]; // 0x591(0x7) UNKNOWN PROPERTY
		UScrollBox* ScrollBox_List; // 0x598(0x8)
		UAthenaCollectionListView* CollectionListView; // 0x5A0(0x8)
		UContentWidget* Content_InfoOverlayContainer; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_ToggleInfoOverlay; // 0x5B0(0x8)
		UCommonButtonLegacy* Button_Back; // 0x5B8(0x8)
		UAthenaCollectionPlayerProgressContainer* PlayerProgressContainer; // 0x5C0(0x8)
		bool bWantsToShowInfoOverlay; // 0x5C8(0x1)
		bool bForceOverlayToggleMobile; // 0x5C9(0x1)
		unsigned char UnknownData04_6[0x16]; // 0x5CA(0x16) UNKNOWN PROPERTY
		UAthenaCollectionScreenInfoOverlay* InfoOverlay; // 0x5E0(0x8)
		UFortCollectionsDataTable* CollectionsDataTable; // 0x5E8(0x8)
		UFortCollectionData* CollectionData; // 0x5F0(0x8)
		unsigned char UnknownData05_6[0x10]; // 0x5F8(0x10) UNKNOWN PROPERTY
		FGameplayTagContainer CategoryTags; // 0x608(0x20)
		FText CategoryTitle; // 0x628(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenBase");
			return ret;
		}

		void SetListViewColumnCount(int32_t InColumnCount); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD18910(relative to base address)
		void CenterSelectedEntry(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD164C4(relative to base address)
		void BP_OnStartedLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInfoOverlayDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInfoOverlayActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleSelectedEntryChanged(UAthenaCollectionListEntry* SelectedEntry); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFinishedLoading(); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenCharacter
	// Inherited from UAthenaCollectionScreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x638 - 0x638)
	class UAthenaCollectionScreenCharacter : public UAthenaCollectionScreenBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenCharacter");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCollectionScreenFishing
	// Inherited from UAthenaCollectionScreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x648 - 0x638)
	class UAthenaCollectionScreenFishing : public UAthenaCollectionScreenBase	
	{
	public:
		FText RequiresProFishingRodText; // 0x638(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenFishing");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCollectionScreenInfoOverlay
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x4A8 - 0x3F0)
	class UAthenaCollectionScreenInfoOverlay : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		FName ParamName_ItemIcon; // 0x3F8(0x4)
		FName ParamName_IsDiscovered; // 0x3FC(0x4)
		UCommonRichTextBlock* RichText_AdditionalInfo; // 0x400(0x8)
		UImage* Image_ItemImage; // 0x408(0x8)
		FText NumCollectedTextFormat; // 0x410(0x10)
		FText EmptyDisplayNameText; // 0x420(0x10)
		FDataTableRowHandle ToggleLeaderboardRowHandle; // 0x430(0x10)
		UCommonTextBlock* Text_ItemType; // 0x440(0x8)
		UCommonTextBlock* Text_ItemName; // 0x448(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x450(0x8)
		UCommonRichTextBlock* RichText_AdditionalDescription; // 0x458(0x8)
		UPanelWidget* Panel_FriendScores; // 0x460(0x8)
		UCommonRichTextBlock* RichText_NumCollected; // 0x468(0x8)
		UCommonTextBlock* Text_ItemNumber; // 0x470(0x8)
		UCommonButtonBase* Button_Close; // 0x478(0x8)
		UFortDynamicEntryBox* EntryBox_InfoOverlay; // 0x480(0x8)
		UAthenaCollectionLeaderboard* FriendLeaderboard; // 0x488(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x490(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenInfoOverlay");
			return ret;
		}

		void BP_OnShowLeaderboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnItemIconLoaded(UObject* ItemIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInfoOverlayReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHideLeaderboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHasAdditionalInfoSet(bool bHasAdditionalInfo); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFriendScoresUpdated(int32_t NumFriendScores); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFriendLeaderboardDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFriendLeaderboardActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnContextTagsUpdated(int32_t NumContextTags); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCollectedStateSet(EFortCollectedState CollectedState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenInfoOverlayCharacter
	// Inherited from UAthenaCollectionScreenInfoOverlay -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x4B0 - 0x4A8)
	class UAthenaCollectionScreenInfoOverlayCharacter : public UAthenaCollectionScreenInfoOverlay	
	{
	public:
		FName ParamName_Progress; // 0x4A8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x4AC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenInfoOverlayCharacter");
			return ret;
		}

		void BP_OnLocationsFoundSet(int32_t NumFound, int32_t NumAvailable, bool bAllFound); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionScreenInfoOverlayFishing
	// Inherited from UAthenaCollectionScreenInfoOverlay -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x4E0 - 0x4A8)
	class UAthenaCollectionScreenInfoOverlayFishing : public UAthenaCollectionScreenInfoOverlay	
	{
	public:
		bool bNeedsProFishingRod; // 0x4A8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x4A9(0x7) UNKNOWN PROPERTY
		FText NoneText; // 0x4B0(0x10)
		UCommonRichTextBlock* RichText_PersonalBest; // 0x4C0(0x8)
		FText ScaleRangeTextFormat; // 0x4C8(0x10)
		UCommonRichTextBlock* RichText_ScaleRange; // 0x4D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionScreenInfoOverlayFishing");
			return ret;
		}

		void BP_OnStarRatingSet(int32_t NumStars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CreativePublishWatermark
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UCreativePublishWatermark : public UFortHUDElementWidget	
	{
	public:
		UCommonTextBlock* Text_CreatorName; // 0x318(0x8)
		UCommonTextBlock* Text_Mnemonic; // 0x320(0x8)
		FText MnemonicVersionFormat; // 0x328(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x338(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePublishWatermark");
			return ret;
		}

		void OnPublishedIslandCodeDisplayChanged(ECreativePublishedIslandCodeDisplay PublishedIslandCodeDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsPlaytestLinkChanged(bool bIsPlaytestLink); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsModerator(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD177B8(relative to base address)
		void HandleLinkDataQueryComplete(bool bSuccess, FString ErrorMessage, UFortGameActivity* LinkData); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD16D3C(relative to base address)
		void HandleCreativePlotLinkedVolumeChanged(AFortVolume* CreativeLinkedVolume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD169A0(relative to base address)
	};


	// Class FortniteUI.AthenaCreativeItemEntryObjectWrapper
	// Inherited from UObject
	// Size: 0x1B0 (0x1D8 - 0x28)
	class UAthenaCreativeItemEntryObjectWrapper : public UObject	
	{
	public:
		FFortItemEntry ItemEntry; // 0x28(0x1A8)
		bool bIsDownloading; // 0x1D0(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x1D1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCreativeItemEntryObjectWrapper");
			return ret;
		}
	};


	// Class FortniteUI.AthenaCreativeItemTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1C0 (0x15A0 - 0x13E0)
	class UAthenaCreativeItemTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UAthenaCreativeItemTileView* ParentView; // 0x13E8(0x8)
		UFortItemDefinition* ItemDefinition; // 0x13F0(0x8)
		FFortItemEntry ItemEntry; // 0x13F8(0x1A8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCreativeItemTileButton");
			return ret;
		}

		void OnLoadedItem(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEntryClick(UAthenaCreativeItemTileButton* Entry); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UAthenaCreativeItemEntryObjectWrapper MakeFortItemEntryObjectWrapper(UObject* Target, FFortItemEntry& InItemEntry); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD177F4(relative to base address)
		int32_t GetItemTypeCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD16838(relative to base address)
		bool CompareToItemEntry(FFortItemEntry& InItemEntry); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD164D8(relative to base address)
	};


	// Class FortniteUI.AthenaCreativeItemTileView
	// Inherited from UCommonTileView -> UTileView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0xB70 - 0xB58)
	class UAthenaCreativeItemTileView : public UCommonTileView	
	{
	public:
		UFortOptionsTab* ParentTab; // 0xB58(0x8)
		UFortItem* CurrentlyFocusedItem; // 0xB60(0x8)
		unsigned char UnknownData00_7[0x8]; // 0xB68(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCreativeItemTileView");
			return ret;
		}
	};


	// Class FortniteUI.LevelInstanceEntryObjectWrapper
	// Inherited from UObject
	// Size: 0x38 (0x60 - 0x28)
	class ULevelInstanceEntryObjectWrapper : public UObject	
	{
	public:
		FLevelInstanceListElement LevelInstanceListElement; // 0x28(0x38)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LevelInstanceEntryObjectWrapper");
			return ret;
		}
	};


	// Class FortniteUI.LevelManagementListEntry
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x1400 - 0x1390)
	class ULevelManagementListEntry : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY
		ULevelManagementListView* ParentView; // 0x1398(0x8)
		FLevelInstanceListElement LevelInstanceListElementEntry; // 0x13A0(0x38)
		UCommonTextBlock* Text_LevelName; // 0x13D8(0x8)
		UCommonTextBlock* Text_NumPortals; // 0x13E0(0x8)
		UCommonTextBlock* Text_NumRefs; // 0x13E8(0x8)
		UWidgetSwitcher* WidgetSwitcher_TerrainType; // 0x13F0(0x8)
		UCommonButtonBase* IconTextButton_Delete; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LevelManagementListEntry");
			return ret;
		}

		void UpdateSelected(bool bEntrySelected); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLevelDeleteClicked(bool bDeleteSilently); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD16B20(relative to base address)
		bool CompareToLevelInstanceInfoEntry(FLevelInstanceListElement& InLevelInstanceInfoEntry); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD165A4(relative to base address)
	};


	// Class FortniteUI.LevelManagementListView
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0xB40 - 0xB30)
	class ULevelManagementListView : public UCommonListView	
	{
	public:
		FMulticastInlineDelegate OnLevelEntryDeleteClicked; // 0xB30(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LevelManagementListView");
			return ret;
		}

		void HandleLevelEntryDeleteClicked(FLevelInstanceListElement& LevelInstanceListElement, bool bDeleteSilently); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD16BAC(relative to base address)
	};


	// Class FortniteUI.CreativeMinigameProgressWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UCreativeMinigameProgressWidget : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<AFortPlayerStateAthena*> CurrentPlayerState; // 0x2D8(0x8)
		FScalableFloat bEnabled; // 0x2E0(0x28)
		bool bMinigameActive; // 0x308(0x1)
		unsigned char UnknownData00_7[0x27]; // 0x309(0x27) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativeMinigameProgressWidget");
			return ret;
		}

		void OnPlayerStatUpdate(int32_t CurrentPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamStats); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerScoringUpdate(int32_t CurrentPlayerTeamScore, int32_t PreviousPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t PreviousPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamScores); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameStarted(FMinigameActivityStartedData& StartData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameEnded(FMinigameActivityEndedData& EndData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CreativePerformanceHUDBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x218 (0x530 - 0x318)
	class UCreativePerformanceHUDBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x218]; // 0x318(0x218) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePerformanceHUDBase");
			return ret;
		}

		void StopTimer(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD18DF8(relative to base address)
		void StartTimer(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD18DD0(relative to base address)
		bool ShowBudgetGridThermometerCoordinates(); // Flags: Final|Native|Static|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD18BBC(relative to base address)
		void SetUIMetrics(FVolumePerformanceMetrics& VolumePerformanceMetrics); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetSimpleUIMetrics(FSimpleMetricInformation& SimplePerformanceMetrics); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RefreshCostPreviewOfSelectedActor(int32_t CostPreviewOfSelection, bool isThrowingPlayset); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVolumeTrackingComponentReplicated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD18094(relative to base address)
		void OnSimpleMetricInformationUpdated(APlayerState* ClientState, FSimpleMetricInformation& MetricInformation); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17FA4(relative to base address)
		void OnPlayerExitedSpatialGameplayActor(FEventMessageTag Channel, FPlayerExitSpatialActorContext& PlayerExitSpatialActorContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17A98(relative to base address)
		void OnPlayerEnteredSpatialGameplayActor(FEventMessageTag Channel, FPlayerEnterSpatialActorContext& PlayerEnterSpatialActorContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17A98(relative to base address)
		void OnPerformanceMetricsUpdated(FVolumePerformanceMetrics& VolumePerformanceMetrics); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17A08(relative to base address)
		void OnCostPreviewOfSelectionChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD17910(relative to base address)
		bool IsHeatmapEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD17734(relative to base address)
		void HideUIMetrics(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSpatialLoadingStateChanged(FEventMessageTag Channel, FSpatialGamePlayActorLoadingStateUpdatedContext& StateContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17124(relative to base address)
		void HandleGameStateInitialized(AFortGameState* GameState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD16A20(relative to base address)
		int32_t GetCostPreviewOfSelectedActor(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD16758(relative to base address)
		void BP_OnClientEnterVolume(APlayerState* ClientPlayerState, AFortVolume* Volume); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CreativePerformanceHUDHeatmapControlWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UCreativePerformanceHUDHeatmapControlWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePerformanceHUDHeatmapControlWidget");
			return ret;
		}

		void StopTimer(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD18E0C(relative to base address)
		void StartTimer(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD18DE4(relative to base address)
		void RefreshHeatmap(FVector& PlayerPosition); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerMovementUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD17ED0(relative to base address)
		FVector GetCurrentVolumeSize(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD167C4(relative to base address)
		FBox GetCurrentVolumeBox(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD1677C(relative to base address)
	};


	// Class FortniteUI.CreativePerformanceHUDRunTimeStatsWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UCreativePerformanceHUDRunTimeStatsWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x318(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePerformanceHUDRunTimeStatsWidget");
			return ret;
		}

		void SetRuntimeStats(TArray<FText>& DetailRuntimeStats); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ValkyriePerformanceHUDBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x490 - 0x318)
	class UValkyriePerformanceHUDBase : public UFortHUDElementWidget	
	{
	public:
		FScalableFloat ThermometerMemoryThreshold; // 0x318(0x28)
		unsigned char UnknownData00_7[0x150]; // 0x340(0x150) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ValkyriePerformanceHUDBase");
			return ret;
		}

		void SetUIMetrics(FVolumePerformanceMetrics& VolumePerformanceMetrics); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayspaceMemoryValueUpdated(int32_t MemoryValue, int32_t GlobalMemoryValue); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD17EE4(relative to base address)
		void OnPlayerExitedSpatialGameplayActor(FEventMessageTag Channel, FPlayerExitSpatialActorContext& PlayerExitSpatialActorContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17D68(relative to base address)
		void OnPlayerEnteredSpatialGameplayActor(FEventMessageTag Channel, FPlayerEnterSpatialActorContext& PlayerEnterSpatialActorContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD17C00(relative to base address)
		void OnMinigamePlayModeChanged(AFortMinigame* Minigame, bool bIsInPlayMode); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD17940(relative to base address)
		void HideUIMetrics(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSpatialLoadingStateChanged(FEventMessageTag Channel, FSpatialGamePlayActorLoadingStateUpdatedContext& StateContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD1728C(relative to base address)
		void HandleGameStateInitialized(AFortGameState* GameState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD16AA0(relative to base address)
		void BP_OnClientEnterSpatialGameplayActor(APlayerState* ClientPlayerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.StoreToastRequest
	// Inherited from UObject
	// Size: 0x98 (0xC0 - 0x28)
	class UStoreToastRequest : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x28(0x10) UNKNOWN PROPERTY
		UCatalogMessaging* CatalogMessaging; // 0x38(0x8)
		unsigned char UnknownData01_7[0x80]; // 0x40(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StoreToastRequest");
			return ret;
		}

		void SkipRequest(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7494B08D8(relative to base address)
		bool ShouldBeginRequest(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7493F5558(relative to base address)
		bool IsRequestReady(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C5A798C(relative to base address)
		FStoreCallout GetToast(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD16904(relative to base address)
		void CompleteRequest(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF748333524(relative to base address)
		void BeginRequest(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF747B0DC80(relative to base address)
	};


	// Class FortniteUI.GuidedTutorialLoadingScreen
	// Inherited from UAthenaLoadingScreenPreviewPanelBase -> UAthenaLoadingScreenPreviewPanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x558 - 0x550)
	class UGuidedTutorialLoadingScreen : public UAthenaLoadingScreenPreviewPanelBase	
	{
	public:
		UFortPlaylistAthena* GuidedTutorialPlaylist; // 0x550(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GuidedTutorialLoadingScreen");
			return ret;
		}
	};


	// Class FortniteUI.AthenaFeatTimelineListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UAthenaFeatTimelineListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UPanelWidget* Panel_FeatInfo; // 0x2E0(0x8)
		UPanelWidget* Panel_Date; // 0x2E8(0x8)
		UCommonButtonLegacy* SimpleButton_ClickArea; // 0x2F0(0x8)
		UCommonTextBlock* Text_FeatName; // 0x2F8(0x8)
		UCommonTextBlock* Text_FeatDescription; // 0x300(0x8)
		UFortLazyImage* LazyImage_QuestIcon; // 0x308(0x8)
		UCommonTextBlock* Text_CompletedTime; // 0x310(0x8)
		UCommonRichTextBlock* RichText_Date; // 0x318(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x320(0x10) UNKNOWN PROPERTY
		bool bIsHovered; // 0x330(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x331(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFeatTimelineListEntry");
			return ret;
		}

		void UnHoverFeat(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWaitingForCompletedTimer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTimespanInfoSet(int32_t NumDays); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFeatInfoSet(int32_t NumFeatsOnDay, int32_t IdxOnDay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFeatCompletedThisSession(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HoverFeat(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FGameplayTag CalculateSourceTag(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD16498(relative to base address)
	};


	// Class FortniteUI.AthenaFeatTimelineListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x130 (0x3B0 - 0x280)
	class UAthenaFeatTimelineListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		float EntrySpacing; // 0x368(0x4)
		float EndSpacing; // 0x36C(0x4)
		float DelayBeforeStartCompleted; // 0x370(0x4)
		float DelayBetweenCompletedItems; // 0x374(0x4)
		unsigned char UnknownData01_7[0x38]; // 0x378(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFeatTimelineListView");
			return ret;
		}
	};


	// Class FortniteUI.FeaturedCreativeContent
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFeaturedCreativeContent : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FeaturedCreativeContent");
			return ret;
		}

		void OnSetupAds(TArray<FString>& MediaURLs, TArray<FCreativeAdData>& AdMetadata); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivatablePanelWithItemPreview
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x6A8 - 0x560)
	class UFortActivatablePanelWithItemPreview : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		UFortItemView* ItemViewObject; // 0x568(0x8)
		FDataTableRowHandle ItemViewUnifiedSupportsCameraControlInputAction; // 0x570(0x10)
		FDataTableRowHandle ItemViewUnifiedZoomInputAction; // 0x580(0x10)
		FDataTableRowHandle ItemViewZoomOutInputAction; // 0x590(0x10)
		FDataTableRowHandle ItemViewZoomInInputAction; // 0x5A0(0x10)
		FDataTableRowHandle ItemViewRotateInputAction; // 0x5B0(0x10)
		unsigned char UnknownData01_6[0xB0]; // 0x5C0(0xB0) UNKNOWN PROPERTY
		bool AllowItemRotation; // 0x670(0x1)
		bool AllowItemZooming; // 0x671(0x1)
		bool AutomaticallyRegisterCameraView; // 0x672(0x1)
		bool OverrideFixedCameras; // 0x673(0x1)
		unsigned char UnknownData02_6[0x4]; // 0x674(0x4) UNKNOWN PROPERTY
		UDataTable* ActionDataTable; // 0x678(0x8)
		UWidgetAnimation* AnimationToHideItemInfo; // 0x680(0x8)
		bool bAutoShowDetails; // 0x688(0x1)
		bool bItemDetailsHidden; // 0x689(0x1)
		unsigned char UnknownData03_6[0x2]; // 0x68A(0x2) UNKNOWN PROPERTY
		float HideItemInfoHeaderDurationSecs; // 0x68C(0x4)
		unsigned char UnknownData04_7[0x18]; // 0x690(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatablePanelWithItemPreview");
			return ret;
		}

		void ShowItemDetails(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4CE34(relative to base address)
		void OnVaultItemsViewed(TArray<UFortItem*>& Items); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD4C948(relative to base address)
		void OnItemPreviewChanged(AActor* NewPrefab, UFortItem* NewItem); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C66C(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C5A8(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C518(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C488(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C3F8(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C368(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C2D8(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C248(relative to base address)
		void OnCosmeticSpecialActionPressed(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD4C1B8(relative to base address)
		void HideItemDetails(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4BE38(relative to base address)
		UWidget GetWidgetForFramingViewedItem(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaHelpPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x570 - 0x560)
	class UFortAthenaHelpPanel : public UFortActivatablePanel	
	{
	public:
		UCommonTreeView* TreeView_Help; // 0x560(0x8)
		UScrollBox* ScrollBox_HelpEntry; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaHelpPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortBannerSlotButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortBannerSlotButton : public UCommonButtonLegacy	
	{
	public:
		UFortPlayerBanner* PlayerBanner; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBannerSlotButton");
			return ret;
		}
	};


	// Class FortniteUI.FortChildNavigatableScrollBox
	// Inherited from UScrollBox -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0xB40 - 0xB38)
	class UFortChildNavigatableScrollBox : public UScrollBox	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0xB38(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChildNavigatableScrollBox");
			return ret;
		}
	};


	// Class FortniteUI.FortHighlightWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class UFortHighlightWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2B0(0x18) UNKNOWN PROPERTY
		bool bDisableHighlightNotification; // 0x2C8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2C9(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Header; // 0x2D0(0x8)
		UCommonTextBlock* Text_Description; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHighlightWidget");
			return ret;
		}

		void OnShowNotification(bool bShowNotification); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortRespawnPromptWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortRespawnPromptWidget : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRespawnPromptWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortTravelLogMap
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class UFortTravelLogMap : public UUserWidget	
	{
	public:
		float MapSize; // 0x2B0(0x4)
		float CurrentTimeFraction; // 0x2B4(0x4)
		int32_t DistanceToCoalescePositions; // 0x2B8(0x4)
		unsigned char UnknownData00_7[0x24]; // 0x2BC(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTravelLogMap");
			return ret;
		}

		void InitializeFromTravelRecord(FAthenaTravelRecord& Record); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD4BF54(relative to base address)
	};


	// Class FortniteUI.FortTutorialLobbyPopup
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x5D8 - 0x560)
	class UFortTutorialLobbyPopup : public UFortActivatablePanel	
	{
	public:
		UFortPlaylistAthena* TutorialPlaylistData; // 0x560(0x8)
		UFortPlaylistAthena* Tutorial_DefensiveBuildingPlaylistData; // 0x568(0x8)
		UFortPlaylistAthena* SoloPlaylistData; // 0x570(0x8)
		UWidgetSwitcher* WidgetSwitcher_PopupTutorial; // 0x578(0x8)
		unsigned char UnknownData00_7[0x58]; // 0x580(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTutorialLobbyPopup");
			return ret;
		}

		void StartTutorial(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4CE5C(relative to base address)
		void SkipTutorial(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4CE48(relative to base address)
	};


	// Class FortniteUI.FortVariantListPreviewWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortVariantListPreviewWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		UFortVariantPicker* Picker_VariantSelector; // 0x408(0x8)
		UCommonBorder* Container_StyleDisclaimer; // 0x410(0x8)
		UCommonTextBlock* Text_StyleDisclaimer; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantListPreviewWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBoundActionBar
	// Inherited from UCommonBoundActionBar -> UDynamicEntryBoxBase -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x268 - 0x268)
	class UAthenaBoundActionBar : public UCommonBoundActionBar	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBoundActionBar");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGameFeatureStatus
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x378 - 0x2D8)
	class UAthenaGameFeatureStatus : public UCommonUserWidget	
	{
	public:
		FText ProgressStatusToastTitle; // 0x2D8(0x10)
		EFortGameFeature GameFeature; // 0x2E8(0x1)
		bool bExtendedDisplay; // 0x2E9(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x2EA(0x6) UNKNOWN PROPERTY
		FText ExtendedDisplayText; // 0x2F0(0x10)
		TWeakObjectPtr<UObject*> DownloadingIconAsset; // 0x300(0x20)
		TWeakObjectPtr<UObject*> InitialToastNotificationIcon; // 0x320(0x20)
		FName DownloadingIconMaterialParam; // 0x340(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x344(0x4) UNKNOWN PROPERTY
		UFortLazyImage* Image_DownloadingIcon; // 0x348(0x8)
		UCommonNumericTextBlock* Text_ProgressPercent; // 0x350(0x8)
		UCommonTextBlock* Text_ExtendedDisplayText; // 0x358(0x8)
		unsigned char UnknownData02_7[0x18]; // 0x360(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGameFeatureStatus");
			return ret;
		}

		void OnStatusChanged(EAthenaGameFeatureStatus NewStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaLetoLogin
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UAthenaLetoLogin : public UCommonActivatableWidget	
	{
	public:
		UPanelWidget* Panel_Login; // 0x3F0(0x8)
		UClass* LoginWidgetClass; // 0x3F8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x400(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLetoLogin");
			return ret;
		}
	};


	// Class FortniteUI.AthenaQuestProgression
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaQuestProgression : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ChallengeDescription; // 0x2D8(0x8)
		UCommonRichTextBlock* RichText_ChallengeCount; // 0x2E0(0x8)
		UProgressBar* ProgressBar_Challenge_Front; // 0x2E8(0x8)
		UProgressBar* ProgressBar_Challenge_Back; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuestProgression");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGadgetFuelWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaGadgetFuelWidget : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UAthenaGadgetItemDefinition*> AthenaGadgetItemDefinition; // 0x2D8(0x8)
		EFortFuelGadgetVisualType FortFuelGadgetVisualType; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UFortFuelGaugeIndicator* FuelGaugeIndicator_Main; // 0x2E8(0x8)
		UCommonNumericTextBlock* CurrentChargesText; // 0x2F0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGadgetFuelWidget");
			return ret;
		}

		void SetItem(UFortWorldItem* Item); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7491CEFCC(relative to base address)
	};


	// Class FortniteUI.MassiveGadgetEquippedWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UMassiveGadgetEquippedWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MassiveGadgetEquippedWidget");
			return ret;
		}

		void HandleMassiveTagChanged(FGameplayTag Tag, int32_t Count); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B314(relative to base address)
	};


	// Class FortniteUI.HardcoreModifierFlyover
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UHardcoreModifierFlyover : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x60]; // 0x2D8(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierFlyover");
			return ret;
		}

		void HandleUpdateActiveModifiers(FText& ActiveModifierText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.HardcoreModifierListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UHardcoreModifierListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Modifier; // 0x2E0(0x8)
		UButton* Button_ClickCatcher; // 0x2E8(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x2F0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierListEntry");
			return ret;
		}

		void SetMaxLevelCompleted(int32_t MaxLevel); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleModifierEnabled(bool bModifierEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEntryClicked(); // Flags: Native|Protected, Memory Exec: 0x7FF7474A9F44(relative to base address)
	};


	// Class FortniteUI.HardcoreModifierPreviewPane
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UHardcoreModifierPreviewPane : public UCommonUserWidget	
	{
	public:
		UFortLazyImage* Image_ChallengePreview; // 0x2D8(0x8)
		UCommonTextBlock* TextBlock_CurrentChallenge; // 0x2E0(0x8)
		UCommonTextBlock* Text_Top50Count; // 0x2E8(0x8)
		UCommonTextBlock* Text_Top25Count; // 0x2F0(0x8)
		UCommonTextBlock* Text_Top10Count; // 0x2F8(0x8)
		UCommonTextBlock* Text_Top5Count; // 0x300(0x8)
		UCommonTextBlock* Text_VRCount; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierPreviewPane");
			return ret;
		}

		void SetAccoladeCount(int32_t AccoladeRank, int32_t NumTimesEarned); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMaxLevelCompleted(int32_t Level); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleModifierChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.HardcoreModifierListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x108 (0x388 - 0x280)
	class UHardcoreModifierListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_1[0x108]; // 0x280(0x108) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierListView");
			return ret;
		}
	};


	// Class FortniteUI.HardcoreModifierSelectionScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UHardcoreModifierSelectionScreen : public UCommonActivatableWidget	
	{
	public:
		UCommonTextBlock* TextBlock_Heading; // 0x3F0(0x8)
		UCommonTextBlock* TextBlock_Description; // 0x3F8(0x8)
		UHardcoreModifierListView* ListView_Challenges; // 0x400(0x8)
		UHardcoreModifierPreviewPane* PreviewPane_Modifier; // 0x408(0x8)
		UCommonButtonLegacy* Button_Save; // 0x410(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierSelectionScreen");
			return ret;
		}

		void ApplyModifiers(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4AD04(relative to base address)
	};


	// Class FortniteUI.HardcoreModifierStatusBar
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UHardcoreModifierStatusBar : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HardcoreModifierStatusBar");
			return ret;
		}

		void HandleUpdateActiveModifiers(int32_t NumActiveModifiers); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAerialFeedback
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UFortAerialFeedback : public UFortHUDElementWidget	
	{
	public:
		UFortKeybindWidget* KeyBind; // 0x318(0x8)
		UCommonTextBlock* Text_Feedback; // 0x320(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x328(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAerialFeedback");
			return ret;
		}
	};


	// Class FortniteUI.AthenaAerialFeedback
	// Inherited from UFortAerialFeedback -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x380 - 0x340)
	class UAthenaAerialFeedback : public UFortAerialFeedback	
	{
	public:
		FGameplayTagContainer GliderRedeployTags; // 0x340(0x20)
		FGameplayTag AirbagDeployTag; // 0x360(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x364(0x4) UNKNOWN PROPERTY
		UFortItemDefinition* AirbagItemDefinition; // 0x368(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x370(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAerialFeedback");
			return ret;
		}

		void HandleUsingMovementToJump(bool bUsingMovementToJump); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BD9C(relative to base address)
		void HandleSkydiveLeaderChanged(bool bEnabled, bool bLocal, AFortPlayerState* LeaderPlayerState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BB1C(relative to base address)
		void HandleKeybindsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B180(relative to base address)
		void HandleBalloonMovementChanged(bool bUsingBalloonMovement); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4AE68(relative to base address)
	};


	// Class FortniteUI.AthenaAerialVOMute
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaAerialVOMute : public UFortHUDElementWidget	
	{
	public:
		UFortKeybindWidget* KeyBind; // 0x318(0x8)
		UCommonTextBlock* Text_Feedback; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAerialVOMute");
			return ret;
		}

		void OnVOMuteStateChanged(bool bIsMuted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVOMuteHoldStarted(float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVOMuteHoldEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleQuestVOPlayStateChanged(bool bIsPlaying); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BA10(relative to base address)
		void HandleQuestVOMuteStateChanged(bool bIsMuted); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BA10(relative to base address)
		void HandleQuestVOMuteHoldStarted(float duration); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B990(relative to base address)
		void HandleQuestVOMuteHoldEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B97C(relative to base address)
		void HandleKeybindsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B194(relative to base address)
	};


	// Class FortniteUI.AthenaHUDContextualControls
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x450 - 0x2D8)
	class UAthenaHUDContextualControls : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x2D8(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDContextualControls");
			return ret;
		}

		void OnVehicleActionsSpacerExtensionAdded(UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExpEventStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExpEventFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnControllerBindingCalloutExtensionAdded(UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaHUDMenu
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE8 (0x3C0 - 0x2D8)
	class UAthenaHUDMenu : public UCommonUserWidget	
	{
	public:
		UOverlay* Overlay_AllContent; // 0x2D8(0x8)
		UFortDualBladeMenu* DualBladeMenu; // 0x2E0(0x8)
		UAthenaInventoryScreenContainer* InventoryScreenContainer; // 0x2E8(0x8)
		UCommonActivatableWidgetStack* WidgetStack_PrimaryContent; // 0x2F0(0x8)
		UWidget* Container_ServerShutdownTimer; // 0x2F8(0x8)
		UScaleBox* ScaleBox_LetoSplitscreen; // 0x300(0x8)
		UWidget* Container_ContentOnDemand; // 0x308(0x8)
		FGameplayTagContainer HideOnMenuTags; // 0x310(0x20)
		FGameplayTagContainer TagsToShow; // 0x330(0x20)
		UClass* GameOverScreenClass; // 0x350(0x8)
		UClass* PostGameScreenRootClass; // 0x358(0x8)
		UFortPostGameScreenRoot* PostGameScreenRoot; // 0x360(0x8)
		bool bShowingGameOverScreen; // 0x368(0x1)
		bool bShowingWinnerScreen; // 0x369(0x1)
		bool bStartedPostGame; // 0x36A(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x36B(0x5) UNKNOWN PROPERTY
		UAthenaGameOverDisplay* GameOverScreen; // 0x370(0x8)
		UUserWidget* InventoryPanelOverride; // 0x378(0x8)
		unsigned char UnknownData01_7[0x40]; // 0x380(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDMenu");
			return ret;
		}

		void StartPostGame(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4BC08(relative to base address)
		void SetInventoryPanelOverride(UUserWidget* InInventoryPanelOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4B5C0(relative to base address)
		void SetBottomBarVisibility(ESlateVisibility NewVisibility, bool bIsUsingLegacyBottomBar); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RecoverFromPostGame(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4BA8C(relative to base address)
		void PostBindCheckConditions(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74876D140(relative to base address)
		void OnWidgetStackCleared(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreativeModeratorToolDeactivated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4C654(relative to base address)
		void OnCreativeModeratorToolActivated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4C638(relative to base address)
		void NativeHandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BFEC(relative to base address)
		void HandleStartPostGame(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BC08(relative to base address)
		void HandleRecoverFromPostGame(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BA8C(relative to base address)
		void HandlePreviewScreenshotCameraActivated(bool bActivated); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B7D8(relative to base address)
		void HandlePCDisconnected(AFortPlayerController* Controller, FString DevReason, bool bGracefulDisconnect); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B640(relative to base address)
		void HandleOverrideInventoryPanel(UUserWidget* Widget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B5C0(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B4E8(relative to base address)
		void HandleLocalPlayerRevived(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4B300(relative to base address)
		void HandleLocalPlayerOrTeamWon(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4B2EC(relative to base address)
		void HandleLocalPlayerLost(EEndOfMatchReason LostReason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B26C(relative to base address)
		void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD4B1A8(relative to base address)
		UAthenaGameOverDisplay CreateOrShowGameOverScreen(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4AD54(relative to base address)
		void ClearGameOverScreen(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD4AD40(relative to base address)
		void BP_OnPostGameStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPostGameEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemListWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x3B0 - 0x318)
	class UAthenaItemListWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		FFortItemFilterDefinition ItemFilter; // 0x320(0x60)
		FGameplayTagContainer ItemFilterTags; // 0x380(0x20)
		EInventoryContentSortType ItemSortType; // 0x3A0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x3A1(0x7) UNKNOWN PROPERTY
		UFortItemListView* ItemListView; // 0x3A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemListWidget");
			return ret;
		}

		void OnInventoryUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInventoryUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B16C(relative to base address)
	};


	// Class FortniteUI.AthenaKillFeedEntryWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UAthenaKillFeedEntryWidget : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaKillFeedEntryWidget");
			return ret;
		}

		void OnKillFeedEntrySet(FText& KillfeedEntryText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaKillFeedWidget
	// Inherited from UAthenaCommonPrioritizedWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x370 - 0x360)
	class UAthenaKillFeedWidget : public UAthenaCommonPrioritizedWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_KillFeedList; // 0x360(0x8)
		float MaxDisplayTimeInSeconds; // 0x368(0x4)
		int32_t MaxKillFeedEntries; // 0x36C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaKillFeedWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLevelEffects
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UAthenaLevelEffects : public UCommonUserWidget	
	{
	public:
		TArray<FLevelEffectsData> EffectsData; // 0x2D8(0x10)
		TArray<FName> FlameMaterialParameters; // 0x2E8(0x10)
		FVector2D FlameMaterialRandomRange; // 0x2F8(0x10)
		UCommonBorder* Border_Container; // 0x308(0x8)
		UCommonTextBlock* Text_LvlDesc; // 0x310(0x8)
		UCommonTextBlock* Text_Level; // 0x318(0x8)
		UCommonLazyImage* LazyImage_Flame; // 0x320(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x328(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLevelEffects");
			return ret;
		}

		void SetPlayerState(AFortPlayerStateAthena* InPSA); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4CD8C(relative to base address)
		void OverridePlayerLevel(int32_t PlayerLevel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4CC6C(relative to base address)
		void BP_HandleEffectsLevelChanged(int32_t EffectsLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMinigameActivityWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x368 - 0x2D8)
	class UAthenaMinigameActivityWidget : public UCommonUserWidget	
	{
	public:
		TMap<EMinigameActivityWidgetStatFormat, FText> StatFormats; // 0x2D8(0x50)
		UCommonTextBlock* Text_ActivityName; // 0x328(0x8)
		UCommonTextBlock* Text_Stat; // 0x330(0x8)
		UCommonTextBlock* Text_AddTime; // 0x338(0x8)
		UCommonTextBlock* Text_Score; // 0x340(0x8)
		UCommonTextBlock* Text_Lap; // 0x348(0x8)
		UCommonTextBlock* Text_BestLapTime; // 0x350(0x8)
		bool bMinigameActive; // 0x358(0x1)
		unsigned char UnknownData00_7[0xF]; // 0x359(0xF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMinigameActivityWidget");
			return ret;
		}

		void BP_OnMinigameTimerUIEnabledChanged(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnMinigameProgressUIEnabledChanged(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnMinigameBestLapTimeUIEnabledChanged(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameUIEnabledChanged(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameTimeChanged(float Time, float Delta); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameStarted(FMinigameActivityStartedData& StartData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameScoreChanged(int32_t CurrentScore, int32_t TotalScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameRankChanged(int32_t Rank); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameLapsChanged(int32_t CurrentLap, int32_t MaxLaps); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameEnded(FMinigameActivityEndedData& EndData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameDistanceChanged(float Distance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHandleMinigameBestLapTimeChanged(float BestLapTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPinnedContentList
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortPinnedContentList : public UFortHUDElementWidget	
	{
	public:
		UVerticalBox* VerticalBox_PinnedContentList; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinnedContentList");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPinnedContentList
	// Inherited from UFortPinnedContentList -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x498 - 0x320)
	class UAthenaPinnedContentList : public UFortPinnedContentList	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x320(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPinnedContentList");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPinnedQuestInfo
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaPinnedQuestInfo : public UFortHUDElementWidget	
	{
	public:
		UFortLazyImage* LazyImage_PinColor; // 0x318(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x320(0x10) UNKNOWN PROPERTY
		int32_t NumAllowedQuestDescCharacters; // 0x330(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x334(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPinnedQuestInfo");
			return ret;
		}

		void HandleQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool bDisplayStatusUpdate, bool bDisplayAnnouncementUpdate); // Flags: Final|RequiredAPI|Native|Protected, Memory Exec: 0x7FF74FD4B860(relative to base address)
		void HandlePinnedQuestChanged(FAthenaPinnedQuestData& PinnedQuestData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD4B74C(relative to base address)
		void HandleCurrentQuestsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4AF68(relative to base address)
		void BP_OnSetPinnedQuestInfo(int32_t Achieved, int32_t Required, EFortRarity Rarity, FText& Description, FText& CategoryHeader); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnNewQuestPinned(UFortQuestItem* QuestItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRespawnTimer
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x188 (0x4A0 - 0x318)
	class UAthenaRespawnTimer : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		float MinUpdateTime; // 0x490(0x4)
		float CreativeMinUpdateTime; // 0x494(0x4)
		UCommonTextBlock* Text_Time; // 0x498(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRespawnTimer");
			return ret;
		}

		void OnTimeEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTickDown(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleStartedRespawn(AFortPlayerControllerZone* PlayerController); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4BC1C(relative to base address)
		void AddExtensionWidget_BP(UWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddExtensionWidget(UWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4AC68(relative to base address)
	};


	// Class FortniteUI.AthenaTeamMemberDBNOCountdown
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaTeamMemberDBNOCountdown : public UCommonUserWidget	
	{
	public:
		UImage* Image_Timer; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x2E0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamMemberDBNOCountdown");
			return ret;
		}

		void SetPlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF747FC0B0C(relative to base address)
	};


	// Class FortniteUI.AthenaTeamMemberDBNOState
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x388 - 0x2D8)
	class UAthenaTeamMemberDBNOState : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UObject*> DBNOIndicatorVisual; // 0x2D8(0x20)
		TWeakObjectPtr<UObject*> RevivingIndicatorVisual; // 0x2F8(0x20)
		UCommonVisibilitySwitcher* Switcher_Indicator; // 0x318(0x8)
		UPanelWidget* Panel_DefaultIndicator; // 0x320(0x8)
		UPanelWidget* Panel_CustomIndicator; // 0x328(0x8)
		UCommonLazyImage* LazyImage_Indicator; // 0x330(0x8)
		UImage* Image_Timer; // 0x338(0x8)
		UCommonLazyWidget* LazyWidget_CustomWidgetContainer; // 0x340(0x8)
		UCommonLazyImage* LazyImage_CustomWidgetTimer; // 0x348(0x8)
		FName StartTimeName; // 0x350(0x4)
		FName BaseDurationName; // 0x354(0x4)
		FName InteractingMultiplierName; // 0x358(0x4)
		FName TotalDurationName; // 0x35C(0x4)
		FName NewMethodWeightName; // 0x360(0x4)
		unsigned char UnknownData00_7[0x24]; // 0x364(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamMemberDBNOState");
			return ret;
		}

		void SetPlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74876D588(relative to base address)
		void RefreshVisuals(int32_t InteractingActorCount, float InteractingMultiplier, float InteractDuration); // Flags: Final|Native|Public, Memory Exec: 0x7FF749053FE0(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionItemToast
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x398 - 0x318)
	class UAthenaCollectionItemToast : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x318(0x28) UNKNOWN PROPERTY
		float OpenCollectionScreenInputHoldTime; // 0x340(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x344(0x4) UNKNOWN PROPERTY
		TArray<FName> BoundActions; // 0x348(0x10)
		UCommonTextBlock* Text_ItemNumber; // 0x358(0x8)
		UCommonTextBlock* Text_ItemName; // 0x360(0x8)
		UCommonLazyImage* LazyImage_ItemImage; // 0x368(0x8)
		UButton* Button_MobileClickCatcher; // 0x370(0x8)
		unsigned char UnknownData02_7[0x20]; // 0x378(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionItemToast");
			return ret;
		}

		void ResetToast(); // Flags: Native|Protected, Memory Exec: 0x7FF74E2551C0(relative to base address)
		void HandleMobileClick(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4B5AC(relative to base address)
		bool BPCallableIsDesignTime(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		void BP_OnToastUpdated(EFortCollectedState CollectedState, int32_t NumCollected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnToastReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnDisplayToast(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionItemToastCharacter
	// Inherited from UAthenaCollectionItemToast -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3B0 - 0x398)
	class UAthenaCollectionItemToastCharacter : public UAthenaCollectionItemToast	
	{
	public:
		FText NumLocationsFormat; // 0x398(0x10)
		UCommonRichTextBlock* RichText_NumLocations; // 0x3A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionItemToastCharacter");
			return ret;
		}

		void BP_OnLocationsSet(int32_t NumFound, int32_t NumLocations); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionItemToastFishing
	// Inherited from UAthenaCollectionItemToast -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3D0 - 0x398)
	class UAthenaCollectionItemToastFishing : public UAthenaCollectionItemToast	
	{
	public:
		FText LengthFormat; // 0x398(0x10)
		FText LeaderLengthFormat; // 0x3A8(0x10)
		UCommonRichTextBlock* RichText_Length; // 0x3B8(0x8)
		UCommonTextBlock* Text_LeaderName; // 0x3C0(0x8)
		UCommonRichTextBlock* RichText_LeaderLength; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionItemToastFishing");
			return ret;
		}

		void BP_OnUnlockedNewClue(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnStarRatingSet(int32_t StarRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnRankSet(int32_t Rank, int32_t NumEntries); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaCollectionItemToastSwitcher
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x3C0 - 0x318)
	class UAthenaCollectionItemToastSwitcher : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnResetToast; // 0x358(0x10)
		unsigned char UnknownData01_6[0x20]; // 0x368(0x20) UNKNOWN PROPERTY
		float TimeToShowToast; // 0x388(0x4)
		float ActivationDelay; // 0x38C(0x4)
		FFortPrioritizedWidgetData PrioritizationData; // 0x390(0x2)
		unsigned char UnknownData02_6[0x6]; // 0x392(0x6) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* WidgetSwitcher_Toasts; // 0x398(0x8)
		UAthenaCollectionItemToast* ActiveCollectionItemToastWidget; // 0x3A0(0x8)
		unsigned char UnknownData03_6[0x10]; // 0x3A8(0x10) UNKNOWN PROPERTY
		bool bHasPrioritizedWidgetFocus; // 0x3B8(0x1)
		unsigned char UnknownData04_7[0x7]; // 0x3B9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaCollectionItemToastSwitcher");
			return ret;
		}

		void HandleBoundActionFreed(FName ActionName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4AEE8(relative to base address)
	};


	// Class FortniteUI.AthenaDuelOverlay
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x3B0 - 0x318)
	class UAthenaDuelOverlay : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UCommonRichTextBlock* RichText_Title; // 0x358(0x8)
		UCommonRichTextBlock* RichText_SubTitle; // 0x360(0x8)
		UImage* Image_ChallengedNPCPortrait; // 0x368(0x8)
		UImage* Image_ElimPortrait; // 0x370(0x8)
		UImage* Image_Reward; // 0x378(0x8)
		TWeakObjectPtr<USoundBase*> DuelStartedSound; // 0x380(0x20)
		unsigned char UnknownData01_6[0x8]; // 0x3A0(0x8) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizedWidgetData; // 0x3A8(0x2)
		unsigned char UnknownData02_7[0x6]; // 0x3AA(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDuelOverlay");
			return ret;
		}

		void OnShowOverlay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetupForActivation(EDuelState DuelState, FFortColorPalette& RarityColorPalette); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOutroOverlay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDuelUpdate(EDuelState DuelState, FDuelOverlayData& DuelOverlayData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD4AF7C(relative to base address)
	};


	// Class FortniteUI.FortEmotePicker
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1B0 (0x5A0 - 0x3F0)
	class UFortEmotePicker : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		TMap<FGameplayTag, TWeakObjectPtr> CategoryIcons; // 0x408(0x50)
		TArray<FFortEmotePickerSubCategoryIdentifier> SubCategoryIdentifiers; // 0x458(0x10)
		UClass* DefaultCategoryButtonStyle; // 0x468(0x8)
		UClass* NewCategoryButtonStyle; // 0x470(0x8)
		unsigned char UnknownData01_6[0xC]; // 0x478(0xC) UNKNOWN PROPERTY
		FPrimaryContentSetup PrimaryContentSetup; // 0x484(0x3)
		unsigned char UnknownData02_6[0x1]; // 0x487(0x1) UNKNOWN PROPERTY
		TArray<FDataTableRowHandle> QuickSelectBindings; // 0x488(0x10)
		FDataTableRowHandle FrontEndOpenAction; // 0x498(0x10)
		FDataTableRowHandle PreviousWheelInputAction; // 0x4A8(0x10)
		FDataTableRowHandle NextWheelInputAction; // 0x4B8(0x10)
		FDataTableRowHandle PreviousCategoryInputAction; // 0x4C8(0x10)
		FDataTableRowHandle NextCategoryInputAction; // 0x4D8(0x10)
		FGameplayTag LockerEmotesCategoryTag; // 0x4E8(0x4)
		FGameplayTag BuiltInEmotesCategoryTag; // 0x4EC(0x4)
		FGameplayTag VehicleEmotesCategoryTag; // 0x4F0(0x4)
		FGameplayTag SpecialCategoryTag; // 0x4F4(0x4)
		FGameplayTag MimicCategoryTag; // 0x4F8(0x4)
		FGameplayTag ShoutsCategoryTag; // 0x4FC(0x4)
		FGameplayTag FavoritesCategoryTag; // 0x500(0x4)
		unsigned char UnknownData03_6[0x4]; // 0x504(0x4) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_PreviousWheel; // 0x508(0x8)
		UCommonButtonLegacy* Button_NextWheel; // 0x510(0x8)
		UFortTextButton* Button_CategoryMinusOne; // 0x518(0x8)
		UFortTextButton* Button_CategoryMinusTwo; // 0x520(0x8)
		UFortTextButton* Button_CategoryPlusOne; // 0x528(0x8)
		UFortTextButton* Button_CategoryPlusTwo; // 0x530(0x8)
		UCommonTextBlock* Text_ItemName; // 0x538(0x8)
		UCommonTextBlock* Text_WheelLabel; // 0x540(0x8)
		UFortKeybindWidget* Keybind_Confirm; // 0x548(0x8)
		UCommonButtonLegacy* Button_EmoteFrontend; // 0x550(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x558(0x8)
		UWidget* Overlay_InGameEmoteBinding; // 0x560(0x8)
		UCommonLazyImage* Image_CategoryIcon; // 0x568(0x8)
		UFortPickerOverlay* PickerOverlay_EmoteWheel; // 0x570(0x8)
		UCommonVisibilitySwitcher* VisibilitySwitcher_Pagination; // 0x578(0x8)
		UFortDottedPagination* DottedPagination_Category; // 0x580(0x8)
		UCommonTextBlock* Text_Pagination; // 0x588(0x8)
		UCommonTextBlock* Text_ItemDescription; // 0x590(0x8)
		int32_t CurrentMultiEmoteIndex; // 0x598(0x4)
		bool IsMultiEmoteIndexDirty; // 0x59C(0x1)
		unsigned char UnknownData04_7[0x3]; // 0x59D(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEmotePicker");
			return ret;
		}

		void SetMultiEmoteIndex(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4CD00(relative to base address)
		void OnControllerComponentAttached(AFortPlayerController* OwningController, UFortControllerComponent* ControllerComponent); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C0F4(relative to base address)
		void HandleExternalEmoteRemoved(FName ActionName); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4B0EC(relative to base address)
		void HandleExternalEmoteAdded(FName ActionName); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4B06C(relative to base address)
		int32_t GetMultiEmoteIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD4AD8C(relative to base address)
		void BP_UpdateOverlayWidget(TWeakObjectPtr<UClass*>& OverlayWidgetClass); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_PageChanged(int32_t Direction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_ChangeElementVisibilitiesForFrontend(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_CategoryChanged(int32_t Direction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEndGamePlacementWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaEndGamePlacementWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEndGamePlacementWidget");
			return ret;
		}

		void SetPlacement(int32_t NewPlacement); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Activate(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4AC54(relative to base address)
	};


	// Class FortniteUI.AthenaGameOverDisplay
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x640 - 0x560)
	class UAthenaGameOverDisplay : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		UClass* MatchStatsClass; // 0x568(0x8)
		unsigned char UnknownData01_6[0x18]; // 0x570(0x18) UNKNOWN PROPERTY
		FDataTableRowHandle Input_ReturnToLobby; // 0x588(0x10)
		FDataTableRowHandle Input_NextTeammate; // 0x598(0x10)
		FDataTableRowHandle Input_PreviousTeammate; // 0x5A8(0x10)
		FDataTableRowHandle Input_NextPlayer; // 0x5B8(0x10)
		FDataTableRowHandle Input_PreviousPlayer; // 0x5C8(0x10)
		FDataTableRowHandle Input_ReportPlayer; // 0x5D8(0x10)
		FDataTableRowHandle Input_ToggleBattleMap; // 0x5E8(0x10)
		FDataTableRowHandle Input_ForceStartPostGame; // 0x5F8(0x10)
		UEliminatedOverlay* EliminatedOverlay; // 0x608(0x8)
		UCommonButtonLegacy* Button_Highlights; // 0x610(0x8)
		FScalableFloat bAllowSpectateAllPlayers; // 0x618(0x28)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGameOverDisplay");
			return ret;
		}

		void OnWinningScoreDetermined(int32_t Score); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4CA9C(relative to base address)
		void OnWinnerAnnounced(FString Winner); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4CA00(relative to base address)
		void OnViewTargetChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C9E4(relative to base address)
		void OnToggleFullscreenMap(bool bFullscreenMapVisible); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C8B8(relative to base address)
		void OnSpectatorStreamingChanged(bool bSpectatorStreaming); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C8B8(relative to base address)
		void OnSpecialActorListChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C934(relative to base address)
		void OnRessurectingNowDelegate(bool bRessurectingNow); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C8B8(relative to base address)
		void OnPlayerOrTeamWon(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4C8A4(relative to base address)
		void OnPlayerLost(EEndOfMatchReason LostReason); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4C824(relative to base address)
		void OnPlaceChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C808(relative to base address)
		void OnPawnDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD4C744(relative to base address)
		void OnKillFeedUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4C730(relative to base address)
		void InGameMatchmakingComplete(bool bSuccess); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BECC(relative to base address)
		void HighlightCountChanged(int32_t HighlightCount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BE4C(relative to base address)
		void HandleToggledBattleMapLive(ABattleMapPawnLive* NewSpectatorPawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BD1C(relative to base address)
	};


	// Class FortniteUI.AthenaKeepPlayingTogetherScreenOverlay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x388 - 0x2D8)
	class UAthenaKeepPlayingTogetherScreenOverlay : public UCommonUserWidget	
	{
	public:
		float ToLobbyDelayOnError; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Cancel; // 0x2E0(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_MatchmakingStatus; // 0x2E8(0x8)
		UPanelWidget* Container_CountdownStatus; // 0x2F0(0x8)
		UPanelWidget* Container_FindingMatchStatus; // 0x2F8(0x8)
		UPanelWidget* Container_Error; // 0x300(0x8)
		UPanelWidget* Container_Waiting; // 0x308(0x8)
		UCommonTextBlock* Text_MatchmakingElapsed; // 0x310(0x8)
		UCommonTextBlock* Text_CountdownCurrent; // 0x318(0x8)
		UCommonTextBlock* Text_CountdownNext; // 0x320(0x8)
		UCommonTextBlock* Text_WaitingForSquadCountdown; // 0x328(0x8)
		UAthenaIGMSquadDisplayWidget* LocalPlayerSquadDisplayWidget; // 0x330(0x8)
		unsigned char UnknownData01_7[0x50]; // 0x338(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay");
			return ret;
		}

		void OnWaitingForSquadMemberVotesCountdownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWaitingForSquadMemberVotesCountdownProgressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreMatchmakingCountdownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreMatchmakingCountdownProgressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingUpdate(FTimespan ElapsedTime); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingFinished(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingErrorMessage(FText& Message); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCanceled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKeepPlayingTogetherScreenOverlayDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKeepPlayingTogetherScreenOverlayActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitToLobbyCountdownProgressed(float CountdownValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaKeepPlayingTogetherWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x4E0 - 0x3F0)
	class UAthenaKeepPlayingTogetherWidget : public UCommonActivatableWidget	
	{
	public:
		float ToLobbyDelayOnError; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		UAthenaIGMSquadDisplayWidget* SquadDisplayWidget; // 0x3F8(0x8)
		UCommonButtonLegacy* Button_Skip; // 0x400(0x8)
		UCommonButtonLegacy* Button_OptIn; // 0x408(0x8)
		URichTextBlock* Text_OptInCountdown; // 0x410(0x8)
		unsigned char UnknownData01_6[0x50]; // 0x418(0x50) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* Switcher_MatchmakingStatus; // 0x468(0x8)
		UPanelWidget* Container_CountdownStatus; // 0x470(0x8)
		UPanelWidget* Container_FindingMatchStatus; // 0x478(0x8)
		UPanelWidget* Container_Error; // 0x480(0x8)
		UPanelWidget* Container_Waiting; // 0x488(0x8)
		UCommonTextBlock* Text_MatchmakingElapsed; // 0x490(0x8)
		UCommonTextBlock* Text_CountdownCurrent; // 0x498(0x8)
		UCommonTextBlock* Text_CountdownNext; // 0x4A0(0x8)
		unsigned char UnknownData02_7[0x38]; // 0x4A8(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaKeepPlayingTogetherWidget");
			return ret;
		}

		void OnPreMatchmakingCountdownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreMatchmakingCountdownProgressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingUpdate(FTimespan ElapsedTime); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingFinished(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingErrorMessage(FText& Message); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCanceled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitToLobbyCountdownProgressed(float CountdownValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSkipClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOptInClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaLastKillerInfoWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x380 (0x770 - 0x3F0)
	class UAthenaLastKillerInfoWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x3F0(0x178) UNKNOWN PROPERTY
		FMulticastInlineDelegate ShouldShowDeathReport; // 0x568(0x10)
		float TimeToWait; // 0x578(0x4)
		unsigned char UnknownData01_7[0x1F4]; // 0x57C(0x1F4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLastKillerInfoWidget");
			return ret;
		}

		void SetRankedProgress(FRankedProgressReplicatedData& RankedProgress); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetNumOfKillerKills(int32_t NumOfKillers); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetKillerWeaponIconNameAndRarity(UTexture2D* IconTexture, FText& ItemName, EFortRarity ItemRarity); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetKillerName(FString PlayerName, FString PlayerId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetKillerHealthAndShield(float HealthPercent, float ShieldPercent, float OvershieldPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CheckForPlayerDeath(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD4AD2C(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPostGameScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x480 - 0x3F0)
	class UFortPostGameScreen : public UCommonActivatableWidget	
	{
	public:
		FFortPostGameScreenConfig PostGameScreenConfig; // 0x3F0(0x8)
		bool bBlockFullscreenMapOpening; // 0x3F8(0x1)
		bool bCanGoBackToThisScreen; // 0x3F9(0x1)
		unsigned char UnknownData00_7[0x86]; // 0x3FA(0x86) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameScreen");
			return ret;
		}

		void GoToPreviousScreenAfterActivated(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD744D8(relative to base address)
		void GoToPreviousScreen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD744C4(relative to base address)
		void GoToNextScreenAfterActivated(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD744B0(relative to base address)
		void GoToNextScreen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD7449C(relative to base address)
		bool BP_ShouldDisplay(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74E0ABD98(relative to base address)
		void BP_OnToggleBlurRequest(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD73EA4(relative to base address)
		void BP_OnFadeOutOverlayRequest(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD4BE1C(relative to base address)
	};


	// Class FortniteUI.AthenaMatchXPScreenWidget
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x448 (0x8C8 - 0x480)
	class UAthenaMatchXPScreenWidget : public UFortPostGameScreen	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x480(0x178) UNKNOWN PROPERTY
		bool bAutoTransitionScreen; // 0x5F8(0x1)
		unsigned char UnknownData01_6[0x17]; // 0x5F9(0x17) UNKNOWN PROPERTY
		TWeakObjectPtr<UCommonUserWidget*> DefaultTabWidget; // 0x610(0x8)
		TMap<FName, UAthenaSkewedTabButton*> TabButtons; // 0x618(0x50)
		FText ReadyUpStartText; // 0x668(0x10)
		FFortPostGameScreenConfig SpectatePostGameScreenConfig; // 0x678(0x8)
		TArray<TWeakObjectPtr> DefaultTabs; // 0x680(0x10)
		FDataTableRowHandle NextTabInputAction; // 0x690(0x10)
		FDataTableRowHandle PreviousTabInputAction; // 0x6A0(0x10)
		FDataTableRowHandle NextPlayerInputAction_ModularProgression; // 0x6B0(0x10)
		FDataTableRowHandle PreviousPlayerInputAction_ModularProgression; // 0x6C0(0x10)
		FDataTableRowHandle NextTeammateInputAction_ModularProgression; // 0x6D0(0x10)
		FDataTableRowHandle PreviousTeammateInputAction_ModularProgression; // 0x6E0(0x10)
		FDataTableRowHandle ReturnToIslandInputAction; // 0x6F0(0x10)
		UCommonVisibilitySwitcher* VisibilitySwitcher_Content; // 0x700(0x8)
		UCommonTextBlock* Text_MatchmakingStatus; // 0x708(0x8)
		UHorizontalBox* TabButtonsContainer; // 0x710(0x8)
		UClass* TabButtonClass; // 0x718(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x720(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle ToggleMapInputAction; // 0x728(0x10)
		int32_t NumWidgetsFinished; // 0x738(0x4)
		unsigned char UnknownData03_6[0x64]; // 0x73C(0x64) UNKNOWN PROPERTY
		UAthenaPreserveSquadButton* Button_StayTogether; // 0x7A0(0x8)
		UCommonButtonBase* Button_Back; // 0x7A8(0x8)
		UCommonVisibilitySwitcher* VisibilitySwitcher_NextMatch; // 0x7B0(0x8)
		UCommonButtonBase* Button_NextMatch; // 0x7B8(0x8)
		UCommonButtonBase* Button_PlayWithNewTeam; // 0x7C0(0x8)
		UCommonButtonBase* Button_PrevPlayer; // 0x7C8(0x8)
		UCommonButtonBase* Button_NextPlayer; // 0x7D0(0x8)
		UCommonButtonBase* Button_PrevTeam; // 0x7D8(0x8)
		UCommonButtonBase* Button_NextTeam; // 0x7E0(0x8)
		UCommonButtonBase* Button_Cancel; // 0x7E8(0x8)
		UWidget* Leto_IGMMWrapper; // 0x7F0(0x8)
		UVerticalBox* VBox_MatchMaking; // 0x7F8(0x8)
		UVerticalBox* VBox_NavButtons; // 0x800(0x8)
		USizeBox* SizeBoxNavigationOptions; // 0x808(0x8)
		int32_t ToLobbyDelayOnError; // 0x810(0x4)
		unsigned char UnknownData04_6[0x64]; // 0x814(0x64) UNKNOWN PROPERTY
		UFortCTAButton* MenuEntry_DisabledStayWithSquad; // 0x878(0x8)
		UFortPostGameMenuListView* ListView_PostGameMenu; // 0x880(0x8)
		UWidget* Content_MemberOptedOut; // 0x888(0x8)
		UCommonVisibilitySwitcher* Switcher_DisplayTooltip; // 0x890(0x8)
		USizeBox* SizeBox_ReadyUpTooltip; // 0x898(0x8)
		UAthenaIGMSquadDisplayWidget* SquadDisplayWidget; // 0x8A0(0x8)
		unsigned char UnknownData05_7[0x20]; // 0x8A8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMatchXPScreenWidget");
			return ret;
		}

		void UpdateTabVisibility(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4CE84(relative to base address)
		void UpdateElementsVisibility(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD4CE70(relative to base address)
		void SpectatorStreamingChanged(bool bSpectatorStreaming); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BAA0(relative to base address)
		bool ShouldShowReadyUp(); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74FD4CE0C(relative to base address)
		void SetStatButtonText(FText& InText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetMemberOptedOutState(EKeepPlayingTogetherVotingStatus& Status, FText& MainContext, FText& SecondaryContext); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SelectActiveTabWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD4CCEC(relative to base address)
		void OnXPScreenFinishedLoading__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowTabsSet(bool bShowTabs); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingUpdate(FTimespan ElapsedTime); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingFinished(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingErrorMessage(FText& Message); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCountdownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCountdownProgressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCancelled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitToLobbyCountdownProgressed(int32_t CountdownValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDefaultTabWidgetReady(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCancelReadyUp(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoAdvanceTimeRemainingUpdated(int32_t TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoAdvanceSequenceFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSpectating(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74ED4D3A0(relative to base address)
		void HandleXPRecapFadeOutOverlay(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BE1C(relative to base address)
		void HandleToggleFullscreenMap(bool bFullscreenMapVisible); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BC9C(relative to base address)
		void HandleResurrectingNow(bool bResurrectingNow); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4BAA0(relative to base address)
		void HandleActiveTabWidgetReady(UAthenaPostMatchPanel* PostMatchPanel); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD4ADA4(relative to base address)
		void FocusOnDesiredTarget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD4AD78(relative to base address)
		void BP_OnToggleSpectating(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AutoAdvanceToNextTab(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD4AD18(relative to base address)
	};


	// Class FortniteUI.AthenaPostMatchPanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F8 (0x720 - 0x528)
	class UAthenaPostMatchPanel : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x188]; // 0x528(0x188) UNKNOWN PROPERTY
		FAthenaPostMatchScreenContainerTabInfo PostMatchTabInfo; // 0x6B0(0x40)
		unsigned char UnknownData01_6[0x19]; // 0x6F0(0x19) UNKNOWN PROPERTY
		bool bShouldOverrideDefaultPostGameScreenConfig; // 0x709(0x1)
		FFortPostGameScreenConfig PanelPostGameScreenConfig; // 0x70A(0x8)
		unsigned char UnknownData02_7[0xE]; // 0x712(0xE) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPostMatchPanel");
			return ret;
		}

		void OnUpdateElementsVisibility(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransistionedFromAnotherPostMatchPanel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSpectatingToggled(bool bIsSpectating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPanelReady(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD761B8(relative to base address)
		void OnInitializePanel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivatePanel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsAutoAdvanceTabValid(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD75FE8(relative to base address)
	};


	// Class FortniteUI.AthenaPostMatchPanel_MatchRecap
	// Inherited from UAthenaPostMatchPanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x728 - 0x720)
	class UAthenaPostMatchPanel_MatchRecap : public UAthenaPostMatchPanel	
	{
	public:
		UFortMatchXPRecap* XPRecap; // 0x720(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPostMatchPanel_MatchRecap");
			return ret;
		}

		void HandleReturnToIslandButtonShown(bool bShown); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD75330(relative to base address)
		void HandleFadeOutOverlay(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD7481C(relative to base address)
	};


	// Class FortniteUI.AthenaPostMatchPanel_RankedRecap
	// Inherited from UAthenaPostMatchPanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x780 - 0x720)
	class UAthenaPostMatchPanel_RankedRecap : public UAthenaPostMatchPanel	
	{
	public:
		UEndOfMatchQuestUpdateWidget* Widget_QuestRecap; // 0x720(0x8)
		UScrollBox* Widget_EliminationListScrollBox; // 0x728(0x8)
		FNextTournamentData NextTournamentData; // 0x730(0x30)
		FMulticastInlineDelegate OnCMSImageLoaded; // 0x760(0x10)
		UFortHabaneroDisplayData* HabaneroDisplayData; // 0x770(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x778(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPostMatchPanel_RankedRecap");
			return ret;
		}

		void UpdateTierDisplay(TArray<FFortHabaneroTier>& TierList, int32_t InitialTierIndex, float InitialProgress, int32_t InitialPlayerPosition, int32_t CurrentTierIndex, float CurrentProgress, int32_t CurrentPlayerPosition, bool bIsStale); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateHabaneroErrorCode(EHabaneroProgressError ProgressError, FString OptionalText); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateEliminationTimeline(TArray<FEliminationTimelineEntry>& EliminationTimeline, float MatchTime); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void QueryProgress(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD76448(relative to base address)
		void PlayQuestsIntro(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FD762DC(relative to base address)
		void LogMessage(FString Message); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FD760D4(relative to base address)
		bool GetUnrankedTierData(FFortHabaneroTier& OutUnrankedTierData); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD743D4(relative to base address)
		float GetFailsafeDelayDuration(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD74310(relative to base address)
		void DisplayedRankedRecap(bool bSuccessfulSequence); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD7409C(relative to base address)
	};


	// Class FortniteUI.AthenaPostMatchQuestTier
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x490 - 0x318)
	class UAthenaPostMatchQuestTier : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x318(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPostMatchQuestTier");
			return ret;
		}

		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReadyUpScreenOverlay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF8 (0x3D0 - 0x2D8)
	class UAthenaReadyUpScreenOverlay : public UCommonUserWidget	
	{
	public:
		float ToLobbyDelayOnError; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		FText ReadyUpStatusText; // 0x2E0(0x10)
		FText MatchmakingMessageText; // 0x2F0(0x10)
		UCommonButtonBase* Button_Cancel; // 0x300(0x8)
		UCommonButtonBase* Button_StartMatch; // 0x308(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_MatchmakingStatus; // 0x310(0x8)
		UPanelWidget* Container_CountdownStatus; // 0x318(0x8)
		UPanelWidget* Container_FindingMatchStatus; // 0x320(0x8)
		UPanelWidget* Container_Error; // 0x328(0x8)
		UPanelWidget* Container_Waiting; // 0x330(0x8)
		UPanelWidget* Container_NoStatus; // 0x338(0x8)
		UCommonTextBlock* Text_MatchmakingElapsed; // 0x340(0x8)
		UCommonTextBlock* Text_CountdownCurrent; // 0x348(0x8)
		UCommonTextBlock* Text_CountdownNext; // 0x350(0x8)
		UCommonTextBlock* Text_CountdownStatus; // 0x358(0x8)
		UCommonTextBlock* Text_MatchmakingMessage; // 0x360(0x8)
		UAthenaPreserveSquadButton* Button_StayTogether; // 0x368(0x8)
		UCommonTextBlock* Text_PartyKPTStatus; // 0x370(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x378(0x10) UNKNOWN PROPERTY
		TArray<UAthenaIGMPartyMemberWidget*> PartyWidgets; // 0x388(0x10)
		unsigned char UnknownData02_7[0x38]; // 0x398(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReadyUpScreenOverlay");
			return ret;
		}

		void OnReadyUp(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingUpdate(FTimespan ElapsedTime); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingFinished(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingErrorMessage(FText& Message); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingCancelled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitToLobbyCountdownProgressed(float CountdownValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownProgressed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCancelReadyUp(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReadyUpScreenWidget
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x490 - 0x480)
	class UAthenaReadyUpScreenWidget : public UFortPostGameScreen	
	{
	public:
		UAthenaReadyUpScreenOverlay* ReadyUpOverlay; // 0x480(0x8)
		UAthenaKeepPlayingTogetherScreenOverlay* KeepPlayingTogetherOverlay; // 0x488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReadyUpScreenWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaReadyUpTooltipTickWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaReadyUpTooltipTickWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnReadinessChangedDelegate; // 0x2E0(0x10)
		UFortPartyMember* CachedPartyMember; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReadyUpTooltipTickWidget");
			return ret;
		}

		void OnSetPartyMember(UFortPartyMember* NewPartyMember); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReadinessChanged__DelegateSignature(bool bIsReadied); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReadyUpTooltipWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaReadyUpTooltipWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		TArray<UAthenaReadyUpTooltipTickWidget*> PartyWidgets; // 0x2E0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReadyUpTooltipWidget");
			return ret;
		}

		void HandlePartyWidgetReadinessChanged(bool bIsReadied); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD74EFC(relative to base address)
	};


	// Class FortniteUI.AthenaWinnersList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaWinnersList : public UCommonUserWidget	
	{
	public:
		bool bCanDisplayMultiWinners; // 0x2D8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWinnersList");
			return ret;
		}

		void OnWinnersAnnounced(FAthenaWinnerInfo& WinnerInfo); // Flags: Native|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FD761CC(relative to base address)
	};


	// Class FortniteUI.EliminatedOverlay
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x3D0 - 0x318)
	class UEliminatedOverlay : public UFortHUDElementWidget	
	{
	public:
		bool bIsWaitingForTeamEliminationForPlacement; // 0x318(0x1)
		unsigned char UnknownData00_6[0xF]; // 0x319(0xF) UNKNOWN PROPERTY
		TArray<FText> WinnerNames; // 0x328(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x338(0x8) UNKNOWN PROPERTY
		UOverlay* Overlay_PlayerName; // 0x340(0x8)
		UTextBlock* Text_EliminatedBy; // 0x348(0x8)
		UTextBlock* Text_UserId; // 0x350(0x8)
		UTextBlock* Text_SpectatorName; // 0x358(0x8)
		UVerticalBox* VBox_PlacementText; // 0x360(0x8)
		UVerticalBox* VBox_Winner; // 0x368(0x8)
		UTextBlock* Text_WinnerPoints; // 0x370(0x8)
		UFortRichTextBlockLegacy* Text_Winner; // 0x378(0x8)
		UTextBlock* Text_MultiWinner; // 0x380(0x8)
		UTextBlock* Text_Placement; // 0x388(0x8)
		UCommonTextBlock* Text_PlaceNumber; // 0x390(0x8)
		UTextBlock* Text_PlacePoints; // 0x398(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_MultiWinners; // 0x3A0(0x8)
		UCommonTextBlock* Text_MultiWinner1; // 0x3A8(0x8)
		UCommonTextBlock* Text_MultiWinner2; // 0x3B0(0x8)
		UHorizontalBox* HBox_LoadingBox; // 0x3B8(0x8)
		UAthenaWinnersList* AthenaWinnersList; // 0x3C0(0x8)
		UAthenaPlayerKillsBase* Widget_KillCounter; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EliminatedOverlay");
			return ret;
		}

		void UpdateMultiwinner(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD76AB0(relative to base address)
		void StreamingLoadingChanged(bool bLoading); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD769DC(relative to base address)
		void SetPlaceTextFont(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBannerInfo(FPlayerBannerInfo& BannerInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWinnerDetermined(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateMultiwinner(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowPlacementBox(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResetSpectatingForCreative(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEliminatedByIntro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsEliminatedByIntroAnimFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		AFortPlayerStateAthena GetPlayerState(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD74384(relative to base address)
		FText DeathCauseToText(EDeathCause DeathCause); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortEliminationScreen
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x4A8 - 0x480)
	class UFortEliminationScreen : public UFortPostGameScreen	
	{
	public:
		float ScreenDuration; // 0x480(0x4)
		bool bShouldAutoAdvance; // 0x484(0x1)
		unsigned char UnknownData00_6[0xB]; // 0x485(0xB) UNKNOWN PROPERTY
		UAthenaLastKillerInfoWidget* Widget_KillerInfo; // 0x490(0x8)
		UCommonButtonBase* Button_Continue; // 0x498(0x8)
		UCommonButtonBase* Button_ReportPlayer; // 0x4A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEliminationScreen");
			return ret;
		}

		void SetContinueButtonText(FText& InText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIntroAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMatchStatsScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortMatchStatsScreen : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchStatsScreen");
			return ret;
		}

		void EventUpdateStats(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMatchXPDetails
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0x570 - 0x3F0)
	class UFortMatchXPDetails : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x3F0(0x178) UNKNOWN PROPERTY
		UFortMatchStatsScreen* Section_MatchStats; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchXPDetails");
			return ret;
		}

		void UpdateMatchStats(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD76A70(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMatchXPRecap
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x208 (0x5F8 - 0x3F0)
	class UFortMatchXPRecap : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x1B8]; // 0x3F0(0x1B8) UNKNOWN PROPERTY
		UFortMatchXPTotalEntry* MatchXP_MedalEntry; // 0x5A8(0x8)
		UFortMatchXPTotalEntry* MatchXP_SurvivalBonus; // 0x5B0(0x8)
		UFortMatchXPTotalEntry* MatchXP_CombatBonus; // 0x5B8(0x8)
		UFortMatchXPTotalEntry* MatchXP_MatchXp; // 0x5C0(0x8)
		UFortMatchXPTotalEntry* MatchXP_ChallengeXp; // 0x5C8(0x8)
		UFortMatchXPTotalEntry* MatchXP_TotalEntry; // 0x5D0(0x8)
		UFortMatchXPTotalEntry* MatchCash_TotalEntry; // 0x5D8(0x8)
		UEndOfMatchQuestUpdateWidget* Widget_QuestRecap; // 0x5E0(0x8)
		UWidget* Overlay_ChallengeSection; // 0x5E8(0x8)
		bool bFocusDesiredTargetAtEndOfMatch; // 0x5F0(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x5F1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchXPRecap");
			return ret;
		}

		void ReturnToIslandButtonShown(bool bShown); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD764DC(relative to base address)
		void OnReturnToIslandInputAction(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSpectating(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD760A8(relative to base address)
		void HandleToggleFullscreenMap(bool bFullscreenMapVisible); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD758F8(relative to base address)
		void HandlePostMinigameReset(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD7500C(relative to base address)
		void FadeOutOverlay(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD74158(relative to base address)
		void BP_UpdateWidgetVisibilities(bool bNewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnToggleSpectating(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandlePostMinigameReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AnimateXPTotals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMatchXPTotalEntry
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x360 - 0x318)
	class UFortMatchXPTotalEntry : public UFortHUDElementWidget	
	{
	public:
		bool bIsTotal; // 0x318(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x319(0x7) UNKNOWN PROPERTY
		FText XPType; // 0x320(0x10)
		FText XPSymbol; // 0x330(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x340(0x8) UNKNOWN PROPERTY
		UCommonNumericTextBlock* NumericText_XPValue; // 0x348(0x8)
		UCommonTextBlock* TextBlock_XPType; // 0x350(0x8)
		UCommonTextBlock* TextBlock_XPSymbol; // 0x358(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchXPTotalEntry");
			return ret;
		}

		void InitializeXPCounter(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD75FA4(relative to base address)
		int32_t GetXPTarget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FD74484(relative to base address)
	};


	// Class FortniteUI.FortPostGameMenuEntryOverlay
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortPostGameMenuEntryOverlay : public UUserWidget	
	{
	public:
		UCommonTextBlock* Text_Name; // 0x2B0(0x8)
		UCommonActionWidget* InputAction_Select; // 0x2B8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameMenuEntryOverlay");
			return ret;
		}
	};


	// Class FortniteUI.FortPostGameMenuEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortPostGameMenuEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle HoldInputAction; // 0x13E8(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x13F8(0x10) UNKNOWN PROPERTY
		UFortCTAButton* Overlay_Entry; // 0x1408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameMenuEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortPostGameMenuItemShopEntry
	// Inherited from UFortPostGameMenuEntry -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x1410 - 0x1410)
	class UFortPostGameMenuItemShopEntry : public UFortPostGameMenuEntry	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameMenuItemShopEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortPostGameMenuListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x120 (0x3A0 - 0x280)
	class UFortPostGameMenuListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		UClass* EntryClass; // 0x368(0x8)
		UClass* ItemShopEntryClass; // 0x370(0x8)
		float EntrySpacing; // 0x378(0x4)
		unsigned char UnknownData01_7[0x24]; // 0x37C(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameMenuListView");
			return ret;
		}

		UFortPostGameMenuEntry GetFirstEntry(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD7432C(relative to base address)
	};


	// Class FortniteUI.FortPostGameMobileButtonOverlay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortPostGameMobileButtonOverlay : public UCommonUserWidget	
	{
	public:
		UBacchusButton* Button_PushToTalk; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameMobileButtonOverlay");
			return ret;
		}
	};


	// Class FortniteUI.FortPostGameNewQuestsWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC8 (0x3A0 - 0x2D8)
	class UFortPostGameNewQuestsWidget : public UCommonUserWidget	
	{
	public:
		float NewQuestsEntryBoxDisplayTime; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_NewQuests; // 0x2E0(0x8)
		TArray<UFortQuestObjectiveInfo*> UpdatedQuestObjectiveInfoDisplaying; // 0x2E8(0x10)
		TArray<UFortQuestObjectiveInfo*> UpdatedQuestObjectiveInfoToDisplay; // 0x2F8(0x10)
		FMulticastInlineDelegate OnPlayNewQuestsIntroFinishedDelegate; // 0x308(0x10)
		FMulticastInlineDelegate OnPlayNewQuestsEntryBoxIntroFinishedDelegate; // 0x318(0x10)
		FMulticastInlineDelegate OnPlayNewQuestsEntryBoxOutroFinishedDelegate; // 0x328(0x10)
		unsigned char UnknownData01_7[0x68]; // 0x338(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameNewQuestsWidget");
			return ret;
		}

		void PlayNextNewQuestsBatch(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD762C8(relative to base address)
		void PlayNewQuestUpdates(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD762B4(relative to base address)
		void OnPlayOutro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayNewQuestsIntroFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayNewQuestsEntryBoxOutroFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayNewQuestsEntryBoxOutro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayNewQuestsEntryBoxIntroFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayNewQuestsEntryBoxIntro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayIntro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePlayNewQuestUpdatesDelayTimerExpired(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD74F7C(relative to base address)
		void HandlePlayNewQuestsIntroAnimFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD74FF0(relative to base address)
		void HandlePlayNewQuestsEntryBoxTimerFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74FDC(relative to base address)
		void HandlePlayNewQuestsEntryBoxOutroAnimFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD74FC0(relative to base address)
		void HandlePlayNewQuestsEntryBoxIntroFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74FAC(relative to base address)
		void HandlePlayNewQuestsEntryBoxIntroAnimFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD74F90(relative to base address)
	};


	// Class FortniteUI.FortPostGameScreenContainer
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x78 (0x1D0 - 0x158)
	class UFortPostGameScreenContainer : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x158(0x10) UNKNOWN PROPERTY
		int32_t ScreenPreviewIndex; // 0x168(0x4)
		unsigned char UnknownData01_6[0x14]; // 0x16C(0x14) UNKNOWN PROPERTY
		TArray<UFortPostGameScreen*> AllScreens; // 0x180(0x10)
		unsigned char UnknownData02_7[0x40]; // 0x190(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameScreenContainer");
			return ret;
		}
	};


	// Class FortniteUI.FortPostGameScreenRoot
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x478 - 0x3F0)
	class UFortPostGameScreenRoot : public UCommonActivatableWidget	
	{
	public:
		UFortPlaylistUIInfo* PreviewPlaylistUIInfo; // 0x3F0(0x8)
		UFortPlaylistUIInfo* DefaultScreenOrder; // 0x3F8(0x8)
		TArray<UClass*> PostGameScreenClassesToCreate; // 0x400(0x10)
		TArray<UFortPostGameScreen*> PostGameScreens; // 0x410(0x10)
		USpacer* Spacer_ClickCatcher; // 0x420(0x8)
		UOverlay* Overlay_Placement; // 0x428(0x8)
		UFortPostGameScreenContainer* PostGameScreenContainer_Main; // 0x430(0x8)
		UUserWidget* HUD_CinematicBars; // 0x438(0x8)
		UScaleBox* ScaleBox_CinematicBars_UserSpecified; // 0x440(0x8)
		UScaleBox* ScaleBox_PlacementOverlay_UserSpecified; // 0x448(0x8)
		UFortPostGameNewQuestsWidget* HUD_NewQuestsWidget; // 0x450(0x8)
		UPostGamePlacementOverlay* DefaultPlacementOverlay; // 0x458(0x8)
		UPostGamePlacementOverlay* OverridePlacementOverlay; // 0x460(0x8)
		USoundCue* DefaultVictoryStingerCue; // 0x468(0x8)
		USoundCue* OverrideVictoryStingerCue; // 0x470(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPostGameScreenRoot");
			return ret;
		}

		void ToggleBlur(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPlacementZOrder(bool bIsPlacementAboveContent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPostGameScreenConfigUpdated(FFortPostGameScreenConfig& NewPostGameConfig); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleXPScreenFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD75F88(relative to base address)
		void HandleRecoverFromPostGame(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD7531C(relative to base address)
		void AnimateCinematicBars(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSeasonLevelConfirmationScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x7F8 - 0x718)
	class UFortSeasonLevelConfirmationScreen : public UFortItemPreviewScreen	
	{
	public:
		unsigned char UnknownData00_3[0x38]; // 0x718(0x38) UNKNOWN PROPERTY
		FDataTableRowHandle CloseScreenRowHandle; // 0x750(0x10)
		FGameplayTag SpatialCamera; // 0x760(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x764(0x4) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_IncreasePurchaseTier; // 0x768(0x8)
		UCommonButtonLegacy* Button_DecreasePurchaseTier; // 0x770(0x8)
		UCommonTextBlock* Text_Header; // 0x778(0x8)
		UCommonTextBlock* Text_TierBundleOffer_Header; // 0x780(0x8)
		UCommonTextBlock* Text_RewardCount; // 0x788(0x8)
		UCommonTextBlock* Text_PurchasePrice; // 0x790(0x8)
		UCommonTextBlock* Text_TierBundleOriginalPrice; // 0x798(0x8)
		UCommonTextBlock* Text_TierBundlePurchasePrice; // 0x7A0(0x8)
		UCommonTextBlock* Text_RefundDisclaimer; // 0x7A8(0x8)
		UDynamicEntryBox* EntryBox_RewardIcons; // 0x7B0(0x8)
		UCommonButtonLegacy* Button_Purchase; // 0x7B8(0x8)
		UCommonButtonLegacy* Button_TierBundlePurchase; // 0x7C0(0x8)
		USizeBox* SB_TierBundle; // 0x7C8(0x8)
		UWidget* Widget_TierBundleWarning; // 0x7D0(0x8)
		FText RefundDisclaimerSingleOffer; // 0x7D8(0x10)
		FText RefundDisclaimerMultipleOffer; // 0x7E8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSeasonLevelConfirmationScreen");
			return ret;
		}

		void OnWidgetsRefreshed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPurchaseFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75020(relative to base address)
		void HandleCloseScreen(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD745F8(relative to base address)
		bool CanAffordTierPurchase(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD73EE4(relative to base address)
		bool CanAffordTierBundlePurchase(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD73EC0(relative to base address)
	};


	// Class FortniteUI.FortVictoryRoyaleScreen
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x498 - 0x480)
	class UFortVictoryRoyaleScreen : public UFortPostGameScreen	
	{
	public:
		float ScreenDuration; // 0x480(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x484(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVictoryRoyaleScreen");
			return ret;
		}
	};


	// Class FortniteUI.AthenaIGMPartyMemberWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1A0 (0x478 - 0x2D8)
	class UAthenaIGMPartyMemberWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x2D8(0x178) UNKNOWN PROPERTY
		bool bIsLocalPlayerSlot; // 0x450(0x1)
		bool bIsInGameSlot; // 0x451(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x452(0x6) UNKNOWN PROPERTY
		UFortSocialAvatarIcon* AvatarIconWidget; // 0x458(0x8)
		USocialNameTextBlock* Text_SocialName; // 0x460(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x468(0x8)
		UFortPartyMember* CachedPartyMember; // 0x470(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaIGMPartyMemberWidget");
			return ret;
		}

		void OnWidgetReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUserSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewReadiness(EGameReadiness GameReadiness); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewLocation(EFortPartyMemberLocation NewLocation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsPartyLeaderChanged(bool bIsPartyLeader); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsEmptySlot(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EE1702C(relative to base address)
		bool GetIsLocalPlayerSlot(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD74350(relative to base address)
		bool GetIsInGameSlot(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E7C5930(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaIGMSquadDisplayWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaIGMSquadDisplayWidget : public UCommonUserWidget	
	{
	public:
		UAthenaIGMSquadMemberWidget* LocalPlayerSquadMemberWidget; // 0x2D8(0x8)
		UDynamicEntryBox* EntryBox_SquadMemberWidgets; // 0x2E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaIGMSquadDisplayWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaIGMSquadMemberWidget
	// Inherited from UAthenaIGMPartyMemberWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x4A0 - 0x478)
	class UAthenaIGMSquadMemberWidget : public UAthenaIGMPartyMemberWidget	
	{
	public:
		UFortLazyImage* Image_SquadMemberPortrait; // 0x478(0x8)
		UTextBlock* Text_SquadMemberName; // 0x480(0x8)
		UImage* Image_PartyMemberIndicator; // 0x488(0x8)
		AFortPlayerStateAthena* CachedSquadMember; // 0x490(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x498(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaIGMSquadMemberWidget");
			return ret;
		}

		void OnSetupAsFillSlot(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingStarted(bool bWasOptedIn); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKeepPlayingTogetherVotingStatusChanged(EKeepPlayingTogetherVotingStatus NewStatus, bool bWasOptedIn); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePreserveSquadChanged(bool bPreserveSquad); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaPreserveSquadButton
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaPreserveSquadButton : public UCommonUserWidget	
	{
	public:
		UCommonButtonBase* Button_Internal; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPreserveSquadButton");
			return ret;
		}

		void BP_HandlePreserveSquadChanged(bool bPreserveSquad); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaShutdownWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaShutdownWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaShutdownWidget");
			return ret;
		}

		void OnUpdateCountdown(float RemainingTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStopShowing(float RemainingTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartShowing(float RemainingTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.LastKillerInfoExtensionWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class ULastKillerInfoExtensionWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LastKillerInfoExtensionWidget");
			return ret;
		}

		void SetKillerHealthAndShield(float HealthPercent, float ShieldPercent, float OvershieldPercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.PlacementOverlayCondition
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UPlacementOverlayCondition : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PlacementOverlayCondition");
			return ret;
		}
	};


	// Class FortniteUI.PostGamePlacementOverlay
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x4B0 - 0x318)
	class UPostGamePlacementOverlay : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		UClass* MutatorClassToWaitFor; // 0x490(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x498(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PostGamePlacementOverlay");
			return ret;
		}

		void ShowWinningPlacement(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowTiePlacement(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowLosingPlacement(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ShouldShow(); // Flags: Final|RequiredAPI|Native|Public|Const, Memory Exec: 0x7FF74FD769B8(relative to base address)
		bool NativeShouldShow(); // Flags: RequiredAPI|Native|Protected|Const, Memory Exec: 0x7FF74CDBD9F0(relative to base address)
		void LocalPlacementChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD760C0(relative to base address)
		void HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FadeOutOverlay(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool BP_ShouldShow(); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF749859FE0(relative to base address)
		void BP_ScreenIndexChanged(int32_t NewIndex, UFortPostGameScreen* NewScreen); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.PostGameSpectatedPlayerName
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UPostGameSpectatedPlayerName : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PostGameSpectatedPlayerName");
			return ret;
		}

		void ShowWidget(FString PlayerName, FString PlayerId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Native|Protected, Memory Exec: 0x7FF74E94BB5C(relative to base address)
	};


	// Class FortniteUI.AthenaHUDSituationalFeedback
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaHUDSituationalFeedback : public UFortHUDElementWidget	
	{
	public:
		UFortDynamicEntryBox* EntryBox_Feedback; // 0x318(0x8)
		bool bPrecreateFeedbackEntries; // 0x320(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x321(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDSituationalFeedback");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGenericKeyBindsFeedback
	// Inherited from UAthenaHUDSituationalFeedback -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x358 - 0x328)
	class UAthenaGenericKeyBindsFeedback : public UAthenaHUDSituationalFeedback	
	{
	public:
		TArray<FGenericAction> GenericActions; // 0x328(0x10)
		float DimmedOpacity; // 0x338(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x33C(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGenericKeyBindsFeedback");
			return ret;
		}

		void HandleWeaponHUDKeyActionUpdated(AFortWeapon* Weapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD75F0C(relative to base address)
		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD75E50(relative to base address)
		void HandleTetherChanged(bool bIsTethered); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD75870(relative to base address)
		void HandleSavedTabChanged(bool IsTabSaved); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD753B0(relative to base address)
		void HandleKeybindsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74AB4(relative to base address)
		void HandleInputStackChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74AB4(relative to base address)
		void HandleInputComponentDisplayTextChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74AB4(relative to base address)
		void HandleGenericActionRemoved(FName ActionName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74910(relative to base address)
		void HandleGenericActionAdded(FName ActionName, FText DescriptionText); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74830(relative to base address)
		void HandleEnterExitVehicle(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74808(relative to base address)
		void HandleDBNOCarryPlayerChanged(bool bIsCarrying); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74674(relative to base address)
	};


	// Class FortniteUI.FortKeybindWidgetHUDFeedback
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortKeybindWidgetHUDFeedback : public UCommonUserWidget	
	{
	public:
		UFortKeybindWidget* Keybind_Action; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortKeybindWidgetHUDFeedback");
			return ret;
		}

		void ShowDelineator(bool bShouldShow); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBoundKey(FKey NewBoundAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD76674(relative to base address)
		void SetBoundAction(FName NewBoundAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD765F0(relative to base address)
		void SetAxisScale(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD76568(relative to base address)
	};


	// Class FortniteUI.FortAthenaLoadingMessage
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortAthenaLoadingMessage : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaLoadingMessage");
			return ret;
		}

		void LoadingScreenStateChanged(bool bEnableLoadScreen, FText& HUDReasonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInGameLoadScreenChanged(AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, FText HUDReasonText); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74990(relative to base address)
	};


	// Class FortniteUI.FortInputBlockedWarning
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UFortInputBlockedWarning : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInputBlockedWarning");
			return ret;
		}

		void OnInputFiltered(ECommonInputType AttemptedInputType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.GenericFortPrioritizedWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x360 - 0x318)
	class UGenericFortPrioritizedWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x358(0x2)
		unsigned char UnknownData01_7[0x6]; // 0x35A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GenericFortPrioritizedWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEquippedItemWidgetExtension
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaEquippedItemWidgetExtension : public UFortHUDElementWidget	
	{
	public:
		UFortHUDContext* HUDContext; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEquippedItemWidgetExtension");
			return ret;
		}

		void OnWeaponRemoved(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponModSlotsChanged(AFortWeapon* CurrentWeapon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponEquipped(AFortWeapon* NewWeapon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleWeaponUnEquipped(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74E94BA1C(relative to base address)
		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD75D88(relative to base address)
	};


	// Class FortniteUI.AthenaItemElementWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaItemElementWidgetBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemElementWidgetBase");
			return ret;
		}

		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD76820(relative to base address)
		void OnPreItemToRepresentChanged(UFortItem* ItemToRepresent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPostItemToRepresentChanged(UFortItem* ItemToRepresent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemRarityUpdated(EFortRarity ItemRarity, FFortRarityItemData RarityItemData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD74AC8(relative to base address)
		UFortItem GetItemToRepresent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74949C670(relative to base address)
	};


	// Class FortniteUI.AthenaItemIcon
	// Inherited from UAthenaItemElementWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x328 - 0x2E0)
	class UAthenaItemIcon : public UAthenaItemElementWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2E0(0x10) UNKNOWN PROPERTY
		UImage* Image_ItemIcon; // 0x2F0(0x8)
		UCommonTextBlock* Text_StackCount; // 0x2F8(0x8)
		UImage* Image_AmmoIcon; // 0x300(0x8)
		UImage* Image_RechargeableIcon; // 0x308(0x8)
		UAthenaItemTierWidget* ItemTierWidget; // 0x310(0x8)
		bool bUseLargePreviewImage; // 0x318(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x319(0x3) UNKNOWN PROPERTY
		FName ItemIconTextureParamName; // 0x31C(0x4)
		FName AmmoIconTextureParamName; // 0x320(0x4)
		bool bDisplayInitialAmmoCount; // 0x324(0x1)
		bool bForceHideItemCount; // 0x325(0x1)
		unsigned char UnknownData02_7[0x2]; // 0x326(0x2) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemIcon");
			return ret;
		}

		void UpdateRechargeIcon(UFortItem* ItemToRepresent); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7492D5870(relative to base address)
		void SetUseLargePreviewImage(bool bInUseLargePreviewImage); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD76938(relative to base address)
		void OnStackCountTextUpdated(bool bIsInfinite); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemIconUpdated(bool bHasItemIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAmmoIconUpdated(bool bHasAmmoIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemTierPipWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaItemTierPipWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemTierPipWidget");
			return ret;
		}

		void OnItemTierSet(EFortItemTier ItemTier); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemTierWidget
	// Inherited from UAthenaItemElementWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E8 - 0x2E0)
	class UAthenaItemTierWidget : public UAthenaItemElementWidgetBase	
	{
	public:
		UDynamicEntryBox* EntryBox_TierPips; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemTierWidget");
			return ret;
		}

		void OnItemTierUpdated(EFortItemTier ItemTier); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.NPCStatusWidgetBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x428 - 0x2B0)
	class UNPCStatusWidgetBase : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x178]; // 0x2B0(0x178) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NPCStatusWidgetBase");
			return ret;
		}

		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.NPCStatusWidgetExtensionBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UNPCStatusWidgetExtensionBase : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.NPCStatusWidgetExtensionBase");
			return ret;
		}

		void SetFortPawn(AFortPawn* FortPawn); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPickerOverlay
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x140 (0x530 - 0x3F0)
	class UFortPickerOverlay : public UCommonActivatableWidget	
	{
	public:
		FName GamepadActionName; // 0x3F0(0x4)
		FName KBMActionName; // 0x3F4(0x4)
		FName CancelActionName; // 0x3F8(0x4)
		bool bShouldFlushInputOnActivation; // 0x3FC(0x1)
		bool bShouldFlushInputOnDeactivation; // 0x3FD(0x1)
		bool bShouldCenterMouseOnActivation; // 0x3FE(0x1)
		bool bShouldCloseOnEmptySelection; // 0x3FF(0x1)
		bool bAllowEmptySelection; // 0x400(0x1)
		unsigned char UnknownData00_6[0xAF]; // 0x401(0xAF) UNKNOWN PROPERTY
		bool bRememberLastItem; // 0x4B0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x4B1(0x7) UNKNOWN PROPERTY
		FDataTableRowHandle VirtualAcceptInputAction; // 0x4B8(0x10)
		UFortSlottedRadialMenu* RadialMenu_Picker; // 0x4C8(0x8)
		FName RadialSelectionMaterialParameterName; // 0x4D0(0x4)
		FName RadialSelectionMaterialOriginParameterName; // 0x4D4(0x4)
		FName RadialSelectionMaterialAmountParameterName; // 0x4D8(0x4)
		FName RadialBackgroundMaterialRotationParameterName; // 0x4DC(0x4)
		FName RadialBackgroundMaterialSegmentsParameterName; // 0x4E0(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x4E4(0x4) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* RadialHighlightMID; // 0x4E8(0x8)
		UMaterialInstanceDynamic* RadialMID; // 0x4F0(0x8)
		UImage* Image_Radial; // 0x4F8(0x8)
		UImage* Image_RadialHighlight; // 0x500(0x8)
		UInputComponent* PickerOverlayInputComponent; // 0x508(0x8)
		TArray<FName> BlockedInputActions; // 0x510(0x10)
		TArray<FName> BlockedInputAxes; // 0x520(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPickerOverlay");
			return ret;
		}

		void SetRadialMenuVisibility(ESlateVisibility NewVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD768A0(relative to base address)
		void PlaySelectionAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		ESlateVisibility GetRadialMenuVisibility(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD743A8(relative to base address)
		void BP_OnNoItemChosen(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnItemChosen(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortQuickWeaponDisplay
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x4F0 - 0x3F0)
	class UFortQuickWeaponDisplay : public UCommonActivatableWidget	
	{
	public:
		float AbsentItemKeyBindingOpacity; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		UImage* BG_Center; // 0x3F8(0x8)
		UImage* BG_West; // 0x400(0x8)
		UImage* BG_North; // 0x408(0x8)
		UImage* BG_East; // 0x410(0x8)
		UImage* BG_South; // 0x418(0x8)
		UFortLazyImage* Icon_Center; // 0x420(0x8)
		UFortLazyImage* Icon_West; // 0x428(0x8)
		UFortLazyImage* Icon_North; // 0x430(0x8)
		UFortLazyImage* Icon_East; // 0x438(0x8)
		UFortLazyImage* Icon_South; // 0x440(0x8)
		UFortKeybindWidget* Key_West; // 0x448(0x8)
		UFortKeybindWidget* Key_North; // 0x450(0x8)
		UFortKeybindWidget* Key_East; // 0x458(0x8)
		UFortKeybindWidget* Key_South; // 0x460(0x8)
		UOverlay* OffsetOverlay; // 0x468(0x8)
		unsigned char UnknownData01_7[0x80]; // 0x470(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuickWeaponDisplay");
			return ret;
		}
	};


	// Class FortniteUI.FortRadialSlot
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UFortRadialSlot : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UCommonLazyImage* Image_Icon; // 0x13F0(0x8)
		UCommonTextBlock* Text_Main; // 0x13F8(0x8)
		UWidget* Overlay_EquippedItem; // 0x1400(0x8)
		TWeakObjectPtr<UTexture2D*> LockedTexture; // 0x1408(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRadialSlot");
			return ret;
		}
	};


	// Class FortniteUI.FortRadialPickerEntry
	// Inherited from UFortRadialSlot -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1440 - 0x1428)
	class UFortRadialPickerEntry : public UFortRadialSlot	
	{
	public:
		UHorizontalBox* HorizontalBox_EntryName; // 0x1428(0x8)
		UCommonTextBlock* Text_Center; // 0x1430(0x8)
		UHorizontalBox* HorizontalBox_CenterText; // 0x1438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRadialPickerEntry");
			return ret;
		}

		void OnAvailabilityChanged(bool bIsAvailable); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSquadComsPicker
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x290 (0x680 - 0x3F0)
	class UFortSquadComsPicker : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UAthenaQuickChatBank* RequestOptionsBank; // 0x3F8(0x8)
		TArray<FSquadComsQuickChatEntry> AdditionalRequestOptions; // 0x400(0x10)
		TArray<FSquadComsNPCCommandEntry> NPCCommandOptions; // 0x410(0x10)
		TArray<FSquadComsNPCCommandEntry> WildlifeCommandOptions; // 0x420(0x10)
		TArray<FSquadComsQuickChatEntry> QuickChatOptions; // 0x430(0x10)
		UAthenaQuickChatBank* AdditionalQuickChatOptionsBank; // 0x440(0x8)
		USoundBase* DismissConfirmSound; // 0x448(0x8)
		USoundBase* DefaultConfirmSound; // 0x450(0x8)
		FText DefaultMultiCompanionText; // 0x458(0x10)
		TWeakObjectPtr<UTexture2D*> DefaultMultiCompanionPreviewImage; // 0x468(0x20)
		PingCommandType PingCommandSelected; // 0x488(0x1)
		EFortWorldMarkerType WorldMarkerSelected; // 0x489(0x1)
		unsigned char UnknownData01_6[0x16]; // 0x48A(0x16) UNKNOWN PROPERTY
		TMap<FGameplayTag, TWeakObjectPtr> CategoryIcons; // 0x4A0(0x50)
		TArray<FFortSquadComsPickerSubCategoryIdentifier> SubCategoryIdentifiers; // 0x4F0(0x10)
		unsigned char UnknownData02_6[0x10]; // 0x500(0x10) UNKNOWN PROPERTY
		AFortPlayerState* AllyNPCPlayerState; // 0x510(0x8)
		bool bShowSquadComsInSolo; // 0x518(0x1)
		unsigned char UnknownData03_6[0x7]; // 0x519(0x7) UNKNOWN PROPERTY
		TArray<PingCommandType> BlockedPingCommandTypes; // 0x520(0x10)
		FPrimaryContentSetup PrimaryContentSetup; // 0x530(0x3)
		unsigned char UnknownData04_6[0x5]; // 0x533(0x5) UNKNOWN PROPERTY
		TArray<FDataTableRowHandle> QuickSelectBindings; // 0x538(0x10)
		FDataTableRowHandle PreviousWheelInputAction; // 0x548(0x10)
		FDataTableRowHandle NextWheelInputAction; // 0x558(0x10)
		FDataTableRowHandle PreviousCategoryInputAction; // 0x568(0x10)
		FDataTableRowHandle NextCategoryInputAction; // 0x578(0x10)
		FDataTableRowHandle DismissNPCInputAction; // 0x588(0x10)
		FDataTableRowHandle OnReleaseSelectInputAction; // 0x598(0x10)
		UCommonButtonLegacy* Button_PreviousWheel; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_NextWheel; // 0x5B0(0x8)
		UFortTextButton* Button_CategoryMinusOne; // 0x5B8(0x8)
		UFortTextButton* Button_CategoryPlusOne; // 0x5C0(0x8)
		UCommonTextBlock* Text_ItemName; // 0x5C8(0x8)
		UCommonTextBlock* Text_WheelLabel; // 0x5D0(0x8)
		UFortKeybindWidget* Keybind_Confirm; // 0x5D8(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x5E0(0x8)
		UWidget* Overlay_InGameChatBinding; // 0x5E8(0x8)
		UFortPickerOverlay* PickerOverlay_SquadComs; // 0x5F0(0x8)
		UCommonVisibilitySwitcher* VisibilitySwitcher_Pagination; // 0x5F8(0x8)
		UFortDottedPagination* DottedPagination_Category; // 0x600(0x8)
		UCommonTextBlock* Text_Pagination; // 0x608(0x8)
		UCommonLazyImage* Image_NPCIcon; // 0x610(0x8)
		UCommonTextBlock* Text_NPCName; // 0x618(0x8)
		UWidget* Overlay_PagesTutorial; // 0x620(0x8)
		UWidget* Overlay_UnavailableWarning; // 0x628(0x8)
		UWidget* Overlay_DismissNPC; // 0x630(0x8)
		UFortCTAButton* Button_DismissNPC; // 0x638(0x8)
		FGameplayTag PagesTutorialTag; // 0x640(0x4)
		unsigned char UnknownData05_6[0x4]; // 0x644(0x4) UNKNOWN PROPERTY
		UFortAutoRunNotificationWidget* Widget_AutoRunNotification; // 0x648(0x8)
		TArray<ECardinalPoint> Ordering_Request; // 0x650(0x10)
		TArray<ECardinalPoint> Ordering_NPCCommands; // 0x660(0x10)
		TArray<ECardinalPoint> Ordering_SquadComs; // 0x670(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSquadComsPicker");
			return ret;
		}

		void PlaySelectionAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateWarningVisibility(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateNPCName(FText& UpdatedName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateNPCColor(FSlateColor& UpdatedColor); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_PageChanged(int32_t Direction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_CategoryChanged(int32_t Direction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortWeaponWheel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x468 - 0x3F0)
	class UFortWeaponWheel : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x34]; // 0x3F0(0x34) UNKNOWN PROPERTY
		bool bRememberLastItem; // 0x424(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x425(0x3) UNKNOWN PROPERTY
		int32_t NumOfQuickBarItems; // 0x428(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x42C(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle VirtualAcceptInputAction; // 0x430(0x10)
		UFortSlottedRadialMenu* RadialMenu_Picker; // 0x440(0x8)
		UCommonTextBlock* Text_ItemName; // 0x448(0x8)
		UFortKeybindWidget* Keybind_Confirm; // 0x450(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x458(0x8)
		UImage* Image_RadialHighlight; // 0x460(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponWheel");
			return ret;
		}

		void PlaySelectionAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnItemChosen(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaObjectiveEntryBase
	// Inherited from UAthenaChallengeEntry -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x340 - 0x2B8)
	class UAthenaObjectiveEntryBase : public UAthenaChallengeEntry	
	{
	public:
		unsigned char UnknownData00_3[0x1]; // 0x2B8(0x1) UNKNOWN PROPERTY
		bool IsQuestEnded; // 0x2B9(0x1)
		unsigned char UnknownData01_6[0x16]; // 0x2BA(0x16) UNKNOWN PROPERTY
		float RefreshRate; // 0x2D0(0x4)
		unsigned char UnknownData02_6[0x34]; // 0x2D4(0x34) UNKNOWN PROPERTY
		UProgressBar* ProgressBar_ObjectiveProgress; // 0x308(0x8)
		UFortEventDateTimeTextBlock* Text_Timer; // 0x310(0x8)
		UOverlay* Overlay_ProgressBar; // 0x318(0x8)
		UOverlay* Overlay_ProgressValue_Title; // 0x320(0x8)
		UOverlay* Overlay_Timer; // 0x328(0x8)
		UDynamicEntryBox* DynamicEntryBox_OptionalEntries; // 0x330(0x8)
		bool bRecentlyStarted; // 0x338(0x1)
		unsigned char UnknownData03_7[0x7]; // 0x339(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaObjectiveEntryBase");
			return ret;
		}

		void OnUpdatePrimaryObjectiveProgress(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateBountyThreatLevel(EPlayerBountyThreatLevel NewPlayerBountyThreatLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateBountyThreatInformationVisibilityChange(ESlateVisibility NewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTimerTextBlockUpdated(double RemainingTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveRewardSet(int32_t RewardQuantity, EFortEarnedSubRewardType RewardType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveInitialize(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveEntrySetup(FUrgentQuestData& UrgentQuestData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDescOverrideChanged(FGameplayTag& OverrideTag); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyReadyToRemoveEntry(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD76180(relative to base address)
		void HandleQuestStageCompleted(UFortQuestItem* QuestItem, int32_t NewStage); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD751F4(relative to base address)
		void HandleOnPlayerBountyThreatLevelUpdated(EPlayerBountyThreatLevel NewPlayerBountyThreatLeve); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74E7C(relative to base address)
		void HandleOnPlayerBountyThreatLevelEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74E68(relative to base address)
		void BP_OnEntryCompleted(FUrgentQuestData& UrgentQuestData, bool bIsQuestCompleted, FGameplayTagContainer& CompletionPathContext); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpecialEventChallengesWidget
	// Inherited from UAthenaChallengesWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x3E0 - 0x3B8)
	class UAthenaSpecialEventChallengesWidget : public UAthenaChallengesWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3B8(0x8) UNKNOWN PROPERTY
		float UrgentQuestMessagingStartBuffer; // 0x3C0(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x3C4(0x4) UNKNOWN PROPERTY
		AFortPlayerStateAthena* AttachedPlayerState; // 0x3C8(0x8)
		TArray<FUrgentQuestData> ActiveUrgentQuestDataArray; // 0x3D0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpecialEventChallengesWidget");
			return ret;
		}

		void RemoveEntry(UUserWidget* Entry); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD7645C(relative to base address)
		void PopulateWithOngoingUrgentQuests(AFortPlayerController* FortPlayerController); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD7630C(relative to base address)
		void HandleUrgentQuestStarted(FUrgentQuestData& InUrgentQuestData, float EventTimeRemaining); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75BF4(relative to base address)
		void HandleUrgentQuestEnded(AFortPlayerStateAthena* PlayerState, FGameplayTag& EventTag, EFortQuestState QuestState, FGameplayTagContainer& CompletionPathContext); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75A50(relative to base address)
		void HandleUrgentQuestDescOverrideChanged(FGameplayTag& UrgentQuestTag, FGameplayTag& OverrideTag); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75978(relative to base address)
		void HandleSpectatorFailUrgentQuest(FGameplayTag& EventTag); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD757E4(relative to base address)
		void HandleSpectatorCompleteUrgentQuestMessage(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75658(relative to base address)
		void HandleSpectatorCompleteUrgentQuest(FGameplayTag& EventTag); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD755CC(relative to base address)
		void HandleClearAllUrgentQuestEntries(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD745E4(relative to base address)
		void GetActiveUrgentQuestDataByEventTag(FGameplayTag& EventTag, FUrgentQuestData& OutUrgentQuestData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD7420C(relative to base address)
		UAthenaObjectiveEntryBase FindChallengeEntryWithExactTag(FGameplayTag& EventTag); // Flags: Final|Native|Private|HasOutParms|Const, Memory Exec: 0x7FF74FD74174(relative to base address)
		void DisplayUrgentQuestEndedMessage(FUrgentQuestData& UrgentQuestData, bool Success); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD73F08(relative to base address)
	};


	// Class FortniteUI.AthenaSpecialEventStartedOverlay
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x368 - 0x318)
	class UAthenaSpecialEventStartedOverlay : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		AFortPlayerStateAthena* AttachedPlayerState; // 0x358(0x8)
		FGameplayTag BountyParentTag; // 0x360(0x4)
		FFortPrioritizedWidgetData PrioritizedWidgetData; // 0x364(0x2)
		unsigned char UnknownData01_7[0x2]; // 0x366(0x2) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpecialEventStartedOverlay");
			return ret;
		}

		void OnShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPrioitizedFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPrioitizedActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsBountyUrgentQuest(FGameplayTag& EventTag); // Flags: Final|Native|Private|HasOutParms|Const, Memory Exec: 0x7FF74FD7600C(relative to base address)
		void HandleShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD75438(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD746FC(relative to base address)
		float GetOutroDelay(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD74368(relative to base address)
	};


	// Class FortniteUI.SquadComsKey
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class USquadComsKey : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SquadComsKey");
			return ret;
		}

		void HandleOnNPCUnconvertEvent(AFortPawn* UnconvertedFortPawn, EUnconvertReason UnconvertReason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74DA4(relative to base address)
		void HandleOnNPCConvertEvent(AFortPawn* ConvertedFortPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD74BD4(relative to base address)
		void HandleBindNPCConvertEvent(AFortPlayerController* PlayerController, AActor* OldViewTarget, AActor* NewViewTarget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD744EC(relative to base address)
	};


	// Class FortniteUI.AthenaTransientQuestStartedOverlay
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x368 - 0x318)
	class UAthenaTransientQuestStartedOverlay : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_MobileClickCatcher; // 0x358(0x8)
		unsigned char UnknownData01_6[0x1]; // 0x360(0x1) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizedWidgetData; // 0x361(0x2)
		unsigned char UnknownData02_7[0x5]; // 0x363(0x5) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTransientQuestStartedOverlay");
			return ret;
		}

		void OnTransientQuestStarted(UFortQuestItem* QuestItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPrioitizedFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPrioitizedActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTransientQuestStarted(UFortQuestItem* QuestItem, UFortQuestItemDefinition_Athena* PreceedingQuestDefAthena); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C0AC(relative to base address)
		float GetOutroDelay(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AB2C(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryGroupAmmo
	// Inherited from UAthenaInventoryGroupBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x340 - 0x340)
	class UAthenaInventoryGroupAmmo : public UAthenaInventoryGroupBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupAmmo");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryGroupIngredients
	// Inherited from UAthenaInventoryGroupBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x360 - 0x340)
	class UAthenaInventoryGroupIngredients : public UAthenaInventoryGroupBase	
	{
	public:
		FGameplayTagContainer IngredientItemTagContainer; // 0x340(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupIngredients");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryGroupPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x470 - 0x2D8)
	class UAthenaInventoryGroupPanel : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x190]; // 0x2D8(0x190) UNKNOWN PROPERTY
		UVerticalBox* ExtensionRowHolder; // 0x468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupPanel");
			return ret;
		}

		void GetOrCreateInventoryGroups(TArray<UAthenaInventoryGroupBase*>& OutInventoryGroups); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryGroupCurrency
	// Inherited from UAthenaInventoryGroupBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x360 - 0x340)
	class UAthenaInventoryGroupCurrency : public UAthenaInventoryGroupBase	
	{
	public:
		FGameplayTagContainer CurrencyItemTags; // 0x340(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryGroupCurrency");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInventoryItemInfo
	// Inherited from UAthenaItemElementWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F8 (0x4D8 - 0x2E0)
	class UAthenaInventoryItemInfo : public UAthenaItemElementWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x2E0(0x178) UNKNOWN PROPERTY
		UCommonTextBlock* Text_ItemName; // 0x458(0x8)
		UCommonTextBlock* Text_ItemDescription; // 0x460(0x8)
		UCommonTextBlock* Text_ItemRarity; // 0x468(0x8)
		UBorder* Border_ItemType; // 0x470(0x8)
		UCommonTextBlock* Text_ItemCategory; // 0x478(0x8)
		UImage* Image_ItemCategory; // 0x480(0x8)
		UAthenaItemIcon* ItemIcon; // 0x488(0x8)
		UImage* Image_RechargeableIcon; // 0x490(0x8)
		UAthenaItemTierWidget* ItemTierWidget; // 0x498(0x8)
		UAthenaInventoryItemStatsWidget* ItemStatsWidget; // 0x4A0(0x8)
		FDataTableRowHandle InspectItemInputRowHandle; // 0x4A8(0x10)
		FText ItemRarityTextFormat; // 0x4B8(0x10)
		FName CategoryIconTextureParamName; // 0x4C8(0x4)
		unsigned char UnknownData01_7[0xC]; // 0x4CC(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryItemInfo");
			return ret;
		}

		void UpdateRechargeIcon(UFortItem* ItemToRepresent); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7499FCFD8(relative to base address)
		void OnOwnerDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemRarityTextUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemNameTextUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemDescriptionTextUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemCategoryTextUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemCategoryIconUpdated(bool bHasCategoryIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInspectItemInput(bool bPressed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInventoryItemSelected(UFortItem* SelectedItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD76820(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryItemStatEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UAthenaInventoryItemStatEntry : public UCommonUserWidget	
	{
	public:
		bool bValueIsInfinite; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* Text_StatName; // 0x2E0(0x8)
		UCommonTextBlock* Text_StatValue; // 0x2E8(0x8)
		UCommonTextBlock* Text_StatDeltaValue; // 0x2F0(0x8)
		FText StatDeltaTextFormat; // 0x2F8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryItemStatEntry");
			return ret;
		}

		void OnStatInitialized(float Value, float ComparisonValue, float MinValue, float MaxValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemRaritySet(EFortRarity ItemRarity, FFortRarityItemData RarityItemData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryItemStatsWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaInventoryItemStatsWidget : public UCommonUserWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_Stats; // 0x2D8(0x8)
		UDataTable* ItemStatsBoundsTable; // 0x2E0(0x8)
		UFortTooltipLoadingWrapper* ItemTooltipLoader; // 0x2E8(0x8)
		UFortTooltipLoadingWrapper* ComparisonItemTooltipLoader; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryItemStatsWidget");
			return ret;
		}

		void HandleTooltipAssetsLoaded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C098(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryPanel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x480 (0x870 - 0x3F0)
	class UAthenaInventoryPanel : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x180]; // 0x3F0(0x180) UNKNOWN PROPERTY
		FName TabNameID; // 0x570(0x4)
		unsigned char UnknownData01_6[0xC]; // 0x574(0xC) UNKNOWN PROPERTY
		FFortTabButtonLabelInfo TabButtonLabelInfo; // 0x580(0xF0)
		FFortTabButtonLabelInfo CreativeTabButtonLabelInfo; // 0x670(0xF0)
		UClass* QuantitySelectorClass; // 0x760(0x8)
		UDataTable* StackSizeDataTable; // 0x768(0x8)
		FDataTableRowHandle DropItemInputRowHandle; // 0x770(0x10)
		FDataTableRowHandle DropAllInputRowHandle; // 0x780(0x10)
		FDataTableRowHandle DropStackInputRowHandle; // 0x790(0x10)
		FDataTableRowHandle DropHalfInputRowHandle; // 0x7A0(0x10)
		FText DropItemsText; // 0x7B0(0x10)
		FText ConfirmDropText; // 0x7C0(0x10)
		FText DropStackTextFormat; // 0x7D0(0x10)
		FGameplayTagContainer IngredientItemTags; // 0x7E0(0x20)
		UAthenaInventoryGroupPanel* DefaultGroupPanel; // 0x800(0x8)
		UAthenaInventoryGroupPanel* CurrentGroupPanel; // 0x808(0x8)
		UPanelWidget* GroupPanelHolder; // 0x810(0x8)
		UVerticalBox* QuickbarEditorHolder; // 0x818(0x8)
		UAthenaQuickbarEditorBase* DefaultQuickbarEditor; // 0x820(0x8)
		UAthenaQuickbarEditorBase* CurrentQuickbarEditor; // 0x828(0x8)
		TArray<UFortItemTileView*> InventorySections; // 0x830(0x10)
		UAthenaInventoryItemInfo* ItemInfoWidget; // 0x840(0x8)
		TArray<UAthenaInventoryGroupBase*> InventoryGroups; // 0x848(0x10)
		unsigned char UnknownData02_7[0x18]; // 0x858(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryPanel");
			return ret;
		}

		void HandleInventoryItemSelected(UFortItem* SelectedInventoryItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B500(relative to base address)
		void ChangeQuickbarOrder(bool bIsBackwards); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749AC47D4(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryPanelContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x2B0 (0x6A0 - 0x3F0)
	class UAthenaInventoryPanelContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x180]; // 0x3F0(0x180) UNKNOWN PROPERTY
		FName TabNameID; // 0x570(0x4)
		unsigned char UnknownData01_6[0xC]; // 0x574(0xC) UNKNOWN PROPERTY
		FFortTabButtonLabelInfo TabButtonLabelInfo; // 0x580(0xF0)
		UClass* TabButtonClass; // 0x670(0x8)
		UFortTabListWidgetBase_Legacy* TabList; // 0x678(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_Tabs; // 0x680(0x8)
		unsigned char UnknownData02_7[0x18]; // 0x688(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryPanelContainer");
			return ret;
		}

		void HandleInventoryTabChanged(UWidget* NewActiveWidget, int32_t WidgetIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF747997E44(relative to base address)
	};


	// Class FortniteUI.AthenaQuickBarSlotButtonBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UAthenaQuickBarSlotButtonBase : public UCommonButtonBase	
	{
	public:
		EFortQuickBars QuickbarIndex; // 0x1390(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x1391(0x3) UNKNOWN PROPERTY
		int32_t SlotIndex; // 0x1394(0x4)
		UAthenaItemIcon* ItemIcon; // 0x1398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuickBarSlotButtonBase");
			return ret;
		}

		void OnSlottedItemChanged(UFortItem* SlottedItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeOnOwnerDeactivated(); // Flags: RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74F495B48(relative to base address)
		void NativeOnOwnerActivated(); // Flags: RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74F495B90(relative to base address)
		void HandleQuickbarContentsChanged(EFortQuickBars InQuickBarIndex, TArray<int32_t>& ChangedSlots); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9BDEC(relative to base address)
		void HandleInventoryItemSelected(UFortItem* SelectedItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B580(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryQuickBarSlotButton
	// Inherited from UAthenaQuickBarSlotButtonBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0x1520 - 0x13A0)
	class UAthenaInventoryQuickBarSlotButton : public UAthenaQuickBarSlotButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x180]; // 0x13A0(0x180) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryQuickBarSlotButton");
			return ret;
		}

		void OnSwapStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSwapComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInventorySwapStarted(int32_t SwapSlotIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B634(relative to base address)
		void HandleInventorySwapComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B620(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryScreenContainer
	// Inherited from UFortInventoryScreenContainer -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1B8 (0x5E8 - 0x430)
	class UAthenaInventoryScreenContainer : public UFortInventoryScreenContainer	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x430(0x178) UNKNOWN PROPERTY
		UClass* TabButtonClass; // 0x5A8(0x8)
		TArray<FName> AdditionalBlockedInputActions; // 0x5B0(0x10)
		UScaleBox* ScaleBox_Leto; // 0x5C0(0x8)
		UFortTabListWidgetBase* TabList_Inventory; // 0x5C8(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_InventoryTabs; // 0x5D0(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x5D8(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x5E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryScreenContainer");
			return ret;
		}

		void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaQuickBarSlotExtensionWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UAthenaQuickBarSlotExtensionWidgetBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuickBarSlotExtensionWidgetBase");
			return ret;
		}

		void OnOwnerUnhovered(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerSelected(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerHovered(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerDeselected(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerDeactivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemChanged(UFortItem* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemShopConfiguration
	// Inherited from UDataAsset -> UObject
	// Size: 0x110 (0x140 - 0x30)
	class UAthenaItemShopConfiguration : public UDataAsset	
	{
	public:
		FString SubscriptionOfferId; // 0x30(0x10)
		FString CrewBlingOfferId; // 0x40(0x10)
		TArray<FName> LimitedTimeStorefrontNames; // 0x50(0x10)
		FAthenaItemShopReloadMtxInfo ItemShopReloadMtxInfo; // 0x60(0x80)
		FName BattlePassSectionId; // 0xE0(0x4)
		FName SubscriptionSectionId; // 0xE4(0x4)
		UCatalogMessaging* TileViolatorTextTable; // 0xE8(0x8)
		TMap<FName, TWeakObjectPtr> DynamicBackgrounds; // 0xF0(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopConfiguration");
			return ret;
		}
	};


	// Class FortniteUI.AthenaItemShopOfferDetailsWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x140 (0x530 - 0x3F0)
	class UAthenaItemShopOfferDetailsWidgetBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x38]; // 0x3F0(0x38) UNKNOWN PROPERTY
		TArray<UFortStoreFrontOfferInfo*> PagedItems; // 0x428(0x10)
		UFortStoreFrontOfferInfo* OfferData; // 0x438(0x8)
		UCommonTextBlock* Text_CosmeticWarning; // 0x440(0x8)
		UCommonTextBlock* TextUndoAvailability; // 0x448(0x8)
		UCommonTextBlock* Text_UndoBottomBarWarning; // 0x450(0x8)
		UFortCTAButton* Button_Undo; // 0x458(0x8)
		FDataTableRowHandle UndoAction; // 0x460(0x10)
		unsigned char UnknownData01_6[0x30]; // 0x470(0x30) UNKNOWN PROPERTY
		UFortItemShopVM* ItemShopVM; // 0x4A0(0x8)
		UFortItemShopOfferVM* OfferVM; // 0x4A8(0x8)
		UClass* PurchaseModalClass; // 0x4B0(0x8)
		TWeakObjectPtr<UClass*> ConfirmPurchaseModalClass; // 0x4B8(0x20)
		unsigned char UnknownData02_6[0x38]; // 0x4D8(0x38) UNKNOWN PROPERTY
		bool bShowRefundWarningWhileMatchmaking; // 0x510(0x1)
		bool bShowRefundWarningWhileInZone; // 0x511(0x1)
		unsigned char UnknownData03_6[0x6]; // 0x512(0x6) UNKNOWN PROPERTY
		TArray<FPurchasedItemInfo> CachedRefundedItems; // 0x518(0x10)
		unsigned char UnknownData04_7[0x8]; // 0x528(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase");
			return ret;
		}

		void UpdateParentOffer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9DAC8(relative to base address)
		void ShowReloadMtx(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9D9BC(relative to base address)
		void ShowPurchasedOverlayWidget(int32_t QuantityPurchased, TArray<FPurchasedItemInfo> PurchasedItems, bool bShowAsRefund, FString OfferId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9D820(relative to base address)
		void ShowItemPresentationScreen(TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9D67C(relative to base address)
		bool ShouldHavePurchaseConfirmation(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9D658(relative to base address)
		void SetParentOffer(UFortItemShopOfferVM* InParentOffer); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetOfferVM(UFortItemShopOfferVM* InOfferVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9D310(relative to base address)
		void SetOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9D290(relative to base address)
		void SetItemShopVM(UFortItemShopVM* InItemShopVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9D170(relative to base address)
		void SendShopInteractionAnalytic(FString Interaction, float HoldTime); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FD9CEC0(relative to base address)
		void SendRealMoneyPurchase(int32_t PriceIndex, int32_t Quantity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9CE00(relative to base address)
		void RequestPurchasePinModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9CD5C(relative to base address)
		void RefreshUndoState(UFortStoreFrontOfferInfo* OfferPurchased); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9CC34(relative to base address)
		void RefreshOfferInfo(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9CC0C(relative to base address)
		void PurchaseOffer(FDelegateProperty& Callback, int32_t Quantity, float HoldTime); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9CA50(relative to base address)
		void PurchaseAmountRight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PurchaseAmountLeft(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateStatus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUndoAction(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPaymentLegalText(FText& LegalText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPurchasingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsReloadMtxEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9C384(relative to base address)
		bool IsFocusableButton(UWidget* InButton); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9C2E0(relative to base address)
		void HandleUndoAction(float HoldTime); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9C170(relative to base address)
		void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9BED0(relative to base address)
		void HandleGiftingItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9B29C(relative to base address)
		void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9AF04(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfoById(FString OfferId); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AA8C(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AA5C(relative to base address)
		UWidget GetNextFocusableButton(TArray<UWidget*> Buttons, int32_t InitialIndex, bool bForwardDirection); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9A92C(relative to base address)
		void EndPurchase(TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9A57C(relative to base address)
		void BP_OnSetOffer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AttemptPurchase(); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74D8BB7E0(relative to base address)
	};


	// Class FortniteUI.AthenaItemShopDisplayAssetOfferDetails
	// Inherited from UAthenaItemShopOfferDetailsWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x5E0 - 0x530)
	class UAthenaItemShopDisplayAssetOfferDetails : public UAthenaItemShopOfferDetailsWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x530(0x10) UNKNOWN PROPERTY
		UWidget* ContentPurchaseFocusWidget; // 0x540(0x8)
		FDataTableRowHandle BackAction; // 0x548(0x10)
		FDataTableRowHandle PurchaseAction; // 0x558(0x10)
		FDataTableRowHandle VBuckAction; // 0x568(0x10)
		FDataTableRowHandle ReloadMtxAction; // 0x578(0x10)
		FDataTableRowHandle LegalTextAction; // 0x588(0x10)
		UFortCTAButton* Button_Purchase; // 0x598(0x8)
		UFortCTAButton* Button_SendGift; // 0x5A0(0x8)
		UFortCTAButton* Button_Inspect; // 0x5A8(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x5B0(0x8)
		UCommonButtonBase* Button_MTX; // 0x5B8(0x8)
		UWidget* Container_SimpleMTXDisplay; // 0x5C0(0x8)
		UScrollBox* ScrollBox_Details; // 0x5C8(0x8)
		unsigned char UnknownData01_6[0xC]; // 0x5D0(0xC) UNKNOWN PROPERTY
		FPrimaryContentSetup PrimaryContentSetup; // 0x5DC(0x3)
		unsigned char UnknownData02_7[0x1]; // 0x5DF(0x1) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails");
			return ret;
		}

		void UpdatePurchaseBlocked(bool bIsBlocked, FText& PurchaseNotAllowedReason); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowPurchasedOverlay(int32_t QuantityPurchased, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowPurchaseConfirmation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowLegalTextInPopup(FText& ItemName, FText& LegalText); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9D718(relative to base address)
		void SetVBuckActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9D428(relative to base address)
		void SetPurchaseActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9D3A8(relative to base address)
		void SetMtxButtonVisible(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetCanPurchase(bool bInCanPurchase); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9CF94(relative to base address)
		void SendGift(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9CDEC(relative to base address)
		void ResetPurchaseButtonText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestMtxPurchase(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9CD48(relative to base address)
		void OnSendGiftComplete(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsGiftable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9C360(relative to base address)
		void HandlePurchaseClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9B9D8(relative to base address)
		void HandleLegalTextAction(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B888(relative to base address)
		void HandleItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9B6B4(relative to base address)
		void HandleInspectClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInputMethodChanged(ECommonInputType CommonInput); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B484(relative to base address)
		void HandleBackAction(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9AD50(relative to base address)
		bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AB60(relative to base address)
		UWidget GetFirstFocusableButton(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9A87C(relative to base address)
		void DeclineMtxPurchase(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9A3D4(relative to base address)
		void ClearActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9A38C(relative to base address)
	};


	// Class FortniteUI.FortStoreFrontOfferInfo
	// Inherited from UObject
	// Size: 0x38 (0x60 - 0x28)
	class UFortStoreFrontOfferInfo : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x28(0x18) UNKNOWN PROPERTY
		UFortMtxOfferData* OfferDisplayAsset; // 0x40(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x48(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontOfferInfo");
			return ret;
		}

		bool WasPrerollItemSeen(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FCC8C(relative to base address)
		bool OfferHasDenyRequirements(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA7AC(relative to base address)
		void MarkPrerollAsSeen(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FA728(relative to base address)
		bool IsVotingOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA65C(relative to base address)
		bool IsValidOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA638(relative to base address)
		bool IsUnique(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA614(relative to base address)
		bool IsSubscriptionOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA5F0(relative to base address)
		bool IsRefundable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA4C8(relative to base address)
		bool IsPurchasingAvailable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA4A4(relative to base address)
		bool IsPriceInRealMoney(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA418(relative to base address)
		bool IsPriceInMTX(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA38C(relative to base address)
		bool IsPriceInGameItems(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA300(relative to base address)
		bool IsPrerollOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA24C(relative to base address)
		bool IsOfferOwned(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA1EC(relative to base address)
		bool IsNoPreviewOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA1C8(relative to base address)
		bool IsLockedByRequirement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA1A4(relative to base address)
		bool IsItemMissingFromInventory(UFortItem* ItemToCheck); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA030(relative to base address)
		bool IsItemMissingFromCollectionBook(UFortItem* ItemToCheck); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9F40(relative to base address)
		bool isItemGrantUnique(FString TemplateId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FCCB0(relative to base address)
		bool IsItemDefOwned(UItemDefinitionBase* ItemDef); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9DAC(relative to base address)
		bool IsGridLayout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9D4C(relative to base address)
		bool IsGiftOnly(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9CC4(relative to base address)
		bool IsGiftLimitIgnored(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9C64(relative to base address)
		bool IsGiftingStorefrontOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9D28(relative to base address)
		bool IsGiftable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9D0C(relative to base address)
		bool IsFriendTimeRequirementIgnored(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9C04(relative to base address)
		bool IsExclusive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9AB0(relative to base address)
		bool IsEmoteBuiltInToOwnedGrantedItem(UFortMontageItemDefinitionBase* BuiltInEmote); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F99FC(relative to base address)
		bool IsCurrencyVoucher(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F99D8(relative to base address)
		bool IsCrewBlingOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F99B4(relative to base address)
		bool IsCardpack(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3A036C(relative to base address)
		bool IsBattlePassLevelBundle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9990(relative to base address)
		bool HasRequirement(FText& RequirementText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F97A0(relative to base address)
		bool HasMaxLevel(int32_t& MaxLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F963C(relative to base address)
		bool HasDisplayAsset(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3493C4(relative to base address)
		bool HasCatalogOfferName(FText& CatalogOfferName); // Flags: Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F958C(relative to base address)
		int32_t GetTotalQuantity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8310(relative to base address)
		FName GetStorefrontName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C5D1804(relative to base address)
		int32_t GetSortPriority(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F82D8(relative to base address)
		FText GetShortName(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3331D4(relative to base address)
		FText GetShortDescription(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8298(relative to base address)
		TEnumAsByte GetSaleType(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F802C(relative to base address)
		FText GetSaleText(int32_t PriceIndex, int32_t ItemQuantity); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7F54(relative to base address)
		bool GetSalePrice(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7B28(relative to base address)
		ECatalogRequirementType GetRequirementTypeAtIndex(int32_t RequirementIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7A84(relative to base address)
		int32_t GetRequirementMinQuantityAtIndex(int32_t RequirementIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F79E0(relative to base address)
		FString GetRequirementIdAtIndex(int32_t RequirementIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F790C(relative to base address)
		FText GetRegularPrice(int32_t PriceIndex, int32_t ItemQuantity); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7834(relative to base address)
		int32_t GetQuantityRemaining(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7810(relative to base address)
		UFortAccountItemDefinition GetPriceItem(int32_t PriceIndex, int32_t& RequiredItemCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F76AC(relative to base address)
		TEnumAsByte GetPriceCurrencyType(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F75BC(relative to base address)
		int32_t GetPrerollRarity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7598(relative to base address)
		bool GetPrerollOfferItem(FFortItemQuantityPair& ItemQuantityPair); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F74FC(relative to base address)
		ECatalogOfferType GetOfferType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F74E4(relative to base address)
		FString GetOfferId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7404(relative to base address)
		EFortMtxOfferDisplaySize GetOfferDisplaySize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F73E0(relative to base address)
		UFortMtxOfferData GetOfferDisplayAsset(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C0DFB98(relative to base address)
		FCatalogOffer GetOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F73C0(relative to base address)
		int32_t GetNumRequirements(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7318(relative to base address)
		int32_t GetNumGrantedItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F72F4(relative to base address)
		int32_t GetNumericPrice(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7334(relative to base address)
		FText GetName(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7290(relative to base address)
		FString GetMetaValue(FString MetaTag); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F71B4(relative to base address)
		bool GetMetaAsBool(FString MetaTag); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7118(relative to base address)
		int32_t GetMaxConcurrentPurchases(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F70A4(relative to base address)
		FText GetItemTypeText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6F9C(relative to base address)
		int32_t GetItemQuantity(FString TemplateId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6F00(relative to base address)
		int32_t GetItemOfferCount(FString TemplateId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6E64(relative to base address)
		void GetGrantedItems(TArray<UFortItem*>& Items, bool bSortItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6CE0(relative to base address)
		void GetGrantedItemQuantityPairs(bool bPrioritizeUnowned, bool bCombineCurrencyItems, TArray<FFortItemQuantityPair>& ItemQuantityPairs); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6BB0(relative to base address)
		bool GetGrantedItemQuantityPair(int32_t GrantedItemIndex, FFortItemQuantityPair& ItemQuantity); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6AD0(relative to base address)
		int32_t GetGrantedItemQuantity(int32_t GrantedItemIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6A44(relative to base address)
		void GetGrantedItemDefinitions(TArray<UFortAccountItemDefinition*>& GrantedItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F69A8(relative to base address)
		UFortAccountItemDefinition GetGrantedItemDefinition(int32_t GrantedItemIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F691C(relative to base address)
		EFortMtxStoreOfferType GetFortStoreOfferType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F68F8(relative to base address)
		int32_t GetFortStoreOfferFinalPrice(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F68D8(relative to base address)
		FString GetFortStoreOfferCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6898(relative to base address)
		FString GetForcedGiftBoxTemplateId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6858(relative to base address)
		int32_t GetFirstGrantQuantity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6830(relative to base address)
		UFortAccountItemDefinition GetFirstGrantItemDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F680C(relative to base address)
		FText GetFinalPrice(int32_t PriceIndex, int32_t ItemQuantity); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6734(relative to base address)
		void GetDynamicBundleItems(TArray<FBundledItemInfo>& Items); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5C20(relative to base address)
		FString GetDisplayAssetPath(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F58C4(relative to base address)
		FText GetDescription(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F571C(relative to base address)
		UFortAccountItemDefinition GetCurrencyItemDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F541C(relative to base address)
		FText GetCategoryText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F53E0(relative to base address)
		int32_t GetBonusQuantity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F53BC(relative to base address)
		int32_t GetBaseQuantity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5374(relative to base address)
		FString GetBannerOverrideTag(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F52FC(relative to base address)
		EAppStore GetAppStoreByPrice(int32_t PriceIndex, int32_t ItemQuantity); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F51A4(relative to base address)
		UFortAccountItem CreatePreviewItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4D64(relative to base address)
		bool CanShowRegularPrice(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4AC0(relative to base address)
		bool AreGrantedItemsOwned(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4A1C(relative to base address)
	};


	// Class FortniteUI.AthenaItemShopOfferInfo
	// Inherited from UFortStoreFrontOfferInfo -> UObject
	// Size: 0x38 (0x98 - 0x60)
	class UAthenaItemShopOfferInfo : public UFortStoreFrontOfferInfo	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x60(0x10) UNKNOWN PROPERTY
		UAthenaItemShopOfferDisplayData* ItemShopDisplayAsset; // 0x70(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x78(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopOfferInfo");
			return ret;
		}
	};


	// Class FortniteUI.AthenaItemShopPurchaseOverlayModal
	// Inherited from UAthenaItemShopOfferDetailsWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x560 - 0x530)
	class UAthenaItemShopPurchaseOverlayModal : public UAthenaItemShopOfferDetailsWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x530(0x8) UNKNOWN PROPERTY
		TArray<UFortItemVM*> PurchasedItemsVMs; // 0x538(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x548(0x8) UNKNOWN PROPERTY
		UHorizontalBox* HBox_SuccessfullyPurchased; // 0x550(0x8)
		UHorizontalBox* HBox_SuccessfullyRefunded; // 0x558(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopPurchaseOverlayModal");
			return ret;
		}

		bool ShouldShowAsRefund(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCAF48C(relative to base address)
		void Setup(int32_t InQuantityPurchased, TArray<FPurchasedItemInfo> InPurchasedItems, bool bInShowAsRefund); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9D4A8(relative to base address)
		void InitBundleLayout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasMultipleItems(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9C284(relative to base address)
		int32_t GetQuantityPurchased(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AB48(relative to base address)
		void Dismiss(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9A458(relative to base address)
	};


	// Class FortniteUI.FortItemBaseWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortItemBaseWidget : public UCommonUserWidget	
	{
	public:
		FFortItemQuantityPair ItemQuantityPair; // 0x2D8(0xC)
		unsigned char UnknownData00_6[0x4]; // 0x2E4(0x4) UNKNOWN PROPERTY
		UFortItemDefinition* ItemDefinition; // 0x2E8(0x8)
		UFortItemVM* Item; // 0x2F0(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x2F8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemBaseWidget");
			return ret;
		}

		bool SetItemQuantityPairToRepresent(FFortItemQuantityPair InItemQuantityPair); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180BF8(relative to base address)
		void SetItemDefinitionToRepresent(UFortItemDefinition* InItemDefinition, UFortItemVM* InItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180A34(relative to base address)
		void OnItemDefinitionChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemCountChanged(int32_t NewCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetRichDescription(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F408(relative to base address)
		int32_t GetQuantity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F3D0(relative to base address)
		UItemDefinitionBase GetItemDefinition(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F240(relative to base address)
	};


	// Class FortniteUI.AthenaSmallOfferPreviewBase
	// Inherited from UFortItemBaseWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaSmallOfferPreviewBase : public UFortItemBaseWidget	
	{
	public:
		UFortStoreFrontOfferInfo* OfferData; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSmallOfferPreviewBase");
			return ret;
		}

		void SetupOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9D5D8(relative to base address)
		void OnOfferSet(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9AA74(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingAvailableVotesWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortCommunityVotingAvailableVotesWidget : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* TextBlock_CurrentVoteNumber; // 0x2D8(0x8)
		UCommonTextBlock* TextBlock_NextVoteNumber; // 0x2E0(0x8)
		UFortEventDateTimeTextBlock* DateTimeTextBlock_VoteCountdown; // 0x2E8(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x2F0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingAvailableVotesWidget");
			return ret;
		}

		void PlayIncreaseVote(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIdle(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayEventOver(float StartValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayDecreaseVote(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayCountdown(float StartValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayAvailableVotes(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ApplyCurrentVoteNumber(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9A0CC(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingCountdown
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UFortCommunityVotingCountdown : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2B0(0x18) UNKNOWN PROPERTY
		UCommonTextBlock* Text_TimeRemaining; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingCountdown");
			return ret;
		}

		void SetDateTimeValue(FDateTime& InDateTime, float InRefreshDelay); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FD9D014(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingFeedback
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortCommunityVotingFeedback : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingFeedback");
			return ret;
		}

		void DestroyWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9A42C(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingManager
	// Inherited from UObject
	// Size: 0x108 (0x130 - 0x28)
	class UFortCommunityVotingManager : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x28(0x18) UNKNOWN PROPERTY
		TArray<UFortMtxOfferData*> CachedDisplayAssets; // 0x40(0x10)
		unsigned char UnknownData01_7[0xE0]; // 0x50(0xE0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingManager");
			return ret;
		}

		void RefreshVotingTimer(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9CD34(relative to base address)
		void RefreshVotes(bool IsIncrementing); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FD9CCB4(relative to base address)
		void RefreshRevealTimer(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9CC20(relative to base address)
		void RefreshNewVoteTimer(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9CBF8(relative to base address)
		void OnVotingTimerEnd(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9CA0C(relative to base address)
		void OnVotingStateChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C9F8(relative to base address)
		void OnRevealTimerEnd(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C86C(relative to base address)
		void OnNewVoteTimerEnd(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C858(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingModalPopup
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x5D8 - 0x560)
	class UFortCommunityVotingModalPopup : public UFortActivatablePanel	
	{
	public:
		FDataTableRowHandle buttonInputAction; // 0x560(0x10)
		UClass* VotingScreenClass; // 0x570(0x8)
		UClass* CandidateClass; // 0x578(0x8)
		unsigned char UnknownData00_6[0x28]; // 0x580(0x28) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_VoteNow; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_Close; // 0x5B0(0x8)
		UCommonBorder* Border_TapToCloseZone; // 0x5B8(0x8)
		UDynamicEntryBox* EntryBox_Options; // 0x5C0(0x8)
		UCommonTextBlock* TextBlock_Title; // 0x5C8(0x8)
		UCommonTextBlock* TextBlock_Banner; // 0x5D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingModalPopup");
			return ret;
		}

		void HandleVoteButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C270(relative to base address)
		void HandleButtonArgless(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9A4EC(relative to base address)
		void HandleButton(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9ADE0(relative to base address)
		void Dismiss(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9A4EC(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingOption
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x1460 - 0x13E0)
	class UFortCommunityVotingOption : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortCommunityVotingManager* VotingManager; // 0x13E8(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x13F0(0x10) UNKNOWN PROPERTY
		UCommonButtonLegacy* ComOptionVote; // 0x1400(0x8)
		UCommonButtonLegacy* ComOptionDetails; // 0x1408(0x8)
		UFortCommunityVotingVoteCounter* FlameCounter; // 0x1410(0x8)
		UClass* VoteFeedbackClass; // 0x1418(0x8)
		unsigned char UnknownData02_6[0x30]; // 0x1420(0x30) UNKNOWN PROPERTY
		UFortCommunityVotingOptionPreview* ComOptionPreview; // 0x1450(0x8)
		UOverlay* ComVoteFeedbackContainer; // 0x1458(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingOption");
			return ret;
		}

		bool HaveVotesRemaining(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9C2A0(relative to base address)
		void EnableButtons(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DisableButtons(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingOptionPreview
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortCommunityVotingOptionPreview : public UCommonUserWidget	
	{
	public:
		UFortCommunityVotingManager* VotingManager; // 0x2D8(0x8)
		UImage* Image_Main; // 0x2E0(0x8)
		UCommonTextBlock* Text_Name; // 0x2E8(0x8)
		UCommonTextBlock* Text_ShortDescription; // 0x2F0(0x8)
		UCommonBorder* CommonBorder_Owned; // 0x2F8(0x8)
		UVerticalBox* VerticalBox_Owned; // 0x300(0x8)
		UCommonLoadGuard* LoadGuard; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingOptionPreview");
			return ret;
		}

		void PlayVotingAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayUnhoveredAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayHoveredAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingOptionReveal
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortCommunityVotingOptionReveal : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x2D8(0x28) UNKNOWN PROPERTY
		UFortCommunityVotingManager* VotingManager; // 0x300(0x8)
		UImage* Image_Main; // 0x308(0x8)
		UImage* Image_Duplicate; // 0x310(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingOptionReveal");
			return ret;
		}

		void StartRevealAnimation(float PlayRate); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RevealWinnerAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWinnerRevealAnimationFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9CA34(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingRevealScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x608 - 0x560)
	class UFortCommunityVotingRevealScreen : public UFortActivatablePanel	
	{
	public:
		float MaxRevealPlayRate; // 0x560(0x4)
		float MinRevealPlayRate; // 0x564(0x4)
		UFortCommunityVotingManager* VotingManager; // 0x568(0x8)
		TArray<UFortCommunityVotingOptionReveal*> GeneratedOption; // 0x570(0x10)
		TArray<UFortCommunityVotingOptionReveal*> LoserOptions; // 0x580(0x10)
		UFortCommunityVotingOptionReveal* WinnerOption; // 0x590(0x8)
		UFortStoreFrontOfferInfo* WinnerOfferInfo; // 0x598(0x8)
		unsigned char UnknownData00_6[0x38]; // 0x5A0(0x38) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_Options; // 0x5D8(0x8)
		UCommonButtonLegacy* Button_Close; // 0x5E0(0x8)
		UCommonButtonLegacy* Button_Detail; // 0x5E8(0x8)
		URichTextBlock* RichText_ItemReturns; // 0x5F0(0x8)
		UCommonBorder* BorderRarityColored; // 0x5F8(0x8)
		UFortCommunityVotingOptionReveal* ComOptionRevealWinner; // 0x600(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingRevealScreen");
			return ret;
		}

		void StartFinalAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartFadeOutScreen(float Delay); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartFadeInAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDetailButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9B0C4(relative to base address)
		void HandleCloseButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9AE5C(relative to base address)
		void Dismiss(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9A500(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x5F8 - 0x560)
	class UFortCommunityVotingScreen : public UFortActivatablePanel	
	{
	public:
		FText RevealWinnerPopupTitle; // 0x560(0x10)
		FText RevealWinnerPopupBanner; // 0x570(0x10)
		UClass* CommunityVotingModalPopupClass; // 0x580(0x8)
		UClass* CommunityVotingModalTutorialPopupClass; // 0x588(0x8)
		FDataTableRowHandle BackInput; // 0x590(0x10)
		UFortCommunityVotingManager* VotingManager; // 0x5A0(0x8)
		UFortCommunityVotingOption* HighlightedOption; // 0x5A8(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x5B0(0x8) UNKNOWN PROPERTY
		UFortCommunityVotingCountdown* Countdown_RemainingTime; // 0x5B8(0x8)
		UDynamicEntryBox* EntryBox_Options; // 0x5C0(0x8)
		UCommonButtonLegacy* ComBackButton; // 0x5C8(0x8)
		UFortCommunityVotingAvailableVotesWidget* AvailableSparksWidget; // 0x5D0(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_VotingTip; // 0x5D8(0x8)
		UFortCommunityVotingThanksPopup* Com_ThanksForVotingMessage; // 0x5E0(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x5E8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingScreen");
			return ret;
		}

		void HandleBackButton(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9AD64(relative to base address)
		void FadeOutScreen(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Dismiss(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9A554(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingTab
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortCommunityVotingTab : public UCommonUserWidget	
	{
	public:
		UClass* ContainedWidgetClass; // 0x2D8(0x8)
		UHorizontalBox* HorizontalBox_LargeTile; // 0x2E0(0x8)
		UFortEventDateTimeTextBlock* DateTimeTextBlock_Countdown; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingTab");
			return ret;
		}
	};


	// Class FortniteUI.FortCommunityVotingThanksPopup
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x328 - 0x2D8)
	class UFortCommunityVotingThanksPopup : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x2D8(0x48) UNKNOWN PROPERTY
		UCommonTextBlock* ThanksForVoting_Countdown; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingThanksPopup");
			return ret;
		}

		void UpdateCountdown(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DAA0(relative to base address)
		void StartCountdown(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9D9D0(relative to base address)
		void FadeOutPopup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FadeInPopup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Dismiss(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9A568(relative to base address)
		void BroadcastOnFadeOutStarts(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD17924(relative to base address)
		void BroadcastOnFadeOutEnds(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9A370(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingTileCandidate
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UFortCommunityVotingTileCandidate : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2B0(0x10) UNKNOWN PROPERTY
		UImage* Image_Candidate; // 0x2C0(0x8)
		UCommonLoadGuard* LoadGuard; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingTileCandidate");
			return ret;
		}

		void OnImageAnimationFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9C6CC(relative to base address)
		void AnimateImage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingTutorialPopup
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x5D0 - 0x560)
	class UFortCommunityVotingTutorialPopup : public UFortActivatablePanel	
	{
	public:
		int32_t NumberOfSlide; // 0x560(0x4)
		float DelayBetweenSlide; // 0x564(0x4)
		float DelayOutAnimation; // 0x568(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x56C(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle ButtonNextInputAction; // 0x570(0x10)
		FDataTableRowHandle ButtonCloseInputAction; // 0x580(0x10)
		unsigned char UnknownData01_6[0x28]; // 0x590(0x28) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_NextStep; // 0x5B8(0x8)
		UCommonButtonLegacy* Button_Close; // 0x5C0(0x8)
		UCommonWidgetSwitcherLegacy* Buttons_Switcher; // 0x5C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingTutorialPopup");
			return ret;
		}

		void PlayTutorialAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayOutSlideAnimation(int32_t Index); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayInSlideAnimation(int32_t Index); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSlideAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9C9B8(relative to base address)
		void CloseTutorial(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortCommunityVotingVoteCounter
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortCommunityVotingVoteCounter : public UCommonUserWidget	
	{
	public:
		bool HasOneOrMoreVote; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* TextBlock_CurrentVoteNumber; // 0x2E0(0x8)
		UCommonTextBlock* TextBlock_NextVoteNumber; // 0x2E8(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x2F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommunityVotingVoteCounter");
			return ret;
		}

		void PlayIncreaseVote(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIdle(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayFadeOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayFadeIn(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaItemShopReactiveTileText
	// Inherited from UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x340 - 0x328)
	class UAthenaItemShopReactiveTileText : public UCommonTextBlock	
	{
	public:
		int32_t MaxCharacterCountBeforeScaling; // 0x328(0x4)
		float MaxScaleDownPercentage; // 0x32C(0x4)
		bool bDebugScaling; // 0x330(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x331(0x3) UNKNOWN PROPERTY
		float InitialFontSize; // 0x334(0x4)
		unsigned char UnknownData01_7[0x8]; // 0x338(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopReactiveTileText");
			return ret;
		}

		void SetMaxCharacterCountBeforeScaling(int32_t InMaxCharacterCountBeforeScaling); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9D1F0(relative to base address)
		int32_t GetMaxCharacterCountBeforeScaling(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C5A3370(relative to base address)
	};


	// Class FortniteUI.AthenaMtxOfferButtonBaseLegacy
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UAthenaMtxOfferButtonBaseLegacy : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortStoreFrontOfferInfo* OfferData; // 0x13E8(0x8)
		UCommonTextBlock* Text_MtxAmount; // 0x13F0(0x8)
		UCommonTextBlock* Text_RealMoneyPrice; // 0x13F8(0x8)
		UCommonVisibilitySwitcher* OptionalSwitcher_CurrencyIcons; // 0x1400(0x8)
		UImage* OptionalIMG_StarterKit; // 0x1408(0x8)
		UCommonLoadGuard* LoadGuardCurrencySpinner; // 0x1410(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x1418(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMtxOfferButtonBaseLegacy");
			return ret;
		}

		void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FD9BBAC(relative to base address)
	};


	// Class FortniteUI.AthenaDynamicMtxOfferButtonLegacy
	// Inherited from UAthenaMtxOfferButtonBaseLegacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1440 - 0x1430)
	class UAthenaDynamicMtxOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy	
	{
	public:
		UCommonTextBlock* Text_DynamicMtxAmount; // 0x1430(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1438(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDynamicMtxOfferButtonLegacy");
			return ret;
		}
	};


	// Class FortniteUI.AthenaReloadMtxScreenBaseLegacy
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x7B8 - 0x718)
	class UAthenaReloadMtxScreenBaseLegacy : public UFortItemPreviewScreen	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x718(0x8) UNKNOWN PROPERTY
		UFortStoreFrontOfferInfo* OfferInfo; // 0x720(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x728(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_AmountNeeded; // 0x738(0x8)
		unsigned char UnknownData02_6[0x40]; // 0x740(0x40) UNKNOWN PROPERTY
		TArray<UFortAccountItemDefinition*> AccountItemDefinitions; // 0x780(0x10)
		FDataTableRowHandle BackAction; // 0x790(0x10)
		UCommonButtonBase* Button_CloseTouch; // 0x7A0(0x8)
		UAthenaSmallOfferPreviewBase* SmallOfferPreview_Widget; // 0x7A8(0x8)
		unsigned char UnknownData03_7[0x8]; // 0x7B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReloadMtxScreenBaseLegacy");
			return ret;
		}

		void HandleOfferDisplayAssetLoaded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9BCA0(relative to base address)
		void BlockScreenContent(bool bBlockScreen, FText& ContentBlockedText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaDynamicReloadMtxScreenLegacy
	// Inherited from UAthenaReloadMtxScreenBaseLegacy -> UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x828 - 0x7B8)
	class UAthenaDynamicReloadMtxScreenLegacy : public UAthenaReloadMtxScreenBaseLegacy	
	{
	public:
		UCommonTextBlock* Text_TotalNeeded; // 0x7B8(0x8)
		UCommonTextBlock* Text_CurrentBalance; // 0x7C0(0x8)
		UCommonVisibilitySwitcher* Switcher_DynamicOptions; // 0x7C8(0x8)
		UAthenaStarterKitOfferButtonLegacy* Button_StarterKitOption; // 0x7D0(0x8)
		UOverlay* Overlay_MtxRequired; // 0x7D8(0x8)
		UOverlay* Overlay_StarterKit; // 0x7E0(0x8)
		UAthenaDynamicMtxOfferButtonLegacy* Button_MtxRequiredOption; // 0x7E8(0x8)
		UAthenaStaticMtxOfferButtonLegacy* Button_MtxOtherOption; // 0x7F0(0x8)
		UCommonButtonLegacy* Button_MoreOptions; // 0x7F8(0x8)
		TArray<FName> StorefrontNames; // 0x800(0x10)
		UAthenaReloadMtxScreenLegacy* StaticReloadMtxScreen; // 0x810(0x8)
		UCommonButtonLegacy* MtxRequiredButtonToFocus; // 0x818(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x820(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaDynamicReloadMtxScreenLegacy");
			return ret;
		}

		UWidget GetMtxRequiredButtonToFocus(EUINavigation InNavigation); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9A8A0(relative to base address)
	};


	// Class FortniteUI.AthenaStaticMtxOfferButtonLegacy
	// Inherited from UAthenaMtxOfferButtonBaseLegacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1450 - 0x1430)
	class UAthenaStaticMtxOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy	
	{
	public:
		UCommonTextBlock* Text_BonusMtxAmount; // 0x1430(0x8)
		UCommonTextBlock* Text_BonusPercent; // 0x1438(0x8)
		UHorizontalBox* HB_BonusMtxArea; // 0x1440(0x8)
		USizeBox* SB_BonusPercentArea; // 0x1448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStaticMtxOfferButtonLegacy");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMtxOfferListEntryButtonLegacy
	// Inherited from UAthenaStaticMtxOfferButtonLegacy -> UAthenaMtxOfferButtonBaseLegacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1460 - 0x1450)
	class UAthenaMtxOfferListEntryButtonLegacy : public UAthenaStaticMtxOfferButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x1450(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMtxOfferListEntryButtonLegacy");
			return ret;
		}
	};


	// Class FortniteUI.AthenaReloadMtxIntroModalPopupLegacy
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UAthenaReloadMtxIntroModalPopupLegacy : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x560(0x20) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Confirm; // 0x580(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy");
			return ret;
		}

		void PlayOutro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTapToClose(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9AE70(relative to base address)
		void HandleConfirmButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9AE70(relative to base address)
		void Dismiss(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FD9A4A8(relative to base address)
	};


	// Class FortniteUI.AthenaReloadMtxScreenLegacy
	// Inherited from UAthenaReloadMtxScreenBaseLegacy -> UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x808 - 0x7B8)
	class UAthenaReloadMtxScreenLegacy : public UAthenaReloadMtxScreenBaseLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x7B8(0x10) UNKNOWN PROPERTY
		UAthenaStarterKitOfferButtonLegacy* Button_StarterKitOption; // 0x7C8(0x8)
		UCommonListView* ListView_MtxOptions; // 0x7D0(0x8)
		UCommonVisibilitySwitcher* Switcher_AvailableOptions; // 0x7D8(0x8)
		UOverlay* Overlay_AvailableOptions; // 0x7E0(0x8)
		UOverlay* Overlay_NoOptions; // 0x7E8(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x7F0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReloadMtxScreenLegacy");
			return ret;
		}

		UWidget GetWidgetToFocusFromOfferList(EUINavigation InNavigation); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9ACC4(relative to base address)
	};


	// Class FortniteUI.AthenaStarterKitOfferButtonLegacy
	// Inherited from UAthenaMtxOfferButtonBaseLegacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1440 - 0x1430)
	class UAthenaStarterKitOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy	
	{
	public:
		UCommonTextBlock* Text_DisplayName; // 0x1430(0x8)
		UCommonTextBlock* Text_OfferContent; // 0x1438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStarterKitOfferButtonLegacy");
			return ret;
		}
	};


	// Class FortniteUI.AthenaItemShopTagRotator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UAthenaItemShopTagRotator : public UCommonUserWidget	
	{
	public:
		float TimeBetweenTitleChanges; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x24]; // 0x2DC(0x24) UNKNOWN PROPERTY
		UCommonTextBlock* Text_TagCallout; // 0x300(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemShopTagRotator");
			return ret;
		}

		void UpdateTagText(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9DAF0(relative to base address)
		void OnTagExit(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTagEnter(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActiveStatusChanged(bool bIsActive); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.LetoHudOverlay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class ULetoHudOverlay : public UCommonUserWidget	
	{
	public:
		UVerticalBox* VBox_Container; // 0x2D8(0x8)
		UHorizontalBox* HBox_PlayerOne; // 0x2E0(0x8)
		UHorizontalBox* HBox_PlayerTwo; // 0x2E8(0x8)
		USpacer* Spacer_PlayerOne; // 0x2F0(0x8)
		USpacer* Spacer_PlayerTwo; // 0x2F8(0x8)
		ULetoPlayerAvatar* LetoAvatar_PlayerOne; // 0x300(0x8)
		ULetoPlayerAvatar* LetoAvatar_PlayerTwo; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LetoHudOverlay");
			return ret;
		}
	};


	// Class FortniteUI.LetoPlayerAvatar
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class ULetoPlayerAvatar : public UCommonUserWidget	
	{
	public:
		UFortSocialAvatarIcon* AvatarIcon; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LetoPlayerAvatar");
			return ret;
		}
	};


	// Class FortniteUI.LockerConfirmationModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x4A0 - 0x3F0)
	class ULockerConfirmationModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_Cancel; // 0x3F0(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x3F8(0x8)
		UCommonButtonBase* Button_Confirm; // 0x400(0x8)
		UCommonTextBlock* Text_Title; // 0x408(0x8)
		UCommonTextBlock* Text_Description; // 0x410(0x8)
		unsigned char UnknownData00_7[0x88]; // 0x418(0x88) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LockerConfirmationModal");
			return ret;
		}

		void OnShowMTXWallet(bool bShow); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetButtonTexts(FText& ConfirmText, FText& CancelText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Init(FText& Title, FText& Description, FText& ConfirmButtonText, FText& CancelButtonText, bool bShowMTXWallet); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9A118(relative to base address)
	};


	// Class FortniteUI.LTMWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x388 - 0x318)
	class ULTMWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UClass* MutatorClassToWaitFor; // 0x358(0x8)
		AFortGameplayMutator* CachedGameplayMutator; // 0x360(0x8)
		unsigned char UnknownData01_6[0x1]; // 0x368(0x1) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x369(0x2)
		unsigned char UnknownData02_7[0x1D]; // 0x36B(0x1D) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LTMWidgetBase");
			return ret;
		}

		void SetPlayerPortrait(AFortPlayerStateAthena* Player, UFortLazyImage* PortraitImage); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FDC4980(relative to base address)
		void OnStompFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStompedByOtherWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMutatorAvailable_BP(AFortGameplayMutator* MutatorActor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: RequiredAPI|Native|Protected, Memory Exec: 0x7FF74C3C4F88(relative to base address)
		void K2_OnBecomeInactive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeActive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool K2_HasActiveContent(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		char GetViewingTeam(); // Flags: Final|RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2510(relative to base address)
		AFortPlayerStateAthena GetViewingPlayerState(); // Flags: RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C4E7F9C(relative to base address)
	};


	// Class FortniteUI.AshtonWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UAshtonWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Ashton* AshtonMutatorRef; // 0x388(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x390(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AshtonWidgetBase");
			return ret;
		}

		void UpdateAllUI(bool bFirstUpdate); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9D9F8(relative to base address)
		void OnVillainRespawnsRemainingChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C9E4(relative to base address)
		void OnVillainRespawnCountChanged(int32_t NumRespawnsLeft, float RespawnPercentLeft); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStoneListChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C9D0(relative to base address)
		void OnStoneChanged(EAshtonStoneType StoneType, EAshtonStoneStateType StoneState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectObjectiveText(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOpenWidget(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseWidget(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BallerRaceIntroWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UBallerRaceIntroWidget : public ULTMWidgetBase	
	{
	public:
		float LengthOfCountdown; // 0x388(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x38C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BallerRaceIntroWidget");
			return ret;
		}

		void StartCountdown(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowIntro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BarrierWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x368 - 0x318)
	class UBarrierWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x318(0x10) UNKNOWN PROPERTY
		FBarrierObjectState FriendlyTeamState; // 0x328(0x10)
		FBarrierObjectState EnemyTeamState; // 0x338(0x10)
		unsigned char UnknownData01_7[0x20]; // 0x348(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BarrierWidgetBase");
			return ret;
		}

		void UpdateHealth(bool bFriendlyTeam, float HealthPercent, EBarrierFoodTeam FoodTeam, bool bFlashBar); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9C6E8(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C558(relative to base address)
	};


	// Class FortniteUI.BattleLabRewardWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x3C8 - 0x318)
	class UBattleLabRewardWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		TArray<UFortQuestItem*> CompletedQuests; // 0x358(0x10)
		TArray<UFortQuestItem*> NewlyGrantedQuests; // 0x368(0x10)
		TArray<FFortItemQuantityPair> GrantedRewards; // 0x378(0x10)
		TArray<UFortQuestItem*> OldQuests; // 0x388(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x398(0x8) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x3A0(0x2)
		unsigned char UnknownData02_6[0x6]; // 0x3A2(0x6) UNKNOWN PROPERTY
		FGameplayTagContainer RequiredTags; // 0x3A8(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattleLabRewardWidget");
			return ret;
		}

		void OpenWidget(FBattleLabDisplayData& DisplayData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWidgetIsFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9CA20(relative to base address)
		void HandleOnQuestsGranted(TArray<UFortQuestItem*>& Quests); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9BD50(relative to base address)
		void HandleOnQuestCompleted(TArray<UFortQuestItem*>& Quests); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9BCB4(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9B0E0(relative to base address)
	};


	// Class FortniteUI.CarmineHUDBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UCarmineHUDBase : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x2B0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CarmineHUDBase");
			return ret;
		}

		void OnBossHealthBarChanged(FAthenaBossHealthData& BossData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3B8 - 0x388)
	class UCobaltWidgetBase : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x388(0x8) UNKNOWN PROPERTY
		AFortAthenaMutator_Cobalt* CobaltMutator; // 0x390(0x8)
		TArray<FText> RoundNames; // 0x398(0x10)
		FText InvalidRoundText; // 0x3A8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltWidgetBase");
			return ret;
		}

		int32_t GetCurrentRoundNameIndex(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9A858(relative to base address)
	};


	// Class FortniteUI.CobaltAlertWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3C0 - 0x3B8)
	class UCobaltAlertWidgetBase : public UCobaltWidgetBase	
	{
	public:
		char LastViewedTeam; // 0x3B8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x3B9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltAlertWidgetBase");
			return ret;
		}

		void UpdateAlertUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9D9E4(relative to base address)
		void OnUpdateTieBreakerUI(bool bHasTieBreaker); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRoundComplete(TArray<char>& WinningTeams); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9C880(relative to base address)
	};


	// Class FortniteUI.CobaltCountdownWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3D8 - 0x3B8)
	class UCobaltCountdownWidgetBase : public UCobaltWidgetBase	
	{
	public:
		FText CountdownMessage; // 0x3B8(0x10)
		float CountdownTime; // 0x3C8(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x3CC(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltCountdownWidgetBase");
			return ret;
		}

		void UpdateCountdownText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTeleportComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FD9C084(relative to base address)
	};


	// Class FortniteUI.CobaltGamePhaseWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3C0 - 0x388)
	class UCobaltGamePhaseWidgetBase : public ULTMWidgetBase	
	{
	public:
		float StormComingWarningTime; // 0x388(0x4)
		unsigned char UnknownData00_7[0x34]; // 0x38C(0x34) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltGamePhaseWidgetBase");
			return ret;
		}

		void UpdateTimeDisplay(bool bSetWarningFont, FText& NewTimeDisplay); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C3F8(relative to base address)
		void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCountdownUpdate(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9AE84(relative to base address)
	};


	// Class FortniteUI.CobaltPlayerPortraitWidget
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3D0 - 0x3B8)
	class UCobaltPlayerPortraitWidget : public UCobaltWidgetBase	
	{
	public:
		UFortLazyImage* AvatarImage; // 0x3B8(0x8)
		UCommonTextBlock* PlayerNameTextWidget; // 0x3C0(0x8)
		AFortPlayerState* PlayerState; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltPlayerPortraitWidget");
			return ret;
		}
	};


	// Class FortniteUI.CobaltPlayersLeftWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UCobaltPlayersLeftWidgetBase : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x388(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltPlayersLeftWidgetBase");
			return ret;
		}

		void UpdateDisplay(int32_t NewTeamPlayersLeft, int32_t NewEnemyPlayersLeft); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltPreRoundWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3B8 - 0x3B8)
	class UCobaltPreRoundWidgetBase : public UCobaltWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltPreRoundWidgetBase");
			return ret;
		}

		void HandleUpdatePreRoundWidgetVisibility_BP(bool bNewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpdatePreRoundWidgetVisibility(bool bNewVisibility); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C1F0(relative to base address)
		void HandlePreRoundWidgetInfo_BP(int32_t CurrentActiveRound, FText& RoundName, FText& POIName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltRoundCompleteWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x3C8 - 0x3B8)
	class UCobaltRoundCompleteWidgetBase : public UCobaltWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x3B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltRoundCompleteWidgetBase");
			return ret;
		}

		void ShowDisplay(bool bIsWin, bool bWasTie, bool bViewingWidgetOwner, int32_t RoundNum, FText& RoundName, FText& POIName, int32_t PrimaryTeamScore, int32_t OpposingTeamScore); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRoundComplete(TArray<char>& WinningTeams); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9C91C(relative to base address)
		void HideWidget(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C2CC(relative to base address)
		void HideDisplay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltRoundStartWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x418 - 0x3B8)
	class UCobaltRoundStartWidgetBase : public UCobaltWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3B8(0x20) UNKNOWN PROPERTY
		TArray<FCobaltPlayerPortraitIndexInfo> UpperBannerPortraitIndexInfos; // 0x3D8(0x10)
		TArray<FCobaltPlayerPortraitIndexInfo> LowerBannerPortraitIndexInfos; // 0x3E8(0x10)
		TArray<UCobaltPlayerPortraitWidget*> PlayerPortraits_Team1; // 0x3F8(0x10)
		TArray<UCobaltPlayerPortraitWidget*> PlayerPortraits_Team2; // 0x408(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltRoundStartWidgetBase");
			return ret;
		}

		void HandleUpdateVsInfo_BP(int32_t CurrentActiveRound, FText& RoundName, FText& POIName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpdateRoundStartWidgetVisibility_BP(bool bNewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUpdateIntelInfo_BP(int32_t CurrentRound, char LastRoundWinningTeam); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShowRoundStartWidget(FCobaltWidgetRoundData& RoundData); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9BFC4(relative to base address)
		void HandleHideRoundStartWidget(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9B470(relative to base address)
	};


	// Class FortniteUI.CobaltStatusWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x3E0 - 0x3B8)
	class UCobaltStatusWidgetBase : public UCobaltWidgetBase	
	{
	public:
		char LastViewedTeam; // 0x3B8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3B9(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* RoundName; // 0x3C0(0x8)
		float CountdownSoundStartTime; // 0x3C8(0x4)
		unsigned char UnknownData01_7[0x14]; // 0x3CC(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltStatusWidgetBase");
			return ret;
		}

		void UpdateTimerVisuals(float TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateScoringUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DADC(relative to base address)
		void ShowTimer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RoundAdvanced(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9CDD8(relative to base address)
		void OnUpdateTieBreakerUI(bool bHasTieBreaker); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateTeamScore(int32_t TeamIndex, int32_t Score, bool bIsTeamLeading, bool bPlayAnimation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTieBreakerChangedSound(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResetUI(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayScoreProgressSound(bool bIsLocalTeam); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayLeadChangedSound(bool bTookTheLead); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayCountdownSound(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltTournamentBracketNodeWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3C0 - 0x3B8)
	class UCobaltTournamentBracketNodeWidgetBase : public UCobaltWidgetBase	
	{
	public:
		EBracketNodeState CurrentBracketNodeState; // 0x3B8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x3B9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltTournamentBracketNodeWidgetBase");
			return ret;
		}

		void HandleBracketNodeStateSet_BP(EBracketNodeState NewState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CobaltTournamentBracketWidgetBase
	// Inherited from UCobaltWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3D8 - 0x3B8)
	class UCobaltTournamentBracketWidgetBase : public UCobaltWidgetBase	
	{
	public:
		TArray<UCobaltTournamentBracketNodeWidgetBase*> LocalTeamNodes; // 0x3B8(0x10)
		TArray<UCobaltTournamentBracketNodeWidgetBase*> EnemyTeamNodes; // 0x3C8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CobaltTournamentBracketWidgetBase");
			return ret;
		}

		void UpdateTournamentBracket_BP(int32_t CurrentActiveRound); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateTournamentBracket(int32_t CurrentActiveRound); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD9DB04(relative to base address)
	};


	// Class FortniteUI.DadBroHealthWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UDadBroHealthWidget : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_DadBro* DadBroMutator; // 0x388(0x8)
		unsigned char UnknownData00_6[0x4]; // 0x390(0x4) UNKNOWN PROPERTY
		float BossHealthRatio; // 0x394(0x4)
		AFortAIPawn* BossAIPawn; // 0x398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DadBroHealthWidget");
			return ret;
		}

		void UpdateFinalBossBattle(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DAB4(relative to base address)
		void OnTransitionToNewHealthState(EDadBroHealthType NewHealthType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewHealthPercent(float NewHealth); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMashPhaseChanged(int32_t NewPhase); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9B89C(relative to base address)
		void HandleDadBroSpawned(AFortAIPawn* DadBroPawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9B044(relative to base address)
	};


	// Class FortniteUI.DeimosSurvivalWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x390 - 0x318)
	class UDeimosSurvivalWidgetBase : public UFortHUDElementWidget	
	{
	public:
		TArray<FSurvivalObjectiveText> SurvivalStateDefaultText; // 0x318(0x10)
		FGameplayTag ObjectiveTag; // 0x328(0x4)
		unsigned char UnknownData00_7[0x64]; // 0x32C(0x64) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DeimosSurvivalWidgetBase");
			return ret;
		}

		void OnUpdateStateText(FText& StateText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateObjectiveIcon(FSurvivalObjectiveIconData& ObjectiveIconData); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.DiscoCaptureWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x398 - 0x318)
	class UDiscoCaptureWidgetBase : public UFortHUDElementWidget	
	{
	public:
		FDiscoCaptureUIData CaptureUIData; // 0x318(0x38)
		FDiscoCaptureUIData PrevCaptureUIData; // 0x350(0x38)
		unsigned char UnknownData00_6[0x8]; // 0x388(0x8) UNKNOWN PROPERTY
		char LastViewedTeam; // 0x390(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x391(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DiscoCaptureWidgetBase");
			return ret;
		}

		void UpdateDiscoCaptureUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DA78(relative to base address)
		void UpdateAllUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DA78(relative to base address)
		void OnUpdateCaptureUI(EDiscoCaptureUIState& CaptureState, FText& TextToDisplay, UMaterialInstanceDynamic* ImageMID, float FillAmount); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C5D4(relative to base address)
		AAthenaCapturePoint GetClosestCapturePoint(AFortPlayerPawnAthena* ViewPawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9A618(relative to base address)
	};


	// Class FortniteUI.DiscoWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x3A8 - 0x318)
	class UDiscoWidgetBase : public UFortHUDElementWidget	
	{
	public:
		TArray<FDiscoCaptureIconData> CapturePointIconList; // 0x318(0x10)
		unsigned char UnknownData00_6[0x20]; // 0x328(0x20) UNKNOWN PROPERTY
		TArray<float> PlayScoreProgressSoundPercentagesMild; // 0x348(0x10)
		TArray<float> PlayScoreProgressSoundPercentagesMedium; // 0x358(0x10)
		TArray<float> PlayScoreProgressSoundPercentagesStrong; // 0x368(0x10)
		float PercentageScoreToPlayCountdown; // 0x378(0x4)
		float PercentageScoreToPlayFinalCountdown; // 0x37C(0x4)
		float ScoreCountdownSoundFrequency; // 0x380(0x4)
		bool bLocalTeamIsScoring; // 0x384(0x1)
		bool bEnemyTeamIsScoring; // 0x385(0x1)
		char LastViewedTeam; // 0x386(0x1)
		unsigned char UnknownData01_7[0x21]; // 0x387(0x21) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DiscoWidgetBase");
			return ret;
		}

		void UpdateAllUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9DA8C(relative to base address)
		void OnUpdateTeamScore(int32_t TeamIndex, FDiscoTeamScoreData& ScoreData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateCapturePoint(int32_t IconIndex, FDiscoCaptureIconData& IconData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayScoreProgressSound(EDiscoScoreProgressTypes ScoreProgressType, bool bIsLocalTeam); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FD9C7A0(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C650(relative to base address)
		void OnCountdownTimerUpdate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C3E4(relative to base address)
	};


	// Class FortniteUI.FF2CaptureWarningWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x388 - 0x388)
	class UFF2CaptureWarningWidget : public ULTMWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FF2CaptureWarningWidget");
			return ret;
		}
	};


	// Class FortniteUI.FF2StatusWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UFF2StatusWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x388(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FF2StatusWidget");
			return ret;
		}

		void SetHealth(float CurrentHealth, float MaxHealth); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivatablePanelLTM
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortActivatablePanelLTM : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UClass* MutatorClassToWaitFor; // 0x3F8(0x8)
		AFortGameplayMutator* Mutator; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatablePanelLTM");
			return ret;
		}
	};


	// Class FortniteUI.FortLTMVictoryWidgetBase
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2C0 - 0x2C0)
	class UFortLTMVictoryWidgetBase : public UFortUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLTMVictoryWidgetBase");
			return ret;
		}

		void StartIntroSequence(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPerkVictoryScreen
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x480 - 0x480)
	class UFortPerkVictoryScreen : public UFortPostGameScreen	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPerkVictoryScreen");
			return ret;
		}
	};


	// Class FortniteUI.GalileoCountdownWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UGalileoCountdownWidget : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GalileoCountdownWidget");
			return ret;
		}
	};


	// Class FortniteUI.GalileoWrapperWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UGalileoWrapperWidget : public UCommonUserWidget	
	{
	public:
		UClass* MutatorClassToWaitFor; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GalileoWrapperWidget");
			return ret;
		}

		void OnResumeGame(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeOnResumeGame(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FD9C3A8(relative to base address)
	};


	// Class FortniteUI.GameStartCountdownWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UGameStartCountdownWidget : public ULTMWidgetBase	
	{
	public:
		USoundBase* CountdownMusicStinger; // 0x388(0x8)
		AFortAthenaMutator_GameStartCountdown* GameStartCountdownMutator; // 0x390(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GameStartCountdownWidget");
			return ret;
		}

		void HandleGameStartCountdownEnd(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleGameStartCountdownBegin(float duration, int32_t StartingCountdownInteger); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		USoundBase GetCountdownMusicStinger(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9A840(relative to base address)
	};


	// Class FortniteUI.GenericLeaderboardDisplayWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x388 - 0x388)
	class UGenericLeaderboardDisplayWidgetBase : public ULTMWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GenericLeaderboardDisplayWidgetBase");
			return ret;
		}

		void UpdateDisplay(TArray<FFortInGameLeaderboardPlacementData>& Data); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.GGWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UGGWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_GG* BaseMutator; // 0x388(0x8)
		TWeakObjectPtr<UWorld*> CachedWorld; // 0x390(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GGWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.GGCenterDisplayWidgetBase
	// Inherited from UGGWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x400 - 0x398)
	class UGGCenterDisplayWidgetBase : public UGGWidgetBase	
	{
	public:
		int32_t NumberOfSlotsFlankingLocalPlayer; // 0x398(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x39C(0x4) UNKNOWN PROPERTY
		TArray<FGGCenterDisplayEntry> CenterDisplayEntries; // 0x3A0(0x10)
		unsigned char UnknownData01_7[0x50]; // 0x3B0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GGCenterDisplayWidgetBase");
			return ret;
		}

		void UpdateDisplayWith(TArray<FGGCenterDisplayEntry>& Entries, bool bUpdatingForLocalPlayer); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOtherPlayerAwardedWeapon(AFortPlayerStateAthena* OtherPlayer, UFortWeaponItemDefinition* NextWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3B58(relative to base address)
		void OnLocalPlayerAwardedWeapon(UFortWeaponItemDefinition* NextWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3900(relative to base address)
	};


	// Class FortniteUI.GGInventoryWidgetBase
	// Inherited from UGGWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3C8 - 0x398)
	class UGGInventoryWidgetBase : public UGGWidgetBase	
	{
	public:
		UFortWeaponItemDefinition* NextItemToDisplay; // 0x398(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x3A0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GGInventoryWidgetBase");
			return ret;
		}

		void UpdateWidgetForNewWeapon(UTexture2D* Texture, EFortRarity Rarity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerNewWeapon(UFortWeaponItemDefinition* NewWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC397C(relative to base address)
		void LastWeaponReached(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.GGProgressWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class UGGProgressWidget : public ULTMWidgetBase	
	{
	public:
		int32_t PointsToGoalThreshold; // 0x388(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x38C(0x4) UNKNOWN PROPERTY
		TArray<FFortInGameLeaderboardPlacementData> TopPlacedEnemies; // 0x390(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x3A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.GGProgressWidget");
			return ret;
		}

		void UpdateTopThreeEnemies(TArray<FFortInGameLeaderboardPlacementData>& TopThreeEnemies); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateLocalPlayer(FFortInGameLeaderboardPlacementData& LocalPlayer); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerNearGoal(FFortInGameLeaderboardPlacementData& PlayerNearGoal); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardUpdate(TArray<FFortInGameLeaderboardPlacementData>& Data); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FDC3750(relative to base address)
	};


	// Class FortniteUI.HeistWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x368 - 0x318)
	class UHeistWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x318(0x20) UNKNOWN PROPERTY
		EHeistExitCraftUIState CurrExitCraftUIState; // 0x338(0x1)
		bool bDisplayBlingRow; // 0x339(0x1)
		bool bCanDisplayVanUI; // 0x33A(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x33B(0x1) UNKNOWN PROPERTY
		FGameplayTag SafeSupplyDropTag; // 0x33C(0x4)
		FGameplayTag BlingItemTag; // 0x340(0x4)
		FGameplayTag CarryingBlingItemTag; // 0x344(0x4)
		int32_t CurrBlingSupplyDropCount; // 0x348(0x4)
		int32_t CurrBlingItemCount; // 0x34C(0x4)
		int32_t CurrBlingEnemyCount; // 0x350(0x4)
		int32_t CurrBlingAllyCount; // 0x354(0x4)
		unsigned char UnknownData02_7[0x10]; // 0x358(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HeistWidgetBase");
			return ret;
		}

		void UpdateAllUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4DCC(relative to base address)
		void SetExitCraftUIState(EHeistExitCraftUIState NewState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4900(relative to base address)
		void OnUpdateStateTimeText(FText& TimeText, EHeistExitCraftUIState CurrState); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateStateText(FText& StateText, EHeistExitCraftUIState CurrState); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateExitCraftIcon(FHeistExitCraftIconData& ExitCraftIconData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateBlingIcon(FHeistBlingIconData& BlingIconData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSpecialActorRemoved(FSpecialActorRepData& SpecialActorData); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FDC4288(relative to base address)
		void OnSpecialActorAdded(FSpecialActorRepData& SpecialActorData); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FDC4288(relative to base address)
		void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FDC3A94(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC35D8(relative to base address)
		void OnExitCraftsUIChanged(EHeistExitCraftUIState NewState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayExitCraftUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayBlingUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.InfiltrationBaseWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UInfiltrationBaseWidget : public ULTMWidgetBase	
	{
	public:
		TWeakObjectPtr<AFortAthenaMutator_Infiltration*> CachedMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationBaseWidget");
			return ret;
		}

		void OnMutatorReady(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsCurrentlyDefendedChanged(bool bNewBeingDefended); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIntelStateChanged(EIntelStateEnum NewState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGroundTimerChanged(float NewTimeRemaining); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsLocalPlayerDefending(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3100(relative to base address)
		bool IsLocalPlayerAttacking(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3000(relative to base address)
		bool IsBeingHeldByLocalPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2F5C(relative to base address)
		int32_t GetNumOfRounds(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1FD8(relative to base address)
		bool GetIsCurrentlyDefended(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1F24(relative to base address)
		float GetGroundTimeRemaining(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1E6C(relative to base address)
		char GetDefendingTeam(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1D24(relative to base address)
		int32_t GetCurrentRound(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1C7C(relative to base address)
		EIntelStateEnum GetCurrentIntelState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1C44(relative to base address)
		char GetAttackingTeam(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1B44(relative to base address)
	};


	// Class FortniteUI.InfiltrationPerkSelectContainerWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x138 (0x4C0 - 0x388)
	class UInfiltrationPerkSelectContainerWidget : public ULTMWidgetBase	
	{
	public:
		UClass* PerkPanelClass; // 0x388(0x8)
		FPerkMutatorData MutatorData; // 0x390(0x108)
		unsigned char UnknownData00_7[0x28]; // 0x498(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationPerkSelectContainerWidget");
			return ret;
		}

		bool PerkSelectionEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749859FE0(relative to base address)
	};


	// Class FortniteUI.InfiltrationPerkSelectionPanel
	// Inherited from UFortActivatablePanelLTM -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x550 - 0x408)
	class UInfiltrationPerkSelectionPanel : public UFortActivatablePanelLTM	
	{
	public:
		TWeakObjectPtr<AFortAthenaMutator_PerkSystemMutator*> CachedMutator; // 0x408(0x8)
		TArray<UPerkSelectionEntryWidget*> EntryWidgets; // 0x410(0x10)
		UPerkIntroScreenWidget* PerkIntroScreenWidget; // 0x420(0x8)
		FPerkMutatorData MutatorData; // 0x428(0x108)
		UOverlay* PerkIntroOverlay; // 0x530(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x538(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationPerkSelectionPanel");
			return ret;
		}

		void UpdateBackgroundImage(bool bShouldShowBackground); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartClosingWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetTimeRemaining(float TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetReRollCount(int32_t NewCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectionMade(UPerkSelectionEntryWidget* Widget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3F80(relative to base address)
		void OnReRollSelected(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC3E54(relative to base address)
		void OnPerkIntroFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeOnPerkIntroFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3384(relative to base address)
		void AttempShowPerkIntro(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC1B1C(relative to base address)
	};


	// Class FortniteUI.InfiltrationPlacementOverlay
	// Inherited from UPostGamePlacementOverlay -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x4C8 - 0x4B0)
	class UInfiltrationPlacementOverlay : public UPostGamePlacementOverlay	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x4B0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationPlacementOverlay");
			return ret;
		}

		char GetLocalPlayerTeam(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1F94(relative to base address)
		int32_t GetIntelDownloaded(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1EDC(relative to base address)
		int32_t GetIntelCaptured(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1E94(relative to base address)
		char GetDefendingTeam(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1D48(relative to base address)
		char GetAttackingTeam(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1B68(relative to base address)
	};


	// Class FortniteUI.PerkIntroScreenWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x348 - 0x2D8)
	class UPerkIntroScreenWidget : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnPerkIntroFinishedEvent; // 0x2D8(0x10)
		TArray<FPerkPipData> PreviousPerkPipData; // 0x2E8(0x10)
		TArray<FPerkPipData> NewPerkPipData; // 0x2F8(0x10)
		TArray<FPerkPipData> PerkPipData; // 0x308(0x10)
		FRoundTechDataCache StartRoundCache; // 0x318(0x28)
		FGameplayTag FactionTag; // 0x340(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x344(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PerkIntroScreenWidget");
			return ret;
		}

		void StartPerkScreenIntro(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void PerkIntroFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC48EC(relative to base address)
		void GatherPerkPipData(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7470D9EB4(relative to base address)
	};


	// Class FortniteUI.InfiltrationRoundInfoWidget
	// Inherited from UPerkIntroScreenWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x388 - 0x348)
	class UInfiltrationRoundInfoWidget : public UPerkIntroScreenWidget	
	{
	public:
		int32_t CachedRoundIndex; // 0x348(0x4)
		char WinningTeam; // 0x34C(0x1)
		char AttackingTeam; // 0x34D(0x1)
		char DefendingTeam; // 0x34E(0x1)
		char NextRoundAttackingTeam; // 0x34F(0x1)
		char NextRoundDefendingTeam; // 0x350(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x351(0x7) UNKNOWN PROPERTY
		UClass* MutatorClassToWaitFor; // 0x358(0x8)
		TScriptInterface<Class> CachedMutator; // 0x360(0x10)
		unsigned char UnknownData01_7[0x18]; // 0x370(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationRoundInfoWidget");
			return ret;
		}

		bool ShouldSkipWinLossScreen(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC4D84(relative to base address)
		bool ShouldPlayRoundEndStinger(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC4D3C(relative to base address)
		bool ShouldPlayFactionIntro(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC4CF4(relative to base address)
		bool ShouldModifyAttackingDefendingText(FText& OutAttackingDefendingText, bool bLocalTeamIsAttackers); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC4BA4(relative to base address)
		void SetWinningTeam(char NewWinningTeam); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC4B14(relative to base address)
		void OnReadyToShowStuff(int32_t CurrentRound, char LastRoundWinningTeam); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReadyToShowIntro(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsLocalPlayerDefendingNextRound(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC31C8(relative to base address)
		bool IsLocalPlayerDefending(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3148(relative to base address)
		bool IsLocalPlayerAttackingNextRound(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC30C8(relative to base address)
		bool IsLocalPlayerAttacking(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3048(relative to base address)
		bool HasWinningTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2F2C(relative to base address)
		char GetViewingTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC24EC(relative to base address)
		void GetRoundResultsText(FText& OutResultsText, bool bLocalTeamIsAttackers, bool bLocalTeamIsWinners); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC20A0(relative to base address)
		USoundBase GetRoundIntroFactionSound(bool bLocalTeamIsAttackers); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1FF0(relative to base address)
		int32_t GetFirstRound(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1E24(relative to base address)
		char GetDefendingTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1D94(relative to base address)
		char GetAttackingTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1BB4(relative to base address)
	};


	// Class FortniteUI.InfiltrationSelectedPerksWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class UInfiltrationSelectedPerksWidget : public ULTMWidgetBase	
	{
	public:
		TWeakObjectPtr<AFortAthenaMutator_Infiltration*> CachedMutator; // 0x388(0x8)
		TArray<UFortSpyTechItemDefinition*> CurrentDisplayedPerks; // 0x390(0x10)
		FGameplayTag FilterTag; // 0x3A0(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x3A4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationSelectedPerksWidget");
			return ret;
		}

		void UpdatePerks(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.InfiltrationIntelStatusWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UInfiltrationIntelStatusWidget : public UCommonUserWidget	
	{
	public:
		int32_t SpawnerIndex; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x2DC(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationIntelStatusWidget");
			return ret;
		}

		void UpdateTimerVisuals(float TimeRemaining, float TotalTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIsGroundTimer(bool bIsGroundTimer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIntelState(EIntelStateEnum NewState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.InfiltrationStatusWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x4D0 - 0x388)
	class UInfiltrationStatusWidget : public ULTMWidgetBase	
	{
	public:
		FInfiltrationModeState PrevModeState; // 0x388(0x30)
		TArray<UInfiltrationIntelStatusWidget*> IntelStatusWidgets; // 0x3B8(0x10)
		TMap<EIntelStateEnum, USoundBase*> AttackerAudioCues; // 0x3C8(0x50)
		TMap<EIntelStateEnum, USoundBase*> DefenderAudioCues; // 0x418(0x50)
		TMap<EIntelStateEnum, USoundBase*> SpamSounds; // 0x468(0x50)
		float SpamThrottle; // 0x4B8(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x4BC(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InfiltrationStatusWidget");
			return ret;
		}

		bool IsLocalPlayerDefending(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3180(relative to base address)
		bool IsLocalPlayerAttacking(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC3080(relative to base address)
		bool IsCurrentlyADraw(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2FE8(relative to base address)
		USoundBase GetSoundFromIntelState(EIntelStateEnum InState, bool bIsDefender); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2274(relative to base address)
		int32_t GetNumOfRounds(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1FD8(relative to base address)
		char GetDefendingTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1E00(relative to base address)
		int32_t GetCurrentRound(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1CC4(relative to base address)
		char GetAttackingTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1C20(relative to base address)
	};


	// Class FortniteUI.LimitedLivesCounterWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class ULimitedLivesCounterWidget : public ULTMWidgetBase	
	{
	public:
		TWeakObjectPtr<AFortPlayerStateAthena*> CurrentPlayerState; // 0x388(0x8)
		unsigned char UnknownData00_6[0x4]; // 0x390(0x4) UNKNOWN PROPERTY
		int32_t MaxLives; // 0x394(0x4)
		unsigned char UnknownData01_7[0x10]; // 0x398(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LimitedLivesCounterWidget");
			return ret;
		}

		void OnPlayerDied(AFortPlayerStateAthena* DeadPlayer); // Flags: Native|Protected, Memory Exec: 0x7FF74FDC3D54(relative to base address)
		void OnLivesCountUpdated(int32_t NewCount); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74D0518C4(relative to base address)
	};


	// Class FortniteUI.LoadoutWarningWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x388 - 0x388)
	class ULoadoutWarningWidget : public ULTMWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LoadoutWarningWidget");
			return ret;
		}

		void StartWarning(float TimeToSwap); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadoutWarning(float TimeToSwap); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3880(relative to base address)
	};


	// Class FortniteUI.LTMCountdownWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class ULTMCountdownWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		FFortPrioritizedWidgetData PrioritizationData; // 0x358(0x2)
		unsigned char UnknownData01_6[0x6]; // 0x35A(0x6) UNKNOWN PROPERTY
		TArray<FFortCountdownSounds> TrackList; // 0x360(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LTMCountdownWidgetBase");
			return ret;
		}

		void OnFinalCountdownStarted(int32_t TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownUpdate(int32_t TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownStarted(int32_t TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleFinalCountdownStarted(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2830(relative to base address)
		void HandleCountdownUpdate(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC26F8(relative to base address)
		void HandleCountdownStarted(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC25F8(relative to base address)
		void HandleCountdownFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC25D0(relative to base address)
		FText GetTimeText(int32_t TimeRemaining); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC2418(relative to base address)
	};


	// Class FortniteUI.LTMPreRoundWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class ULTMPreRoundWidgetBase : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x388(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LTMPreRoundWidgetBase");
			return ret;
		}

		void HandlePreRoundWidgetVisibilityChange_BP(bool bNewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePreRoundWidgetVisibilityChange(bool bNewVisibility); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2B04(relative to base address)
		void HandlePreRoundInfo_BP(int32_t CurrentRound, FText& InRoundName, FText& InPOIName, USoundBase* InRoundSound); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.MashBossBattleWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UMashBossBattleWidget : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Mash* MashMutatorRef; // 0x388(0x8)
		float CurrentBossHealth; // 0x390(0x4)
		float TotalBossHealth; // 0x394(0x4)
		float BossHealthRatio; // 0x398(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x39C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MashBossBattleWidget");
			return ret;
		}

		void UpdateBossBattle(FMashBossHealthShieldData& BossHealthShieldData); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FDC4DF4(relative to base address)
		void OnBossHealthUpdate(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBossFightStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.MashPhaseWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3B8 - 0x388)
	class UMashPhaseWidget : public ULTMWidgetBase	
	{
	public:
		TEnumAsByte<EMashPhase> CurrentPhase; // 0x388(0x1)
		unsigned char UnknownData00_6[0xF]; // 0x389(0xF) UNKNOWN PROPERTY
		int32_t CurrentObjectiveAreaIndex; // 0x398(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x39C(0x4) UNKNOWN PROPERTY
		AFortAthenaMutator_Mash* MashMutatorRef; // 0x3A0(0x8)
		AFortPlayerControllerAthena* CachedLocalPlayerController; // 0x3A8(0x8)
		bool CachedIsLocalPlayerAlive; // 0x3B0(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x3B1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MashPhaseWidget");
			return ret;
		}

		void OnPhaseChanged(TEnumAsByte<EMashPhase> NewPhase, int32_t CurrentObjectiveIndex, int32_t TotalObjectiveArea); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMashBossPawnChanged(AFortPawn* NewBossPawn); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerDead(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerAlive(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownUpdate(int32_t TimeRemaining); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownStarted(int32_t TimeRemaining); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCountdownFinished(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePlayersLeftChanged(int32_t InPlayersLeft); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2A84(relative to base address)
		void HandleMashPhaseChanged(int32_t NewPhase); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC28C4(relative to base address)
		void HandleCountdownUpdate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2778(relative to base address)
		void HandleCountdownStarted(int32_t TimeRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2678(relative to base address)
		void HandleCountdownFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC25E4(relative to base address)
	};


	// Class FortniteUI.MashScoreEventWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x4A0 - 0x388)
	class UMashScoreEventWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Mash* MashMutatorRef; // 0x388(0x8)
		AFortPlayerStateAthena* CachedLocalPlayerState; // 0x390(0x8)
		FMashPlayerDataEntry CachedLocalPlayerEntry; // 0x398(0xF8)
		float StreakScoreMultiplierRemainingTime; // 0x490(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x494(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MashScoreEventWidgetBase");
			return ret;
		}

		void UpdateStreakScoreMultiplierCountdown(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4F18(relative to base address)
		void OnStreakScoreMultiplierUpdated(char StreakScoreLevel, char MaxStreakScoreLevel, float ScoreMultiplier); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStreakScoreMultiplierKillCountUpdated(int32_t TotalStreakKillCount, float StreakLevelProgressRatio); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStreakScoreMultiplierExpires(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC432C(relative to base address)
		void OnStreakScoreMultiplierCountdownUpdated(float RemainingTimeBeforeReset); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnScoreEvent(int32_t ScoreValue, FText& ScoreText, TEnumAsByte<EMashScoreEvent> ScoreEventType); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDataChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3D2C(relative to base address)
	};


	// Class FortniteUI.MashWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UMashWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Mash* MashMutatorRef; // 0x388(0x8)
		AFortPlayerStateAthena* CachedLocalPlayerState; // 0x390(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MashWidgetBase");
			return ret;
		}

		void OnTeamScoreMultiplierChanged(char TeamScoreMultiplier); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadScoreUpdated(int32_t Score); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerScoreUpdated(int32_t Index, FString PlayerName, int32_t Score, int32_t StreakLevel, int32_t MaxStreakLevel, float StreakMultiplier, bool IsLocalPlayer); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDataChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3D40(relative to base address)
	};


	// Class FortniteUI.MinigameWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x3D0 - 0x318)
	class UMinigameWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x90]; // 0x318(0x90) UNKNOWN PROPERTY
		bool bDisplayCaptureObjectiveRow; // 0x3A8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x3A9(0x7) UNKNOWN PROPERTY
		AFortMinigame* CurrentMinigame; // 0x3B0(0x8)
		unsigned char UnknownData02_6[0x10]; // 0x3B8(0x10) UNKNOWN PROPERTY
		AActor* CurrentContainer; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameWidgetBase");
			return ret;
		}

		void ResetDisplayValues(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVolumeMinigameChanged(AFortMinigame* Minigame); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC4340(relative to base address)
		void OnPlayerStatUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwningPlayerChangedTeams(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayMinigameStartUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayMinigamePregameCountdownUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayMinigameInProgressUI(bool bDisplay); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74FDC3554(relative to base address)
		void OnDisplayMinigameEndUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayMiniGameAbortUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayCaptureObjectiveUI(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentStateChangedDelegate(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC3490(relative to base address)
		FAthenaGameMessageData MakeMessageData(EAthenaGameMsgType MsgType, FText MsgText, USoundCue* MsgSound, float DisplayTime); // Flags: Final|Native|Static|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FDC3200(relative to base address)
		void HideAllMinigameWidgetUI(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2F48(relative to base address)
		void HandlePlayerStatChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7476407DC(relative to base address)
		void HandleOwningPlayerChangedTeams(); // Flags: Native|Protected, Memory Exec: 0x7FF74E2551C0(relative to base address)
		int32_t GetStatValue(UFortMinigameStatFilter* InFilter, bool bGameTotal); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2338(relative to base address)
	};


	// Class FortniteUI.MinigameObjectiveTrackerWidget
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3D0 - 0x3D0)
	class UMinigameObjectiveTrackerWidget : public UMinigameWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameObjectiveTrackerWidget");
			return ret;
		}

		void OnLocalPlayerChangedTeams(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.PaybackHUDWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UPaybackHUDWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Payback* CachedPaybackMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PaybackHUDWidgetBase");
			return ret;
		}

		void OnMutatorAvailable(AFortGameplayMutator* MutatorActor); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC3A10(relative to base address)
	};


	// Class FortniteUI.PerkAvailableAlertBaseWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UPerkAvailableAlertBaseWidget : public ULTMWidgetBase	
	{
	public:
		TWeakObjectPtr<AFortAthenaMutator_PerkSystemMutator*> CachedMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PerkAvailableAlertBaseWidget");
			return ret;
		}

		void OnPerkAvailibilityChanged(int32_t TagCount); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.PerkSelectionEntryWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UPerkSelectionEntryWidget : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnPerkSelected; // 0x2D8(0x10)
		int32_t SelectionIndex; // 0x2E8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2EC(0x4) UNKNOWN PROPERTY
		UFortSpyTechItemDefinition* ItemA; // 0x2F0(0x8)
		UFortSpyTechItemDefinition* ItemB; // 0x2F8(0x8)
		TArray<UFortSpyTechItemDefinition*> AllSelectableItems; // 0x300(0x10)
		TArray<UFortSpyTechItemDefinition*> AllSelectablePassives; // 0x310(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PerkSelectionEntryWidget");
			return ret;
		}

		void SetItems_BP(UFortSpyTechItemDefinition* FirstItem, UFortSpyTechItemDefinition* SecondItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectionMade(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC40F0(relative to base address)
		void OnPerkSelected__DelegateSignature(UPerkSelectionEntryWidget* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetTechSelectVerboseModeEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC23FC(relative to base address)
	};


	// Class FortniteUI.PowTimerWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3C0 - 0x388)
	class UPowTimerWidgetBase : public ULTMWidgetBase	
	{
	public:
		FScalableFloat TimeShowTimerAt; // 0x388(0x28)
		AFortAthenaMutator_Pow* BaseMutator; // 0x3B0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x3B8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PowTimerWidgetBase");
			return ret;
		}

		void OnUpdatedRespawnTime(int32_t Minutes, int32_t Seconds); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRespawnTimeElasped(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NewRespawnTime(int32_t NewTimeRemaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC33C0(relative to base address)
	};


	// Class FortniteUI.RespawnAndSpectateSelectButtonWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class URespawnAndSpectateSelectButtonWidgetBase : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnButtonSelected; // 0x2D8(0x10)
		FMulticastInlineDelegate OnButtonHovered; // 0x2E8(0x10)
		USizeBox* TargetImageSizeBox; // 0x2F8(0x8)
		USizeBox* DefaultButtonImageSizeBox; // 0x300(0x8)
		UCommonButtonLegacy* TargetButton; // 0x308(0x8)
		UFortLazyImage* TargetImage; // 0x310(0x8)
		UImage* DefaultButtonImage; // 0x318(0x8)
		UCommonTextBlock* TargetNameTextWidget; // 0x320(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_TargetState; // 0x328(0x8)
		int32_t ButtonIndex; // 0x330(0x4)
		bool bIsSelectable; // 0x334(0x1)
		unsigned char UnknownData00_7[0x3B]; // 0x335(0x3B) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase");
			return ret;
		}

		void SetSelectionVisualsVisibility(bool bNewVisibility); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetNavigationFocusOnButton(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetHoverHighlightVisibility(bool bNewVisibility); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetButtonVisibility_BP(bool bNewVisbility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectionMade(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC413C(relative to base address)
		void OnSelectionHovered(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC3EBC(relative to base address)
		void OnRespawnAndSpectateSelectButtonSelected__DelegateSignature(URespawnAndSpectateSelectButtonWidgetBase* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRespawnAndSpectateSelectButtonHovered__DelegateSignature(URespawnAndSpectateSelectButtonWidgetBase* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsEnabledUpdated_BP(bool bNewIsEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void IsSelectableUpdated_BP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.RespawnAndSpectateSelectContainerWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class URespawnAndSpectateSelectContainerWidget : public ULTMWidgetBase	
	{
	public:
		UClass* RespawnAndSpectateSelectWidgetClass; // 0x388(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x390(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RespawnAndSpectateSelectContainerWidget");
			return ret;
		}

		void UpdateRespawnAndSpectateSelectWidgetVisibility(bool bNewVisibility); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4E84(relative to base address)
		void OnRespawnAndSpectateSelectPlayerRespawned(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3E7C(relative to base address)
		void OnRespawnAndSpectateSelectAvailableOptionsChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3E68(relative to base address)
		void OnPanelOptionSelected(int32_t SelectedOption); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3C14(relative to base address)
	};


	// Class FortniteUI.RespawnAndSpectateSelectWidgetBase
	// Inherited from UFortActivatablePanelLTM -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x508 - 0x408)
	class URespawnAndSpectateSelectWidgetBase : public UFortActivatablePanelLTM	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x408(0x18) UNKNOWN PROPERTY
		AFortAthenaMutator_RespawnAndSpectateSelect* CachedMutator; // 0x420(0x8)
		TArray<URespawnAndSpectateSelectButtonWidgetBase*> SelectButtonWidgets; // 0x428(0x10)
		FText HeaderText_Preview; // 0x438(0x10)
		FText HeaderText_Selectable; // 0x448(0x10)
		FText HeaderText_NoOptions; // 0x458(0x10)
		FText DescriptionText_Preview; // 0x468(0x10)
		FText DescriptionText_Selectable; // 0x478(0x10)
		FText DescriptionText_NoOptions; // 0x488(0x10)
		UCommonButtonLegacy* ConfirmButton; // 0x498(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x4A0(0x28) UNKNOWN PROPERTY
		URichTextBlock* TextHeader; // 0x4C8(0x8)
		URichTextBlock* TextDescription; // 0x4D0(0x8)
		unsigned char UnknownData02_7[0x30]; // 0x4D8(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RespawnAndSpectateSelectWidgetBase");
			return ret;
		}

		void StartClosingWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectionMadeMobile(URespawnAndSpectateSelectButtonWidgetBase* Widget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4208(relative to base address)
		void OnSelectionMade(URespawnAndSpectateSelectButtonWidgetBase* Widget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4188(relative to base address)
		void OnSelectionHovered(URespawnAndSpectateSelectButtonWidgetBase* Widget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3F00(relative to base address)
		void OnSelectionConfirmed(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3EA8(relative to base address)
		void OnRespawnBecameAvailable(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC3E94(relative to base address)
		void OnLocalPlayerRespawned(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC39FC(relative to base address)
		void OnAvailableOptionsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC3468(relative to base address)
		UWidget NativeGetDesiredFocusTarget(); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EEF81D4(relative to base address)
		int32_t GetCurrentlyHoveredButtonIndex(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC1D0C(relative to base address)
	};


	// Class FortniteUI.RespawnPerkUnlockCountWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class URespawnPerkUnlockCountWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_SpyRumble* CachedMutator; // 0x388(0x8)
		UCommonTextBlock* TextBlock_RequiredKills; // 0x390(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x398(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RespawnPerkUnlockCountWidgetBase");
			return ret;
		}

		void UpdateScore(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4F04(relative to base address)
		void OnNewTechAvailable(int32_t NewCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleRequiredKillsForPerkUnlockChanged(int32_t KillCount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2C28(relative to base address)
	};


	// Class FortniteUI.RumbleLeaderBoard
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class URumbleLeaderBoard : public ULTMWidgetBase	
	{
	public:
		TArray<FSoundThreshold> ThresholdArray; // 0x388(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RumbleLeaderBoard");
			return ret;
		}

		void UpdateVisuals(TArray<FFortInGameLeaderboardPlacementData>& Data); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetGoalValue(float NewValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnThresholdPassed(FSoundThreshold& SoundThreshold, int32_t ThresholdIndex, bool bIsLocalPlayer); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.RumbleLeaderWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class URumbleLeaderWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x388(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RumbleLeaderWidget");
			return ret;
		}

		void UpdateDisplay(FFortInGameLeaderboardPlacementData& LeaderEntry, bool bIsTiedForLead); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardUpdate(TArray<FFortInGameLeaderboardPlacementData>& Data); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FDC37E8(relative to base address)
	};


	// Class FortniteUI.StoreAlertWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UStoreAlertWidget : public UCommonUserWidget	
	{
	public:
		UStoreToastRequest* StoreUpdatedRequest; // 0x2D8(0x8)
		UCatalogMessaging* CatalogMessaging; // 0x2E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StoreAlertWidget");
			return ret;
		}

		void SetupRequest(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC4B90(relative to base address)
		void DisplayStoreUpdated(UStoreToastRequest* NewStoreUpdatedRequest); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TagTeamChangeMessage
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UTagTeamChangeMessage : public ULTMWidgetBase	
	{
	public:
		FGameplayTag BlueTeamTag; // 0x388(0x4)
		FGameplayTag RedTeamTag; // 0x38C(0x4)
		unsigned char UnknownData00_7[0x10]; // 0x390(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TagTeamChangeMessage");
			return ret;
		}

		void SetTeam(bool bIsIt); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TagTeamCountWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3A8 - 0x388)
	class UTagTeamCountWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x388(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TagTeamCountWidget");
			return ret;
		}

		void SetRedTeamSize(int32_t TeamSize, int32_t TotalSize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetCurrentTeam(char CurrentTeam); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBlueTeamSize(int32_t TeamSize, int32_t TotalSize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TeamLimitedLivesCounterWidget
	// Inherited from ULimitedLivesCounterWidget -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3B0 - 0x3A8)
	class UTeamLimitedLivesCounterWidget : public ULimitedLivesCounterWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x3A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TeamLimitedLivesCounterWidget");
			return ret;
		}
	};


	// Class FortniteUI.TeamPlacementWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3C0 - 0x388)
	class UTeamPlacementWidget : public ULTMWidgetBase	
	{
	public:
		TWeakObjectPtr<AFortAthenaMutator_TeamPlacement*> TeamPlacementMutator; // 0x388(0x8)
		TWeakObjectPtr<AFortPlayerStateAthena*> CurrentPlayerState; // 0x390(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x398(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TeamPlacementWidget");
			return ret;
		}

		void OnPlayerScoringUpdate(int32_t CurrentPlayerTeamScore, int32_t PreviousPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t PreviousPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamScores); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TryHardCountdownWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UTryHardCountdownWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x24]; // 0x318(0x24) UNKNOWN PROPERTY
		int32_t NumToStartShowingAt; // 0x33C(0x4)
		unsigned char UnknownData01_7[0x8]; // 0x340(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TryHardCountdownWidget");
			return ret;
		}

		void UpdateNumber(int32_t NumRemaining); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowWidget(int32_t NumRemaining); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74F49B320(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3654(relative to base address)
		bool IsShowing(); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74E0AB77C(relative to base address)
		void HideWidget(); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E94BA1C(relative to base address)
	};


	// Class FortniteUI.TwoTeamLivesCounterWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UTwoTeamLivesCounterWidget : public ULTMWidgetBase	
	{
	public:
		AFortPlayerStateAthena* CurrentPlayerState; // 0x388(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x390(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TwoTeamLivesCounterWidget");
			return ret;
		}

		void OnPlayerDied(AFortPlayerStateAthena* DeadPlayer); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3DD8(relative to base address)
		void OnLivesCountUpdated(int32_t LocalLivesCount, int32_t EnemyLivesCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFriendlyTeamScoreUpdated(FTDMTeamScoreData ScoreData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnemyTeamScoreUpdated(FTDMTeamScoreData ScoreData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TwoTeamScoreWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x3A0 - 0x318)
	class UTwoTeamScoreWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x318(0x28) UNKNOWN PROPERTY
		TArray<float> PlayScoreProgressSoundPercentagesMild; // 0x340(0x10)
		TArray<float> PlayScoreProgressSoundPercentagesMedium; // 0x350(0x10)
		TArray<float> PlayScoreProgressSoundPercentagesStrong; // 0x360(0x10)
		float PercentageScoreToPlayCountdown; // 0x370(0x4)
		float PercentageScoreToPlayFinalCountdown; // 0x374(0x4)
		float ScoreCountdownSoundFrequency; // 0x378(0x4)
		char LastViewedTeam; // 0x37C(0x1)
		unsigned char UnknownData01_7[0x23]; // 0x37D(0x23) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TwoTeamScoreWidgetBase");
			return ret;
		}

		void UpdateAllUI(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC4DE0(relative to base address)
		void OnUpdateTotalScore(FText& TotalScoreText, int32_t Score); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateTeamScore(int32_t TeamIndex, FTDMTeamScoreData& ScoreData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayScoreProgressSound(ETDMScoreProgressTypes ScoreProgressType, bool bIsLocalTeam); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC36D4(relative to base address)
		void OnCountdownTimerUpdate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC347C(relative to base address)
	};


	// Class FortniteUI.UraniumRespawnWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x388 - 0x388)
	class UUraniumRespawnWidget : public ULTMWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UraniumRespawnWidget");
			return ret;
		}

		void SetUpPlayerPortrait(UFortLazyImage* Image, AFortPlayerStateAthena* PlayerState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDC4A44(relative to base address)
	};


	// Class FortniteUI.UraniumWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UUraniumWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Uranium* UraniumMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UraniumWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.UraniumRoundEndWidgetBase
	// Inherited from UUraniumWidgetBase -> ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A8 - 0x390)
	class UUraniumRoundEndWidgetBase : public UUraniumWidgetBase	
	{
	public:
		UClass* RoundInfoWidgetClass; // 0x390(0x8)
		UOverlay* RoundInfoOverlay; // 0x398(0x8)
		UPerkIntroScreenWidget* PerkIntroScreenWidget; // 0x3A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UraniumRoundEndWidgetBase");
			return ret;
		}

		void NativeOnPerkIntroFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3398(relative to base address)
		void HandleUpdateRoundEndVisibility(bool bNewVisibility); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2DD8(relative to base address)
		void HandleShowRoundIntro(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC2D28(relative to base address)
		void AttempShowRoundInfo(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDC1B30(relative to base address)
	};


	// Class FortniteUI.WaxActiveTokenEventWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UWaxActiveTokenEventWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Wax* WaxMutator; // 0x388(0x8)
		int32_t WaxTokensForMediumCrit; // 0x390(0x4)
		int32_t WaxTokensForHighCrit; // 0x394(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxActiveTokenEventWidgetBase");
			return ret;
		}

		int32_t GetWaxTokensMediumCrit(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2578(relative to base address)
		int32_t GetWaxTokensHighCrit(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDC2534(relative to base address)
	};


	// Class FortniteUI.WaxHotelPromptWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UWaxHotelPromptWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x388(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxHotelPromptWidget");
			return ret;
		}

		void OpenWidget(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CloseWidget(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.WaxPlacementWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x410 - 0x388)
	class UWaxPlacementWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Wax* WaxMutator; // 0x388(0x8)
		FWaxPlacementData FirstPlacement; // 0x390(0x20)
		FWaxPlacementData SecondPlacement; // 0x3B0(0x20)
		FWaxPlacementData ThirdPlacement; // 0x3D0(0x20)
		FWaxPlacementData FourthPlacement; // 0x3F0(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxPlacementWidgetBase");
			return ret;
		}

		void UpdateWaxPlacements(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPodiumChangeOccured(TArray<AFortPlayerStateAthena*>& Leaders); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAnyTokenChange(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC3440(relative to base address)
		void NativeOnPodiumChangeOccured(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC33AC(relative to base address)
	};


	// Class FortniteUI.WaxProgressWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UWaxProgressWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Wax* WaxMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxProgressWidgetBase");
			return ret;
		}

		void ShowPlayerCloseToVictory(int32_t CoinsAwayFromVictory); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowEnemyCloseToVictory(int32_t CoinsAwayFromVictory); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPendingFlashes(TArray<int32_t>& Flashes); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDC3C90(relative to base address)
		void OnAnyTokenChange(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC3454(relative to base address)
		void K2_OnPodiumChange(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnAnyTokenChange(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideCloseToVictoryIfShown(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DoCoinPulseFor(int32_t BarIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AdjustForSpectate(bool bIsSpectating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.WaxRespawnCounterWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3A0 - 0x388)
	class UWaxRespawnCounterWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x388(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxRespawnCounterWidget");
			return ret;
		}

		void SetCount(int32_t NewCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.WaxSquadInfoWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x398 - 0x388)
	class UWaxSquadInfoWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x388(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxSquadInfoWidget");
			return ret;
		}

		void SetScore(int32_t Score); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPlacement(int32_t Placement); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.WaxSquadStatusWidget
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3B8 - 0x388)
	class UWaxSquadStatusWidget : public ULTMWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x388(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxSquadStatusWidget");
			return ret;
		}

		void UpdateThreatValue(EWaxState NewWaxState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateScore(int32_t NewScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateLives(int32_t NewScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.WaxTokenEventWidgetBase
	// Inherited from ULTMWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UWaxTokenEventWidgetBase : public ULTMWidgetBase	
	{
	public:
		AFortAthenaMutator_Wax* WaxMutator; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WaxTokenEventWidgetBase");
			return ret;
		}

		void OnTokensCollected(AFortPlayerStateAthena* Player, int32_t Amount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTokensAwarded(AFortPlayerStateAthena* Player, int32_t Amount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFlyingTokensApplied(AFortPlayerStateAthena* Player, int32_t Amount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFrontEndMapPoiIcon
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaFrontEndMapPoiIcon : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_PoiName; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2E0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFrontEndMapPoiIcon");
			return ret;
		}

		void HandleTextChanged(bool bIsRedacted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x5A8 - 0x528)
	class UAthenaFullScreenMapBase : public UCommonActivatablePanelLegacy	
	{
	public:
		UAthenaMapLayerContainer* MapLayerContainer; // 0x528(0x8)
		FDataTableRowHandle ToggleMapMarkerRowHandle; // 0x530(0x10)
		FDataTableRowHandle TeleportToMapMarkerRowHandle; // 0x540(0x10)
		TWeakObjectPtr<UFortMarkerDetailsTable*> SoftMarkerDetailsTable; // 0x550(0x20)
		FMinimapZoomBounds ZoomBounds; // 0x570(0x28)
		bool bMapLayerContainerEnabled; // 0x598(0x1)
		unsigned char UnknownData00_7[0xF]; // 0x599(0xF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapBase");
			return ret;
		}

		void ShowMapLayerContainer(bool bShowing); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapControlsWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x568 - 0x3F0)
	class UAthenaFullScreenMapControlsWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY
		UCommonButtonBase* Button_ToggleQuestIcons; // 0x410(0x8)
		UCommonButtonBase* Button_ResetToPlayer; // 0x418(0x8)
		UCommonButtonBase* Button_Exit; // 0x420(0x8)
		FText TextNPCIconsOn; // 0x428(0x10)
		FText TextNPCIconsOff; // 0x438(0x10)
		FText TextPinQuest; // 0x448(0x10)
		FText TextUnpinQuest; // 0x458(0x10)
		FText TextPinCategory; // 0x468(0x10)
		FText TextUnpinCategory; // 0x478(0x10)
		FText TextConfirmRemoveQuestTitle; // 0x488(0x10)
		FText TextConfirmRemoveQuestDescription; // 0x498(0x10)
		UCommonButtonBase* Button_SortToggle; // 0x4A8(0x8)
		UCommonButtonBase* Button_RemoveSelectedQuest; // 0x4B0(0x8)
		UFortCTAButton* Button_PinSelectedQuest; // 0x4B8(0x8)
		UFortCTAButton* Button_PinSelectedCategory; // 0x4C0(0x8)
		UFortCTAButton* Button_ViewPlaylist; // 0x4C8(0x8)
		UFortCTAButton* Button_QuestNPCIcons; // 0x4D0(0x8)
		UFortCTAButton* Button_InspectItems; // 0x4D8(0x8)
		UFortCTAButton* Button_DebugTool; // 0x4E0(0x8)
		UClass* ConfirmationWindowClass; // 0x4E8(0x8)
		unsigned char UnknownData01_7[0x78]; // 0x4F0(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapControlsWidget");
			return ret;
		}

		void OnViewPlaylistButtonClicked__DelegateSignature(FString IslandMnemonic, FName PlaylistName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPinSelectedQuestButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPinSelectedCategoryButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInspectItemsButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitMapButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDebugToolButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnSortTypeTextChanged(FText& TypeText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnLayoutShuffled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInputTypeChanged(ECommonInputType NewInputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleToggleQuestIconsClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapPanel
	// Inherited from UAthenaFullScreenMapBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x638 - 0x5A8)
	class UAthenaFullScreenMapPanel : public UAthenaFullScreenMapBase	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x5A8(0x30) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x5D8(0x40)
		TWeakObjectPtr<UClass*> SoftGameInfoClass; // 0x618(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapPanel");
			return ret;
		}

		void OnTransistionedFromAnotherMapPanel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMapGameInfoWidgetCreated(UUserWidget* Widget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapProductContainer
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x150 (0x540 - 0x3F0)
	class UAthenaFullScreenMapProductContainer : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x50]; // 0x3F0(0x50) UNKNOWN PROPERTY
		UClass* ProductGroupType; // 0x440(0x8)
		float ProductGroupPadding; // 0x448(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x44C(0x4) UNKNOWN PROPERTY
		UVerticalBox* VB_ProductGroups; // 0x450(0x8)
		UScrollBox* ScrollBox_ProductGroups; // 0x458(0x8)
		FUserWidgetPool ProductGroupWidgetPool; // 0x460(0x88)
		TMap<UQuestProductGroup*, UAthenaFullScreenMapProductGroup*> ProductGroupInstanceMap; // 0x4E8(0x50)
		unsigned char UnknownData02_7[0x8]; // 0x538(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapProductContainer");
			return ret;
		}
	};


	// Class FortniteUI.AthenaFullScreenMapProductGroup
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x158 (0x430 - 0x2D8)
	class UAthenaFullScreenMapProductGroup : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x50]; // 0x2D8(0x50) UNKNOWN PROPERTY
		UClass* ActiveCategoryButtonType; // 0x328(0x8)
		UClass* InactiveCategoryButtonType; // 0x330(0x8)
		float CategoryButtonPadding; // 0x338(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x33C(0x4) UNKNOWN PROPERTY
		UAthenaFullScreenMapQuestProductButton* Button_Product; // 0x340(0x8)
		UVerticalBox* VB_Categories; // 0x348(0x8)
		FUserWidgetPool CategoryWidgetPool; // 0x350(0x88)
		UCommonButtonGroupBase* ButtonGroup; // 0x3D8(0x8)
		TMap<FGuid, UAthenaFullScreenMapQuestCategoryBase*> CategoryInstanceMap; // 0x3E0(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapProductGroup");
			return ret;
		}

		UWidget HandleExternalNavigationRequest(EUINavigation InNavigation); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDC27A0(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapQuestCategoryBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UAthenaFullScreenMapQuestCategoryBase : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x1390(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapQuestCategoryBase");
			return ret;
		}

		void ShowNewBang(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFocusSetToCategories(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnFocusLostFromCategories(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapQuestCategoryButton
	// Inherited from UAthenaFullScreenMapQuestCategoryBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13D0 - 0x13B0)
	class UAthenaFullScreenMapQuestCategoryButton : public UAthenaFullScreenMapQuestCategoryBase	
	{
	public:
		UCommonTextBlock* Text_DebugCategoryName; // 0x13B0(0x8)
		UFortLazyImage* LazyImage_Icon; // 0x13B8(0x8)
		UAthenaQuestCategoryCompletedTracker* Widget_AthenaQuestCategoryCompletedTracker; // 0x13C0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton");
			return ret;
		}

		void OnTimeRemainingTimerSet(EAthenaChallengeTimerState TimerState, EQuestCategoryButtonTimerState TimerType, FText& TimerText, FTimespan TimeRemaining); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMoreInTimerSet(EAthenaChallengeTimerState TimerState, FTimespan& TimeRemaining); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePinnedQuestChanged(FAthenaPinnedQuestData& PinnedQuestData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDC296C(relative to base address)
		void BP_Populate(FText& Title, FText& SubText, int32_t CompletedQuests, int32_t TotalQuest, bool bIsPinned, FQuestCategoryButtonOverrides& ButtonOverrides, bool bQuestListContentDisabled); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapQuestInactiveCategoryButton
	// Inherited from UAthenaFullScreenMapQuestCategoryBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13B0 - 0x13B0)
	class UAthenaFullScreenMapQuestInactiveCategoryButton : public UAthenaFullScreenMapQuestCategoryBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapQuestInactiveCategoryButton");
			return ret;
		}

		void BP_Populate(FText& Title); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenMapQuestProductButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UAthenaFullScreenMapQuestProductButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x1390(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenMapQuestProductButton");
			return ret;
		}

		void BP_ProductExpanded(bool bExpanded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Populate(FText& DisplayName, TWeakObjectPtr<UTexture2D*>& Icon); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenQuestMapContent
	// Inherited from UAthenaFullScreenMapBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x698 - 0x5A8)
	class UAthenaFullScreenQuestMapContent : public UAthenaFullScreenMapBase	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x5A8(0x28) UNKNOWN PROPERTY
		UAthenaFullScreenMapControlsWidget* ControlsPanel; // 0x5D0(0x8)
		UAthenaQuestListContent* QuestPanel; // 0x5D8(0x8)
		UImage* Image_CustomMapBackground; // 0x5E0(0x8)
		UScaleBox* ScaleBox_CustomMapContent; // 0x5E8(0x8)
		TArray<FProductQueryMapData> ProductQueryMapData; // 0x5F0(0x10)
		FGameplayTagContainer MapSupportedProducts; // 0x600(0x20)
		unsigned char UnknownData01_6[0x40]; // 0x620(0x40) UNKNOWN PROPERTY
		UUserWidget* CustomMapWidgetInstance; // 0x660(0x8)
		unsigned char UnknownData02_7[0x30]; // 0x668(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenQuestMapContent");
			return ret;
		}

		void OnQuestListLostFocus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQuestListGainedFocus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChallengeCategoryChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleViewPlaylistButtonClicked(FString IslandMnemonic, FName PlaylistName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2E58(relative to base address)
		void HandleSortTypeTextChanged(FText& TypeText); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDC2D3C(relative to base address)
		void HandlePinSelectedQuestButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2958(relative to base address)
		void HandlePinSelectedCategoryButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2944(relative to base address)
		void HandlePinnedQuestsChanged(FAthenaPinnedQuestData& PinnedQuestData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDC29F8(relative to base address)
		void HandleInspectItemsButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC28B0(relative to base address)
		void HandleControlsSortButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC25BC(relative to base address)
	};


	// Class FortniteUI.AthenaFrontendQuestMapPanel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UAthenaFrontendQuestMapPanel : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFrontendQuestMapPanel");
			return ret;
		}
	};


	// Class FortniteUI.AthenaFullScreenQuestMapPanel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x588 - 0x3F0)
	class UAthenaFullScreenQuestMapPanel : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x3F0(0x48) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x438(0x40)
		FMulticastInlineDelegate OnExitButtonClicked; // 0x478(0x10)
		float SafeZoneOpacityInterpolationInDuration; // 0x488(0x4)
		float SafeZoneOpacityInterpolationOutDuration; // 0x48C(0x4)
		bool bResetSelectionWhenParentDeactivates; // 0x490(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x491(0x7) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> DebugToolClass; // 0x498(0x20)
		UCommonTextBlock* Text_DebugActiveProduct; // 0x4B8(0x8)
		UAthenaFullScreenMapControlsWidget* ControlsPanel; // 0x4C0(0x8)
		UPanelWidget* Panel_Frontend; // 0x4C8(0x8)
		UCommonButtonBase* Button_Progression; // 0x4D0(0x8)
		USafeZone* SafeZone_QuestList; // 0x4D8(0x8)
		UAthenaFullScreenMapProductContainer* Widget_ProductContainer; // 0x4E0(0x8)
		UAthenaFullScreenQuestMapContent* Widget_QuestMapContent; // 0x4E8(0x8)
		UAthenaScrollBox* ScrollBox_ContentRoot; // 0x4F0(0x8)
		UCommonButtonBase* Button_Previous; // 0x4F8(0x8)
		UCommonButtonBase* Button_Next; // 0x500(0x8)
		unsigned char UnknownData02_6[0x29]; // 0x508(0x29) UNKNOWN PROPERTY
		bool bEnableSnapScrolling; // 0x531(0x1)
		unsigned char UnknownData03_6[0x2]; // 0x532(0x2) UNKNOWN PROPERTY
		float SnapScrollingThreshold; // 0x534(0x4)
		unsigned char UnknownData04_7[0x50]; // 0x538(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenQuestMapPanel");
			return ret;
		}

		void OnUpdateScrollPosition(UWidget* WidgetToScroll); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsQuestsTabActive(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FCD924C(relative to base address)
		void HandleScrollCompleted(float ScrollAmount); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2CA8(relative to base address)
		void HandleRequestPrevious(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2C14(relative to base address)
		UWidget HandleQuestListExternalNavigationRequest(EUINavigation Direction); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC2B84(relative to base address)
		void HandleExitClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDC278C(relative to base address)
		void HandleDebugToolClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void BP_UpdateCosmeticAgeGate(TArray<FFortItemQuantityPair>& ItemQuantityPairs, bool bContainsJamTrack); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaFullScreenScoreboardPanel
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3D8 - 0x3D0)
	class UAthenaFullScreenScoreboardPanel : public UMinigameWidgetBase	
	{
	public:
		UScrollBox* DataScrollBox; // 0x3D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFullScreenScoreboardPanel");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGoalsPageHorizontalQuestCard_PageButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x1390 - 0x1390)
	class UAthenaGoalsPageHorizontalQuestCard_PageButton : public UCommonButtonBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageHorizontalQuestCard_PageButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGoalsPageHorizontalQuestCard
	// Inherited from UAthenaGoalsPageBaseCard -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x358 - 0x2F8)
	class UAthenaGoalsPageHorizontalQuestCard : public UAthenaGoalsPageBaseCard	
	{
	public:
		UClass* GoalWidgetClass; // 0x2F8(0x8)
		UCommonListView* ListView_Goals; // 0x300(0x8)
		UAthenaGoalsPageHorizontalQuestCard_PageButton* Button_PageLeft; // 0x308(0x8)
		FDataTableRowHandle Button_PageLeftInputAction; // 0x310(0x10)
		UAthenaGoalsPageHorizontalQuestCard_PageButton* Button_PageRight; // 0x320(0x8)
		FDataTableRowHandle Button_PageRightInputAction; // 0x328(0x10)
		int32_t GoalPreallocationCount; // 0x338(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x33C(0x4) UNKNOWN PROPERTY
		UCommonTextBlock* Text_BundleID; // 0x340(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x348(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageHorizontalQuestCard");
			return ret;
		}

		void BP_OnGoalWidgetGenerated(UUserWidget* GoalWidget, int32_t GoalIndex, int32_t GoalsTotal); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnEntryReleased(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaGoalsPageHorizontalQuestCardStage
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UAthenaGoalsPageHorizontalQuestCardStage : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		UAthenaChallengeRewards* UserWidget_Rewards; // 0x2B8(0x8)
		UCommonTextBlock* Text_QuestID; // 0x2C0(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x2C8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageHorizontalQuestCardStage");
			return ret;
		}

		void Reset(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwnerSelectionChangedBP(bool bSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitVisual(int32_t OrderInList); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FillAsUnclaimedStage(int32_t Required); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FillAsClaimedStage(int32_t Required, bool bIsRewardAcquired); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FillAsActiveStage(float GoalProgress, int32_t Required); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaGoalsPageHorizontalQuestCardStageListItem
	// Inherited from UObject
	// Size: 0x18 (0x40 - 0x28)
	class UAthenaGoalsPageHorizontalQuestCardStageListItem : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x28(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageHorizontalQuestCardStageListItem");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGoalsPageQuestCard
	// Inherited from UAthenaGoalsPageBaseCard -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x320 - 0x2F8)
	class UAthenaGoalsPageQuestCard : public UAthenaGoalsPageBaseCard	
	{
	public:
		UDynamicEntryBox* DynamicEntryBox_Goals; // 0x2F8(0x8)
		UDynamicEntryBox* DynamicEntryBox_LockedQuests; // 0x300(0x8)
		int32_t GoalPreallocationCount; // 0x308(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x30C(0x4) UNKNOWN PROPERTY
		UCommonTextBlock* Text_BundleID; // 0x310(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageQuestCard");
			return ret;
		}
	};


	// Class FortniteUI.AthenaGoalsPageQuestCardLine
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class UAthenaGoalsPageQuestCardLine : public UUserWidget	
	{
	public:
		UCommonRichTextBlock* RichText_GoalName; // 0x2B0(0x8)
		UAthenaChallengeRewards* UserWidget_Rewards; // 0x2B8(0x8)
		UCommonTextBlock* Text_QuestID; // 0x2C0(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2C8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageQuestCardLine");
			return ret;
		}

		void SetObjectiveProgress(int32_t Achieved, int32_t Required, bool bIsRewardAcquired); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Reset(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaGoalsPageTabList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UAthenaGoalsPageTabList : public UCommonUserWidget	
	{
	public:
		UFortTabListWidgetBase_Legacy* TabList_GoalCategories; // 0x2D8(0x8)
		UClass* TabButtonClass; // 0x2E0(0x8)
		TArray<FGoalsPageCategoryTabData> GoalTabsData; // 0x2E8(0x10)
		UObject* DefaultTabDisplayAsset; // 0x2F8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x300(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGoalsPageTabList");
			return ret;
		}

		void SetTabName(FText& DisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTabSelected(FName TabNameID); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF39C0(relative to base address)
		void HandleTabButtonCreated(FName TabID, UCommonButtonBase* TabButton); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF367C(relative to base address)
	};


	// Class FortniteUI.AthenaMapChallengeCategoryTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UAthenaMapChallengeCategoryTabButton : public UCommonButtonLegacy	
	{
	public:
		UCommonLazyImage* LazyImage_Icon; // 0x13E0(0x8)
		FVector2D ImageSize_Mobile; // 0x13E8(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapChallengeCategoryTabButton");
			return ret;
		}

		void BP_ShowBang(bool bShow); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapChallengeListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaMapChallengeListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UAthenaMapNavigableIconSingleChallenge* IconWidget; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x2E8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapChallengeListEntry");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapChallengeListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x398 - 0x280)
	class UAthenaMapChallengeListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		TEnumAsByte<EOrientation> orientation; // 0x368(0x1)
		unsigned char UnknownData01_7[0x2F]; // 0x369(0x2F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapChallengeListView");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapGameInfo
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x228 (0x540 - 0x318)
	class UAthenaMapGameInfo : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x1C0]; // 0x318(0x1C0) UNKNOWN PROPERTY
		UCommonTextBlock* Text_PlaylistName; // 0x4D8(0x8)
		unsigned char UnknownData01_7[0x60]; // 0x4E0(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapGameInfo");
			return ret;
		}

		void OnMinigameVolumeEntered(FEventMessageTag Channel, FPlayerEnterSpatialActorContextLegacyMinigame& PlayerEnteredVolumeContext); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDF3ED4(relative to base address)
		void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapIconsOverlay
	// Inherited from UOverlay -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x250 (0x3D0 - 0x180)
	class UAthenaMapIconsOverlay : public UOverlay	
	{
	public:
		UClass* AthenaMapNavigableIconSingleChallengeClass; // 0x180(0x8)
		UClass* AthenaMapNavigableIconStackOfChallengesClass; // 0x188(0x8)
		UClass* AthenaMapNavigableIconStackOfNoLocationChallengesClass; // 0x190(0x8)
		bool bShowNoLocationIcon; // 0x198(0x1)
		bool bAllowFocusControl; // 0x199(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x19A(0x6) UNKNOWN PROPERTY
		UAthenaQuestIndicatorCache* QuestIndicatorCache; // 0x1A0(0x8)
		FUserWidgetPool WidgetsPool; // 0x1A8(0x88)
		TArray<FDisabledQuestData> DisabledQuests; // 0x230(0x10)
		unsigned char UnknownData01_7[0x190]; // 0x240(0x190) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapIconsOverlay");
			return ret;
		}
	};


	// Class FortniteUI.AthenaInGameMapIconsOverlay
	// Inherited from UAthenaMapIconsOverlay -> UOverlay -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3D8 - 0x3D0)
	class UAthenaInGameMapIconsOverlay : public UAthenaMapIconsOverlay	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInGameMapIconsOverlay");
			return ret;
		}
	};


	// Class FortniteUI.AthenaFrontEndMapIconsOverlay
	// Inherited from UAthenaMapIconsOverlay -> UOverlay -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x400 - 0x3D0)
	class UAthenaFrontEndMapIconsOverlay : public UAthenaMapIconsOverlay	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3D0(0x20) UNKNOWN PROPERTY
		UClass* AthenaMapPoiIconClass; // 0x3F0(0x8)
		UFortGameStateComponent_EventLevel* EventLevelInstance; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaFrontEndMapIconsOverlay");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapNavigableIcon
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class UAthenaMapNavigableIcon : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x2D8(0x28) UNKNOWN PROPERTY
		UImage* Image_Icon; // 0x300(0x8)
		FVector2D AnchorPoint; // 0x308(0x10)
		unsigned char UnknownData01_7[0x58]; // 0x318(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapNavigableIcon");
			return ret;
		}

		void OnUnselected(bool bUserInteraction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUnhovered(bool bUserInteraction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetIsInGame(bool bIsInGame); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetHasLocation(bool bHasLocation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelected(bool bUserInteraction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHovered(bool bUserInteraction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChangeBangVisibility(bool bShouldShow); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChallengeSet(bool bIsComplete, bool bIsLocked, bool bHasIconOverride, float Progress, bool bShouldShowBang, bool bIsPinned, bool bChallengeSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChallengeReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChallengeIconOverriden(UTexture2D* Icon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsIconSelected(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF3C0C(relative to base address)
		bool IsIconHovered(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EA67D8C(relative to base address)
	};


	// Class FortniteUI.AthenaMapNavigableIconCustom
	// Inherited from UAthenaMapNavigableIcon -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x370 - 0x370)
	class UAthenaMapNavigableIconCustom : public UAthenaMapNavigableIcon	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapNavigableIconCustom");
			return ret;
		}

		void SetIcon(TWeakObjectPtr<UObject*>& Icon); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapNavigableIconSingleChallenge
	// Inherited from UAthenaMapNavigableIcon -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x378 - 0x370)
	class UAthenaMapNavigableIconSingleChallenge : public UAthenaMapNavigableIcon	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x370(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapNavigableIconSingleChallenge");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapNavigableIconStackOfChallenges
	// Inherited from UAthenaMapNavigableIcon -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3A8 - 0x370)
	class UAthenaMapNavigableIconStackOfChallenges : public UAthenaMapNavigableIcon	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x370(0x18) UNKNOWN PROPERTY
		UCommonActionWidget* CommonActionWidget_Cycle; // 0x388(0x8)
		FDataTableRowHandle CycleStackInputAction; // 0x390(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x3A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges");
			return ret;
		}

		bool ShouldCycleAutomatically(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF4E58(relative to base address)
		void SelectStackedDataAt(int32_t InSelectedStackedDataIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF440C(relative to base address)
		void OnChangedStackData(int32_t NewStackCount, int32_t NonCompletedCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetStackedDataCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2D84(relative to base address)
		int32_t GetSelectStackedDataIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2CBC(relative to base address)
		void CycleStackedData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF26C8(relative to base address)
	};


	// Class FortniteUI.AthenaMapNavigableIconStackOfNoLocationChallenges
	// Inherited from UAthenaMapNavigableIconStackOfChallenges -> UAthenaMapNavigableIcon -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3B0 - 0x3A8)
	class UAthenaMapNavigableIconStackOfNoLocationChallenges : public UAthenaMapNavigableIconStackOfChallenges	
	{
	public:
		UCommonTextBlock* Text_AllChallenges; // 0x3A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapNavigableIconStackOfNoLocationChallenges");
			return ret;
		}

		void OnSetChallengesInfo(int32_t ChallengesNum, int32_t CountOfCompletedChallenges); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapPlayerEliminationsWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UAthenaMapPlayerEliminationsWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FGameplayTag PlayerBotTag; // 0x2E0(0x4)
		FName ParamName_PlayerIconTexture; // 0x2E4(0x4)
		FName ParamName_PlayerIconBackgroundColor; // 0x2E8(0x4)
		bool bIsLocalPlayer; // 0x2EC(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2ED(0x3) UNKNOWN PROPERTY
		UImage* Image_PlayerIcon; // 0x2F0(0x8)
		UCommonTextBlock* Text_PlayerName; // 0x2F8(0x8)
		UCommonTextBlock* Text_ElimCount; // 0x300(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x308(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapPlayerEliminationsWidget");
			return ret;
		}

		void UpdateRankedProgress(FRankedProgressReplicatedData& RankedProgress); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetRankedProgress(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMapPlayersLeftWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaMapPlayersLeftWidget : public UFortHUDElementWidget	
	{
	public:
		UCommonTextBlock* Text_PlayersTeamsLeft; // 0x318(0x8)
		FText PlayersTeamsLeftTextFormat; // 0x320(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x330(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapPlayersLeftWidget");
			return ret;
		}

		void OnMaxSquadSizeSet(int32_t MaxSquadSize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTeamsLeftChanged(int32_t NumTeamsLeft); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF3A40(relative to base address)
		void HandlePlayersLeftChanged(int32_t NumPlayersLeft); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF34FC(relative to base address)
	};


	// Class FortniteUI.AthenaMapSquadEliminationsWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class UAthenaMapSquadEliminationsWidget : public UFortHUDElementWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_SquadElims; // 0x318(0x8)
		unsigned char UnknownData00_7[0x50]; // 0x320(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapSquadEliminationsWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaMapStormInfo
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x260 (0x578 - 0x318)
	class UAthenaMapStormInfo : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x318(0x178) UNKNOWN PROPERTY
		FScalableFloat SafeZoneDamageAttribute; // 0x490(0x28)
		FText SafeZonePhaseFormatText; // 0x4B8(0x10)
		FText StormIncomingFormatText; // 0x4C8(0x10)
		FText StormDamageFormatText; // 0x4D8(0x10)
		UCommonTextBlock* Text_SafeZonePhase; // 0x4E8(0x8)
		UCommonRichTextBlock* RichText_StormDamage; // 0x4F0(0x8)
		unsigned char UnknownData01_7[0x80]; // 0x4F8(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMapStormInfo");
			return ret;
		}

		void OnSafeZonePhaseChanged(int32_t SafeZonePhase); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSafeZoneCountChanged(int32_t SafeZoneCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaQuestListContent
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x590 - 0x528)
	class UAthenaQuestListContent : public UCommonActivatablePanelLegacy	
	{
	public:
		UAthenaChallengeQuestListView* ListView_Quests; // 0x528(0x8)
		FDataTableRowHandle PlaceMarkerBinding; // 0x530(0x10)
		FDataTableRowHandle RemoveMarkerBinding; // 0x540(0x10)
		TScriptInterface<Class> QuestEntriesContext; // 0x550(0x10)
		unsigned char UnknownData00_7[0x30]; // 0x560(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuestListContent");
			return ret;
		}

		UWidget HandleLeftRightNavigation(EUINavigation Direction); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF346C(relative to base address)
	};


	// Class FortniteUI.QuestPanelDebugListItem
	// Inherited from UObject
	// Size: 0x50 (0x78 - 0x28)
	class UQuestPanelDebugListItem : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x28(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.QuestPanelDebugListItem");
			return ret;
		}

		TEnumAsByte GetEntryType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E2731EC(relative to base address)
		FQuestPanelDebugEntryData GetEntryData(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2B30(relative to base address)
		FString GetDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2B14(relative to base address)
	};


	// Class FortniteUI.QuestPanelDebugToolWidgetBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UQuestPanelDebugToolWidgetBase : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.QuestPanelDebugToolWidgetBase");
			return ret;
		}

		UQuestPanelDebugListItem FindEntryForItem(UFortPersistableItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2764(relative to base address)
		void FindAndSelectEntry(UFortPersistableItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF26DC(relative to base address)
		void BrowseToAsset(UObject* Object); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C088608(relative to base address)
		FText AsDateTimeWithTimezone(FDateTime& InDateTime); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2100(relative to base address)
	};


	// Class FortniteUI.QuestPanelDebugToolListEntry
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UQuestPanelDebugToolListEntry : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.QuestPanelDebugToolListEntry");
			return ret;
		}

		void SetIsTemp(bool bIsTemp); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Populate(FString DisplayName, TEnumAsByte<EQuestPanelDebugListEntryType> EntryType, bool bIsTemp); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.QuestPanelDebugTool
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x438 - 0x3F0)
	class UQuestPanelDebugTool : public UCommonActivatableWidget	
	{
	public:
		UListView* ListView_Entries; // 0x3F0(0x8)
		unsigned char UnknownData00_7[0x40]; // 0x3F8(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.QuestPanelDebugTool");
			return ret;
		}

		void SetSearchFilter(FString SearchFilter); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF4A84(relative to base address)
		void HandleItemSelectionChanged(UObject* SelectedItem); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF33EC(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool bDisplayStatusUpdate, bool bDisplayAnnouncementUpdate); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF3260(relative to base address)
		void BP_SetSelectionType(TEnumAsByte<EQuestPanelDebugListEntryType> EntryType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_SearchResultsChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Init(FString SearchFilter); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.QuestPanelDebugToolViewModel
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x1A0 (0x210 - 0x70)
	class UQuestPanelDebugToolViewModel : public UFortPerUserViewModel	
	{
	public:
		UFortQuestItem* QuestItem; // 0x70(0x8)
		UFortQuestItemDefinition* QuestDefinition; // 0x78(0x8)
		int32_t QuestAchievedCount; // 0x80(0x4)
		int32_t QuestRequiredCount; // 0x84(0x4)
		EFortQuestState QuestState; // 0x88(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x89(0x7) UNKNOWN PROPERTY
		UFortChallengeBundleItem* BundleItem; // 0x90(0x8)
		UFortChallengeBundleItemDefinition* BundleDefinition; // 0x98(0x8)
		FString BundleEventName; // 0xA0(0x10)
		bool bBundleEventFound; // 0xB0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0xB1(0x7) UNKNOWN PROPERTY
		FDateTime BundleEventStart; // 0xB8(0x8)
		FDateTime BundleEventEnd; // 0xC0(0x8)
		TArray<FBundleQuestEntryDebugData> BundleEntryData; // 0xC8(0x10)
		UFortChallengeBundleScheduleItem* ScheduleItem; // 0xD8(0x8)
		UFortChallengeBundleScheduleDefinition* ScheduleDefinition; // 0xE0(0x8)
		TArray<FFortChallengeBundleScheduleEntry> ScheduleEntries; // 0xE8(0x10)
		FGameplayTagContainer QuestTags; // 0xF8(0x20)
		FGameplayTagContainer BundleTags; // 0x118(0x20)
		bool bSkippedOrganization; // 0x138(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x139(0x7) UNKNOWN PROPERTY
		TArray<FQuestPanelDebugProductData> ProductList; // 0x140(0x10)
		bool bAvailableInActiveProduct; // 0x150(0x1)
		unsigned char UnknownData03_6[0x3]; // 0x151(0x3) UNKNOWN PROPERTY
		FGameplayTag ActiveProductTag; // 0x154(0x4)
		bool bIsContentVisible; // 0x158(0x1)
		unsigned char UnknownData04_6[0x7]; // 0x159(0x7) UNKNOWN PROPERTY
		FText VisibilityReasonText; // 0x160(0x10)
		FText BuildActiveVersion; // 0x170(0x10)
		FText QuestReleaseVersion; // 0x180(0x10)
		bool bResidesInPlugin; // 0x190(0x1)
		unsigned char UnknownData05_6[0x7]; // 0x191(0x7) UNKNOWN PROPERTY
		FString PluginName; // 0x198(0x10)
		FText PluginReleaseVersion; // 0x1A8(0x10)
		FText PluginSunsetVersion; // 0x1B8(0x10)
		FText VersionWarning; // 0x1C8(0x10)
		FString AccountName; // 0x1D8(0x10)
		FString BackendName; // 0x1E8(0x10)
		FDateTime BackendCalendarOffset; // 0x1F8(0x8)
		UFortPersistableItem* PrimaryItem; // 0x200(0x8)
		UFortPersistableItemDefinition* PrimaryDefinition; // 0x208(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.QuestPanelDebugToolViewModel");
			return ret;
		}
	};


	// Class FortniteUI.BacchusButton
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x3D0 - 0x368)
	class UBacchusButton : public UBacchusHUDElement	
	{
	public:
		UPaperSprite* DefaultIcon; // 0x368(0x8)
		FLinearColor PressedColor; // 0x370(0x10)
		FLinearColor UnpressedColor; // 0x380(0x10)
		TEnumAsByte<EButtonClickMethod> ClickMethod; // 0x390(0x1)
		TEnumAsByte<EButtonTouchMethod> TouchMethod; // 0x391(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x392(0x2) UNKNOWN PROPERTY
		float ButtonSize; // 0x394(0x4)
		float ButtonDisplayScale; // 0x398(0x4)
		bool ShowRadialProgress; // 0x39C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x39D(0x3) UNKNOWN PROPERTY
		FGameplayTag ListenedGamePlayTag; // 0x3A0(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x3A4(0x4) UNKNOWN PROPERTY
		USizeBox* SizeBox_ButtonSize; // 0x3A8(0x8)
		USizeBox* SizeBox_ImageSize; // 0x3B0(0x8)
		UImage* Image_Icon; // 0x3B8(0x8)
		URadialBacchusButtonBase* RadialButton_ButtonCooldown; // 0x3C0(0x8)
		UButton* Button_InternalButton; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusButton");
			return ret;
		}

		void SetIconPressed(bool bIsPressed); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF4878(relative to base address)
		void SetDefaultIcon(UPaperSprite* Icon); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF47EC(relative to base address)
		void SetButtonSprite(UPaperSprite* NewSprite); // Flags: RequiredAPI|Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FDF46A8(relative to base address)
		void SetButtonSize(float NewButtonSize); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FDF4624(relative to base address)
		void SetButtonDisplayScale(float NewDisplayScale); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FDF45A0(relative to base address)
		void OnClicked(); // Flags: RequiredAPI|Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74E2F35D0(relative to base address)
		void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF3158(relative to base address)
	};


	// Class FortniteUI.BacchusActionButton
	// Inherited from UBacchusButton -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x418 - 0x3D0)
	class UBacchusActionButton : public UBacchusButton	
	{
	public:
		TArray<FBacchusActionIconMapping> ActionMapping; // 0x3D0(0x10)
		FName TempActionMapping; // 0x3E0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3E4(0x4) UNKNOWN PROPERTY
		TArray<FGameplayTag> ItemsAllowingClickThrough; // 0x3E8(0x10)
		bool bCapturesInput; // 0x3F8(0x1)
		unsigned char UnknownData01_7[0x1F]; // 0x3F9(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusActionButton");
			return ret;
		}

		void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE34A0C(relative to base address)
		void AddActionMappings(TArray<FBacchusActionIconMapping> NewActionMappings); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE337FC(relative to base address)
	};


	// Class FortniteUI.AlternativeCarryPickupButton
	// Inherited from UBacchusActionButton -> UBacchusButton -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UAlternativeCarryPickupButton : public UBacchusActionButton	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AlternativeCarryPickupButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaHUDInputWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaHUDInputWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDInputWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPickingLayer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaPickingLayer : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPickingLayer");
			return ret;
		}
	};


	// Class FortniteUI.BacchusAvailablePickupButton
	// Inherited from UBacchusButton -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3F0 - 0x3D0)
	class UBacchusAvailablePickupButton : public UBacchusButton	
	{
	public:
		UFortMultiSizeItemCard* ItemCard_BackgroundGradient; // 0x3D0(0x8)
		UFortLazyImage* LazyImage_AmmoIcon; // 0x3D8(0x8)
		UCommonRichTextBlock* Quantity_Text; // 0x3E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x3E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusAvailablePickupButton");
			return ret;
		}
	};


	// Class FortniteUI.BacchusAvailablePickupsDisplay
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x398 - 0x368)
	class UBacchusAvailablePickupsDisplay : public UBacchusHUDElement	
	{
	public:
		UClass* ListCollapsedButtonStyle; // 0x368(0x8)
		UClass* ListVisibleButtonStyle; // 0x370(0x8)
		UCommonButtonLegacy* Button_ToggleVisibility; // 0x378(0x8)
		UFortDynamicEntryBox* EntryBox_PickupButtons; // 0x380(0x8)
		TArray<TWeakObjectPtr> CurrentPickupArray; // 0x388(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusAvailablePickupsDisplay");
			return ret;
		}
	};


	// Class FortniteUI.BacchusCloseButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UBacchusCloseButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x1]; // 0x13E0(0x1) UNKNOWN PROPERTY
		bool bIgnorePlatform; // 0x13E1(0x1)
		unsigned char UnknownData01_7[0xE]; // 0x13E2(0xE) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusCloseButton");
			return ret;
		}
	};


	// Class FortniteUI.BacchusDPICustomScalingRule
	// Inherited from UDPICustomScalingRule -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UBacchusDPICustomScalingRule : public UDPICustomScalingRule	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusDPICustomScalingRule");
			return ret;
		}
	};


	// Class FortniteUI.BacchusKillFeed
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x400 - 0x368)
	class UBacchusKillFeed : public UBacchusHUDElement	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x368(0x40) UNKNOWN PROPERTY
		USizeBox* MainSizeBox; // 0x3A8(0x8)
		TWeakObjectPtr<UImage*> FireImageRef; // 0x3B0(0x20)
		FVector2D FireImageAbsoluteOffset; // 0x3D0(0x10)
		FText ShowAllTimeTimePropertyName; // 0x3E0(0x10)
		int32_t NumberOfActiveLines; // 0x3F0(0x4)
		FFortPrioritizedWidgetData PrioritizationData; // 0x3F4(0x2)
		unsigned char UnknownData01_6[0x2]; // 0x3F6(0x2) UNKNOWN PROPERTY
		FGameplayTag NumberOfKillfeedLinesTag; // 0x3F8(0x4)
		unsigned char UnknownData02_7[0x4]; // 0x3FC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusKillFeed");
			return ret;
		}

		void SetActiveNumberOfLines(float numberOfLines); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF448C(relative to base address)
		void OnStompFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStompedByOtherWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeInactive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void K2_OnBecomeActive(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BacchusQuickbarBase
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x368 - 0x368)
	class UBacchusQuickbarBase : public UBacchusHUDElement	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusQuickbarBase");
			return ret;
		}
	};


	// Class FortniteUI.BacchusQuickbar
	// Inherited from UBacchusQuickbarBase -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x408 - 0x368)
	class UBacchusQuickbar : public UBacchusQuickbarBase	
	{
	public:
		float SlotSize; // 0x368(0x4)
		EComboSlotType SlotType; // 0x36C(0x1)
		bool bIsBackwards; // 0x36D(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x36E(0x2) UNKNOWN PROPERTY
		UFortQuickbarBase* BacchusQuickbarPrimary; // 0x370(0x8)
		UFortQuickbarBase* BacchusQuickbarSecondary; // 0x378(0x8)
		UFortQuickbarBase* BacchusQuickbarCreative; // 0x380(0x8)
		UCommonVisibilitySwitcher* BarSwitcher; // 0x388(0x8)
		unsigned char UnknownData01_6[0x60]; // 0x390(0x60) UNKNOWN PROPERTY
		UClass* QuickbarViewModelClass; // 0x3F0(0x8)
		FGameplayTag SlotLocksPropertyTag; // 0x3F8(0x4)
		FGameplayTag ReversePropertyTag; // 0x3FC(0x4)
		FGameplayTag SlotTypePropertyTag; // 0x400(0x4)
		unsigned char UnknownData02_7[0x4]; // 0x404(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusQuickbar");
			return ret;
		}

		void Refresh(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E4851A4(relative to base address)
		void OnQuickbarChanged(UFortQuickbarBase* NewBar, UFortQuickbarBase* OldBar); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnModeChanged(EFortQuickBars NewQuickbar, int32_t FocusedSlot); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF403C(relative to base address)
	};


	// Class FortniteUI.BacchusQuickbarComboSlot
	// Inherited from UBacchusQuickbarBase -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x3C0 - 0x368)
	class UBacchusQuickbarComboSlot : public UBacchusQuickbarBase	
	{
	public:
		float SlotSize; // 0x368(0x4)
		EComboSlotType SlotType; // 0x36C(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x36D(0x3) UNKNOWN PROPERTY
		int32_t SlotIndex; // 0x370(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x374(0x4) UNKNOWN PROPERTY
		UBacchusQuickbarSlotBase* PrimarySlot; // 0x378(0x8)
		UBacchusQuickbarSlotBase* SecondarySlot; // 0x380(0x8)
		UBacchusQuickbarSlotBase* CreativeSlot; // 0x388(0x8)
		FGameplayTagContainer RefreshHUDStateTags; // 0x390(0x20)
		FGameplayTag SlotTypePropertyTag; // 0x3B0(0x4)
		FGameplayTag SlotLockPropertyTag; // 0x3B4(0x4)
		FGameplayTag SlotNumberPropertyTag; // 0x3B8(0x4)
		unsigned char UnknownData02_7[0x4]; // 0x3BC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusQuickbarComboSlot");
			return ret;
		}

		void SetSize(float NewButtonSize); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FDF4624(relative to base address)
		void SetQuickbarType(int32_t NewType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF4A04(relative to base address)
		void Refresh(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E4850C4(relative to base address)
		EFortQuickBars GetQuickbarType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2BD0(relative to base address)
	};


	// Class FortniteUI.FortQuickBarSlotBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x128 (0x400 - 0x2D8)
	class UFortQuickBarSlotBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x2D8(0x20) UNKNOWN PROPERTY
		UCommonWidgetSwitcherLegacy* SwitcherTopComboSwitcher; // 0x2F8(0x8)
		UCommonWidgetSwitcherLegacy* SwitcherBottomComboSwitcher; // 0x300(0x8)
		UFortKeybindWidget* KeybindTop; // 0x308(0x8)
		UFortKeybindWidget* KeybindBottom; // 0x310(0x8)
		UFortKeybindWidget* KeybindBottomCombo1; // 0x318(0x8)
		UFortKeybindWidget* KeybindBottomCombo2; // 0x320(0x8)
		UFortKeybindWidget* KeybindTopComboArrow1; // 0x328(0x8)
		UFortKeybindWidget* KeybindTopComboArrow2; // 0x330(0x8)
		UFortKeybindWidget* KeybindBottomComboArrow1; // 0x338(0x8)
		UFortKeybindWidget* KeybindBottomComboArrow2; // 0x340(0x8)
		UCommonTextBlock* BottomHoldText; // 0x348(0x8)
		UImage* TopLeftArrowImage; // 0x350(0x8)
		UImage* TopLeftArrowImage2; // 0x358(0x8)
		UImage* TopRightArrowImage; // 0x360(0x8)
		UImage* TopRightArrowImage2; // 0x368(0x8)
		UImage* BottomLeftArrowImage; // 0x370(0x8)
		UImage* BottomLeftArrowImage2; // 0x378(0x8)
		UImage* BottomRightArrowImage; // 0x380(0x8)
		UImage* BottomRightArrowImage2; // 0x388(0x8)
		UImage* EmptyImage; // 0x390(0x8)
		UFortMultiSizeItemCard* ItemCardMaximized; // 0x398(0x8)
		UFortMultiSizeItemCard* ItemCardMinimized; // 0x3A0(0x8)
		UFortItemCooldownWidget* QuickbarSlotCooldown; // 0x3A8(0x8)
		UImage* SlotInteraction; // 0x3B0(0x8)
		UAthenaQuickBarNativeCell* NativeCell; // 0x3B8(0x8)
		int32_t SlotIndex; // 0x3C0(0x4)
		EFortQuickBars QuickBarType; // 0x3C4(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x3C5(0x7) UNKNOWN PROPERTY
		bool bShowBottomArrows : 1; // 0x3CC:0(0x1)
		unsigned char UnknownBit02 : 1; // 0x3CC:1(0x1) UNKNOWN PROPERTY
		unsigned char UnknownBit03 : 1; // 0x3CC:2(0x1) UNKNOWN PROPERTY
		bool bShowTopArrows : 1; // 0x3CC:3(0x1)
		unsigned char UnknownBit04 : 1; // 0x3CC:4(0x1) UNKNOWN PROPERTY
		unsigned char UnknownBit05 : 1; // 0x3CC:5(0x1) UNKNOWN PROPERTY
		bool bHideKeybindsWhenAbilityUnavailable : 1; // 0x3CC:6(0x1)
		bool bShouldCollapseItemWidgetBorder : 1; // 0x3CC:7(0x1)
		bool DoNotPlaySelectionAnimation : 1; // 0x3CD:0(0x1)
		bool bIsAthenaQuickBar : 1; // 0x3CD:1(0x1)
		bool bKeybindsHidden : 1; // 0x3CD:2(0x1)
		EFortItemCardSize ItemCardSize; // 0x3CE(0x1)
		unsigned char UnknownData06_6[0x1]; // 0x3CF(0x1) UNKNOWN PROPERTY
		UFortItem* Item; // 0x3D0(0x8)
		UFortInputData* InputData; // 0x3D8(0x8)
		bool bCheckVisibilityBasedOffInventoryCapacity; // 0x3E0(0x1)
		bool bHideIfNoItemAssigned; // 0x3E1(0x1)
		unsigned char UnknownData07_6[0x2]; // 0x3E2(0x2) UNKNOWN PROPERTY
		TWeakObjectPtr<UTutorialHighlight*> TutorialHighlight; // 0x3E4(0x8)
		bool bDragAndDropEnabled; // 0x3EC(0x1)
		bool bUseSlotSizeBySlotUsage : 1; // 0x3ED:0(0x1)
		unsigned char UnknownData08_5[0x2]; // 0x3EE(0x2) UNKNOWN PROPERTY
		TArray<FVector2D> SlotSizeBySlotUsage; // 0x3F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuickBarSlotBase");
			return ret;
		}

		void UpdateKeyBindingVisibility(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021B1A0(relative to base address)
		void UpdateKeyBindingText(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021B18C(relative to base address)
		void UpdateItemCardsVisibility(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021B114(relative to base address)
		void SetTopComboSwitcherVisibility(ESlateVisibility InVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021B080(relative to base address)
		void SetSlotSelected(bool bSelected); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetQuickbarTypeRuntime(EFortQuickBars NewQuickBarType, bool bRefresh); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021AFA0(relative to base address)
		void SetQuickbarIndexRuntime(int32_t Index, bool bRefresh); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021AEC0(relative to base address)
		void SetBottomComboSwitcherVisibility_BP(ESlateVisibility InVisibility); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBottomComboSwitcherVisibility(ESlateVisibility InVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021AB84(relative to base address)
		void Resize(EFortItemCardSize CardSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021A9A0(relative to base address)
		void RefreshItemIfSlotChanged(EFortQuickBars InQuickBar, TArray<int32_t>& InSlot); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75021A87C(relative to base address)
		void RefreshItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021A868(relative to base address)
		void RefreshInventoryCapacity(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021A640(relative to base address)
		void OnRequestHidePickaxeKeybinds(bool bHide); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A7E8(relative to base address)
		void OnRefreshItem(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameStarted(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A640(relative to base address)
		void OnMinigameEnded(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A628(relative to base address)
		void MinimizeSlot(bool bShouldSkipAnimation); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void MaximizeSlot(bool bShouldSkipAnimation); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FVector2D GetSlotSizeForItem(UFortItem* InItem); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750219E28(relative to base address)
		FName GetKeyBindingActionKeyboard(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219DBC(relative to base address)
		FName GetKeyBindingActionGamepad(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219D90(relative to base address)
		FName GetKeyBindingAction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219D64(relative to base address)
	};


	// Class FortniteUI.AthenaQuickBarSlot
	// Inherited from UFortQuickBarSlotBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x190 (0x590 - 0x400)
	class UAthenaQuickBarSlot : public UFortQuickBarSlotBase	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x400(0x178) UNKNOWN PROPERTY
		UImage* Image_Disabled; // 0x578(0x8)
		bool bIsSelected; // 0x580(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x581(0x3) UNKNOWN PROPERTY
		FGameplayTag ShowDisabledTag; // 0x584(0x4)
		unsigned char UnknownData02_7[0x8]; // 0x588(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuickBarSlot");
			return ret;
		}

		void OnPawnChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF4174(relative to base address)
		void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BacchusQuickbarSlotBase
	// Inherited from UAthenaQuickBarSlot -> UFortQuickBarSlotBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x5E8 - 0x590)
	class UBacchusQuickbarSlotBase : public UAthenaQuickBarSlot	
	{
	public:
		bool bHasOngoingUseAction; // 0x590(0x1)
		bool bTapToLockEnabled; // 0x591(0x1)
		bool bIsLocked; // 0x592(0x1)
		bool bSupportsDragAndDrop; // 0x593(0x1)
		bool bDragDetected; // 0x594(0x1)
		bool bDragOpStarted; // 0x595(0x1)
		bool bInteractionStarted; // 0x596(0x1)
		unsigned char UnknownData00_6[0x1]; // 0x597(0x1) UNKNOWN PROPERTY
		FSlateColor TouchedColor; // 0x598(0x14)
		FSlateColor UntouchedColor; // 0x5AC(0x14)
		unsigned char UnknownData01_6[0x8]; // 0x5C0(0x8) UNKNOWN PROPERTY
		UImage* SelectionHighlight; // 0x5C8(0x8)
		UImage* LockIcon; // 0x5D0(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x5D8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusQuickbarSlotBase");
			return ret;
		}

		void StopUseSlot(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF4F78(relative to base address)
		void StartOngoingUse(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SlotSelected(bool bStopUseImmediately); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF4ED0(relative to base address)
		void ResetSlot(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF43F8(relative to base address)
		void EndInteraction(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BacchusSignalQualityWidget
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x370 - 0x368)
	class UBacchusSignalQualityWidget : public UBacchusHUDElement	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x368(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusSignalQualityWidget");
			return ret;
		}

		void SetNewSignalQuality(EBacchusSignalQuality NewSignalQuality); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewSignalQuality(float NewRawQuality); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FDF40F4(relative to base address)
	};


	// Class FortniteUI.EmoteMenuButton
	// Inherited from UBacchusActionButton -> UBacchusButton -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x418 - 0x418)
	class UEmoteMenuButton : public UBacchusActionButton	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EmoteMenuButton");
			return ret;
		}
	};


	// Class FortniteUI.FortQualityModeTile
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x13E0 - 0x1390)
	class UFortQualityModeTile : public UCommonButtonBase	
	{
	public:
		EFortContentQualityLevel QualityModeLevel; // 0x1390(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x1391(0x7) UNKNOWN PROPERTY
		FText QualityLevelName; // 0x1398(0x10)
		FText QualityLevelDescription; // 0x13A8(0x10)
		UTexture2D* QualityLevelImage; // 0x13B8(0x8)
		FText AdditionalDownloadSize; // 0x13C0(0x10)
		FText TotalBuildSize; // 0x13D0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQualityModeTile");
			return ret;
		}

		void OnSizeInfoReceived(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectedStateChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.MobileHUDVisual
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UMobileHUDVisual : public UCommonUserWidget	
	{
	public:
		FGameplayTag VisualType; // 0x2D8(0x4)
		float Opacity; // 0x2DC(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MobileHUDVisual");
			return ret;
		}

		FGameplayTag GetVisualType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2FA4(relative to base address)
	};


	// Class FortniteUI.MobileHUDButtonVisual
	// Inherited from UMobileHUDVisual -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x308 - 0x2E0)
	class UMobileHUDButtonVisual : public UMobileHUDVisual	
	{
	public:
		float ButtonSize; // 0x2E0(0x4)
		float ButtonDisplayScale; // 0x2E4(0x4)
		UPaperSprite* DefaultIcon; // 0x2E8(0x8)
		USizeBox* OuterSizeBox; // 0x2F0(0x8)
		USizeBox* InnerSizeBox; // 0x2F8(0x8)
		UImage* Image_Icon; // 0x300(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MobileHUDButtonVisual");
			return ret;
		}

		void SetButtonSprite(UPaperSprite* NewSprite); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF472C(relative to base address)
	};


	// Class FortniteUI.RadialBacchusButtonBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x368 - 0x318)
	class URadialBacchusButtonBase : public UFortHUDElementWidget	
	{
	public:
		FGameplayTagContainer TrackedCooldownTags; // 0x318(0x20)
		ECooldownTrackingType TrackingType; // 0x338(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x339(0x3) UNKNOWN PROPERTY
		float CooldownDuration; // 0x33C(0x4)
		float CooldownStartTime; // 0x340(0x4)
		unsigned char UnknownData01_6[0x14]; // 0x344(0x14) UNKNOWN PROPERTY
		AFortPawn* TrackedPawn; // 0x358(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x360(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RadialBacchusButtonBase");
			return ret;
		}

		void UpdateDuration_Blueprint(float Remaining, float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateCooldown(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF4FDC(relative to base address)
		void StopUpdateCooldown(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF4F64(relative to base address)
		void StartUpdateCooldown(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF4F50(relative to base address)
		void SetListenedGameplayTag(FGameplayTag InListenedTag); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF48F8(relative to base address)
		void ReceiveRadialProgressEvent_Blueprint(FName EventName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ReceiveRadialProgressEvent(FName EventName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FDF42D4(relative to base address)
		void OnPlayerPawnSet(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF4188(relative to base address)
		void OnCooldownStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCooldownCompleted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasActiveCooldown(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF3BE8(relative to base address)
		void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FDF3AC4(relative to base address)
		float GetRemainingDuration(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2C94(relative to base address)
		FGameplayTag GetListenedGameplayTag(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF2B4C(relative to base address)
		void GameplayTagCallback(FGameplayTag Tag, int32_t NewCount); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF2808(relative to base address)
	};


	// Class FortniteUI.ResolutionChangeModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UResolutionChangeModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_Confirm; // 0x3F0(0x8)
		UBacchusCloseButton* Button_TouchClose; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ResolutionChangeModal");
			return ret;
		}
	};


	// Class FortniteUI.AthenaAboutModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x110 (0x500 - 0x3F0)
	class UAthenaAboutModal : public UCommonActivatableWidget	
	{
	public:
		FMulticastInlineDelegate BP_OnAboutModalClosed; // 0x3F0(0x10)
		bool bForceShowPage; // 0x400(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x401(0x7) UNKNOWN PROPERTY
		FText Title; // 0x408(0x10)
		TArray<FText> Entries; // 0x418(0x10)
		TWeakObjectPtr<UObject*> HeroImage; // 0x428(0x20)
		TWeakObjectPtr<UClass*> SeasonMovieWidgetClass; // 0x448(0x20)
		UFortStreamMediaSource* VideoStream_Source; // 0x468(0x8)
		UScrollBox* ScrollBox_Content; // 0x470(0x8)
		UFortLazyImage* Image_Item; // 0x478(0x8)
		UCommonButtonLegacy* Button_Close; // 0x480(0x8)
		UCommonButtonLegacy* Button_CloseTouch; // 0x488(0x8)
		UCommonButtonLegacy* Button_BPSTrailer; // 0x490(0x8)
		UCommonButtonLegacy* Button_BPSTrailer_Mobile; // 0x498(0x8)
		UCommonButtonLegacy* Button_BPSHowTo; // 0x4A0(0x8)
		UCommonButtonLegacy* Button_BPSHowTo_Mobile; // 0x4A8(0x8)
		unsigned char UnknownData01_7[0x50]; // 0x4B0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAboutModal");
			return ret;
		}

		void OnSetContent(FText& InTitle, TArray<FText>& InEntries); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAboutModalClosedDynamic__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CloseModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FDF21E4(relative to base address)
	};


	// Class FortniteUI.AthenaProgressModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UAthenaProgressModal : public UCommonActivatableWidget	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x3F0(0x8)
		UCommonTextBlock* Text_Description; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProgressModal");
			return ret;
		}
	};


	// Class FortniteUI.AthenaProfileStatBox
	// Inherited from USizeBox -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x1D0 - 0x1A8)
	class UAthenaProfileStatBox : public USizeBox	
	{
	public:
		FMulticastInlineDelegate OnStatViewChanged; // 0x1A8(0x10)
		bool bRespectParentStatView; // 0x1B8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x1B9(0x7) UNKNOWN PROPERTY
		UAthenaBaseStatView* StatView; // 0x1C0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatBox");
			return ret;
		}

		void SetStatView(UAthenaBaseStatView* InStatView, bool RespectParentStatView); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF4B14(relative to base address)
		void OnStatViewChanged__DelegateSignature(UAthenaBaseStatView* StatView); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FFortUIStatStyle GetStatStyle(FGameplayTag& InStat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2E38(relative to base address)
		UAthenaBaseStatView GetBaseStatView(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74F9EFB78(relative to base address)
	};


	// Class FortniteUI.AthenaBaseStatView
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UAthenaBaseStatView : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBaseStatView");
			return ret;
		}

		float GetStat(FGameplayTag& InStat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2D9C(relative to base address)
	};


	// Class FortniteUI.AthenaWeaponStatView
	// Inherited from UAthenaBaseStatView -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UAthenaWeaponStatView : public UAthenaBaseStatView	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x28(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaWeaponStatView");
			return ret;
		}

		UFortWeaponItemDefinition GetWeaponDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2FBC(relative to base address)
	};


	// Class FortniteUI.AthenaMatchStatView
	// Inherited from UAthenaBaseStatView -> UObject
	// Size: 0xF8 (0x120 - 0x28)
	class UAthenaMatchStatView : public UAthenaBaseStatView	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x28(0xE8) UNKNOWN PROPERTY
		TArray<UAthenaWeaponStatView*> WeaponStatViews; // 0x110(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMatchStatView");
			return ret;
		}

		TArray GetWeaponViews(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF30C8(relative to base address)
		UAthenaWeaponStatView GetWeaponViewHighestStat(FGameplayTag& InStat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2FE0(relative to base address)
		TArray GetSortedWeaponViews(FGameplayTag& InStat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2CD4(relative to base address)
		FString GetMatchID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2BB4(relative to base address)
		FDateTime GetMatchEndTime(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2B64(relative to base address)
	};


	// Class FortniteUI.AthenaMatchSetStatView
	// Inherited from UAthenaMatchStatView -> UAthenaBaseStatView -> UObject
	// Size: 0x20 (0x140 - 0x120)
	class UAthenaMatchSetStatView : public UAthenaMatchStatView	
	{
	public:
		UAthenaSeasonStats* OwningSeason; // 0x120(0x8)
		FName PlaylistId; // 0x128(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x12C(0x4) UNKNOWN PROPERTY
		TArray<UAthenaMatchStatView*> BestMatches; // 0x130(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMatchSetStatView");
			return ret;
		}

		UAthenaSeasonStats GetOwningSeason(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D691770(relative to base address)
		TArray GetBestMatchViews(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF29DC(relative to base address)
	};


	// Class FortniteUI.AthenaProfileStatContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UAthenaProfileStatContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnStatsProfileLoaded; // 0x30(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x40(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatContext");
			return ret;
		}

		void OnAthenaStatsProfileLoaded__DelegateSignature(UFortMcpProfileAthenaStats* StatProfile); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray CreateMatchViews(TArray<FAthenaMatchStats>& InRecentMatches); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FDF2498(relative to base address)
		UAthenaMatchSetStatView CreateMatchStatView(UAthenaSeasonStats* StatSet, FName Bucket); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF2274(relative to base address)
		UAthenaMatchStatView CreateCurrentMatchStatView(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF21F8(relative to base address)
	};


	// Class FortniteUI.AthenaProfileStatListWidgetBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UAthenaProfileStatListWidgetBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UAthenaProfileStatBox* ProfileStatBox; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatListWidgetBase");
			return ret;
		}

		void OnStatChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleStatViewChanged(UAthenaBaseStatView* StatView); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF3580(relative to base address)
	};


	// Class FortniteUI.AthenaProfileStatsBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x588 - 0x528)
	class UAthenaProfileStatsBase : public UCommonActivatablePanelLegacy	
	{
	public:
		UAthenaProfileStatBox* ProfileStatBox; // 0x528(0x8)
		TArray<UAthenaSeasonStats*> StatSets; // 0x530(0x10)
		UAthenaSeasonStats* CurrentViewedStatSet; // 0x540(0x8)
		UAthenaMatchStatView* CurrentStatView; // 0x548(0x8)
		FName CurrentPlaylist; // 0x550(0x4)
		unsigned char UnknownData00_7[0x34]; // 0x554(0x34) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatsBase");
			return ret;
		}

		void Setup(FUniqueNetIdRepl& InUniqueId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FDF4CB0(relative to base address)
		void PrevStatSet(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF42C0(relative to base address)
		void OnStatSetChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartFetchingData(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProfileLoaded(UFortMcpProfileAthenaStats* ProfileAthenaStats); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF419C(relative to base address)
		void OnNoData(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDataRecieved(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t NumStatSets(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF3E28(relative to base address)
		void NextStatSet(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF3E14(relative to base address)
		void NextPlaylist(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF3E00(relative to base address)
		FUniqueNetIdRepl GetUniqueID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2EE4(relative to base address)
		UAthenaSeasonStats GetCurrentStatSet(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2AFC(relative to base address)
		FText GetCurrentPlaylistName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2A6C(relative to base address)
	};


	// Class FortniteUI.AthenaProfileStatsRecentMatchesBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x568 - 0x528)
	class UAthenaProfileStatsRecentMatchesBase : public UCommonActivatablePanelLegacy	
	{
	public:
		TArray<UAthenaMatchStatView*> RecentMatches; // 0x528(0x10)
		unsigned char UnknownData00_7[0x30]; // 0x538(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatsRecentMatchesBase");
			return ret;
		}

		void Setup(FUniqueNetIdRepl& InUniqueId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FDF4D84(relative to base address)
		void OnStartFetchingData(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRecentMatcheChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProfileLoaded(UFortMcpProfileAthenaStats* ProfileAthenaStats); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF4230(relative to base address)
		void OnNoData(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDataRecieved(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FUniqueNetIdRepl GetUniqueID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2F44(relative to base address)
		TArray GetRecentMatches(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FDF2C04(relative to base address)
	};


	// Class FortniteUI.AthenaProfileStatWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaProfileStatWidgetBase : public UCommonUserWidget	
	{
	public:
		FGameplayTag Stat; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UAthenaProfileStatBox* ProfileStatBox; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaProfileStatWidgetBase");
			return ret;
		}

		void SetStatView(UAthenaBaseStatView* InStatView, bool RespectParentStatView); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF4BE0(relative to base address)
		void SetAsStat(FGameplayTag& InStat); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FDF450C(relative to base address)
		void OnStatChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleStatViewChanged(UAthenaBaseStatView* StatView); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FDF3600(relative to base address)
		TArray CreateWeaponGroupData(int32_t MaxToReturn, bool bIncludeOtherCategory, bool bPercentages); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FDF2558(relative to base address)
	};


	// Class FortniteUI.FortProfileStatsMainTile
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortProfileStatsMainTile : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* ValueTextBlock; // 0x2D8(0x8)
		UCommonTextBlock* NameTextBlock; // 0x2E0(0x8)
		int32_t TileTier; // 0x2E8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2EC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortProfileStatsMainTile");
			return ret;
		}
	};


	// Class FortniteUI.FortProfileStatsRow
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortProfileStatsRow : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Name; // 0x2D8(0x8)
		UCommonTextBlock* Value; // 0x2E0(0x8)
		FText StatName; // 0x2E8(0x10)
		FString BaseGameplayTag; // 0x2F8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortProfileStatsRow");
			return ret;
		}
	};


	// Class FortniteUI.FortFuelGaugeIndicator
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortFuelGaugeIndicator : public UUserWidget	
	{
	public:
		UImage* Image_FuelGauge; // 0x2B0(0x8)
		FName FuelGaugeProgressMaterialParamName; // 0x2B8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2BC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFuelGaugeIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortQuickbarBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UFortQuickbarBase : public UFortHUDElementWidget	
	{
	public:
		TArray<UFortQuickBarSlotBase*> QuickbarSlots; // 0x318(0x10)
		bool bIsMaximized; // 0x328(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x329(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuickbarBase");
			return ret;
		}

		void OnShouldShowBothQuickbarsChanged(bool bShouldShowBothQuickbars); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Minimize(); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7476407DC(relative to base address)
		void Maximize(); // Flags: RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E94BA1C(relative to base address)
		void IsValidSlot(int32_t& SlotIndex, bool& OutIsValid, int32_t& OutArrayIndex); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FDF3C24(relative to base address)
		UFortQuickBarSlotBase GetSpecificSlot(int32_t SlotNumber); // Flags: Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortWeaponFuelGaugeIndicator
	// Inherited from UAthenaQuickBarSlotExtensionWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2F0 - 0x2E0)
	class UFortWeaponFuelGaugeIndicator : public UAthenaQuickBarSlotExtensionWidgetBase	
	{
	public:
		UFortFuelGaugeIndicator* FuelGaugeIndicator_Main; // 0x2E0(0x8)
		UFortWorldItem* RepresentedItem; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponFuelGaugeIndicator");
			return ret;
		}
	};


	// Class FortniteUI.AthenaReplayBrowserEntryWidget
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UAthenaReplayBrowserEntryWidget : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UImage* DownloadIcon; // 0x13E8(0x8)
		UCommonTextBlock* Text_Name; // 0x13F0(0x8)
		UCommonTextBlock* Text_Date; // 0x13F8(0x8)
		UCommonTextBlock* Text_Length; // 0x1400(0x8)
		UCommonTextBlock* Text_Rank; // 0x1408(0x8)
		UCommonTextBlock* Text_Eliminations; // 0x1410(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayBrowserEntryWidget");
			return ret;
		}

		void BP_HandleReplayStateSet(bool bSaved, bool Bold, bool bCorrupt); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReplayBrowserScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x5F0 - 0x560)
	class UAthenaReplayBrowserScreenBase : public UFortActivatablePanel	
	{
	public:
		UClass* ViewStreamingReplayModalClass; // 0x560(0x8)
		FDataTableRowHandle RefreshActionRowHandle; // 0x568(0x10)
		FDataTableRowHandle BackActionRowHandle; // 0x578(0x10)
		FDataTableRowHandle ViewStreamingReplayActionRowHandle; // 0x588(0x10)
		UCommonListView* ListView_Replay; // 0x598(0x8)
		UFortReplayBrowserRenameDialog* RenameDialog; // 0x5A0(0x8)
		UCommonButtonBase* Button_OpenReplayFolder; // 0x5A8(0x8)
		UCommonButtonBase* Button_PlayReplay; // 0x5B0(0x8)
		UCommonButtonBase* Button_DeleteReplay; // 0x5B8(0x8)
		UCommonButtonBase* Button_RenameReplay; // 0x5C0(0x8)
		TArray<UAthenaReplayBrowserRowProxyInstance*> RowProxies; // 0x5C8(0x10)
		unsigned char UnknownData00_7[0x18]; // 0x5D8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayBrowserScreenBase");
			return ret;
		}

		void OnActionStateChanged(bool bHasAction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortWeaponReticleExtensionWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x350 - 0x318)
	class UFortWeaponReticleExtensionWidgetBase : public UFortHUDElementWidget	
	{
	public:
		AFortWeapon* CachedAssociatedWeapon; // 0x318(0x8)
		FGameplayTagContainer ReticleExtensionsToHide; // 0x320(0x20)
		unsigned char UnknownData00_7[0x10]; // 0x340(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponReticleExtensionWidgetBase");
			return ret;
		}

		void UpdateRemainingCooldown(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateCooldownQueryTimer(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ShouldWidgetBeHidden(); // Flags: RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E0AB77C(relative to base address)
		void SeatChangeEndedWidgetStateHandler(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE10518(relative to base address)
		void RefreshWidgetHiddenState(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE10518(relative to base address)
		void OnWeaponSingleFire(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponReloadCancelled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetingChanged(bool bIsADS); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFullyExitVehicle(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAmmoClipAttributeChanged(float AmmoClipValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleVehicleSeatChanged(int32_t SeatIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11644(relative to base address)
		void HandleTargetingChanged(bool bNewIsADS); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE10E80(relative to base address)
		void HandleFullyExitVehicle(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE105B8(relative to base address)
		void HandleEnterVehiclePassenger(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10518(relative to base address)
		void HandleEnterVehicleDriver(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10518(relative to base address)
		void HandleCooldownTimer(bool bActivateTimer, float TimerInterval); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE10454(relative to base address)
		bool GetIsADS(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10048(relative to base address)
		AFortWeapon GetEquippedWeapon(); // Flags: Final|RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FF10(relative to base address)
		void GetCooldownTimeRemaining(float& RemainingTime, float& TotalDuration); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FCE8(relative to base address)
	};


	// Class FortniteUI.FortChargedWeaponReticleExtensionWidget
	// Inherited from UFortWeaponReticleExtensionWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x360 - 0x350)
	class UFortChargedWeaponReticleExtensionWidget : public UFortWeaponReticleExtensionWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x350(0x8) UNKNOWN PROPERTY
		float UpdateFrequencySecs; // 0x358(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x35C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChargedWeaponReticleExtensionWidget");
			return ret;
		}

		void OnUpdateChargeDisplay(float ChargePercent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPrioritizedWidget
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPrioritizedWidget : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPrioritizedWidget");
			return ret;
		}

		void SetHasActiveContent(bool bNewActive); // Flags: RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF747F9B6F0(relative to base address)
		bool HasActiveContent(); // Flags: RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7484CB9B0(relative to base address)
	};


	// Class FortniteUI.FortPrioritizedWidgetSwitcher
	// Inherited from UCommonWidgetSwitcherLegacy -> UCommonAnimatedSwitcher -> UWidgetSwitcher -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x268 - 0x238)
	class UFortPrioritizedWidgetSwitcher : public UCommonWidgetSwitcherLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x14]; // 0x238(0x14) UNKNOWN PROPERTY
		float CachingTime; // 0x24C(0x4)
		unsigned char UnknownData01_6[0x8]; // 0x250(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnPriorityWidgetActivatedDelegate; // 0x258(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPrioritizedWidgetSwitcher");
			return ret;
		}

		void OnPriorityWidgetActivationEvent__DelegateSignature(UWidget* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReplayActionFeedRowBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x360 - 0x2D8)
	class UAthenaReplayActionFeedRowBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UTexture2D*> Texture_EliminationIcon; // 0x2E0(0x20)
		TWeakObjectPtr<UTexture2D*> Texture_DbnoIcon; // 0x300(0x20)
		UImage* Image_EventIcon; // 0x320(0x8)
		UCommonTextBlock* Text_EventTime; // 0x328(0x8)
		UCommonButtonLegacy* Button_InstigatorButton; // 0x330(0x8)
		UCommonButtonLegacy* Button_VictimButton; // 0x338(0x8)
		UAthenaReplayActionFeedRowProxyInstance* RowProxy; // 0x340(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x348(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayActionFeedRowBase");
			return ret;
		}

		void OnVictimNameUpdated(FText& VictimName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerStateAdded(AFortPlayerStateAthena* FPSA); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12674(relative to base address)
		void OnInstigatorNameUpdated(FText& InstigatorName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaReplayActionFeedScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UAthenaReplayActionFeedScreenBase : public UFortActivatablePanel	
	{
	public:
		UCommonListView* ListView_Entries; // 0x560(0x8)
		UCommonButtonLegacy* Button_Close; // 0x568(0x8)
		unsigned char UnknownData00_7[0x40]; // 0x570(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaReplayActionFeedScreenBase");
			return ret;
		}

		void OnReplayEventsUpdated(EPlayEventType Type); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12884(relative to base address)
		void HandlePlayerBecameRelevant(AFortPlayerState* FortPlayerState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10984(relative to base address)
		void HandleCloseActionFeed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE10438(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastFollowedPlayerInfoBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaBroadcastFollowedPlayerInfoBase : public UFortHUDElementWidget	
	{
	public:
		UAthenaSpectatorPlayerWidgetBase* PlayerWidget; // 0x318(0x8)
		UAthenaSpectatorHitPointBarBase* HitPointBar_Health; // 0x320(0x8)
		UAthenaSpectatorHitPointBarBase* HitPointBar_Shield; // 0x328(0x8)
		UAthenaSpectatorHitPointBarBase* HitPointBar_Vehicle; // 0x330(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x338(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase");
			return ret;
		}

		void OnVehicleStateChanged(AActor* NewVehicle, AActor* OldVehicle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPipModeChanged(bool bPipModeEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* FollowedPlayerState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74945E1BC(relative to base address)
		void OnEliminatedStateChanged(UAthenaRemotePlayerViewData* PlayerData, bool bIsEliminated); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UAthenaRemotePlayerViewData GetFollowedPlayerData(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7493CA004(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastGamePhaseWidget
	// Inherited from UAthenaGamePhaseWidgetBase -> UGamePhaseWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x390 - 0x388)
	class UAthenaBroadcastGamePhaseWidget : public UAthenaGamePhaseWidgetBase	
	{
	public:
		AFortMinigame* MinigameOverride; // 0x388(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastGamePhaseWidget");
			return ret;
		}

		void SetMinigameOverride(AFortMinigame* Minigame); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE15314(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastHUDBase
	// Inherited from UAthenaHUDBase -> UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0x7B8 - 0x638)
	class UAthenaBroadcastHUDBase : public UAthenaHUDBase	
	{
	public:
		FDataTableRowHandle ToggleMatchStatusActionRowHandle; // 0x638(0x10)
		FDataTableRowHandle ToggleSquadStatusActionRowHandle; // 0x648(0x10)
		FDataTableRowHandle ToggleRemainingPlayersActionRowHandle; // 0x658(0x10)
		FDataTableRowHandle ToggleMatchStatusScreenActionRowHandle; // 0x668(0x10)
		FDataTableRowHandle ToggleScoreboardScreenActionRowHandle; // 0x678(0x10)
		FDataTableRowHandle ToggleKillFeedActionRowHandle; // 0x688(0x10)
		FDataTableRowHandle ToggleActionFeedScreenActionRowHandle; // 0x698(0x10)
		FDataTableRowHandle ToggleGotoTimeRowHandle; // 0x6A8(0x10)
		FDataTableRowHandle TogglePipModeActionRowHandle; // 0x6B8(0x10)
		FDataTableRowHandle ToggleFollowedPlayerInfoActionRowHandle; // 0x6C8(0x10)
		FDataTableRowHandle ToggleFullscreenMapActionRowHandle; // 0x6D8(0x10)
		TMap<TWeakObjectPtr, FUIExtension> ExtensionWidgetOverrides; // 0x6E8(0x50)
		UAthenaSpectatorHUDControlsBase* BroadcastHUDControls; // 0x738(0x8)
		UCommonActivatableWidgetStack* WidgetStack_SpectatorPrimaryContent; // 0x740(0x8)
		UAthenaSpectatorNameplateLayerBase* NameplateLayer; // 0x748(0x8)
		UAthenaBroadcastMapPanelBase* AthenaBroadcastMapPanel; // 0x750(0x8)
		UCommonWidgetSwitcherLegacy* EventMatchInfoSwitcher; // 0x758(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_TopLeft; // 0x760(0x8)
		USpacer* TopLeft_Empty; // 0x768(0x8)
		UFortBroadcastViewSettings* TopLeft_ViewSettings; // 0x770(0x8)
		UAthenaReplayActionFeedScreenBase* TopLeft_ActionFeed; // 0x778(0x8)
		UFortReplayGoToTimeDialogue* TopLeft_GoToTime; // 0x780(0x8)
		UFortReplayHighlightsWindow* TopLeft_Highlights; // 0x788(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x790(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastHUDBase");
			return ret;
		}

		void TryHandleIfPlayerStateAlreadyInVolume(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE16060(relative to base address)
		void SetFullscreenMapVisibility(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVolumeMinigameChanged(AFortMinigame* Minigame); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE1310C(relative to base address)
		void OnVolumeEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12FD0(relative to base address)
		void OnVolumeBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE12D7C(relative to base address)
		void OnUnableToPerformAction(FGameplayTagContainer FailedReason, FText& FailureText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnToggleSquadStatusActionExecuted(bool& bPassThrough); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnToggleScoreboardScreenActionExecuted(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE12C7C(relative to base address)
		void OnToggleRemainingPlayersActionExecuted(bool& bPassThrough); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTogglePipModeActionExecuted(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE12C00(relative to base address)
		void OnToggleMatchStatusScreenActionExecuted(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE12B80(relative to base address)
		void OnToggleMatchStatusActionExecuted(bool& bPassThrough); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnToggleKillFeedActionExecuted(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE12B04(relative to base address)
		void OnToggleFollowedPlayerInfoActionExecuted(bool& bPassThrough); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaylistDataChanged(UFortPlaylistAthena* PlaylistData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerTargetingChanged(bool bIsTargeting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPipModeChanged(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameChanged(AFortMinigame* NewMinigame); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIndicatorModeChanged(bool bIndicatorsEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHudVisibilityChanged(EHudVisibilityState NewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameStateSet_BP(AFortGameStateAthena* GameStateAthena); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameStateSet(AFortGameState* NewGameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11CD4(relative to base address)
		void OnCursorModeChanging(bool bCursorModeEnabled, FName ActionName); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE11C10(relative to base address)
		void OnCurrentPlaylistChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11BFC(relative to base address)
		void HandleToggleReplayViewSettings(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE113DC(relative to base address)
		void HandleToggleHighlightsList(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE113C0(relative to base address)
		void HandleToggleGoToTime(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE113A4(relative to base address)
		void HandleToggleActionFeedScreen(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11388(relative to base address)
		void HandleSpectatorViewTargetChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10CE4(relative to base address)
		void HandleNameplatesEnabledChanged(bool bInNameplatesEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE108D8(relative to base address)
		void HandleHudVisibilityChanged(EHudVisibilityState NewVisibility); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10710(relative to base address)
		void HandleFollowedPlayerRespawnTimeChanged(float RespawnTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastHUDMenuStatusBase
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3C8 - 0x3C0)
	class UAthenaBroadcastHUDMenuStatusBase : public UFortActorIndicatorWidget	
	{
	public:
		float ZOffset; // 0x3C0(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x3C4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastHUDMenuStatusBase");
			return ret;
		}

		void MapActivated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InventoryActivated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaBroadcastHUDMenuStatusLayerBase : public UFortHUDElementWidget	
	{
	public:
		UClass* HUDMenuStatusWidgetClass; // 0x318(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x320(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase");
			return ret;
		}

		void RemoveHUDMenuStatus(UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DeactivateHudMenuWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748C026B0(relative to base address)
		void AddHUDMenuStatus(UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastMapPanelBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x5A0 - 0x560)
	class UAthenaBroadcastMapPanelBase : public UFortActivatablePanel	
	{
	public:
		UAthenaSpectatorMapPlayerListBase* PlayerList; // 0x560(0x8)
		UAthenaMapLayer* AthenaMapLayer; // 0x568(0x8)
		UCommonWidgetSwitcherLegacy* LhsSwitcher; // 0x570(0x8)
		UCommonButtonLegacy* Button_CycleSideBar; // 0x578(0x8)
		FDataTableRowHandle CycleSideBarRowHandle; // 0x580(0x10)
		UClass* MapSettingsClass; // 0x590(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x598(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastMapPanelBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBroadcastMatchStatusWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UAthenaBroadcastMatchStatusWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x318(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastMatchStatusWidget");
			return ret;
		}

		void OnStormPhaseCountChanged(int32_t StormPhaseCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStormPhaseChanged(int32_t StormPhase); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMapInfoSet(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12048(relative to base address)
		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11D54(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastPlayerEventScoreWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaBroadcastPlayerEventScoreWidget : public UFortHUDElementWidget	
	{
	public:
		UCommonTextBlock* PlayerEventScoreText; // 0x318(0x8)
		UCommonWidgetSwitcherLegacy* PlayerEventScoreSwitcher; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastPlayerEventScoreWidget");
			return ret;
		}

		void OnRemoteClientEventScoreChanged(int32_t NewEventScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE126F4(relative to base address)
		void OnPointTextSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastPlayerLocationWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaBroadcastPlayerLocationWidget : public UFortHUDElementWidget	
	{
	public:
		UCommonTextBlock* PlayerLocationText; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastPlayerLocationWidget");
			return ret;
		}

		void OnRemoteClientPoiTagIDChanged(int16_t RemoteClientPoiTagID); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12774(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastSessionId
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaBroadcastSessionId : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* Text_SessionId; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastSessionId");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEventMatchSquadWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaEventMatchSquadWidgetBase : public UFortHUDElementWidget	
	{
	public:
		TWeakObjectPtr<UAthenaRemoteSquadViewData*> SquadData; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchSquadWidgetBase");
			return ret;
		}

		void SetSquadIdVisible(bool bSquadIdVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadSessionRankChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadSessionRank); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadPlaceChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadPlace); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadKillscoreChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadKills); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdChanged(UAthenaRemoteSquadViewData* InSquadData, char InSquadId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadColorChanged(UAthenaRemoteSquadViewData* InSquadData, FLinearColor InSquadColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerAdded(UAthenaRemoteSquadViewData* InSquadData, UAthenaRemotePlayerViewData* InPlayerData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDisplaySessionRankChanged(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastSquadStatusWidget
	// Inherited from UAthenaEventMatchSquadWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x350 - 0x320)
	class UAthenaBroadcastSquadStatusWidget : public UAthenaEventMatchSquadWidgetBase	
	{
	public:
		FUniqueNetIdRepl FollowedPlayerUID; // 0x320(0x30)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastSquadStatusWidget");
			return ret;
		}

		void OnPipModeChanged(bool bPipModeEnabled); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameTeamIdChanged(UFortMinigameTeamIdentification* MinigameTeamId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFollowedPlayerChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSquadIdChanged(UAthenaRemoteSquadViewData* InSquadData, char SquadID); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10CF8(relative to base address)
		void HandleFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorController, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Protected, Memory Exec: 0x7FF748C6E06C(relative to base address)
	};


	// Class FortniteUI.AthenaRemotePlayerViewData
	// Inherited from UObject
	// Size: 0x280 (0x2A8 - 0x28)
	class UAthenaRemotePlayerViewData : public UObject	
	{
	public:
		FMulticastInlineDelegate OnPlayerStateChanged; // 0x28(0x10)
		FMulticastInlineDelegate OnTeamColorChanged; // 0x38(0x10)
		FMulticastInlineDelegate OnSquadIdChanged; // 0x48(0x10)
		FMulticastInlineDelegate OnPlayerNameChanged; // 0x58(0x10)
		FMulticastInlineDelegate OnKillScoreChanged; // 0x68(0x10)
		FMulticastInlineDelegate OnLocationChanged; // 0x78(0x10)
		FMulticastInlineDelegate OnHealthHealed; // 0x88(0x10)
		FMulticastInlineDelegate OnHealthDamaged; // 0x98(0x10)
		FMulticastInlineDelegate OnShieldHealed; // 0xA8(0x10)
		FMulticastInlineDelegate OnShieldDamaged; // 0xB8(0x10)
		FMulticastInlineDelegate OnOvershieldHealed; // 0xC8(0x10)
		FMulticastInlineDelegate OnOvershieldDamaged; // 0xD8(0x10)
		FMulticastInlineDelegate OnDBNOStateChanged; // 0xE8(0x10)
		FMulticastInlineDelegate OnDeadStateChanged; // 0xF8(0x10)
		FMulticastInlineDelegate OnBeingRevivedStateChanged; // 0x108(0x10)
		FMulticastInlineDelegate OnDisconnectedChanged; // 0x118(0x10)
		FMulticastInlineDelegate OnPlayerPawnChanged; // 0x128(0x10)
		FMulticastInlineDelegate OnWeaponChanged; // 0x138(0x10)
		FMulticastInlineDelegate OnDistanceToStormChanged; // 0x148(0x10)
		FMulticastInlineDelegate OnPlaceChanged; // 0x158(0x10)
		FMulticastInlineDelegate OnMaterialCountChanged; // 0x168(0x10)
		FMulticastInlineDelegate OnIsInRelevancyChanged; // 0x178(0x10)
		FMulticastInlineDelegate OnIsFollowedPlayerChanged; // 0x188(0x10)
		FMulticastInlineDelegate OnIsReplayRelevancyPlayerChanged; // 0x198(0x10)
		FMulticastInlineDelegate OnVehicleHealthHealed; // 0x1A8(0x10)
		FMulticastInlineDelegate OnVehicleHealthDamaged; // 0x1B8(0x10)
		FMulticastInlineDelegate OnSessionRankChanged; // 0x1C8(0x10)
		FUniqueNetIdRepl PlayerUID; // 0x1D8(0x30)
		TWeakObjectPtr<AFortPlayerStateAthena*> PlayerState; // 0x208(0x8)
		unsigned char UnknownData00_6[0x5C]; // 0x210(0x5C) UNKNOWN PROPERTY
		TWeakObjectPtr<AFortPlayerPawn*> CachedPlayerPawn; // 0x26C(0x8)
		unsigned char UnknownData01_7[0x34]; // 0x274(0x34) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRemotePlayerViewData");
			return ret;
		}

		void WeaponDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortWeapon* WeaponParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdatePlayerPawn(); // Flags: Final|Native|Public, Memory Exec: 0x7FF747FC2234(relative to base address)
		void UpdateDistanceToStorm(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE16088(relative to base address)
		void UInt8Delegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, char IntParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TwoFloatDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, float FloatParam, float FloatParamMax); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StringDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, FString StringParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPlayerState(AFortPlayerStateAthena* InPlayerState); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE1560C(relative to base address)
		void PlayerStateDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortPlayerStateAthena* PlayerState); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PawnDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortPlayerPawn* PawnParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void LinearColorDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, FLinearColor ColorParam); // Flags: MulticastDelegate|Public|Delegate|HasDefaults, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void IntDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, int32_t IntParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		float GetVehicleMaxHealth(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC2604(relative to base address)
		float GetVehicleHealthPercent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10410(relative to base address)
		float GetVehicleHealth(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC25DC(relative to base address)
		AActor GetVehicle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE103EC(relative to base address)
		FLinearColor GetTeamColor(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE103D0(relative to base address)
		char GetSquadID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE103AC(relative to base address)
		float GetShieldPercent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10368(relative to base address)
		void GetShield(float& Shield, float& ShieldMax); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC2F94(relative to base address)
		int32_t GetSessionRank(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10350(relative to base address)
		FUniqueNetIdRepl GetPlayerUID(); // Flags: Final|Native|Public|Const, Memory Exec: 0x7FF74FE102F8(relative to base address)
		AFortPlayerStateAthena GetPlayerState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC5728(relative to base address)
		AFortPlayerPawn GetPlayerPawn(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749417464(relative to base address)
		FString GetPlayerName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CCE0E8(relative to base address)
		int32_t GetPlace(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE102D4(relative to base address)
		float GetOvershieldPercent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE102AC(relative to base address)
		void GetOvershield(float& Overshield, float& OvershieldMax); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE101D4(relative to base address)
		int32_t GetMaterialCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F89C514(relative to base address)
		FString GetLocation(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10194(relative to base address)
		int32_t GetKillScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10170(relative to base address)
		bool GetIsReplayRelevancyPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10158(relative to base address)
		bool GetIsInRelevancy(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10140(relative to base address)
		bool GetIsFollowedPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10128(relative to base address)
		bool GetIsEliminated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE100EC(relative to base address)
		bool GetIsDrivingVehicle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE100A8(relative to base address)
		bool GetIsDisconnected(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10084(relative to base address)
		bool GetIsDead(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10060(relative to base address)
		bool GetIsDBNO(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC31E0(relative to base address)
		bool GetIsBeingRevived(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748C4E878(relative to base address)
		bool GetInAircraft(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10024(relative to base address)
		float GetHealthPercent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FFFC(relative to base address)
		void GetHealth(float& Health, float& HealthMax); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC30D8(relative to base address)
		int32_t GetDistanceToStorm(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FE0C(relative to base address)
		AFortWeapon GetCurrentWeapon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FDC0(relative to base address)
		void ForwardOnWeaponChanged(AFortWeapon* InNewWeapon, AFortWeapon* InPrevWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC27D0(relative to base address)
		void ForwardOnVehicleStateChanged(AFortPlayerPawn* PlayerPawn, AActor* NewVehicle, AActor* OldVehicle); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0FBF0(relative to base address)
		void ForwardOnVehicleHealthChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC12E0(relative to base address)
		void ForwardOnSquadIdChanged(char InSquadId); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0FB70(relative to base address)
		void ForwardOnPlayerNameChanged(AFortPlayerStateAthena* InPlayerState, FString InPlayerName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0FA98(relative to base address)
		void ForwardOnPlaceChanged(AFortPlayerStateAthena* Sender, int32_t InPlace); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC90A0(relative to base address)
		void ForwardOnLocationChanged(FString InLocation); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0FA04(relative to base address)
		void ForwardOnKillScoreChanged(AFortPlayerStateAthena* InPlayerState, int32_t InKillScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F940(relative to base address)
		void ForwardOnHitPointsStateChanged(AFortPlayerStateAthena* InPlayerState, float InHealth, float InHealthMax, float InShield, float InShieldMax); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F7BC(relative to base address)
		void ForwardOnDisconnectedChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDisconnected); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F6F4(relative to base address)
		void ForwardOnDeadStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDead); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F62C(relative to base address)
		void ForwardOnDBNOStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDBNO); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F564(relative to base address)
		void ForwardOnBeingRevivedStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsBeingRevived); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F49C(relative to base address)
		void BoolDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, bool BoolParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRemoteSquadViewData
	// Inherited from UObject
	// Size: 0xA8 (0xD0 - 0x28)
	class UAthenaRemoteSquadViewData : public UObject	
	{
	public:
		FMulticastInlineDelegate OnPlayerAdded; // 0x28(0x10)
		FMulticastInlineDelegate OnSquadIdChanged; // 0x38(0x10)
		FMulticastInlineDelegate OnSquadKillscoreChanged; // 0x48(0x10)
		FMulticastInlineDelegate OnSquadPlaceChanged; // 0x58(0x10)
		FMulticastInlineDelegate OnSquadColorChanged; // 0x68(0x10)
		FMulticastInlineDelegate OnSquadEliminated; // 0x78(0x10)
		FMulticastInlineDelegate OnSquadSessionRankChanged; // 0x88(0x10)
		TArray<UAthenaRemotePlayerViewData*> PlayerDataArray; // 0x98(0x10)
		unsigned char UnknownData00_7[0x28]; // 0xA8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRemoteSquadViewData");
			return ret;
		}

		void UInt8Delegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, char IntParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayerDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, UAthenaRemotePlayerViewData* PlayerData); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void LinearColorDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, FLinearColor ColorParam); // Flags: MulticastDelegate|Public|Delegate|HasDefaults, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void IntDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, int32_t IntParam); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSessionRankChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InSessionRank); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10C20(relative to base address)
		void HandlePlayerPlaceChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InPlace); // Flags: Final|Native|Private, Memory Exec: 0x7FF748D9F9CC(relative to base address)
		void HandlePlayerKillscoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC5EC8(relative to base address)
		void HandlePlayerDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool InEliminated); // Flags: Final|Native|Private, Memory Exec: 0x7FF748C14810(relative to base address)
		int32_t GetSquadSessionRank(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C0DFE30(relative to base address)
		int32_t GetSquadID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C0DFE78(relative to base address)
		FLinearColor GetSquadColor(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10390(relative to base address)
		TArray GetPlayerDatas(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747FC0A80(relative to base address)
		int32_t GetPlace(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C0DFE90(relative to base address)
		UFortMinigameTeamIdentification GetMinigameTeamID(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747D3664C(relative to base address)
		int32_t GetKillScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C0DFE60(relative to base address)
		bool GetIsEliminated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE10110(relative to base address)
		void EventDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorHUDControlsBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UAthenaSpectatorHUDControlsBase : public UCommonUserWidget	
	{
	public:
		UFortTimelineBase* ReplayTimeline; // 0x2D8(0x8)
		UCommonButtonLegacy* Button_FocusTimeline; // 0x2E0(0x8)
		UIconTextButtonSpectatorBase* IconTextButtonReplay_PlayHighlights; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorHUDControlsBase");
			return ret;
		}

		void ResetFocusToPlayPauseIfNeeded(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRackFocusEnabledChanged(bool bRackFocusEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDutchControlSchemaEnabledChanged(bool bDutchControlSchemaEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCameraTypeChangedInternal(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType); // Flags: Final|Native|Private, Memory Exec: 0x7FF7492CD4B4(relative to base address)
		void OnCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleReplayHighlightsAvailable(AFortReplaySpectator* Sender, bool bIsAvailable); // Flags: Final|Native|Private, Memory Exec: 0x7FF747E29594(relative to base address)
		void HandleBattleMapTimelineModeChanged(bool bIsOnTimelineMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CenterControls(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorNameplateBase
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3E0 - 0x3C0)
	class UAthenaSpectatorNameplateBase : public UFortActorIndicatorWidget	
	{
	public:
		float DistanceToCameraOffsetScale; // 0x3C0(0x4)
		float MinZOffset; // 0x3C4(0x4)
		float MaxZOffset; // 0x3C8(0x4)
		bool bOverrideNameplateScaleToMax; // 0x3CC(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x3CD(0x3) UNKNOWN PROPERTY
		TWeakObjectPtr<UAthenaRemotePlayerViewData*> PlayerData; // 0x3D0(0x8)
		EAthenaSpectatorNameplateDistanceState CurrentDistanceState; // 0x3D8(0x1)
		EAthenaSpectatorNameplateDetailState CurrentDetailState; // 0x3D9(0x1)
		unsigned char UnknownData01_7[0x6]; // 0x3DA(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorNameplateBase");
			return ret;
		}

		void SetTeamColorVisible(bool bTeamColorVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetSquadIdVisibility(bool bSquadIdVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetArrowTeamColorVisible(bool bArrowTeamColorVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVehicleStateChanged(AActor* NewVehicle, AActor* OldVehicle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTeamColorChanged(UAthenaRemotePlayerViewData* InPlayerData, FLinearColor InTeamColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIDsDisplayModeHoldUpdate(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSessionRankChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InGamerank); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerPawnChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerPawn* InPlayerPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF748C99A84(relative to base address)
		void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDataSet(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDistanceStateChanged(EAthenaSpectatorNameplateDistanceState NewDistanceState); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDetailStateChanged(EAthenaSpectatorNameplateDetailState NewDetailState); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDisplaySessionRankChanged(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorNameplateLayerBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x3D0 - 0x318)
	class UAthenaSpectatorNameplateLayerBase : public UFortHUDElementWidget	
	{
	public:
		UClass* NameplateWidgetClass; // 0x318(0x8)
		TMap<FUniqueNetIdRepl, UAthenaSpectatorNameplateBase*> NameplateWidgetMap; // 0x320(0x50)
		UFortActorCanvas* Canvas_NameplateIndicators; // 0x370(0x8)
		unsigned char UnknownData00_7[0x58]; // 0x378(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorNameplateLayerBase");
			return ret;
		}

		void OnTeamColorVisibleChanged(bool bVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12A70(relative to base address)
		void OnPlayerDataAdded(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE1205C(relative to base address)
		void OnArrowTeamColorVisibleChanged(bool bVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11A7C(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorPlayersLeftBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaSpectatorPlayersLeftBase : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayersLeftBase");
			return ret;
		}

		void UpdateTotalTeams(int32_t InTotalTeams); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateTotalPlayers(int32_t InTotalPlayers); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateTeamsLeft(int32_t InTeamsLeft); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdatePlayersLeft(int32_t InPlayersLeft); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMaxSquadSize(int32_t MaxSquadSize); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11DD4(relative to base address)
		void OnBroadcastSpectatorInfoReplicated(AFortBroadcastSpectatorInfo* BroadcastSpectatorInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11AFC(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorTeamTagBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaSpectatorTeamTagBase : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorTeamTagBase");
			return ret;
		}

		void UpdateMaxSquadSize(int32_t MaxSquadSize); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11F90(relative to base address)
	};


	// Class FortniteUI.AthenaBattleMapClickHandler
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UAthenaBattleMapClickHandler : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBattleMapClickHandler");
			return ret;
		}

		void HandleToggledBattleMapLive(ABattleMapPawnLive* BattleMapPawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE113F8(relative to base address)
	};


	// Class FortniteUI.AthenaBattleMapNodeTooltip
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UAthenaBattleMapNodeTooltip : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* TextBlock_NodeTitle; // 0x2D8(0x8)
		UCommonTextBlock* TextBlock_NodeDescription; // 0x2E0(0x8)
		UCommonTextBlock* TextBlock_NodeTime; // 0x2E8(0x8)
		UWidget* Widget_Selection; // 0x2F0(0x8)
		UWidget* Widget_Scrubbing; // 0x2F8(0x8)
		UWidget* Widget_ScrubbingGamepad; // 0x300(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x308(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBattleMapNodeTooltip");
			return ret;
		}

		void OnReplayLevelStreamingChanged(bool bStreaming); // Flags: Final|Native|Protected, Memory Exec: 0x7FF747E2A1E8(relative to base address)
		void HandleUnhoveredNode(ABattleMapNode* Node, BattleMapHoveredReason Reason); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE11580(relative to base address)
		void HandleToggledBattleMapLive(ABattleMapPawnLive* BattleMapPawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE11480(relative to base address)
		void HandleTimelineModeChanged(bool bEnabled); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE11170(relative to base address)
		void HandleInputMethodChanged(ECommonInputType NewInputType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE10790(relative to base address)
		void HandleHoveredNode(ABattleMapNode* Node, BattleMapHoveredReason Reason); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE1064C(relative to base address)
		void HandleCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF747FCEAF4(relative to base address)
	};


	// Class FortniteUI.AthenaBattleMapTimelineWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC0 (0x620 - 0x560)
	class UAthenaBattleMapTimelineWidget : public UFortActivatablePanel	
	{
	public:
		UCommonButtonLegacy* Button_Forward; // 0x560(0x8)
		UCommonButtonLegacy* Button_Backward; // 0x568(0x8)
		float ForwardButtonPositionAlpha; // 0x570(0x4)
		float BackwardButtonPositionAlpha; // 0x574(0x4)
		FDataTableRowHandle ForwardDataTableRow; // 0x578(0x10)
		FDataTableRowHandle BackwardDataTableRow; // 0x588(0x10)
		FDataTableRowHandle StopDataTableRow; // 0x598(0x10)
		FDataTableRowHandle ScrubToDataTableRow; // 0x5A8(0x10)
		FDataTableRowHandle ExitBattleMapDataTableRow; // 0x5B8(0x10)
		FDataTableRowHandle ZoomInDataTableRow; // 0x5C8(0x10)
		FDataTableRowHandle ZoomOutDataTableRow; // 0x5D8(0x10)
		unsigned char UnknownData00_7[0x38]; // 0x5E8(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBattleMapTimelineWidget");
			return ret;
		}

		void OnReplayLevelStreamingChanged(bool bStreaming); // Flags: Final|Native|Private, Memory Exec: 0x7FF747E29F70(relative to base address)
		void HandleZoomOutPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE11848(relative to base address)
		void HandleZoomOutHeld(float HeldPercent); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE117C8(relative to base address)
		void HandleZoomInPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE11744(relative to base address)
		void HandleZoomInHeld(float HeldPercent); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE116C4(relative to base address)
		void HandleToggledBattleMapLive(ABattleMapPawnLive* BattleMapPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE11500(relative to base address)
		void HandleTimelineStopPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE112FC(relative to base address)
		void HandleTimelineScrubToPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE11270(relative to base address)
		void HandleTimelineModeChanged(bool bEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE111F0(relative to base address)
		void HandleTimelineForwardPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE110E4(relative to base address)
		void HandleTimelineBackwardPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE11058(relative to base address)
		void HandleSelectedNode(ABattleMapNode* InSelectedNode); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10BA0(relative to base address)
		void HandleExitBattleMapPressed(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE1052C(relative to base address)
		void HandleCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FCEBB8(relative to base address)
	};


	// Class FortniteUI.AthenaEventMatchPlayerWidgetBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UAthenaEventMatchPlayerWidgetBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UAthenaRemotePlayerViewData*> PlayerData; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchPlayerWidgetBase");
			return ret;
		}

		void SetPlayerData(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE15430(relative to base address)
		void OnTeamColorChanged(UAthenaRemotePlayerViewData* InPlayerData, FLinearColor InTeamColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShieldHealed(UAthenaRemotePlayerViewData* InPlayerData, float InShield, float InShieldMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShieldDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InShield, float InShieldMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerStateChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerStateAthena* InPlayerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerPawnChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerPawn* InPlayerPawn); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDataChanged(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaceChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InPlace); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMaterialCountChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocationChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InLocation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsReplayRelevancyPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsReplayRelevancyPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsInRelevancyChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsFollowedPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsFollowedPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHealthHealed(UAthenaRemotePlayerViewData* InPlayerData, float InHealth, float InHealthMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHealthDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InHealth, float InHealthMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisconnectedChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDisconnected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDead); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDBNOStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDBNO); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeingRevivedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsBeingRevived); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEventMatchScoreboardPlayerWidgetBase
	// Inherited from UAthenaEventMatchPlayerWidgetBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13F0 - 0x13F0)
	class UAthenaEventMatchScoreboardPlayerWidgetBase : public UAthenaEventMatchPlayerWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchScoreboardPlayerWidgetBase");
			return ret;
		}

		void SetSquadIdVisible(bool InVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaEventScreenBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UAthenaEventScreenBase : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventScreenBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEventMatchScoreboardScreenBase
	// Inherited from UAthenaEventScreenBase -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UAthenaEventMatchScoreboardScreenBase : public UAthenaEventScreenBase	
	{
	public:
		FUIActionTag SortByElimsAction; // 0x560(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x564(0x4) UNKNOWN PROPERTY
		FUIActionTag SortByPlaceAction; // 0x568(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x56C(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle SortByEliminationsActionRowHandle; // 0x570(0x10)
		FDataTableRowHandle SortByPlaceActionRowHandle; // 0x580(0x10)
		TArray<UAthenaRemoteSquadViewData*> SquadDataArray; // 0x590(0x10)
		unsigned char UnknownData02_6[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY
		UCommonListView* ScoreboardListView; // 0x5A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchScoreboardScreenBase");
			return ret;
		}

		void SetSquadIdsVisible_BP(bool bSquadIdsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSquadKillScoreChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InKillScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FCFA74(relative to base address)
		void HandleSquadEliminated(UAthenaRemoteSquadViewData* InSquadData); // Flags: Final|Native|Private, Memory Exec: 0x7FF74931B564(relative to base address)
	};


	// Class FortniteUI.AthenaEventMatchScoreboardSquadWidget
	// Inherited from UAthenaEventMatchSquadWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x328 - 0x320)
	class UAthenaEventMatchScoreboardSquadWidget : public UAthenaEventMatchSquadWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x320(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchScoreboardSquadWidget");
			return ret;
		}
	};


	// Class FortniteUI.AthenaEventMatchStatusScreenBase
	// Inherited from UAthenaEventScreenBase -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UAthenaEventMatchStatusScreenBase : public UAthenaEventScreenBase	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x560(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaEventMatchStatusScreenBase");
			return ret;
		}

		void UpdateTimeSinceLastKillText(FText& TimeSinceLastKillText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateSupplyDropsLootedText(FText& SupplyDropsLootedText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateShotsFiredText(FText& ShotsFiredText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdatePlayersRemainingText(FText& PlayersRemainingText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdatePiecesDestroyedText(FText& PiecesDestroyedText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdatePiecesBuiltText(FText& PiecesBuiltText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMostKillsText(FText& MostKillsText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMostKillsScore(FText& MostKillsScore); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateMatchTimeText(FText& MatchTimeText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateLongestEliminationText(FText& LongestEliminationText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateLongestEliminationScore(FText& LongestEliminationScore); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateGamePhaseTimeTitleText(FText& GamePhaseTimeTitleText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateGamePhaseTimeText(FText& GamePhaseTimeText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateGamePhaseText(FText& GamePhaseText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateFastestKillText(FText& FastestKillText, FText& FastestKillTime); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateDamageTakenText(FText& DamageTakenText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateDamageInflictedText(FText& DamageInflictedText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateDamageHealedText(FText& DamageHealedText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateCircleRadiusText(FText& CircleRadiusText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateChestsLootedText(FText& ChestsLootedText); // Flags: Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore); // Flags: Final|Native|Protected, Memory Exec: 0x7FF747BEF64C(relative to base address)
		void OnPlayerDeadStateChanged_BP(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead); // Flags: Final|Native|Protected, Memory Exec: 0x7FF747FC5750(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorPlayerWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x188 (0x460 - 0x2D8)
	class UAthenaSpectatorPlayerWidgetBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x188]; // 0x2D8(0x188) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayerWidgetBase");
			return ret;
		}

		void SetPlayerData(UAthenaRemotePlayerViewData* InPlayerData, bool bForceUpdate); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF747FC798C(relative to base address)
		void OnTeamColorChanged(FLinearColor TeamColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStormcapScoreChanged(float Score); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdVisibilityChanged(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdChanged(char SquadID); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShieldHealed(float Shield, float ShieldMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShieldDamaged(float Shield, float ShieldMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerStateChanged(AFortPlayerStateAthena* PlayerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerPawnChanged(AFortPlayerPawn* PlayerPawn); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerNameChanged(FString PlayerName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDataChanged(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaceChanged(int32_t Place); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPipModeChanged(bool bPipModeEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMaterialCountChanged(int32_t Count); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocationChanged(FString Location); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKillScoreChanged(int32_t KillScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsReplayRelevancyPlayerChanged(bool bIsReplayRelevancyPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsInRelevancyChanged(bool bIsInRelevancy); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsFollowedPlayerChanged(bool bIsFollowedPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHealthHealed(float Health, float HealthMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHealthDamaged(float Health, float HealthMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEventScoreChanged(int32_t EventScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisconnectedChanged(bool bIsDisconnected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeadStateChanged(bool bIsDead); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDBNOStateChanged(bool bIsDBNO); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeingRevivedStateChanged(bool bIsBeingRevived); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTeamColorChanged(UAthenaRemotePlayerViewData* InPlayerData, FLinearColor TeamColor); // Flags: Final|Native|Private|HasDefaults, Memory Exec: 0x7FF74FE10F00(relative to base address)
		void HandleSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char SquadID); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10DBC(relative to base address)
		void HandleShieldHealed(UAthenaRemotePlayerViewData* InPlayerData, float Shield, float MaxShield); // Flags: Final|Native|Private, Memory Exec: 0x7FF748D7ABC4(relative to base address)
		void HandleShieldDamaged(UAthenaRemotePlayerViewData* InPlayerData, float Shield, float MaxShield); // Flags: Final|Native|Private, Memory Exec: 0x7FF74919976C(relative to base address)
		void HandlePlayerStateChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerStateAthena* PlayerState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10ADC(relative to base address)
		void HandlePlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString PlayerName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10A04(relative to base address)
		void HandlePlaceChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t Place); // Flags: Final|Native|Private, Memory Exec: 0x7FF749066BF8(relative to base address)
		void HandleMaterialCountChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t MaterialCount); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE10814(relative to base address)
		void HandleKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t KillScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF749013BB4(relative to base address)
		void HandleIsReplayRelevancyPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsReplayRelevancyPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FA5004(relative to base address)
		void HandleIsInRelevancyChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsInRelevancy); // Flags: Final|Native|Private, Memory Exec: 0x7FF748F7AD3C(relative to base address)
		void HandleIsFollowedPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsFollowedPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FABB94(relative to base address)
		void HandleHealthHealed(UAthenaRemotePlayerViewData* InPlayerData, float Health, float MaxHealth); // Flags: Final|Native|Private, Memory Exec: 0x7FF748F8B178(relative to base address)
		void HandleHealthDamaged(UAthenaRemotePlayerViewData* InPlayerData, float Health, float MaxHealth); // Flags: Final|Native|Private, Memory Exec: 0x7FF748D3E538(relative to base address)
		void HandleDisconnectedChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDisconnected); // Flags: Final|Native|Private, Memory Exec: 0x7FF74905F344(relative to base address)
		void HandleDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDead); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FB7480(relative to base address)
		void HandleDBNOStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDBNO); // Flags: Final|Native|Private, Memory Exec: 0x7FF748EF06B4(relative to base address)
		void HandleBeingRevivedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsBeingRevived); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FFE264(relative to base address)
		UAthenaRemotePlayerViewData GetPlayerData(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748D7D7D0(relative to base address)
		void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBroadcasterMapSettings
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortBroadcasterMapSettings : public UCommonActivatableWidget	
	{
	public:
		UCommonUserWidget* PlayerIndicatorsRotator; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBroadcasterMapSettings");
			return ret;
		}

		void BP_HandleMapIconAdded(UFortSpectateClickableMapIcon* MapIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.IconTextButtonSpectatorBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13E0 - 0x13E0)
	class UIconTextButtonSpectatorBase : public UCommonButtonLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.IconTextButtonSpectatorBase");
			return ret;
		}

		void SetText(FText& Text); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorBuildCountBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaSpectatorBuildCountBase : public UCommonUserWidget	
	{
	public:
		UClass* BuildingClass; // 0x2D8(0x8)
		ESpectatorBuildCountType BuildCountType; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UFortItemDefinition* ItemDefinition; // 0x2E8(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2F0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorBuildCountBase");
			return ret;
		}

		void UpdateBuildCount(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE16074(relative to base address)
		void OnWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE131D4(relative to base address)
		void OnFollowedPlayerChanged_BP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FD473C(relative to base address)
		void OnBuildCountChanged(int32_t OldCount, int32_t NewCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorInventorySlotBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UAthenaSpectatorInventorySlotBase : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorInventorySlotBase");
			return ret;
		}

		void SetItem(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIsSelected(bool bIsSelected); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortItem GetItem(); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorMaterialCountsBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UAthenaSpectatorMaterialCountsBase : public UFortHUDElementWidget	
	{
	public:
		bool bIsInBuildMode; // 0x318(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x319(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorMaterialCountsBase");
			return ret;
		}

		float TimeToDisplay(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE16004(relative to base address)
		void OnReplayScrubComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* FollowedPS); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBuildModeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBuildingMaterialChanged(TEnumAsByte<EFortResourceType> BuildingMaterial); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorQuickbarBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaSpectatorQuickbarBase : public UFortHUDElementWidget	
	{
	public:
		TArray<UAthenaSpectatorInventorySlotBase*> ItemSlots; // 0x318(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorQuickbarBase");
			return ret;
		}

		void OnQuickbarSlotFocusChanged(EFortQuickBars QuickbarIndex, int32_t FocusedSlotIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF749AF75B4(relative to base address)
		void OnQuickbarContentsChanged(EFortQuickBars QuickbarIndex, TArray<int32_t>& ChangedSlots); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7494E8314(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorTrapsLoadoutBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UAthenaSpectatorTrapsLoadoutBase : public UFortHUDElementWidget	
	{
	public:
		TArray<UAthenaSpectatorInventorySlotBase*> ItemSlots; // 0x318(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorTrapsLoadoutBase");
			return ret;
		}

		void SelectSlot(int32_t SlotIdx); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE132C0(relative to base address)
		void ClearSlots(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE0F45C(relative to base address)
	};


	// Class FortniteUI.AthenaSpectateMatchModalBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UAthenaSpectateMatchModalBase : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x560(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectateMatchModalBase");
			return ret;
		}

		void JoinGameSession(FString GameSessionIdStr); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FE119EC(relative to base address)
		void JoinFriendSession(FString FriendName); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FE1195C(relative to base address)
		bool IsGameSessionString(FString String); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE118CC(relative to base address)
		void GetFriendNames(TArray<FString>& FriendNames); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE0FF34(relative to base address)
		void BuildFriendNameIdMap(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0F448(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastKillFeedBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UAthenaBroadcastKillFeedBase : public UFortHUDElementWidget	
	{
	public:
		UFortDynamicEntryBox* KillFeedEntryBox; // 0x318(0x8)
		float TimeToShowEntry; // 0x320(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x324(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastKillFeedBase");
			return ret;
		}

		void OnToggleShowKillFeed(bool bShowKillFeed); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12CFC(relative to base address)
		void OnTimelineScrubbed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE12AF0(relative to base address)
		void AddKillFeedEntry(FAthenaBroadcastKillFeedEntryInfo& KillFeedEntryInfo); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE0F3AC(relative to base address)
	};


	// Class FortniteUI.AthenaBroadcastKillFeedItemBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC0 (0x3D8 - 0x318)
	class UAthenaBroadcastKillFeedItemBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UMaterialInterface*> EliminationIcon; // 0x320(0x20)
		TWeakObjectPtr<UMaterialInterface*> StormIcon; // 0x340(0x20)
		TWeakObjectPtr<UMaterialInterface*> FallDamageIcon; // 0x360(0x20)
		TWeakObjectPtr<UMaterialInterface*> ExplosionIcon; // 0x380(0x20)
		TWeakObjectPtr<UMaterialInterface*> DbnoIcon; // 0x3A0(0x20)
		UCommonTextBlock* Text_InstigatorName; // 0x3C0(0x8)
		UCommonTextBlock* Text_VictimName; // 0x3C8(0x8)
		UImage* Image_EntryIcon; // 0x3D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBroadcastKillFeedItemBase");
			return ret;
		}
	};


	// Class FortniteUI.MinigameHUD_SpectatorGameTimer
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3E8 - 0x3D0)
	class UMinigameHUD_SpectatorGameTimer : public UMinigameWidgetBase	
	{
	public:
		UCommonTextBlock* Text_Time; // 0x3D0(0x8)
		UCommonTextBlock* Text_Centiseconds; // 0x3D8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x3E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameHUD_SpectatorGameTimer");
			return ret;
		}
	};


	// Class FortniteUI.MinigameHUD_SpectatorLeaderboard
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x400 - 0x3D0)
	class UMinigameHUD_SpectatorLeaderboard : public UMinigameWidgetBase	
	{
	public:
		UClass* ScoreStat; // 0x3D0(0x8)
		UClass* ItemCollectStat; // 0x3D8(0x8)
		UClass* LapTimeStat; // 0x3E0(0x8)
		UClass* TimeAliveStat; // 0x3E8(0x8)
		UFortDynamicEntryBox* EntryBox_LeaderboardEntries; // 0x3F0(0x8)
		UClass* OutsideTopThreeEntryClass; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameHUD_SpectatorLeaderboard");
			return ret;
		}
	};


	// Class FortniteUI.MinigameHUD_SpectatorLeaderboardEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UMinigameHUD_SpectatorLeaderboardEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Standing; // 0x2D8(0x8)
		UImage* Image_Avatar; // 0x2E0(0x8)
		UImage* Image_BackgroundBase; // 0x2E8(0x8)
		UImage* Image_BackgroundShape; // 0x2F0(0x8)
		UImage* Image_BackgroundShape_Bottom; // 0x2F8(0x8)
		UCommonTextBlock* Text_Score; // 0x300(0x8)
		UCommonTextBlock* Text_EndScore; // 0x308(0x8)
		UCommonTextBlock* Text_ScoreOnly; // 0x310(0x8)
		UCommonTextBlock* Text_ScoreTime; // 0x318(0x8)
		UCommonTextBlock* Text_SmallScoreTime; // 0x320(0x8)
		UClass* CachedMinigameTeamIdClass; // 0x328(0x8)
		unsigned char UnknownData00_6[0x4]; // 0x330(0x4) UNKNOWN PROPERTY
		ESpectatorLeaderboardEntryType CachedEntryType; // 0x334(0x1)
		unsigned char UnknownData01_7[0x3]; // 0x335(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameHUD_SpectatorLeaderboardEntry");
			return ret;
		}

		void SetCoinVisibility(bool bVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStandingChanged(int32_t Standing, int32_t Score); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayTypeChanged(ESpectatorLeaderboardEntryType EntryType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.MinigameHUD_SpectatorTeamBanner
	// Inherited from UAthenaBroadcastSquadStatusWidget -> UAthenaEventMatchSquadWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x380 - 0x350)
	class UMinigameHUD_SpectatorTeamBanner : public UAthenaBroadcastSquadStatusWidget	
	{
	public:
		UImage* Image_BackgroundTone; // 0x350(0x8)
		UImage* Image_BackgroundShape; // 0x358(0x8)
		UImage* Image_Name; // 0x360(0x8)
		UImage* Image_Logo; // 0x368(0x8)
		UImage* Image_Avatar; // 0x370(0x8)
		UImage* Image_Overlap; // 0x378(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MinigameHUD_SpectatorTeamBanner");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpectatorPlayerListBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x470 - 0x3F0)
	class UAthenaSpectatorPlayerListBase : public UCommonActivatableWidget	
	{
	public:
		UCommonListView* ListView; // 0x3F0(0x8)
		TArray<UAthenaRemotePlayerViewData*> PlayerDataArray; // 0x3F8(0x10)
		FDataTableRowHandle SortListRowHandles; // 0x408(0x50)
		FDataTableRowHandle ShowPlayerProfileRowHandle; // 0x458(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x468(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayerListBase");
			return ret;
		}

		void SetSortMethod(ESpectatorPlayerListSortMethod InNewSortMethod); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE15BB4(relative to base address)
		void BP_HandlePlayerEventScoreChanged(int32_t EventScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_HandleCurrentSortMethodChanged(ESpectatorPlayerListSortMethod NewSortMethod); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorMapPlayerListBase
	// Inherited from UAthenaSpectatorPlayerListBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x4C0 - 0x470)
	class UAthenaSpectatorMapPlayerListBase : public UAthenaSpectatorPlayerListBase	
	{
	public:
		FDataTableRowHandle ToggleOnlyShowMapPlayersRowHandle; // 0x470(0x10)
		UCommonButtonLegacy* Button_SortBySquadId; // 0x480(0x8)
		UCommonButtonLegacy* Button_SortByPlayerName; // 0x488(0x8)
		UCommonButtonLegacy* Button_SortByEliminations; // 0x490(0x8)
		UCommonButtonLegacy* Button_SortByEventScore; // 0x498(0x8)
		UCommonButtonLegacy* Button_SortByState; // 0x4A0(0x8)
		UAthenaMapLayer* MapLayer; // 0x4A8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x4B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorMapPlayerListBase");
			return ret;
		}

		void OnPlayerSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE125B8(relative to base address)
		void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE124EC(relative to base address)
		void OnPlayerKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore); // Flags: Final|Native|Private, Memory Exec: 0x7FF748FB52FC(relative to base address)
		void OnPlayerIsInRelevancyChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy); // Flags: Final|Native|Private, Memory Exec: 0x7FF748BD2C5C(relative to base address)
		void OnPlayerEliminatedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated); // Flags: Final|Native|Private, Memory Exec: 0x7FF748BD2C5C(relative to base address)
		void BP_HandleSquadIdVisibilityChanged(bool bSquadIdsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorPlayerListEntryBase
	// Inherited from UAthenaSpectatorPlayerWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x4B0 - 0x460)
	class UAthenaSpectatorPlayerListEntryBase : public UAthenaSpectatorPlayerWidgetBase	
	{
	public:
		UCommonBorder* Border_SquadColor; // 0x460(0x8)
		UCommonTextBlock* Text_SquadId; // 0x468(0x8)
		UCommonTextBlock* Text_PlayerName; // 0x470(0x8)
		UCommonTextBlock* Text_KillScore; // 0x478(0x8)
		UAthenaSpectatorHitPointBarBase* HitPoint_HealthBar; // 0x480(0x8)
		UAthenaSpectatorHitPointBarBase* HitPoint_ShieldBar; // 0x488(0x8)
		UCommonTextBlock* Text_EventScore; // 0x490(0x8)
		UImage* Image_RecordingPlayerIcon; // 0x498(0x8)
		UImage* Image_FollowedPlayerIcon; // 0x4A0(0x8)
		UCommonButtonLegacy* Button; // 0x4A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayerListEntryBase");
			return ret;
		}
	};


	// Class FortniteUI.FortReplayPlayerListPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortReplayPlayerListPanel : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayPlayerListPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortHighlightAnnotation
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortHighlightAnnotation : public UCommonUserWidget	
	{
	public:
		float FadeOutTime; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UTextBlock* TextBlock_MainText; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHighlightAnnotation");
			return ret;
		}
	};


	// Class FortniteUI.FortReplayHighlightItemBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x160 (0x1540 - 0x13E0)
	class UFortReplayHighlightItemBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UImage* Image_Icon; // 0x13F0(0x8)
		UTextBlock* TextBlock_Title; // 0x13F8(0x8)
		UTextBlock* TextBlock_Duration; // 0x1400(0x8)
		TMap<EHighlightReelTypes, FSlateBrush> IconMap; // 0x1408(0x50)
		unsigned char UnknownData01_6[0x8]; // 0x1458(0x8) UNKNOWN PROPERTY
		FSlateBrush DefaultIcon; // 0x1460(0xB0)
		unsigned char UnknownData02_7[0x30]; // 0x1510(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayHighlightItemBase");
			return ret;
		}

		void HandlePlayItemClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE10958(relative to base address)
	};


	// Class FortniteUI.FortReplayHighlightsWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x570 - 0x560)
	class UFortReplayHighlightsWindow : public UFortActivatablePanel	
	{
	public:
		UClass* HighlightItemClass; // 0x560(0x8)
		UVerticalBox* VerticalBox_ItemContainer; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayHighlightsWindow");
			return ret;
		}

		void HandleReplayHighlightsAvailable(AFortReplaySpectator* Sender, bool bIsAvailable); // Flags: Final|Native|Private, Memory Exec: 0x7FF749AB1B60(relative to base address)
		void HandleHighlightItemPlayEvent(UFortReplayHighlightItemBase* Sender); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE105CC(relative to base address)
	};


	// Class FortniteUI.FortShotTitleScreen
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortShotTitleScreen : public UCommonUserWidget	
	{
	public:
		float FadeOutTime; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UTextBlock* TextBlock_MainText; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShotTitleScreen");
			return ret;
		}
	};


	// Class FortniteUI.ReplayColorPickerComponent
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UReplayColorPickerComponent : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ComponentName; // 0x2D8(0x8)
		UReplayColorPickerSlider* ColorSlider_Component; // 0x2E0(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2E8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ReplayColorPickerComponent");
			return ret;
		}

		void SetupComponent(FText& Name, UMaterialInterface* SliderMaterial, float InitialValue, float InMin, float InMax, float InStep); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7489C567C(relative to base address)
		void HandleOnValueChanged(float NormalizedNewValue); // Flags: Final|Native|Private, Memory Exec: 0x7FF749858820(relative to base address)
	};


	// Class FortniteUI.ReplayColorPickerSlider
	// Inherited from UAnalogSlider -> USlider -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x670 - 0x660)
	class UReplayColorPickerSlider : public UAnalogSlider	
	{
	public:
		UMaterialInstanceDynamic* DynamicSliderMaterialInstance; // 0x660(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x668(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ReplayColorPickerSlider");
			return ret;
		}
	};


	// Class FortniteUI.FortBroadcastViewSettings
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortBroadcastViewSettings : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBroadcastViewSettings");
			return ret;
		}
	};


	// Class FortniteUI.FortSpectatorAdvanceSettingsTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortSpectatorAdvanceSettingsTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		UCommonUserWidget* DroneDirectMovement; // 0x528(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorAdvanceSettingsTab");
			return ret;
		}

		void SetDutchControlSchemaEnabled(bool bDutchControlSchemaEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14EF8(relative to base address)
		void SetDroneDutchSpeedStep(float DroneDutchSpeedStep); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14DD4(relative to base address)
		void SetDroneDutchSpeed(float DroneDutchSpeed); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14D44(relative to base address)
		void SetDroneDutchAngleStep(float DroneDutchAngleStep); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14CB4(relative to base address)
		void SetDroneDutchAngle(float DroneDutchAngle); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14C24(relative to base address)
		void SetDroneDirectMovementRotationVelocity(float DroneRotationVelocity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14B94(relative to base address)
		void SetDroneDirectMovementLinearVelocity(float DroneLinearVelocity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14B04(relative to base address)
		void SetDroneDirectMovementEnabled(bool bDroneDirectMovementEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14A70(relative to base address)
		void SetDroneAttachToBonesEnabled(bool bDroneAttachToBonesEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE149DC(relative to base address)
		void ResetDutchControlSchemaEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13B60(relative to base address)
		void ResetDroneDutchSpeedStep(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13A7C(relative to base address)
		void ResetDroneDutchSpeed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13A08(relative to base address)
		void ResetDroneDutchAngleStep(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13994(relative to base address)
		void ResetDroneDutchAngle(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13920(relative to base address)
		void ResetDroneDirectMovementRotationVelocity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE138AC(relative to base address)
		void ResetDroneDirectMovementLinearVelocity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13838(relative to base address)
		void ResetDroneDirectMovementEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE137C8(relative to base address)
		void ResetDroneAttachToBonesEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13758(relative to base address)
		void OnDutchControlSchemaEnabledChanged(bool bDutchControlSchemaEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDutchSpeedStepChanged(float DroneDutchSpeedStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDutchSpeedChanged(float DroneDutchSpeed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDutchAngleStepChanged(float DroneDutchAngleStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDutchAngleChanged(float DroneDutchAngle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDirectMovementRotationVelocityChanged(float DroneRotationVelocity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDirectMovementLinearVelocityChanged(float DroneLinearVelocity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneDirectMovementEnabledChanged(bool bDroneDirectMovementEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneAttachToBonesEnabledChanged(bool bDroneAttachToBonesEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void GetMinMaxDroneDutchAngle(float& MinAngle, float& MaxAngle); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749AC43A4(relative to base address)
		float GetDroneDutchSpeedStep(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0FED8(relative to base address)
		float GetDroneDutchSpeed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0FEA0(relative to base address)
		float GetDroneDutchAngleStep(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0FE68(relative to base address)
		float GetDroneDutchAngle(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0FE30(relative to base address)
	};


	// Class FortniteUI.FortSpectatorAmbientSettingsTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x538 - 0x528)
	class UFortSpectatorAmbientSettingsTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		UWidget* TimeOfDaySlider; // 0x530(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorAmbientSettingsTab");
			return ret;
		}

		void SetTimeOfDayPaused(bool bPaused); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FE15F84(relative to base address)
		void SetTimeOfDay(float TimeOfDay); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FE15F04(relative to base address)
		void SetOverridenSunYawAngle(float InYaw); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FE153A0(relative to base address)
		void ResetTimeOfDay(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FE144EC(relative to base address)
		void ResetOverridenSunYawAngle(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FE13E80(relative to base address)
		void OnTimeOfDayPauseChanged(bool bPaused); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsGeneralTimeOfDayManagerActive(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74893BD1C(relative to base address)
		float GetOverridenSunYawAngle(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7477B5FB8(relative to base address)
		float GetCurrentTimeOfDay(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF747198EE4(relative to base address)
	};


	// Class FortniteUI.FortSpectatorCameraSettingsTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortSpectatorCameraSettingsTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		UCommonUserWidget* Rotator_PlayerOutlines; // 0x528(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorCameraSettingsTab");
			return ret;
		}

		void SetThirdPersonDistanceToSubject(float ThirdPersonDistanceToSubject); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15E74(relative to base address)
		void SetThirdPersonCameraCollision(bool bThirdPersonCameraCollision); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15DE0(relative to base address)
		void SetThirdPersonAutoFollowMode(EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15D5C(relative to base address)
		void SetStormEffectsEnabled(bool bStormEffectsEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15CC8(relative to base address)
		void SetShareLensSettings(bool bShareLensSettings); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15B20(relative to base address)
		void SetSessionIdWatermark(bool bShowSessionIDWatermark); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15A8C(relative to base address)
		void SetSafeZoneOpacity(float SafeZoneOpacity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE159FC(relative to base address)
		void SetRelevancyZoneVisible(bool bRelevancyZoneVisible); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15968(relative to base address)
		void SetPlayerOutlinesEnabled(bool bPlayerOutlinesEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15578(relative to base address)
		void SetHighQualityFxEnabled(bool bHighQualityFxEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15160(relative to base address)
		void SetFirstPlaceHighlightEnabled(bool bFirstPlaceHighlightEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE1501C(relative to base address)
		void SetDroneIgnoreJump(bool bDroneIgnoreJump); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14E64(relative to base address)
		void SetDamageFxEnabled(bool bDamageFxEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14948(relative to base address)
		void SetBattleMapShowTimeIndicator(bool bBattleMapShowTimeIndicator); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE148B4(relative to base address)
		void SetBattleMapShowNearbyChests(bool bBattleMapShowNearbyChests); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14820(relative to base address)
		void SetBattleMapShowAllSquadMembers(bool bBattleMapShowAllSquadMembers); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE1478C(relative to base address)
		void SetBattleMapAutomaticCameraPlacement(bool bBattleMapAutomaticCameraPlacement); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE146F8(relative to base address)
		void ResetThirdPersonDistanceToSubject(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14478(relative to base address)
		void ResetThirdPersonCameraCollision(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14408(relative to base address)
		void ResetThirdPersonAutoFollowMode(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14398(relative to base address)
		void ResetStormEffectsEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14328(relative to base address)
		void ResetShareLensSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14244(relative to base address)
		void ResetSessionIdWatermark(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE141D4(relative to base address)
		void ResetSafeZoneOpacity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14160(relative to base address)
		void ResetRelevancyZoneVisible(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE140F0(relative to base address)
		void ResetPlayerOutlinesEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13EB0(relative to base address)
		void ResetHighQualityFxEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13D28(relative to base address)
		void ResetFirstPlaceHighlightEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13C44(relative to base address)
		void ResetDroneIgnoreJump(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13AF0(relative to base address)
		void ResetDamageFxEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE136E8(relative to base address)
		void ResetBattleMapShowTimeIndicator(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13678(relative to base address)
		void ResetBattleMapShowNearbyChests(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13608(relative to base address)
		void ResetBattleMapShowAllSquadMembers(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13598(relative to base address)
		void ResetBattleMapAutomaticCameraPlacement(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13528(relative to base address)
		void OnThirdPersonDistanceToSubjectChanged(float ThirdPersonDistanceToSubject); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnThirdPersonCameraCollisionChanged(bool bThirdPersonCameraCollision); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnThirdPersonAutoFollowModeChanged(EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStormEffectsEnabledChanged(bool bStormEffectsEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShareLensSettingsChanged(bool bShareLensSettings); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSessionIDWatermarkChanged(bool bShowSessionIDWatermark); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSafeZoneOpacityChanged(float SafeZoneOpacity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRelevancyZoneVisibleChanged(bool bRelevancyZoneVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerOutlinesEnabledChanged(bool bPlayerOutlinesEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHighQualityFxEnabledChanged(bool bHighQualityFxEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFirstPlaceHighlightEnabledChanged(bool bFirstPlaceHighlightEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDroneIgnoreJumpChanged(bool bDroneIgnoreJump); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDamageFxEnabledChanged(bool bDamageFxEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattleMapShowTimeIndicatorChanged(bool bBattleMapShowTimeIndicator); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattleMapShowNearbyChestsChanged(bool bBattleMapShowNearbyChests); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattleMapShowAllSquadMembersChanged(bool bBattleMapShowAllSquadMembers); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattleMapAutomaticCameraPlacementChanged(bool bInBattleMapAutomaticCameraPlacement); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSpectatorLensSettingsTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x568 - 0x528)
	class UFortSpectatorLensSettingsTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x528(0x28) UNKNOWN PROPERTY
		UCommonUserWidget* Rotator_AutoExposure; // 0x550(0x8)
		UReplayColorPickerComponent* ColorComponent_RackPlaneColor; // 0x558(0x8)
		UReplayColorPickerComponent* ColorComponent_RackPlaneAlpha; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorLensSettingsTab");
			return ret;
		}

		void ToggleFocusActorMode(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE16034(relative to base address)
		void SetStartPointRackFocusDistance(float StartPointRackFocusDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15C38(relative to base address)
		void SetRackFocusPlaneVisibility(bool bShowRackFocusPlane); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE158D4(relative to base address)
		void SetRackFocusPlaneColor(FLinearColor RackFocusPlaneColor); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE157B0(relative to base address)
		void SetRackFocusEnabled(bool bRackFocusEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE1571C(relative to base address)
		void SetRackFocusDistanceStep(float RackFocusDistanceStep); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE1568C(relative to base address)
		void SetManualFocusDistance(float ManualFocusDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE15284(relative to base address)
		void SetManualExposureBias(float ManualExposureBias); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE151F4(relative to base address)
		void SetFocalLengthFromIdx(int32_t FocalLengthIdx); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE150B0(relative to base address)
		void SetEndPointRackFocusDistance(float EndPointRackFocusDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14F8C(relative to base address)
		void SetAutoFocusEnabled(bool bAutoFocusEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14664(relative to base address)
		void SetAutoExposureEnabled(bool bAutoExposureEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE145D0(relative to base address)
		void SetApertureFromIdx(int32_t ApertureIdx); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14534(relative to base address)
		void ResetStartPointRackFocusDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE142B4(relative to base address)
		void ResetRackFocusPlaneVisibility(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14080(relative to base address)
		void ResetRackFocusPlaneColor(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE14004(relative to base address)
		void ResetRackFocusEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13F94(relative to base address)
		void ResetRackFocusDistanceStep(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13F20(relative to base address)
		void ResetManualFocusDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13E0C(relative to base address)
		void ResetManualExposureBias(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13D98(relative to base address)
		void ResetFocalLength(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13CB4(relative to base address)
		void ResetEndPointRackFocusDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13BD0(relative to base address)
		void ResetAutoFocusEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE134B8(relative to base address)
		void ResetAutoExposureEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE13448(relative to base address)
		void ResetAperture(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE133D4(relative to base address)
		void OnStartPointRackFocusDistanceChanged(float StartPointRackFocusDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRackFocusPlaneVisibilityChanged(bool bRackFocusEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRackFocusPlaneColorChanged(FLinearColor& RackFocusPlaneColor); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRackFocusEnabledChanged(bool bRackFocusEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRackFocusDistanceStepChanged(float RackFocusDistanceStep); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnManualFocusDistanceChanged(float ManualFocusDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnManualExposureBiasChanged(float ManualExposureBias); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFocusActorNameChanged(FString ActorName); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFocalLengthChanged(TArray<FText>& FocalLengthTexts, int32_t PresetFocalLengthIdx); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEndPointRackFocusDistanceChanged(float EndPointRackFocusDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoFocusEnabledChanged(bool bAutoFocusEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoExposureEnabledChanged(bool bAutoExposureEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnApertureChanged(int32_t PresetApertureIdx); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void GetPresetApertureTexts(TArray<FText>& PresetApertureTexts); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7499ACA6C(relative to base address)
		void GetMinMaxFocusDistance(float& MinFocusDistance, float& MaxFocusDistance); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7485942FC(relative to base address)
		void GetMinMaxExposure(float& MinExposure, float& MaxExposure); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749AC42EC(relative to base address)
		void DisableFocusActorMode(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE0F470(relative to base address)
	};


	// Class FortniteUI.FortSpectatorNameplateSettingsTab
	// Inherited from UFortReplayViewSettingsTabBase -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortSpectatorNameplateSettingsTab : public UFortReplayViewSettingsTabBase	
	{
	public:
		UCommonUserWidget* Rotator_NameplatesEnabled; // 0x528(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorNameplateSettingsTab");
			return ret;
		}

		void SetViewDistance(float ViewDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35FD4(relative to base address)
		void SetSquadIdMode(ESpectatorSquadIdMode SquadIdMode); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35ECC(relative to base address)
		void SetShowTeamColor(bool bShowTeamColor); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35E38(relative to base address)
		void SetScalingOptionsEnabled(bool bScalingOptionsEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35DA4(relative to base address)
		void SetNameplatesEnabled(bool bNamePlatesEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35D10(relative to base address)
		void SetLowDetailScaleMin(float LowDetailScaleMin); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35C80(relative to base address)
		void SetLowDetailScaleMax(float LowDetailScaleMax); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35BF0(relative to base address)
		void SetLowDetailDistance(float LowDetailDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35B60(relative to base address)
		void SetHighDetailScaleMin(float HighDetailScaleMin); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35AD0(relative to base address)
		void SetHighDetailScaleMax(float HighDetailScaleMax); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35A40(relative to base address)
		void SetDisplaySessionRanks(bool bDisplaySessionRanks); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE359AC(relative to base address)
		void SetAugmentsHUDVisibility(bool bAugmentsHUDVisibility); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35918(relative to base address)
		void SetArrowScaleMin(float ArrowScaleMin); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35888(relative to base address)
		void SetArrowScaleMax(float ArrowScaleMax); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE357F8(relative to base address)
		void SetArrowDistance(float ArrowDistance); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35768(relative to base address)
		void SetArrowColorEnabled(bool bArrowColorEnabled); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE356D4(relative to base address)
		void ResetViewDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35660(relative to base address)
		void ResetSquadIdMode(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE355F0(relative to base address)
		void ResetShowTeamColor(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35580(relative to base address)
		void ResetScalingOptionsEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35510(relative to base address)
		void ResetNameplatesEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE354A0(relative to base address)
		void ResetLowDetailScaleMin(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE3542C(relative to base address)
		void ResetLowDetailScaleMax(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE353B8(relative to base address)
		void ResetLowDetailDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35344(relative to base address)
		void ResetHighDetailScaleMin(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE352D0(relative to base address)
		void ResetHighDetailScaleMax(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE3525C(relative to base address)
		void ResetDisplaySessionRanks(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE351EC(relative to base address)
		void ResetAugmentsHUDVisibility(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE3517C(relative to base address)
		void ResetArrowScaleMin(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35108(relative to base address)
		void ResetArrowScaleMax(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35094(relative to base address)
		void ResetArrowDistance(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35020(relative to base address)
		void ResetArrowColorEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE34FB0(relative to base address)
		void OnViewDistanceChanged(float ViewDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadIdModeChanged(ESpectatorSquadIdMode SquadIdMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowTeamColorChanged(bool bShowTeamColor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnScalingOptionsEnabledChanged(bool bScalingOptionsEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNameplatesEnabledChanged(bool bNamePlatesEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowDetailScaleMinChanged(float LowDetailScaleMin); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowDetailScaleMaxChanged(float LowDetailScaleMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowDetailDistanceChanged(float LowDetailDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHighDetailScaleMinChanged(float HighDetailScaleMin); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHighDetailScaleMaxChanged(float HighDetailScaleMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplaySessionRanksChanged(bool bDisplaySessionRanks); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAugmentsHUDVisibilityChanged(bool bShowAugmentsHUD); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnArrowScaleMinChanged(float ArrowScaleMin); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnArrowScaleMaxChanged(float ArrowScaleMax); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnArrowDistanceChanged(float ArrowDistance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnArrowColorEnabledChanged(bool bArrowColorEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetScalingOptionsEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C98FE8(relative to base address)
		bool GetNameplatesEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C99028(relative to base address)
		void GetMinMaxNameplateScale(float& MinScale, float& MaxScale); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748594130(relative to base address)
		void GetMinMaxNameplateDistance(float& MinDistance, float& MaxDistance); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748594078(relative to base address)
		bool GetDisplaySessionRanks(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C99068(relative to base address)
		bool GetAugmentsHUDVisibility(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C990A8(relative to base address)
	};


	// Class FortniteUI.AthenaTeamDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x80 (0xB0 - 0x30)
	class UAthenaTeamDisplayData : public UDataAsset	
	{
	public:
		TArray<FAthenaTeamDisplayInfo> SquadStyles; // 0x30(0x10)
		FAthenaTeamDisplayInfo DefaultStyle; // 0x40(0x70)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.FortTeamMemberEntryBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortTeamMemberEntryBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x13E0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberEntryBase");
			return ret;
		}

		void OnMemberIsInFrontendChanged(bool bIsInFrontEnd); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMemberGameReadinessChanged(EGameReadiness ReadyStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsCurrentMemberValid(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354624(relative to base address)
		bool IsCurrentMemberLocal(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354600(relative to base address)
		bool IsCurrentMemberInFrontend(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503545B0(relative to base address)
		EGameReadiness GetCurrentMemberGameReadiness(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75035413C(relative to base address)
		void BP_OnTeamMemberEstablished(bool bHasValidMember); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaMinimalSquadMemberEntry
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UAthenaMinimalSquadMemberEntry : public UFortTeamMemberEntryBase	
	{
	public:
		UImage* Image_ReadyIcon; // 0x1408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaMinimalSquadMemberEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortBasicTeamMemberEntry
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x1430 - 0x1408)
	class UFortBasicTeamMemberEntry : public UFortTeamMemberEntryBase	
	{
	public:
		UImage* Image_PlatformIcon; // 0x1408(0x8)
		UFortPlayerBanner* Banner_MemberBanner; // 0x1410(0x8)
		UFortSocialNameTextBlock* Text_SocialName; // 0x1418(0x8)
		UImage* Image_LeaderIcon; // 0x1420(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x1428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBasicTeamMemberEntry");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSquadMemberDetailedEntry
	// Inherited from UFortBasicTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1450 - 0x1430)
	class UAthenaSquadMemberDetailedEntry : public UFortBasicTeamMemberEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1430(0x8) UNKNOWN PROPERTY
		UFortSocialAvatarIcon* AvatarIcon_MemberAvatar; // 0x1438(0x8)
		UCommonTextBlock* Text_ParticipationStatus; // 0x1440(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1448(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSquadMemberDetailedEntry");
			return ret;
		}

		void OnSquadAssigned(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FAthenaTeamDisplayInfo GetSquadDisplayInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE33A94(relative to base address)
	};


	// Class FortniteUI.AthenaTeamSquadEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaTeamSquadEntry : public UCommonUserWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_Members; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamSquadEntry");
			return ret;
		}

		void OnSquadIsEmptyChanged(bool bSquadIsEmpty, bool bMultipleSquadsPopulated); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadAssigned(FAthenaTeamDisplayInfo& SquadStyle); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetSquadID(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE33B48(relative to base address)
	};


	// Class FortniteUI.FortTeamSquadDetailedEntry
	// Inherited from UAthenaTeamSquadEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x338 - 0x2E8)
	class UFortTeamSquadDetailedEntry : public UAthenaTeamSquadEntry	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x2E8(0x40) UNKNOWN PROPERTY
		UCommonRichTextBlock* RichText_SquadName; // 0x328(0x8)
		UCommonRichTextBlock* RichText_LockReason; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamSquadDetailedEntry");
			return ret;
		}
	};


	// Class FortniteUI.AthenaTeamSquadsEntryBox
	// Inherited from UDynamicEntryBoxBase -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x258 - 0x238)
	class UAthenaTeamSquadsEntryBox : public UDynamicEntryBoxBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x238(0x10) UNKNOWN PROPERTY
		UClass* SquadEntryClass; // 0x248(0x8)
		bool bDisplayEmptySquads; // 0x250(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x251(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTeamSquadsEntryBox");
			return ret;
		}
	};


	// Class FortniteUI.AthenaUIStateWidget_Frontend
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x670 (0xA78 - 0x408)
	class UAthenaUIStateWidget_Frontend : public UFortUIStateWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x188]; // 0x408(0x188) UNKNOWN PROPERTY
		TArray<FString> DefaultFlowStepArray; // 0x590(0x10)
		TArray<FString> FirstTimeSeasonFlowStepArray; // 0x5A0(0x10)
		TArray<FString> ExpeditedFlowStepArray; // 0x5B0(0x10)
		unsigned char UnknownData01_6[0xF8]; // 0x5C0(0xF8) UNKNOWN PROPERTY
		UClass* GuidedTutorialFakeLoadingScreenClass; // 0x6B8(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x6C0(0x8) UNKNOWN PROPERTY
		FPrimaryAssetId GuidedTutorialPlaylistId; // 0x6C8(0x8)
		TArray<UFortGiftBoxItem*> PendingRemovalGiftboxes; // 0x6D0(0x10)
		unsigned char UnknownData03_6[0x8]; // 0x6E0(0x8) UNKNOWN PROPERTY
		FText BadMatchPopupTitle; // 0x6E8(0x10)
		FText BadMatchPopupDescription; // 0x6F8(0x10)
		FGameplayTag BattlepassScreenTag; // 0x708(0x4)
		unsigned char UnknownData04_6[0x4]; // 0x70C(0x4) UNKNOWN PROPERTY
		UClass* SettingsUpdatedClass; // 0x710(0x8)
		UClass* EnterCabinClass; // 0x718(0x8)
		TWeakObjectPtr<UClass*> VideoPlayerClass; // 0x720(0x20)
		UFortStreamMediaSource* VideoStream_Source; // 0x740(0x8)
		TWeakObjectPtr<UClass*> MFAModalClass; // 0x748(0x20)
		UClass* SocialImportPanelClass; // 0x768(0x8)
		UClass* ConfirmationWindowClass; // 0x770(0x8)
		UClass* MiniMapManagerClass; // 0x778(0x8)
		UClass* MapScreenContainerClass; // 0x780(0x8)
		TWeakObjectPtr<UClass*> ResolutionChangeModalClass; // 0x788(0x20)
		UClass* MPLobbyOnboardingModalClass; // 0x7A8(0x8)
		TWeakObjectPtr<UFortAthenaTabsScreenBase*> AthenaTabsScreen; // 0x7B0(0x8)
		UClass* PlayerBannedScreenClass; // 0x7B8(0x8)
		UAthenaMapScreenContainer* MapScreen; // 0x7C0(0x8)
		bool bVideoActive; // 0x7C8(0x1)
		unsigned char UnknownData05_6[0xF]; // 0x7C9(0xF) UNKNOWN PROPERTY
		UAthenaTopBar* TopBar_Widget; // 0x7D8(0x8)
		UCommonUserWidget* BottomBar; // 0x7E0(0x8)
		UFortActivatableChatWidget* ChatPanel_Widget; // 0x7E8(0x8)
		UCommonButtonLegacy* Button_ToggleChat; // 0x7F0(0x8)
		UFortDualBladeMenu* DualBladeMenu_Widget; // 0x7F8(0x8)
		UOverlay* Overlay_DynamicExtensions; // 0x800(0x8)
		TWeakObjectPtr<UClass*> SettingScreenClass; // 0x808(0x20)
		unsigned char UnknownData06_6[0x10]; // 0x828(0x10) UNKNOWN PROPERTY
		UFortGiftBoxItem* NextGiftBox; // 0x838(0x8)
		TArray<TWeakObjectPtr> RequestedGiftBoxesToDisplay; // 0x840(0x10)
		unsigned char UnknownData07_6[0x14]; // 0x850(0x14) UNKNOWN PROPERTY
		FPrimaryAssetId ApolloIntroPlaylist_CurrentPlayerId; // 0x864(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_PastPlayerId; // 0x86C(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_NewPlayerId; // 0x874(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_05H95BId; // 0x87C(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_20H80BId; // 0x884(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_30H70BId; // 0x88C(0x8)
		FPrimaryAssetId ApolloIntroPlaylist_40H60BId; // 0x894(0x8)
		unsigned char UnknownData08_6[0x4]; // 0x89C(0x4) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> ApolloIntroFakeLoadingScreenClass; // 0x8A0(0x20)
		unsigned char UnknownData09_6[0x28]; // 0x8C0(0x28) UNKNOWN PROPERTY
		USocialParty* CurrentSocialParty; // 0x8E8(0x8)
		unsigned char UnknownData10_6[0x38]; // 0x8F0(0x38) UNKNOWN PROPERTY
		UFortDiscoverSurfaceCache* DiscoverSurfaceCache; // 0x928(0x8)
		unsigned char UnknownData11_6[0x110]; // 0x930(0x110) UNKNOWN PROPERTY
		FString DefaultFrontendPluginName; // 0xA40(0x10)
		TScriptInterface<Class> CurrentFrontendExperienceFlow; // 0xA50(0x10)
		unsigned char UnknownData12_7[0x18]; // 0xA60(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaUIStateWidget_Frontend");
			return ret;
		}

		void TryShowingMPLobbyOnboardingModal(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749FA3814(relative to base address)
		void StopTrailerTransitionAudioCheck(); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartTrailerTransitionAudioCheck(UMediaPlayer* MediaPlayer); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetVideoActive(bool bActive); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE35F50(relative to base address)
		void OnSetFrontendVisibilityMode(EFrontendVisibilityMode InFrontendVisibilityMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsLobbyVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE34968(relative to base address)
		bool IsFrontendFree(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE34944(relative to base address)
		void HideDebugFlowText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleToggleFullscreenMap(bool bFullscreenMapVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34470(relative to base address)
		void HandleGiftBoxRemoved(bool bSuccess); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34004(relative to base address)
		void HandleEcosystemTrailerTerminalError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33F84(relative to base address)
		void HandleEcosystemTrailerEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33F70(relative to base address)
		void HandleEcosystemTrailerClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33F5C(relative to base address)
		void HandleActiveSeasonDataChanged(TArray<FString>& ActiveEventFlags); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE33B60(relative to base address)
		EFortUIFeature GetCurrentTab(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE33A4C(relative to base address)
		void DisplayDebugFlowText(FText& DebugFlowText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaVehicleDashboardWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x268 (0x580 - 0x318)
	class UFortAthenaVehicleDashboardWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x184]; // 0x318(0x184) UNKNOWN PROPERTY
		bool bIsWidgetShowing; // 0x49C(0x1)
		bool bDisplayedIsDisabled; // 0x49D(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x49E(0x2) UNKNOWN PROPERTY
		AFortAthenaVehicle* CurrentVehicleActor; // 0x4A0(0x8)
		float CurrentSpeed; // 0x4A8(0x4)
		float TargetFuelPercent; // 0x4AC(0x4)
		float DisplayedFuelPercent; // 0x4B0(0x4)
		float FillBlendSpeed; // 0x4B4(0x4)
		UFortVehicleFuelGauge* Widget_FuelGauge; // 0x4B8(0x8)
		UImage* Image_Speedometer; // 0x4C0(0x8)
		FName SpeedometerMaterialSpeedParamName; // 0x4C8(0x4)
		FName SpeedometerMaterialRpmParamName; // 0x4CC(0x4)
		UImage* Image_BoostGlow; // 0x4D0(0x8)
		UImage* Image_BoostMeter; // 0x4D8(0x8)
		FName BoostFillMaterialParamName; // 0x4E0(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x4E4(0x4) UNKNOWN PROPERTY
		UOverlay* Overlay_BoostSparks; // 0x4E8(0x8)
		float MeterIndicatorMinAngle; // 0x4F0(0x4)
		float MeterIndicatorMaxAngle; // 0x4F4(0x4)
		float SpeedTextMaxInterpolationRate; // 0x4F8(0x4)
		unsigned char UnknownData03_6[0x4]; // 0x4FC(0x4) UNKNOWN PROPERTY
		FGameplayTagContainer WidgetTagsToHideWhenVisible; // 0x500(0x20)
		unsigned char UnknownData04_6[0x4]; // 0x520(0x4) UNKNOWN PROPERTY
		float HUDTopSpeed; // 0x524(0x4)
		TEnumAsByte<EHorizontalAlignment> MobileFuelGaugeHorizontalAlignment; // 0x528(0x1)
		TEnumAsByte<EVerticalAlignment> MobileFuelGaugeVerticalAlignment; // 0x529(0x1)
		unsigned char UnknownData05_6[0x2]; // 0x52A(0x2) UNKNOWN PROPERTY
		FMargin MobileFuelGaugePadding; // 0x52C(0x10)
		unsigned char UnknownData06_6[0x4]; // 0x53C(0x4) UNKNOWN PROPERTY
		UCommonNumericTextBlock* NumericText_Speed; // 0x540(0x8)
		UOverlay* Overlay_Gauge; // 0x548(0x8)
		UCommonTextBlock* Text_ItemName; // 0x550(0x8)
		unsigned char UnknownData07_6[0x8]; // 0x558(0x8) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* SpeedometerMaterialInstance; // 0x560(0x8)
		UMaterialInstanceDynamic* BoostGlowMaterialInstance; // 0x568(0x8)
		UMaterialInstanceDynamic* BoostMeterMaterialInstance; // 0x570(0x8)
		unsigned char UnknownData08_7[0x8]; // 0x578(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaVehicleDashboardWidget");
			return ret;
		}

		void ShowNoFuelMessage(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetVehicleUsesRechargableBoost(bool bUsesRechargeableBoost); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetVehicleHasInfiniteFuel(bool bInfiniteFuel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupVehicleFuelWidget(AActor* NewVehicle, bool bRequestShowWidget); // Flags: RequiredAPI|Native|Public, Memory Exec: 0x7FF74FE36064(relative to base address)
		void RemoveWidgetTagsToHideWhenVisible(FGameplayTagContainer TagToRemove); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE34E54(relative to base address)
		void OnWidgetVisibilityChanged(bool bNewVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVehicleUpdated(AFortAthenaVehicle* NewVehicle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateBoostChargePercent(float BoostPercent); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTankFull(); // Flags: RequiredAPI|Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7476407DC(relative to base address)
		void OnRegularFuel(); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRefuelingCosmeticsStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRefuelingCosmeticsFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRechargableBoostFilled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerFacingNameUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOutOfFuel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowFuel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFuelValueChanged(float FuelPercentage, bool bIsLowOnFuel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisabledChanged(bool bDisabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBoostStarted(); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBoostFinished(); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBoostChargeFilled(); // Flags: RequiredAPI|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAddedFuel(float NewFuelPercent); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE3498C(relative to base address)
		void HandleRefuelingCosmeticsStarted(bool bIsTankFull); // Flags: Final|RequiredAPI|Native|Protected, Memory Exec: 0x7FF74FE343F0(relative to base address)
		void HandleRefuelingCosmeticsFinished(); // Flags: Final|RequiredAPI|Native|Protected, Memory Exec: 0x7FF74FE343DC(relative to base address)
		void HandleBoostStarted(); // Flags: Final|RequiredAPI|Native|Protected, Memory Exec: 0x7FF74FE33D04(relative to base address)
		void HandleBoostFinished(); // Flags: Final|RequiredAPI|Native|Protected, Memory Exec: 0x7FF74FE33CF0(relative to base address)
		AFortAthenaVehicle GetVehicle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B40530(relative to base address)
		float GetHUDTopSpeed(); // Flags: RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EEF72FC(relative to base address)
		AFortAthenaVehicle GetCurrentVehicle(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B40530(relative to base address)
		void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddWidgetTagsToHideWhenVisible(FGameplayTagContainer TagToAdd); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE338F0(relative to base address)
	};


	// Class FortniteUI.FortAthenaVehicleDashboardWidget_Ferret
	// Inherited from UFortAthenaVehicleDashboardWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x580 - 0x580)
	class UFortAthenaVehicleDashboardWidget_Ferret : public UFortAthenaVehicleDashboardWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaVehicleDashboardWidget_Ferret");
			return ret;
		}

		AFortAthenaFerretVehicle GetFerretVehicle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE33A70(relative to base address)
	};


	// Class FortniteUI.FortFuelGaugeExtensionInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortFuelGaugeExtensionInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFuelGaugeExtensionInterface");
			return ret;
		}
	};


	// Class FortniteUI.OstrichAlertWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UOstrichAlertWidgetBase : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		AFortCharacterVehicle_Ostrich* OwningOstrichVehicle; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OstrichAlertWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.OstrichAlertWidgetDriver
	// Inherited from UOstrichAlertWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x328 - 0x328)
	class UOstrichAlertWidgetDriver : public UOstrichAlertWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OstrichAlertWidgetDriver");
			return ret;
		}

		void OnDriverStompAbilityBlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDriverJumpAbilityBlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDriverDashAbilityBlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.OstrichAlertWidgetGunner
	// Inherited from UOstrichAlertWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x328 - 0x328)
	class UOstrichAlertWidgetGunner : public UOstrichAlertWidgetBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OstrichAlertWidgetGunner");
			return ret;
		}

		void OnGunnerShotgunBlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGunnerMissilesBlocked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.OstrichFinaleWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x2E8 - 0x2B0)
	class UOstrichFinaleWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		float DestructDisplayUpdateFrequency; // 0x2B8(0x4)
		float FinishBroadcastOffset; // 0x2BC(0x4)
		AFortCharacterVehicle_Ostrich* OwningVehicle; // 0x2C0(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x2C8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OstrichFinaleWidget");
			return ret;
		}

		void OnUpdateSelfDestruct(float RemainingTime); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartSelfDestructPrime(float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetupComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelfDestructStart(float WarningDuration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelfDestructFinish(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCancelSelfDestructPrime(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.OstrichReticleDecorator
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x340 - 0x318)
	class UOstrichReticleDecorator : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		float RocketCooldownUpdateFrequency; // 0x320(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x324(0x4) UNKNOWN PROPERTY
		AFortCharacterVehicle_Ostrich* OwningOstrichVehicle; // 0x328(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x330(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.OstrichReticleDecorator");
			return ret;
		}

		void ShotgunReload(float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RocketsFired(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RocketLoaded(float Percent, int32_t Total); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RocketCooldown(float Percent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetupComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerViewModel
	// Inherited from UObject
	// Size: 0x160 (0x188 - 0x28)
	class UFortPlayerViewModel : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x160]; // 0x28(0x160) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerViewModel");
			return ret;
		}
	};


	// Class FortniteUI.AthenaPlayerViewModel
	// Inherited from UFortPlayerViewModel -> UObject
	// Size: 0xF8 (0x280 - 0x188)
	class UAthenaPlayerViewModel : public UFortPlayerViewModel	
	{
	public:
		unsigned char UnknownData00_1[0xF8]; // 0x188(0xF8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaPlayerViewModel");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLocalPlayerViewModel
	// Inherited from UAthenaPlayerViewModel -> UFortPlayerViewModel -> UObject
	// Size: 0x20 (0x2A0 - 0x280)
	class UAthenaLocalPlayerViewModel : public UAthenaPlayerViewModel	
	{
	public:
		TWeakObjectPtr<AFortPlayerControllerAthena*> PlayerController; // 0x280(0x8)
		UAthenaIndicatorPlayersCache* IndicatorCache; // 0x288(0x8)
		TArray<TWeakObjectPtr> ListeningForPawnStates; // 0x290(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLocalPlayerViewModel");
			return ret;
		}

		void HandleViewTargetPlayerStateReplicated(AFortPlayerPawn* Pawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE344F0(relative to base address)
		void HandleLocalPlayerChangedTeams(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34080(relative to base address)
	};


	// Class FortniteUI.AthenaRemotePlayerViewModel
	// Inherited from UAthenaPlayerViewModel -> UFortPlayerViewModel -> UObject
	// Size: 0x28 (0x2A8 - 0x280)
	class UAthenaRemotePlayerViewModel : public UAthenaPlayerViewModel	
	{
	public:
		AFortPlayerControllerSpectating* PlayerController; // 0x280(0x8)
		TArray<AFortPlayerStateAthena*> SquadList; // 0x288(0x10)
		TArray<AFortPlayerStateAthena*> NameIndicatedPlayers; // 0x298(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRemotePlayerViewModel");
			return ret;
		}

		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74A06ECA8(relative to base address)
		void HandleActorDestroyed(AActor* DestroyedActor); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE33C14(relative to base address)
	};


	// Class FortniteUI.FortAutomationRpcManager_Frontend
	// Inherited from UFortAutomationRpcManager -> UObject
	// Size: 0x28 (0x90 - 0x68)
	class UFortAutomationRpcManager_Frontend : public UFortAutomationRpcManager	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x68(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAutomationRpcManager_Frontend");
			return ret;
		}
	};


	// Class FortniteUI.FortClientPilotActionScrollShopToRowIndex
	// Inherited from UFortClientPilotActionBase -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortClientPilotActionScrollShopToRowIndex : public UFortClientPilotActionBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortClientPilotActionScrollShopToRowIndex");
			return ret;
		}
	};


	// Class FortniteUI.FortClientPilotArbitraryShopAction
	// Inherited from UFortClientPilotArbitraryAction -> UObject
	// Size: 0x0 (0x50 - 0x50)
	class UFortClientPilotArbitraryShopAction : public UFortClientPilotArbitraryAction	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortClientPilotArbitraryShopAction");
			return ret;
		}
	};


	// Class FortniteUI.BacchusPluginContentWidget
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x380 - 0x368)
	class UBacchusPluginContentWidget : public UBacchusHUDElement	
	{
	public:
		FName PluginContentTagName; // 0x368(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x36C(0x4) UNKNOWN PROPERTY
		UOverlay* MyOverlay; // 0x370(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x378(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusPluginContentWidget");
			return ret;
		}

		void OnPluginHUDWidgetRemoved(FGameplayTag WidgetTag); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34D44(relative to base address)
		void OnPluginHUDWidgetAdded(FGameplayTag WidgetTag, TWeakObjectPtr<UClass*> SoftWidgetClass); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34B04(relative to base address)
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverride
	// Inherited from UObject
	// Size: 0x70 (0x98 - 0x28)
	class UFortButtonBehaviorComponentOverride : public UObject	
	{
	public:
		UClass* TargetComponentToFilter; // 0x28(0x8)
		FTagFilterOverride TagFilterOverride; // 0x30(0x68)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverride");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Ability
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Ability : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Ability");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_BlockedAbility
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_BlockedAbility : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_BlockedAbility");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Compound
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x90 (0x128 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Compound : public UFortButtonBehaviorComponentOverride	
	{
	public:
		FGameplayTagQuery HUDWeaponTagQuery; // 0x98(0x48)
		FGameplayTagQuery HUDAbilityTagQuery; // 0xE0(0x48)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Compound");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_HeldObject
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_HeldObject : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_HeldObject");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Interaction
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x8 (0xA0 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Interaction : public UFortButtonBehaviorComponentOverride	
	{
	public:
		UFortControllerComponent_Interaction* InteractionComponent; // 0x98(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Interaction");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Player
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Player : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Player");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Playlist
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Playlist : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Playlist");
			return ret;
		}
	};


	// Class FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Weapon
	// Inherited from UFortButtonBehaviorComponentOverride -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortButtonBehaviorComponentOverrideVisibility_Weapon : public UFortButtonBehaviorComponentOverride	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Weapon");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehaviorExtension
	// Inherited from UFortMobileHUDWidgetBehaviorExtension -> UObject
	// Size: 0x30 (0x80 - 0x50)
	class UFortMobileActionButtonBehaviorExtension : public UFortMobileHUDWidgetBehaviorExtension	
	{
	public:
		TArray<FName> ActionNames; // 0x50(0x10)
		TArray<UFortMobileButtonBehaviorComponent*> ButtonBehaviorComponents; // 0x60(0x10)
		TArray<UFortButtonBehaviorComponentOverride*> ButtonBehaviorComponentOverrides; // 0x70(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehaviorExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_AlternateUse
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x20 (0x150 - 0x130)
	class UFortMobileActionButtonBehavior_AlternateUse : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* DBNOHoistSprite; // 0x130(0x8)
		UPaperSprite* DBNOPlaceSprite; // 0x138(0x8)
		UPaperSprite* HeldObjectPlaceSprite; // 0x140(0x8)
		UPaperSprite* CraftSprite; // 0x148(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_AlternateUse");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeFlightSpeed
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeFlightSpeed : public UFortMobileActionButtonBehavior	
	{
	public:
		FGameplayTag TrackedSpeedTag; // 0x130(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x134(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeFlightSpeed");
			return ret;
		}

		void HandleCreativeFlightSpeedIndexChanged(int32_t Index, bool bPlayFX); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33D18(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeGhostMode
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeGhostMode : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* GhostModeOffSprite; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGhostMode");
			return ret;
		}

		void HandleCreativeGhostModeEnabledChanged(bool bEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33DDC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeGlobalOptions
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeGlobalOptions : public UFortMobileActionButtonBehavior	
	{
	public:
		bool bCreativeQuickMenuDisplayed; // 0x130(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x131(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGlobalOptions");
			return ret;
		}

		void HandleCreativeQuickMenuDisplayedChanged(bool bIsDisplayed); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33EDC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativePhone
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x0 (0x130 - 0x130)
	class UFortMobileActionButtonBehavior_CreativePhone : public UFortMobileActionButtonBehavior	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativePhone");
			return ret;
		}

		void HandleCreativeQuickbarEnabledChanged(bool bEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33E5C(relative to base address)
		void HandleCreativeModeEnabledChanged(bool bEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33E5C(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativePropLockInPlace
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_CreativePropLockInPlace : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* LockedSprite; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativePropLockInPlace");
			return ret;
		}

		void HandlePropLockedInPlaceChanged(bool bPropLockedInPlace); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33DDC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeRotationAxis
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x18 (0x148 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeRotationAxis : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* RotateXAxisSprite; // 0x130(0x8)
		UPaperSprite* RotateYAxisSprite; // 0x138(0x8)
		UPaperSprite* RotateZAxisSprite; // 0x140(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationAxis");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34570(relative to base address)
		void HandleMoveToolRotationAxisChanged(char AxisIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE3409C(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeRotationReset
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x20 (0x150 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeRotationReset : public UFortMobileActionButtonBehavior	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x130(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationReset");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34634(relative to base address)
		void HandleMoveToolRotationModified(FQuat currentRotationOffset); // Flags: Final|Native|Private|HasDefaults, Memory Exec: 0x7FF74FE3411C(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeScaleAxis
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x20 (0x150 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeScaleAxis : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* GrowSprite; // 0x130(0x8)
		UPaperSprite* WidthResizeSprite; // 0x138(0x8)
		UPaperSprite* HeightResizeSprite; // 0x140(0x8)
		UPaperSprite* DepthResizeSprite; // 0x148(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleAxis");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE346F8(relative to base address)
		void HandleMoveToolScaleAxisChanged(EScaleAxis Axis); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE3423C(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeScaleReset
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x18 (0x148 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeScaleReset : public UFortMobileActionButtonBehavior	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x130(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleReset");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE347BC(relative to base address)
		void HandleMoveToolScaleModified(FVector currentScale); // Flags: Final|Native|Private|HasDefaults, Memory Exec: 0x7FF74FE342BC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_CreativeToggleGravity
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_CreativeToggleGravity : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* GravityOffSprite; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_CreativeToggleGravity");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE34880(relative to base address)
		void HandleOnDropToFloorChanged(bool bDropToFloor); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE33DDC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_Jump
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x30 (0x160 - 0x130)
	class UFortMobileActionButtonBehavior_Jump : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* ThrowSprite; // 0x130(0x8)
		UAbilitySystemComponent* AbilitySystemComponent; // 0x138(0x8)
		FGameplayTagContainer PawnTagsCollapse; // 0x140(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_Jump");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_OctopusToggleGrapple : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* GrappleStopSprite; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple");
			return ret;
		}

		void HandleTowhookShot(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C748(relative to base address)
		void HandleTowhookHolstered(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C748(relative to base address)
		void HandleTowhookDetached(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C748(relative to base address)
		void HandleTowhookAttached(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C748(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_PushToTalk
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_PushToTalk : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* VoiceActiveSprite; // 0x130(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_PushToTalk");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_QuickHeal
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x8 (0x138 - 0x130)
	class UFortMobileActionButtonBehavior_QuickHeal : public UFortMobileActionButtonBehavior	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x130(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_QuickHeal");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_SecondaryAbility
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x0 (0x130 - 0x130)
	class UFortMobileActionButtonBehavior_SecondaryAbility : public UFortMobileActionButtonBehavior	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_SecondaryAbility");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Native|Protected, Memory Exec: 0x7FF74FE5CACC(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_Shoot
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x50 (0x180 - 0x130)
	class UFortMobileActionButtonBehavior_Shoot : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* PlaceItemSprite; // 0x130(0x8)
		UPaperSprite* ThrowSprite; // 0x138(0x8)
		UPaperSprite* PickaxeSprite; // 0x140(0x8)
		FGameplayTagContainer DefaultIconOverrideItems; // 0x148(0x20)
		TArray<FIconPicker> PawnSpriteOverrides; // 0x168(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x178(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_Shoot");
			return ret;
		}

		void OnVehicleChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74763E8D8(relative to base address)
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_Use
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0xD0 (0x200 - 0x130)
	class UFortMobileActionButtonBehavior_Use : public UFortMobileActionButtonBehavior	
	{
	public:
		UPaperSprite* InterrogateSprite; // 0x130(0x8)
		UPaperSprite* CancelSprite; // 0x138(0x8)
		UPaperSprite* PickUpSprite; // 0x140(0x8)
		FGameplayTag CreativeMatchmakingPortalComparisonTag; // 0x148(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x14C(0x4) UNKNOWN PROPERTY
		TArray<FIconPicker> PawnSpriteOverrides; // 0x150(0x10)
		FGameplayTagQuery ReceiverTagQueryRequiringVisibilityOverride; // 0x160(0x48)
		FGameplayTagQuery InstigatorTagQueryRequiringVisibilityOverride; // 0x1A8(0x48)
		TArray<FName> OverrideActionNames; // 0x1F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_Use");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonBehavior_Zoom
	// Inherited from UFortMobileActionButtonBehavior -> UHUDWidgetBehavior -> UObject
	// Size: 0x30 (0x160 - 0x130)
	class UFortMobileActionButtonBehavior_Zoom : public UFortMobileActionButtonBehavior	
	{
	public:
		TArray<FIconPicker> PawnSpriteOverrides; // 0x130(0x10)
		FGameplayTagContainer WeaponGameplayTagsToDisplay; // 0x140(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonBehavior_Zoom");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5CB94(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_TagIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComponent_TagIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker	
	{
	public:
		TArray<FIconPicker> SpriteOverrides; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_TagIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_AbilityIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_AbilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:
		UAbilitySystemComponent* AbilitySystemComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_TagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComponent_TagVisibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		TArray<FTagVisibility> TagVisibilities; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_TagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_AbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:
		UAbilitySystemComponent* AbilitySystemComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ToggleVisualBehavior
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x70 (0xB8 - 0x48)
	class UFortMobileButtonBehaviorComponent_ToggleVisualBehavior : public UFortMobileButtonBehaviorComponent	
	{
	public:
		FGameplayTagQuery ToggleTagQuery; // 0x48(0x48)
		TWeakObjectPtr<UMaterialInterface*> ToggledOnMaterial; // 0x90(0x20)
		FColor ToggledOnColor; // 0xB0(0x4)
		unsigned char UnknownData00_7[0x4]; // 0xB4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ToggleVisualBehavior");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagVisualToggle
	// Inherited from UFortMobileButtonBehaviorComponent_ToggleVisualBehavior -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0xC0 - 0xB8)
	class UFortMobileButtonBehaviorComponent_AbilityTagVisualToggle : public UFortMobileButtonBehaviorComponent_ToggleVisualBehavior	
	{
	public:
		UAbilitySystemComponent* AbilitySystemComponent; // 0xB8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagVisualToggle");
			return ret;
		}

		void HandleGameplayTagChanged(FGameplayTag TagChange, int32_t NewCount); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C464(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComponent_ActionBindingIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker	
	{
	public:
		TArray<FActionBindingIconPicker> ActionBindingSpriteOverrides; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComponent_ActionBindingVisibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		TArray<FActionBindingVisibility> ActionBindingVisibilites; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:
		UFortAbilitySystemComponent* AbilitySystemComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ContextIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_ContextIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:
		UFortControllerComponent_InputContextTracker* ContextTracker; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ContextIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ContextTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_ContextTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:
		UFortControllerComponent_InputContextTracker* ContextTracker; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ContextTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_GameplayMessageTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x28 (0x70 - 0x48)
	class UFortMobileButtonBehaviorComponent_GameplayMessageTagVisibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		TArray<FGameplayMessageVisibility> GameplayMessageVisibilities; // 0x48(0x10)
		unsigned char UnknownData00_7[0x18]; // 0x58(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_GameplayMessageTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_HeldObjectTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_HeldObjectTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:
		UAbilitySystemComponent* AbilityComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_HeldObjectTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_HUDVisibilityIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_HUDVisibilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_HUDVisibilityIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_InputDevice
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0xB8 (0x100 - 0x48)
	class UFortMobileButtonBehaviorComponent_InputDevice : public UFortMobileButtonBehaviorComponent	
	{
	public:
		FGameplayTagContainer TagsToTrigger; // 0x48(0x20)
		TArray<FName> OverrideActionNames; // 0x68(0x10)
		TArray<FMobileEnhancedInputData> OverrideInputActionsData; // 0x78(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x88(0x18) UNKNOWN PROPERTY
		TArray<FMobileEnhancedInputData> SavedInputActionsData; // 0xA0(0x10)
		unsigned char UnknownData01_7[0x50]; // 0xB0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_InputDevice");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_InteractionIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_InteractionIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:
		UFortControllerComponent_Interaction* InteractionComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_InteractionTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileButtonBehaviorComponent_InteractionTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:
		UFortControllerComponent_Interaction* InteractionComponent; // 0x58(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_InteractionTextIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x38 (0x80 - 0x48)
	class UFortMobileButtonBehaviorComponent_InteractionTextIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker	
	{
	public:
		UFortControllerComponent_Interaction* InteractionComponent; // 0x48(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x50(0x20) UNKNOWN PROPERTY
		TArray<FTextIconPicker> SpriteOverrides; // 0x70(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionTextIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_ToggleBehavior
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x38 (0x80 - 0x48)
	class UFortMobileButtonBehaviorComponent_ToggleBehavior : public UFortMobileButtonBehaviorComponent	
	{
	public:
		TArray<FToggleBehaviorSelector> ToggleBehaviorSelectors; // 0x48(0x10)
		TWeakObjectPtr<UMaterialInterface*> ToggledOnMaterial; // 0x58(0x20)
		FColor ToggledOnColor; // 0x78(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_ToggleBehavior");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_MainhandWeaponTagToggleBehavior
	// Inherited from UFortMobileButtonBehaviorComponent_ToggleBehavior -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UFortMobileButtonBehaviorComponent_MainhandWeaponTagToggleBehavior : public UFortMobileButtonBehaviorComponent_ToggleBehavior	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_MainhandWeaponTagToggleBehavior");
			return ret;
		}

		void HandleWeaponChanged(AFortPawn* Pawn, AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C75C(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_OffhandWeaponTagToggleBehavior
	// Inherited from UFortMobileButtonBehaviorComponent_ToggleBehavior -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0x88 - 0x80)
	class UFortMobileButtonBehaviorComponent_OffhandWeaponTagToggleBehavior : public UFortMobileButtonBehaviorComponent_ToggleBehavior	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x80(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_OffhandWeaponTagToggleBehavior");
			return ret;
		}

		void HandleWeaponChanged(AFortPawn* Pawn, AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C9D4(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_PlayerTagIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_PlayerTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagVisualToggle
	// Inherited from UFortMobileButtonBehaviorComponent_ToggleVisualBehavior -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x8 (0xC0 - 0xB8)
	class UFortMobileButtonBehaviorComponent_PlayerTagVisualToggle : public UFortMobileButtonBehaviorComponent_ToggleVisualBehavior	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0xB8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagVisualToggle");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_PlaylistTagIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_PlaylistTagIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_PlaylistTagIconPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_PlaylistTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_PlaylistTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_PlaylistTagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_QuickhealPriorityExtension
	// Inherited from UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x10 (0x58 - 0x48)
	class UFortMobileButtonBehaviorComponent_QuickhealPriorityExtension : public UFortMobileButtonBehaviorComponent	
	{
	public:
		TArray<FQuickHealPriorityExtension> QuickhealExtensions; // 0x48(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_QuickhealPriorityExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_RegistryFlagIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x40 (0x88 - 0x48)
	class UFortMobileButtonBehaviorComponent_RegistryFlagIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x48(0x8) UNKNOWN PROPERTY
		float LevelToTest; // 0x50(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x54(0x4) UNKNOWN PROPERTY
		FScalableFloat RegistryToTest; // 0x58(0x28)
		UPaperSprite* SpriteOverride; // 0x80(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_RegistryFlagIconPicker");
			return ret;
		}

		void HandleHUDElementVisibilityChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE5C638(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_RegistryFlagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x38 (0x80 - 0x48)
	class UFortMobileButtonBehaviorComponent_RegistryFlagVisibility : public UFortMobileButtonBehaviorComponent_Visibility	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x48(0x8) UNKNOWN PROPERTY
		float LevelToTest; // 0x50(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x54(0x4) UNKNOWN PROPERTY
		FScalableFloat RegistryToTest; // 0x58(0x28)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_RegistryFlagVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_WeaponIconPicker
	// Inherited from UFortMobileButtonBehaviorComponent_TagIconPicker -> UFortMobileButtonBehaviorComponent_IconPicker -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_WeaponIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_WeaponIconPicker");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE5CC54(relative to base address)
	};


	// Class FortniteUI.FortMobileButtonBehaviorComponent_WeaponTagVisibility
	// Inherited from UFortMobileButtonBehaviorComponent_TagVisibility -> UFortMobileButtonBehaviorComponent_Visibility -> UFortMobileButtonBehaviorComponent -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileButtonBehaviorComponent_WeaponTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileButtonBehaviorComponent_WeaponTagVisibility");
			return ret;
		}

		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE5CD18(relative to base address)
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_Active
	// Inherited from UFortMobileHudWidgetContentComponent -> UObject
	// Size: 0x38 (0x78 - 0x40)
	class UFortMobileHudWidgetContentComponent_Active : public UFortMobileHudWidgetContentComponent	
	{
	public:
		TWeakObjectPtr<UClass*> ToggleSoftClass; // 0x40(0x20)
		TArray<UFortMobileHudWidgetContentComponent_Active_Visibility*> VisibilityModifiers; // 0x60(0x10)
		UUserWidget* CurrentToggleWidget; // 0x70(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_Active");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_Highlight
	// Inherited from UFortMobileHudWidgetContentComponent -> UObject
	// Size: 0x30 (0x70 - 0x40)
	class UFortMobileHudWidgetContentComponent_Highlight : public UFortMobileHudWidgetContentComponent	
	{
	public:
		FGameplayTag HighlightTag; // 0x40(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x44(0x4) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> HighlightWidgetSoftClass; // 0x48(0x20)
		UUserWidget* CurrentHighlight; // 0x68(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_Highlight");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHudWidgetContentComponent_RadialCooldown
	// Inherited from UFortMobileHudWidgetContentComponent -> UObject
	// Size: 0x30 (0x70 - 0x40)
	class UFortMobileHudWidgetContentComponent_RadialCooldown : public UFortMobileHudWidgetContentComponent	
	{
	public:
		TWeakObjectPtr<UClass*> RadialCooldownSoftClass; // 0x40(0x20)
		FGameplayTag GameplayTagToListen; // 0x60(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x64(0x4) UNKNOWN PROPERTY
		URadialBacchusButtonBase* CurrentRadialCooldownWidget; // 0x68(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHudWidgetContentComponent_RadialCooldown");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetContentComponent_RadialIndicator
	// Inherited from UFortMobileHudWidgetContentComponent -> UObject
	// Size: 0x30 (0x70 - 0x40)
	class UFortMobileHUDWidgetContentComponent_RadialIndicator : public UFortMobileHudWidgetContentComponent	
	{
	public:
		TWeakObjectPtr<UClass*> RadialIndicatorSoftClass; // 0x40(0x20)
		FGameplayTag TrackedGameplayCueTag; // 0x60(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x64(0x4) UNKNOWN PROPERTY
		UBacchusRadialDisplayBase* CurrentRadialIndicatorWidget; // 0x68(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetContentComponent_RadialIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileKeyButtonBehavior
	// Inherited from UHUDWidgetBehavior -> UObject
	// Size: 0x20 (0xD8 - 0xB8)
	class UFortMobileKeyButtonBehavior : public UHUDWidgetBehavior	
	{
	public:
		FKey Key; // 0xB8(0x18)
		TWeakObjectPtr<UFortMobileKeyButton*> Button; // 0xD0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileKeyButtonBehavior");
			return ret;
		}
	};


	// Class FortniteUI.FortAutorunLockZone
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortAutorunLockZone : public UCommonUserWidget	
	{
	public:
		bool bIsMoveStickAutorun; // 0x2D8(0x1)
		bool bIsInZone; // 0x2D9(0x1)
		bool bIsAutorunLockEnabled; // 0x2DA(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x2DB(0x5) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_ImprovedAutorunLockZone; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x2E8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAutorunLockZone");
			return ret;
		}

		void OnReleasedInZone(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsInZoneChanged(bool bNewIsInZone); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayAutorunLockZone(bool bIsShown); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BroadcastReleaseAnimationFinished(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FD17924(relative to base address)
	};


	// Class FortniteUI.FortBacchusControlsDiagram
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class UFortBacchusControlsDiagram : public UUserWidget	
	{
	public:
		FGameplayTag NoBuildGameModeTag; // 0x2B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2B4(0x4) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_Modes; // 0x2B8(0x8)
		UWidget* ScaleBox_CombatMode; // 0x2C0(0x8)
		UWidget* ScaleBox_BuildingMode; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBacchusControlsDiagram");
			return ret;
		}

		void ToggleDisplayedControlMode(bool bShouldDisplayCombatControls); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE5CEE0(relative to base address)
		void HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE5C64C(relative to base address)
		bool GetIsNoBuildMode(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE5C44C(relative to base address)
		bool GetIsDisplayingCombatMode(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE5C404(relative to base address)
	};


	// Class FortniteUI.FortBacchusControlsHelp
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortBacchusControlsHelp : public UCommonActivatableWidget	
	{
	public:
		UFortBacchusControlsDiagram* ControlsDiagram; // 0x3F0(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x3F8(0x8)
		FDataTableRowHandle CloseAction; // 0x400(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x410(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBacchusControlsHelp");
			return ret;
		}

		void HandleCloseAction(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortInWorldTouchInteractionLayer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x340 - 0x2D8)
	class UFortInWorldTouchInteractionLayer : public UCommonUserWidget	
	{
	public:
		UWidgetInteractionComponent* WidgetInteractor; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x60]; // 0x2E0(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInWorldTouchInteractionLayer");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButton
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x110 (0x458 - 0x348)
	class UFortMobileActionButton : public UFortMobileHUDElement	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x348(0x18) UNKNOWN PROPERTY
		UFortMobileActionButtonBehavior* ButtonBehavior; // 0x360(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x368(0x28) UNKNOWN PROPERTY
		FGameplayTag IconSizePropertyTag; // 0x390(0x4)
		FGameplayTag ClickthroughPropertyTag; // 0x394(0x4)
		FGameplayTag BorderlessPropertyTag; // 0x398(0x4)
		FLinearColor PressedColor; // 0x39C(0x10)
		FLinearColor ReleasedColor; // 0x3AC(0x10)
		FLinearColor DisabledColor; // 0x3BC(0x10)
		FColor ToggledColor; // 0x3CC(0x4)
		TWeakObjectPtr<UMaterialInterface*> ToggledMaterial; // 0x3D0(0x20)
		TArray<FInputActionKeyMapping> InputActionKeyMappings; // 0x3F0(0x10)
		unsigned char UnknownData02_6[0x20]; // 0x400(0x20) UNKNOWN PROPERTY
		USizeBox* SizeBox_HitboxSize; // 0x420(0x8)
		USizeBox* SizeBox_VisualSize; // 0x428(0x8)
		UOverlay* Overlay_ButtonContents; // 0x430(0x8)
		UImage* Image_Icon; // 0x438(0x8)
		unsigned char UnknownData03_6[0x8]; // 0x440(0x8) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* DefaultMaterial; // 0x448(0x8)
		unsigned char UnknownData04_7[0x8]; // 0x450(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButton");
			return ret;
		}

		void BP_UpdateToggleStateVisuals(bool bIsActive); // Flags: BlueprintCosmetic|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLookStickV2
	// Inherited from UFortMobileActionButton -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x460 - 0x458)
	class UFortLookStickV2 : public UFortMobileActionButton	
	{
	public:
		UImage* Image_Thumbstick; // 0x458(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLookStickV2");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileActionButtonInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortMobileActionButtonInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileActionButtonInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileCustomizableHUD
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UFortMobileCustomizableHUD : public UCommonUserWidget	
	{
	public:
		UFortMobileHUDWidgetRegistry* BaseHUDWidgetRegistry; // 0x2D8(0x8)
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x2E0(0x8)
		FFortMobileHUDLayoutProfile LayoutProfile; // 0x2E8(0x38)
		UFortMobileHUDLayer* HUDLayer_HUDWidgets; // 0x320(0x8)
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistryUsedForPSOGeneration; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileCustomizableHUD");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDLayer
	// Inherited from UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x228 - 0x170)
	class UFortMobileHUDLayer : public UPanelWidget	
	{
	public:
		unsigned char UnknownData00_3[0x38]; // 0x170(0x38) UNKNOWN PROPERTY
		TArray<UFortMobileHUDElement*> ActiveHUDWidgets; // 0x1A8(0x10)
		TArray<UFortMobileHUDElement*> InactiveHUDWidgets; // 0x1B8(0x10)
		unsigned char UnknownData01_7[0x60]; // 0x1C8(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDLayer");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Anchors
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x0 (0x58 - 0x58)
	class UFortMobileHUDWidgetCustomPropertyModel_Anchors : public UFortMobileHUDWidgetCustomPropertyModel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Anchors");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Number
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x8 (0x60 - 0x58)
	class UFortMobileHUDWidgetCustomPropertyModel_Number : public UFortMobileHUDWidgetCustomPropertyModel	
	{
	public:
		int32_t DefaultValue; // 0x58(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x5C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Number");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingRegistry
	// Inherited from UObject
	// Size: 0xF0 (0x118 - 0x28)
	class UFortSettingRegistry : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x78]; // 0x28(0x78) UNKNOWN PROPERTY
		TArray<UFortSetting*> TopLevelSettings; // 0xA0(0x10)
		TArray<UFortSetting*> RegisteredSettings; // 0xB0(0x10)
		TWeakObjectPtr<UFortLocalPlayer*> OwningLocalPlayer; // 0xC0(0x8)
		unsigned char UnknownData01_7[0x50]; // 0xC8(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetCustomPropertySettingRegistry
	// Inherited from UFortSettingRegistry -> UObject
	// Size: 0x0 (0x118 - 0x118)
	class UFortMobileHUDWidgetCustomPropertySettingRegistry : public UFortSettingRegistry	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetCustomPropertySettingRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDWidgetRegistry
	// Inherited from UFortMobileHUDWidgetRegistryBase -> UDataAsset -> UObject
	// Size: 0x68 (0x98 - 0x30)
	class UFortMobileHUDWidgetRegistry : public UFortMobileHUDWidgetRegistryBase	
	{
	public:
		TArray<FHUDWidgetBehaviorRegistryEntry> HUDWidgetBehaviorRegistry; // 0x30(0x10)
		TArray<FHUDWidgetRegistryEntry> HUDWidgetRegistry; // 0x40(0x10)
		TArray<UFortMobileHUDContextModel*> ContextLayoutModels; // 0x50(0x10)
		TArray<FFortMobileHUDContextModelExtension> ContextLayoutModelExtensions; // 0x60(0x10)
		TArray<FHUDWidgetBehaviorExtensionsRegistryEntry> HUDWidgetBehaviorExtensions; // 0x70(0x10)
		TArray<FHUDWidgetException> HUDWidgetExceptions; // 0x80(0x10)
		bool bIsRegistryUsedInHUDLayoutTool; // 0x90(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x91(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDWidgetRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileKeyButton
	// Inherited from UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x388 - 0x348)
	class UFortMobileKeyButton : public UFortMobileHUDElement	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x348(0x8) UNKNOWN PROPERTY
		UFortKeybindWidget* KeybindWidget; // 0x350(0x8)
		UFortMobileKeyButtonBehavior* Behavior; // 0x358(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x360(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileKeyButton");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Number
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Number : public UFortSettingValueDiscreteDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Number");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_QuickbarLocks
	// Inherited from UFortSettingValueDiscreteDynamic_Number -> UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x8 (0x210 - 0x208)
	class UFortSettingValueDiscreteDynamic_QuickbarLocks : public UFortSettingValueDiscreteDynamic_Number	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x208(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_QuickbarLocks");
			return ret;
		}
	};


	// Class FortniteUI.FortTouchInteractionButton
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x120 (0x3F8 - 0x2D8)
	class UFortTouchInteractionButton : public UCommonUserWidget	
	{
	public:
		FName MIDParam_Icon; // 0x2D8(0x4)
		FName MIDParam_IconScale; // 0x2DC(0x4)
		FName MIDParam_Tint; // 0x2E0(0x4)
		FName MIDParam_CropIcon; // 0x2E4(0x4)
		FName MIDParam_Duration; // 0x2E8(0x4)
		FName MIDParam_StartTime; // 0x2EC(0x4)
		FName MIDParam_TimerOpacity; // 0x2F0(0x4)
		bool bInteractionFocused; // 0x2F4(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2F5(0x3) UNKNOWN PROPERTY
		UWidgetAnimation* Anim_RadialProgress; // 0x2F8(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x300(0x28) UNKNOWN PROPERTY
		TWeakObjectPtr<UTexture2D*> PendingIcon; // 0x328(0x20)
		TWeakObjectPtr<UTexture2D*> DefaultIcon; // 0x348(0x20)
		TMap<TWeakObjectPtr, FTouchInteractionIconOverride> IconOverrides; // 0x368(0x50)
		UFortMarkerDetailsTable* DetailsTable; // 0x3B8(0x8)
		float DefaultIconScale; // 0x3C0(0x4)
		float PickupIconScale; // 0x3C4(0x4)
		UImage* Image_Icon; // 0x3C8(0x8)
		AActor* TrackedActor; // 0x3D0(0x8)
		unsigned char UnknownData02_7[0x20]; // 0x3D8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchInteractionButton");
			return ret;
		}

		void UpdateTimerOnMultiInteractActorCountChanged(int32_t InteractingActorCount, float InteractingMultiplier, float InteractDuration); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE5D0D8(relative to base address)
		void OnInteractionFocusChanged(bool bNewFocused); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTouchInteractionLayer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC8 (0x3A0 - 0x2D8)
	class UFortTouchInteractionLayer : public UCommonUserWidget	
	{
	public:
		UClass* WidgetClass; // 0x2D8(0x8)
		FUserWidgetPool WidgetPool; // 0x2E0(0x88)
		UCanvasPanel* ContentPanel; // 0x368(0x8)
		TArray<FButtonInteractionPair> InteractableButtonMap; // 0x370(0x10)
		AActor* FocusedInteraction; // 0x380(0x8)
		AFortPlayerController* OwningPC; // 0x388(0x8)
		UFortControllerComponent_Interaction* InteractionComponent; // 0x390(0x8)
		UFortActorComponent_MultiInteract* MultiInteractComponent; // 0x398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchInteractionLayer");
			return ret;
		}

		void UpdateButtonTimer(AActor* In, float TotalDuration, float Remaining); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE5CFE0(relative to base address)
		void UpdateButtonFocusForInteraction(UFortInteractContextInfo* NewInteraction); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FE5CF60(relative to base address)
		void RemoveInteraction(AActor* In); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE5CE60(relative to base address)
		void AddInteraction(AActor* In); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE5C384(relative to base address)
	};


	// Class FortniteUI.FortTouchUserWidget
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x378 - 0x2C0)
	class UFortTouchUserWidget : public UFortUserWidget	
	{
	public:
		TArray<FName> ActionNames; // 0x2C0(0x10)
		bool bIsClickThrough; // 0x2D0(0x1)
		unsigned char UnknownData00_7[0xA7]; // 0x2D1(0xA7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchUserWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDLayoutToolV2
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x480 (0x9A8 - 0x528)
	class UFortMobileHUDLayoutToolV2 : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		float OverlapPercentageToColapsePanels; // 0x530(0x4)
		float NonEditableHUDWidgetOpacity; // 0x534(0x4)
		float PanelOpacityWhenDragedOver; // 0x538(0x4)
		float OnOpenSubPanelAnimPlaybackSpeed; // 0x53C(0x4)
		FPrimaryContentSetup PrimaryContentSetup; // 0x540(0x3)
		unsigned char UnknownData01_6[0x5]; // 0x543(0x5) UNKNOWN PROPERTY
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x548(0x8)
		UClass* HudLayoutToolPopupClass; // 0x550(0x8)
		UClass* HudLayoutToolTutorialPopupClass; // 0x558(0x8)
		FHUDLayoutToolV2_PopupContent ExitHudLayoutToolPopupContent; // 0x560(0x48)
		FHUDLayoutToolV2_PopupContent DeleteOutOfBoundsHUDProxiesPopupContent; // 0x5A8(0x48)
		FHUDLayoutToolV2_PopupContent RevertAllProxiesPopupContent; // 0x5F0(0x48)
		FHUDLayoutToolV2_PopupContent SwitchHUDProfileSavePopupContent; // 0x638(0x48)
		FHUDLayoutToolV2_PopupContent SwitchHUDProfileDeletePopupContent; // 0x680(0x48)
		FHUDLayoutToolV2_PopupContent CreateNewCustomLayoutPopupContent; // 0x6C8(0x48)
		FHUDLayoutToolV2_PopupContent CustomLayoutSlotsFullPopupContent; // 0x710(0x48)
		FHUDLayoutToolV2_ToastNotificationContent SuccessToasterContent; // 0x758(0x28)
		FHUDLayoutToolV2_ToastNotificationContent FailureToasterContent; // 0x780(0x28)
		FHUDLayoutToolV2_ToastNotificationContent LocalFailureToasterContent; // 0x7A8(0x28)
		FHUDLayoutToolV2_ToastNotificationContent CloudFailureToasterContent; // 0x7D0(0x28)
		FGameplayTag AnchorsCustomPropertyTag; // 0x7F8(0x4)
		float DoubleClickDelay; // 0x7FC(0x4)
		FFortMobileHUDLayoutProfile LayoutProfile; // 0x800(0x38)
		FFortMobileHUDLayoutProfile CachedSavedLayoutProfile; // 0x838(0x38)
		UFortMobileHUDElementProxy* SelectedWidgetProxy; // 0x870(0x8)
		TArray<UHUDLayoutToolV2_Popup*> QueuedPopups; // 0x878(0x10)
		unsigned char UnknownData02_6[0x78]; // 0x888(0x78) UNKNOWN PROPERTY
		UHUDLayoutToolV2_VirtualCanvas* VirtualCanvas_WidgetLayer; // 0x900(0x8)
		UFortMobileHUDLayer* HUDLayer_HUDWidgetProxies; // 0x908(0x8)
		UOverlay* Overlay_VirtualCanvasWorkspace; // 0x910(0x8)
		UHUDLayoutToolV2_Grid* Grid_Visual; // 0x918(0x8)
		UCommonTextBlock* Text_ProfileName; // 0x920(0x8)
		UCommonTextBlock* Text_WidgetName; // 0x928(0x8)
		UCommonTextBlock* Text_ContextName; // 0x930(0x8)
		UHUDLayoutToolV2_Button* Button_Exit; // 0x938(0x8)
		UHUDLayoutToolV2_Button* Button_ResetVirtualCanvas; // 0x940(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleControlPanel; // 0x948(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleWidgetCatalog; // 0x950(0x8)
		UCanvasPanel* CanvasPanel_ControlsContainer; // 0x958(0x8)
		UVerticalBox* VerticalBox_ControlPanelContainer; // 0x960(0x8)
		UFortMobileHUDLayoutToolV2_ControlPanel* ControlPanel_Controls; // 0x968(0x8)
		UHUDLayoutToolV2_ProfileSelectionPanel* ProfileSelectionPanel_Profiles; // 0x970(0x8)
		UFortMobileHUDLayoutToolV2_WidgetCatalog* WidgetCatalog_Catalog; // 0x978(0x8)
		UHUDLayoutToolV2_LinkAcrossPanel* LinkAcrossPanel_LinkManagementWindow; // 0x980(0x8)
		UWidgetAnimation* Anim_ControlPanelToggle; // 0x988(0x8)
		UWidgetAnimation* Anim_ToggleWidgetCatalog; // 0x990(0x8)
		UHUDLayoutToolV2_Toaster* Toaster_Notifications; // 0x998(0x8)
		UHUDLayoutToolV2_TooltipLayer* TooltipLayer_Messages; // 0x9A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDLayoutToolV2");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDLayoutToolV2_ControlPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x3B8 - 0x2D8)
	class UFortMobileHUDLayoutToolV2_ControlPanel : public UCommonUserWidget	
	{
	public:
		float PanelOpacityWhenDragedOver; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x8C]; // 0x2DC(0x8C) UNKNOWN PROPERTY
		UHUDLayoutToolV2_Button* Button_Save; // 0x368(0x8)
		UHUDLayoutToolV2_Button* Button_RevertAll; // 0x370(0x8)
		UHUDLayoutToolV2_Button* Button_Exit; // 0x378(0x8)
		UHUDLayoutToolV2_Button* Button_OpenProfileSelectionPanel; // 0x380(0x8)
		UHUDLayoutToolV2_Button* Button_SwitchContexts; // 0x388(0x8)
		UHUDLayoutToolV2_Button* Button_SwitchProperties; // 0x390(0x8)
		UHUDLayoutToolV2_GridSnap* GridSnapOption_Controls; // 0x398(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_Controls; // 0x3A0(0x8)
		UHUDLayoutToolV2_ContextSelector* ContextSelector_ContextLayouts; // 0x3A8(0x8)
		UHUDLayoutToolV2_PropertyPanel* PropertyPanel_WidgetProperties; // 0x3B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDLayoutToolV2_ControlPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDLayoutToolV2_WidgetCatalog
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x368 - 0x2D8)
	class UFortMobileHUDLayoutToolV2_WidgetCatalog : public UCommonUserWidget	
	{
	public:
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x2D8(0x8)
		float PanelOpacityWhenDragedOver; // 0x2E0(0x4)
		unsigned char UnknownData00_6[0x4C]; // 0x2E4(0x4C) UNKNOWN PROPERTY
		UImage* Image_LayoutIcon; // 0x330(0x8)
		UCommonTextBlock* Text_ContextName; // 0x338(0x8)
		UHUDLayoutToolV2_Button* Button_DisplayButtonPreviews; // 0x340(0x8)
		UHUDLayoutToolV2_Button* Button_DisplayWidgetPreviews; // 0x348(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_Previews; // 0x350(0x8)
		UFortDynamicEntryBox* EntryBox_ButtonPreviews; // 0x358(0x8)
		UFortDynamicEntryBox* EntryBox_WidgetPreviews; // 0x360(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDLayoutToolV2_WidgetCatalog");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsListEntryBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortSettingsListEntryBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0xC]; // 0x2D8(0xC) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortSetting*> EntrySetting; // 0x2E4(0x8)
		unsigned char UnknownData01_6[0x14]; // 0x2EC(0x14) UNKNOWN PROPERTY
		UUserWidget* Background; // 0x300(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntryBase");
			return ret;
		}

		void OnEditableStateChanged(bool bIsEditable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget GetPrimaryGamepadFocusWidget(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntry_Setting
	// Inherited from UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x310 - 0x308)
	class UFortSettingsListEntry_Setting : public UFortSettingsListEntryBase	
	{
	public:
		UCommonTextBlock* Text_SettingName; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntry_Setting");
			return ret;
		}

		void OnInputMethodChanged(ECommonInputType CurrentInput); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_UpdateTouchSelectionState(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.HUDLayoutToolV2SettingsListEntry_Anchors
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x360 - 0x310)
	class UHUDLayoutToolV2SettingsListEntry_Anchors : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingValueDiscreteDynamic_Anchors* AnchorSetting; // 0x310(0x8)
		UHUDLayoutToolV2_Button* Button_TopLeft; // 0x318(0x8)
		UHUDLayoutToolV2_Button* Button_TopMiddle; // 0x320(0x8)
		UHUDLayoutToolV2_Button* Button_TopRight; // 0x328(0x8)
		UHUDLayoutToolV2_Button* Button_MiddleLeft; // 0x330(0x8)
		UHUDLayoutToolV2_Button* Button_MiddleMiddle; // 0x338(0x8)
		UHUDLayoutToolV2_Button* Button_MiddleRight; // 0x340(0x8)
		UHUDLayoutToolV2_Button* Button_BottomLeft; // 0x348(0x8)
		UHUDLayoutToolV2_Button* Button_BottomMiddle; // 0x350(0x8)
		UHUDLayoutToolV2_Button* Button_BottomRight; // 0x358(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Anchors");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2SettingsListEntry_Bool
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x330 - 0x310)
	class UHUDLayoutToolV2SettingsListEntry_Bool : public UFortSettingsListEntry_Setting	
	{
	public:
		UPaperSprite* CheckMarkSprite; // 0x310(0x8)
		UFortSettingValueDiscrete* BoolSetting; // 0x318(0x8)
		UPanelWidget* Panel_Value; // 0x320(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleBool; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Bool");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2SettingsListEntry_Discrete
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x360 - 0x310)
	class UHUDLayoutToolV2SettingsListEntry_Discrete : public UFortSettingsListEntry_Setting	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x310(0x20) UNKNOWN PROPERTY
		UFortSettingValueDiscrete* DiscreteSetting; // 0x330(0x8)
		UPanelWidget* Panel_Value; // 0x338(0x8)
		UCommonTextBlock* Text_PropertyValue; // 0x340(0x8)
		UHUDLayoutToolV2_Button* Button_DecreaseValue; // 0x348(0x8)
		UHUDLayoutToolV2_Button* Button_IncreaseValue; // 0x350(0x8)
		UFortSettingsRotator* Rotator_SettingValue; // 0x358(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Discrete");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2SettingsListEntry_QuickbarLocks
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x340 - 0x310)
	class UHUDLayoutToolV2SettingsListEntry_QuickbarLocks : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingValueDiscreteDynamic_QuickbarLocks* QuickbarLocksSetting; // 0x310(0x8)
		FLinearColor LockEnabledColor; // 0x318(0x10)
		FLinearColor LockDisabledColor; // 0x328(0x10)
		UFortDynamicEntryBox* EntryBox_SlotLocks; // 0x338(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_QuickbarLocks");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsListEntrySetting_Scalar
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x330 - 0x310)
	class UFortSettingsListEntrySetting_Scalar : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingValueScalar* ScalarSetting; // 0x310(0x8)
		UPanelWidget* Panel_Value; // 0x318(0x8)
		UAnalogSlider* Slider_SettingValue; // 0x320(0x8)
		UCommonTextBlock* Text_SettingValue; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_Scalar");
			return ret;
		}

		void OnValueChanged(float Value); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDefaultValueChanged(float DefaultValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSliderValueChanged(float Value); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7502D3444(relative to base address)
		void HandleSliderCaptureEnded(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74921B8F8(relative to base address)
	};


	// Class FortniteUI.HUDLayoutToolV2SettingsListEntry_Scalar
	// Inherited from UFortSettingsListEntrySetting_Scalar -> UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x340 - 0x330)
	class UHUDLayoutToolV2SettingsListEntry_Scalar : public UFortSettingsListEntrySetting_Scalar	
	{
	public:
		UHUDLayoutToolV2_Button* Button_DecreaseValue; // 0x330(0x8)
		UHUDLayoutToolV2_Button* Button_IncreaseValue; // 0x338(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Scalar");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_ActionButtonProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3F0 - 0x3C0)
	class UHUDLayoutToolV2_ActionButtonProxy : public UFortMobileHUDElementProxy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3C0(0x8) UNKNOWN PROPERTY
		FGameplayTag IconSizePropertyTag; // 0x3C8(0x4)
		FGameplayTag BorderlessPropertyTag; // 0x3CC(0x4)
		unsigned char UnknownData01_6[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY
		USizeBox* SizeBox_HitboxSize; // 0x3D8(0x8)
		USizeBox* SizeBox_VisualSize; // 0x3E0(0x8)
		UImage* Image_Icon; // 0x3E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_ActionButtonProxy");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_Button
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x2C8 (0x5A0 - 0x2D8)
	class UHUDLayoutToolV2_Button : public UCommonUserWidget	
	{
	public:
		bool bIsToggleable; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2D9(0x3) UNKNOWN PROPERTY
		float ButtonWidthOverride; // 0x2DC(0x4)
		float ButtonHeightOverride; // 0x2E0(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x2E4(0x4) UNKNOWN PROPERTY
		FText Text; // 0x2E8(0x10)
		FMargin TextPadding; // 0x2F8(0x10)
		int32_t TextFontSize; // 0x308(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x30C(0x4) UNKNOWN PROPERTY
		FSlateBrush IconBrush; // 0x310(0xB0)
		FMargin IconPadding; // 0x3C0(0x10)
		bool bMatchIconSize; // 0x3D0(0x1)
		unsigned char UnknownData03_6[0xF]; // 0x3D1(0xF) UNKNOWN PROPERTY
		FSlateBrush BackgroundBrush; // 0x3E0(0xB0)
		FMargin InternalPadding; // 0x490(0x10)
		bool bOverride_WidthOverride : 1; // 0x4A0:0(0x1)
		bool bOverride_HeightOverride : 1; // 0x4A0:1(0x1)
		bool bExternallyControlledStates; // 0x4A1(0x1)
		unsigned char UnknownData04_6[0x2]; // 0x4A2(0x2) UNKNOWN PROPERTY
		FHUDLayoutToolV2_ButtonStateColor NormalButtonStyle; // 0x4A4(0x38)
		FHUDLayoutToolV2_ButtonStateColor PressedButtonStyle; // 0x4DC(0x38)
		FHUDLayoutToolV2_ButtonStateColor SelectedButtonStyle; // 0x514(0x38)
		unsigned char UnknownData05_6[0x2C]; // 0x54C(0x2C) UNKNOWN PROPERTY
		USizeBox* SizeBox_Control; // 0x578(0x8)
		UBorder* Border_Container; // 0x580(0x8)
		UCommonTextBlock* Text_ButtonAction; // 0x588(0x8)
		UImage* Image_Icon; // 0x590(0x8)
		UImage* Image_Background; // 0x598(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_Button");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_ButtonPreview
	// Inherited from UHUDLayoutToolV2_WidgetPreview -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x328 - 0x320)
	class UHUDLayoutToolV2_ButtonPreview : public UHUDLayoutToolV2_WidgetPreview	
	{
	public:
		UImage* Image_Icon; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_ButtonPreview");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_ContextButton
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x3A8 - 0x2D8)
	class UHUDLayoutToolV2_ContextButton : public UCommonUserWidget	
	{
	public:
		UPaperSprite* InEditIcon; // 0x2D8(0x8)
		FLinearColor InEditIconColorAndOpacity; // 0x2E0(0x10)
		FLinearColor InEditBackgroundColorAndOpacity; // 0x2F0(0x10)
		UPaperSprite* VisibleIcon; // 0x300(0x8)
		FLinearColor VisibleIconColorAndOpacity; // 0x308(0x10)
		FLinearColor VisibleBackgroundColorAndOpacity; // 0x318(0x10)
		UPaperSprite* HiddenIcon; // 0x328(0x8)
		FLinearColor HiddenIconColorAndOpacity; // 0x330(0x10)
		FLinearColor HiddenBackgroundColorAndOpacity; // 0x340(0x10)
		unsigned char UnknownData00_6[0x38]; // 0x350(0x38) UNKNOWN PROPERTY
		UCommonTextBlock* Text_LayoutName; // 0x388(0x8)
		UHUDLayoutToolV2_Button* Button_ContextVisibility; // 0x390(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleContextEditing; // 0x398(0x8)
		UImage* Image_SelectionHighlight; // 0x3A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_ContextButton");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_ContextSelector
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UHUDLayoutToolV2_ContextSelector : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x2D8(0x40) UNKNOWN PROPERTY
		UHUDLayoutToolV2_ContextButton* EditContextButton; // 0x318(0x8)
		UHUDLayoutToolV2_ContextButton* VisibleContextButton; // 0x320(0x8)
		UFortDynamicEntryBox* EntryBox_MainLayoutButtons; // 0x328(0x8)
		UFortDynamicEntryBox* EntryBox_VehicleLayoutButtons; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_ContextSelector");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_Grid
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x40 (0x198 - 0x158)
	class UHUDLayoutToolV2_Grid : public UWidget	
	{
	public:
		int32_t RuleLinePeriod; // 0x158(0x4)
		FLinearColor RegularLineColor; // 0x15C(0x10)
		FLinearColor RuleLineColor; // 0x16C(0x10)
		float GridSize; // 0x17C(0x4)
		float SmallestGridSize; // 0x180(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x184(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_Grid");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_GridSnap
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UHUDLayoutToolV2_GridSnap : public UCommonUserWidget	
	{
	public:
		bool bGridSnapEnabled; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY
		UPaperSprite* CheckMarkSprite; // 0x2E0(0x8)
		unsigned char UnknownData01_6[0x30]; // 0x2E8(0x30) UNKNOWN PROPERTY
		UCommonTextBlock* Text_SettingValue; // 0x318(0x8)
		UAnalogSlider* Slider_SettingValue; // 0x320(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleEnabled; // 0x328(0x8)
		UFortSimpleMaterialProgressBar* ProgressBar_ColoredBackground; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_GridSnap");
			return ret;
		}

		void HandleSliderValueChanged(float InValue); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE87298(relative to base address)
	};


	// Class FortniteUI.HUDLayoutToolV2_KeyButtonPreview
	// Inherited from UHUDLayoutToolV2_WidgetPreview -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x328 - 0x320)
	class UHUDLayoutToolV2_KeyButtonPreview : public UHUDLayoutToolV2_WidgetPreview	
	{
	public:
		UFortKeybindWidget* KeybindWidget; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_KeyButtonPreview");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_KeyButtonProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3C8 - 0x3C0)
	class UHUDLayoutToolV2_KeyButtonProxy : public UFortMobileHUDElementProxy	
	{
	public:
		UFortKeybindWidget* KeybindWidget; // 0x3C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_KeyButtonProxy");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_KillfeedProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x3D0 - 0x3C0)
	class UHUDLayoutToolV2_KillfeedProxy : public UFortMobileHUDElementProxy	
	{
	public:
		FGameplayTag NumberOfKillfeedLinesTag; // 0x3C0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3C4(0x4) UNKNOWN PROPERTY
		UFortDynamicEntryBox* EntryBox_KillFeedText; // 0x3C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_KillfeedProxy");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LayoutButton
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UHUDLayoutToolV2_LayoutButton : public UCommonUserWidget	
	{
	public:
		FLinearColor InEditColor; // 0x2D8(0x10)
		FLinearColor SelectedColor; // 0x2E8(0x10)
		unsigned char UnknownData00_6[0x30]; // 0x2F8(0x30) UNKNOWN PROPERTY
		UHUDLayoutToolV2_Button* Button_Internal; // 0x328(0x8)
		UBorder* Border_ActiveIndicator; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LayoutButton");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossActionPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossActionPanel : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_MainContextTitle; // 0x2D8(0x8)
		UCommonTextBlock* Text_VehicleContextTitle; // 0x2E0(0x8)
		UHUDLayoutToolV2_Button* Button_SelectAll; // 0x2E8(0x8)
		UHUDLayoutToolV2_Button* Button_DeselectAll; // 0x2F0(0x8)
		UCommonHierarchicalScrollBox* ScrollBox_Actions; // 0x2F8(0x8)
		UFortDynamicEntryBox* EntryBox_MainContextActions; // 0x300(0x8)
		UFortDynamicEntryBox* EntryBox_VehicleContextActions; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossActionPanel");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossActionSetting
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x348 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossActionSetting : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FLinearColor EnabledCheckBoxBorderColor; // 0x2E0(0x10)
		FLinearColor DisabledCheckBoxBorderColor; // 0x2F0(0x10)
		UPaperSprite* CheckMarkSprite; // 0x300(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x308(0x10) UNKNOWN PROPERTY
		UImage* Image_ActionIcon; // 0x318(0x8)
		UCommonTextBlock* Text_ActionName; // 0x320(0x8)
		UHUDLayoutToolV2_LinkAcrossWarningIndicator* LinkAcrossWarningIndicator_Warning; // 0x328(0x8)
		UHUDLayoutToolV2_LinkAcrossNumericalIndicator* NumericalIndicator_ActionImpact; // 0x330(0x8)
		UImage* Image_CheckboxBorder; // 0x338(0x8)
		UHUDLayoutToolV2_Button* Button_SelectAction; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossActionSetting");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossNumericalIndicator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossNumericalIndicator : public UCommonUserWidget	
	{
	public:
		FLinearColor MaximumInstancesColor; // 0x2D8(0x10)
		TArray<FLinkAcrossNumericalIndicatorActionSymbol> ActionSymbols; // 0x2E8(0x10)
		UCommonTextBlock* Text_ActionSymbol; // 0x2F8(0x8)
		UCommonTextBlock* Text_InstanceCounter; // 0x300(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossNumericalIndicator");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0x458 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossPanel : public UCommonUserWidget	
	{
	public:
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x2D8(0x8)
		UHUDLayoutToolV2_TooltipLayer* TooltipLayer; // 0x2E0(0x8)
		unsigned char UnknownData00_6[0x100]; // 0x2E8(0x100) UNKNOWN PROPERTY
		TArray<FSimpleActionMessages> SimpleActionMessages; // 0x3E8(0x10)
		UHUDLayoutToolV2_LinkAcrossPanelTitle* LinkAcrossPanelTitle_Header; // 0x3F8(0x8)
		UBacchusCloseButton* Button_Close; // 0x400(0x8)
		UCommonVisibilitySwitcher* Switcher_Actions; // 0x408(0x8)
		USizeBox* SizeBox_ActionPanelContainer; // 0x410(0x8)
		UHUDLayoutToolV2_LinkAcrossActionPanel* LinkAcrossActionPanel_Actions; // 0x418(0x8)
		UVerticalBox* VerticalBox_SimpleAction; // 0x420(0x8)
		UCommonTextBlock* Text_SimpleAction; // 0x428(0x8)
		UCommonTextBlock* Text_SimpleActionWarning; // 0x430(0x8)
		UHUDLayoutToolV2_Button* Button_ToggleAdvanced; // 0x438(0x8)
		UHUDLayoutToolV2_Button* Button_Cancel; // 0x440(0x8)
		UHUDLayoutToolV2_Button* Button_Confirm; // 0x448(0x8)
		UHUDLayoutToolV2_LinkAcrossWarningIndicator* WarningIndicator_MainWarning; // 0x450(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossPanel");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossPanelTitle
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossPanelTitle : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		FText AdvancedActionTitle; // 0x2E8(0x10)
		USizeBox* SizeBox_Preview; // 0x2F8(0x8)
		UCommonTextBlock* Text_WidgetName; // 0x300(0x8)
		UCommonTextBlock* Text_Action; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossPanelTitle");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_LinkAcrossWarningIndicator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UHUDLayoutToolV2_LinkAcrossWarningIndicator : public UCommonUserWidget	
	{
	public:
		FVector2D TooltipOffset; // 0x2D8(0x10)
		FVector2D TooltipAllignment; // 0x2E8(0x10)
		FText WarningMessage; // 0x2F8(0x10)
		UHUDLayoutToolV2_TooltipLayer* TooltipLayer; // 0x308(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_LinkAcrossWarningIndicator");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_Popup
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x460 - 0x3F0)
	class UHUDLayoutToolV2_Popup : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY
		UCommonTextBlock* CommonText_Title; // 0x420(0x8)
		URichTextBlock* RichText_Description; // 0x428(0x8)
		UHUDLayoutToolV2_Button* Button_Confirm; // 0x430(0x8)
		UHUDLayoutToolV2_Button* Button_Cancel; // 0x438(0x8)
		UBacchusCloseButton* Button_Close; // 0x440(0x8)
		UWidgetAnimation* Anim_In; // 0x448(0x8)
		UWidgetAnimation* Anim_Out; // 0x450(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_CornerIcon; // 0x458(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_Popup");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_ProfileSelectionPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1D8 (0x4B0 - 0x2D8)
	class UHUDLayoutToolV2_ProfileSelectionPanel : public UCommonUserWidget	
	{
	public:
		UClass* HudLayoutToolPopupClass; // 0x2D8(0x8)
		UClass* HUDLayoutToolTextInputPopupClass; // 0x2E0(0x8)
		FHUDLayoutToolV2_PopupContent NoCustomLayoutSlotsLeftPopupContent; // 0x2E8(0x48)
		FHUDLayoutToolV2_PopupContent DeleteCustomLayoutPopupContent; // 0x330(0x48)
		FHUDLayoutToolV2_TextInputPopupContent RenamePopupContent; // 0x378(0x48)
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x3C0(0x8)
		UHUDLayoutToolV2_LayoutButton* InEditLayoutButton; // 0x3C8(0x8)
		UHUDLayoutToolV2_LayoutButton* SelectedLayoutButton; // 0x3D0(0x8)
		unsigned char UnknownData00_6[0x90]; // 0x3D8(0x90) UNKNOWN PROPERTY
		UFortDynamicEntryBox* EntryBox_Presets; // 0x468(0x8)
		UFortDynamicEntryBox* EntryBox_CustomLayouts; // 0x470(0x8)
		UFortDynamicEntryBox* EntryBox_EmptyCustomLayoutSlots; // 0x478(0x8)
		UBacchusCloseButton* Button_Exit; // 0x480(0x8)
		UHUDLayoutToolV2_Button* Button_EditLayout; // 0x488(0x8)
		UHUDLayoutToolV2_Button* Button_Convert; // 0x490(0x8)
		UHUDLayoutToolV2_Button* Button_Copy; // 0x498(0x8)
		UHUDLayoutToolV2_Button* Button_Delete; // 0x4A0(0x8)
		UHUDLayoutToolV2_Button* Button_Rename; // 0x4A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_ProfileSelectionPanel");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_PropertyPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x358 - 0x2D8)
	class UHUDLayoutToolV2_PropertyPanel : public UCommonUserWidget	
	{
	public:
		UFortMobileHUDElementProxy* WidgetProxyToEdit; // 0x2D8(0x8)
		TArray<UFortSetting*> VisibleSettings; // 0x2E0(0x10)
		UFortMobileHUDWidgetCustomPropertySettingRegistry* HUDWidgetCustomPropertySettingRegistry; // 0x2F0(0x8)
		UFortMobileHUDWidgetRegistry* HUDWidgetRegistry; // 0x2F8(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x300(0x18) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* Switcher_PropertiesAndMessage; // 0x318(0x8)
		UCommonTextBlock* Text_SelectWidgetMessage; // 0x320(0x8)
		UVerticalBox* VerticalBox_PropertiesContainer; // 0x328(0x8)
		UCommonTextBlock* Text_WidgetName; // 0x330(0x8)
		UHUDLayoutToolV2_Button* Button_EditLinks; // 0x338(0x8)
		UHUDLayoutToolV2_Button* Button_RevertHUDWidget; // 0x340(0x8)
		UHUDLayoutToolV2_Button* Button_DeleteHUDWidget; // 0x348(0x8)
		UFortSettingsListView* ListView_Settings; // 0x350(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_PropertyPanel");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_QuickbarComboSlotProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x430 - 0x3C0)
	class UHUDLayoutToolV2_QuickbarComboSlotProxy : public UFortMobileHUDElementProxy	
	{
	public:
		TArray<UPaperSprite*> CombatIcons; // 0x3C0(0x10)
		TArray<UPaperSprite*> BuildingIcons; // 0x3D0(0x10)
		TArray<UPaperSprite*> ComboIcons; // 0x3E0(0x10)
		FGameplayTag SlotTypePropertyTag; // 0x3F0(0x4)
		FGameplayTag SlotLockPropertyTag; // 0x3F4(0x4)
		FGameplayTag SlotNumberPropertyTag; // 0x3F8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3FC(0x4) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_SlotType; // 0x400(0x8)
		UImage* Image_CombatIcon; // 0x408(0x8)
		UImage* Image_BuildingIcon; // 0x410(0x8)
		UImage* Image_ComboIcon; // 0x418(0x8)
		UImage* Image_LockIcon; // 0x420(0x8)
		UCommonTextBlock* Text_SlotNumber; // 0x428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_QuickbarComboSlotProxy");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_QuickbarProxy
	// Inherited from UFortMobileHUDElementProxy -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x478 - 0x3C0)
	class UHUDLayoutToolV2_QuickbarProxy : public UFortMobileHUDElementProxy	
	{
	public:
		TMap<EComboSlotType, FQuickbarProxySlotIconContainer> QuickbarProxySlotIcons; // 0x3C0(0x50)
		TMap<FGameplayTag, int32_t> SlotAmountOverridePerContext; // 0x410(0x50)
		int32_t DefaultSlotAmount; // 0x460(0x4)
		FGameplayTag SlotLocksPropertyTag; // 0x464(0x4)
		FGameplayTag ReversePropertyTag; // 0x468(0x4)
		FGameplayTag SlotTypePropertyTag; // 0x46C(0x4)
		UFortDynamicEntryBox* EntryBox_QuickbarProxySlots; // 0x470(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_QuickbarProxy");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_QuickbarProxySlot
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UHUDLayoutToolV2_QuickbarProxySlot : public UUserWidget	
	{
	public:
		UImage* Image_SlotIcon; // 0x2B0(0x8)
		UCommonTextBlock* Text_SlotNumber; // 0x2B8(0x8)
		UImage* Image_LockIcon; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_QuickbarProxySlot");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_TextInputPopup
	// Inherited from UHUDLayoutToolV2_Popup -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x490 - 0x460)
	class UHUDLayoutToolV2_TextInputPopup : public UHUDLayoutToolV2_Popup	
	{
	public:
		FText InvalidCharacterText; // 0x460(0x10)
		unsigned char UnknownData00_6[0x10]; // 0x470(0x10) UNKNOWN PROPERTY
		UFortEditableFilteredCountedTextBox* EditableFilteredTextBox_UserInput; // 0x480(0x8)
		UHUDLayoutToolV2_Button* Button_Paste; // 0x488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_TextInputPopup");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_Toaster
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UHUDLayoutToolV2_Toaster : public UCommonActivatableWidget	
	{
	public:
		UWidgetAnimation* Anim_Success; // 0x3F0(0x8)
		UWidgetAnimation* Anim_Failure; // 0x3F8(0x8)
		UWidgetAnimation* Anim_LocalFailure; // 0x400(0x8)
		UWidgetAnimation* Anim_CloudFailure; // 0x408(0x8)
		UCommonTextBlock* CommonText_Title; // 0x410(0x8)
		UCommonTextBlock* CommonText_Description; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_Toaster");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_Tooltip
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UHUDLayoutToolV2_Tooltip : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* TextBlock_Description; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_Tooltip");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_TooltipLayer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UHUDLayoutToolV2_TooltipLayer : public UCommonUserWidget	
	{
	public:
		UHUDLayoutToolV2_Tooltip* Tooltip_Message; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_TooltipLayer");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_TutorialPopup
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UHUDLayoutToolV2_TutorialPopup : public UCommonActivatableWidget	
	{
	public:
		int32_t NumberOfTutorials; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x14]; // 0x3F4(0x14) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_TutorialOverlays; // 0x408(0x8)
		UHUDLayoutToolV2_Button* Button_NextTutorial; // 0x410(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_TutorialPopup");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_TutorialTextPrompt
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UHUDLayoutToolV2_TutorialTextPrompt : public UCommonActivatableWidget	
	{
	public:
		FText TitleText; // 0x3F0(0x10)
		FText DescriptionText; // 0x400(0x10)
		UCommonTextBlock* TextBlock_Title; // 0x410(0x8)
		UCommonTextBlock* TextBlock_Description; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_TutorialTextPrompt");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_VirtualCanvas
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x1D8 - 0x170)
	class UHUDLayoutToolV2_VirtualCanvas : public UContentWidget	
	{
	public:
		unsigned char UnknownData00_1[0x68]; // 0x170(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_VirtualCanvas");
			return ret;
		}
	};


	// Class FortniteUI.HUDLayoutToolV2_VirtualCanvasSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x10 (0x48 - 0x38)
	class UHUDLayoutToolV2_VirtualCanvasSlot : public UPanelSlot	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x38(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HUDLayoutToolV2_VirtualCanvasSlot");
			return ret;
		}
	};


	// Class FortniteUI.CreateHUDWidgetDragDropOperation
	// Inherited from UDragDropOperation -> UObject
	// Size: 0x10 (0xA0 - 0x90)
	class UCreateHUDWidgetDragDropOperation : public UDragDropOperation	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x90(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreateHUDWidgetDragDropOperation");
			return ret;
		}
	};


	// Class FortniteUI.FortMobileHUDContextModel
	// Inherited from UDataAsset -> UObject
	// Size: 0xA0 (0xD0 - 0x30)
	class UFortMobileHUDContextModel : public UDataAsset	
	{
	public:
		FText ContextLayoutName; // 0x30(0x10)
		int32_t DisplayOrderPriority; // 0x40(0x4)
		bool bIsEditingContextByDefault; // 0x44(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x45(0x3) UNKNOWN PROPERTY
		UPaperSprite* ContextIcon; // 0x48(0x8)
		FGameplayTag ContextLayoutSaveTag; // 0x50(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x54(0x4) UNKNOWN PROPERTY
		FFortMobileContextFilter ContextFilter; // 0x58(0x40)
		FGameplayTagContainer UseableHUDWidgetTags; // 0x98(0x20)
		TArray<FFortMobileHUDContextModelExtension> Extensions; // 0xB8(0x10)
		EContextLayoutAccessLevel ContextLayoutAccessLevel; // 0xC8(0x1)
		unsigned char UnknownData02_7[0x7]; // 0xC9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileHUDContextModel");
			return ret;
		}
	};


	// Class FortniteUI.MyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel_Number -> UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x50 (0xB0 - 0x60)
	class UMyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete : public UFortMobileHUDWidgetCustomPropertyModel_Number	
	{
	public:
		TMap<int32_t, FText> PropertyOptions; // 0x60(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete");
			return ret;
		}
	};


	// Class FortniteUI.UFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks
	// Inherited from UFortMobileHUDWidgetCustomPropertyModel_Number -> UFortMobileHUDWidgetCustomPropertyModel -> UObject
	// Size: 0x8 (0x68 - 0x60)
	class UUFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks : public UFortMobileHUDWidgetCustomPropertyModel_Number	
	{
	public:
		int32_t MaximumDisplayedOptions; // 0x60(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x64(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks");
			return ret;
		}
	};


	// Class FortniteUI.CollectionNPCServiceContainer
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x308 - 0x2B0)
	class UCollectionNPCServiceContainer : public UUserWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_ServiceGroups; // 0x2B0(0x8)
		int32_t MaxGroupSize; // 0x2B8(0x4)
		bool bExcludeAlwaysAvailableServices; // 0x2BC(0x1)
		bool bShowLinesBetweenServices; // 0x2BD(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x2BE(0x2) UNKNOWN PROPERTY
		UCollectionScreenServiceVisualData* SharedServiceVisualData; // 0x2C0(0x8)
		TArray<UDataTable*> GameFeatureLootTierData; // 0x2C8(0x10)
		TArray<UDataTable*> GameFeatureLootPackageData; // 0x2D8(0x10)
		unsigned char UnknownData01_7[0x20]; // 0x2E8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CollectionNPCServiceContainer");
			return ret;
		}

		void BP_PopulateServiceData(bool bShowProgress, int32_t CurrentBenefitsLvl, int32_t TotalBenefitsLvl); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CollectionNPCServiceGroup
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UCollectionNPCServiceGroup : public UUserWidget	
	{
	public:
		UDynamicEntryBox* EntryBox_Services; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CollectionNPCServiceGroup");
			return ret;
		}
	};


	// Class FortniteUI.CollectionNPCServiceWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UCollectionNPCServiceWidget : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CollectionNPCServiceWidget");
			return ret;
		}

		void PopulateEmpty(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateData(FNPCServiceWidgetData& WidgetData, bool bShowLine); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CollectionScreenServiceVisualData
	// Inherited from UDataAsset -> UObject
	// Size: 0x78 (0xA8 - 0x30)
	class UCollectionScreenServiceVisualData : public UDataAsset	
	{
	public:
		UDataTable* ServiceDataTable; // 0x30(0x8)
		UDataTable* SpecializationDataTable; // 0x38(0x8)
		FGameplayTag SeasonDataTableServicesTag; // 0x40(0x4)
		FGameplayTag SeasonDataTableSalesTag; // 0x44(0x4)
		FGameplayTag NpcPricingKeyRemapsTag; // 0x48(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x4C(0x4) UNKNOWN PROPERTY
		UCurveTable* ItemCostTable; // 0x50(0x8)
		UCurveTable* ServiceCostTable; // 0x58(0x8)
		FGameplayTagContainer AllowedServiceTagsForIcon; // 0x60(0x20)
		FGameplayTag SpecializationTagRoot; // 0x80(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x84(0x4) UNKNOWN PROPERTY
		FText ItemNameAndCountFmt; // 0x88(0x10)
		TArray<FGameplayTag> SellServiceTagOrdered; // 0x98(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CollectionScreenServiceVisualData");
			return ret;
		}
	};


	// Class FortniteUI.CommonTagVisibilityWidget
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x1B8 - 0x170)
	class UCommonTagVisibilityWidget : public UContentWidget	
	{
	public:
		FGameplayTagContainer HUDElementTag; // 0x170(0x20)
		unsigned char UnknownData00_7[0x28]; // 0x190(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CommonTagVisibilityWidget");
			return ret;
		}

		void OnVisibilitySetEvent(ESlateVisibility InVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Initialize(ULocalPlayer* OwningLocalPlayer, APlayerController* OwningPlayerController); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87508(relative to base address)
		void HandleOnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FE86AF8(relative to base address)
	};


	// Class FortniteUI.BacchusBoundActionButton
	// Inherited from UCommonBoundActionButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x13F0 - 0x13A8)
	class UBacchusBoundActionButton : public UCommonBoundActionButton	
	{
	public:
		UClass* KeyboardStyle; // 0x13A8(0x8)
		UClass* LargeKeyboardStyle; // 0x13B0(0x8)
		UClass* GamepadStyle; // 0x13B8(0x8)
		UClass* LargeGamepadStyle; // 0x13C0(0x8)
		bool bUseAdditionalStyle; // 0x13C8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x13C9(0x7) UNKNOWN PROPERTY
		UClass* KeyboardAdditionalStyle; // 0x13D0(0x8)
		UClass* LargeKeyboardAdditionalStyle; // 0x13D8(0x8)
		UClass* GamepadAdditionalStyle; // 0x13E0(0x8)
		UClass* LargeGamepadAdditionalStyle; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BacchusBoundActionButton");
			return ret;
		}
	};


	// Class FortniteUI.CMSBackgroundWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UCMSBackgroundWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		float OlderBackgroundStreamoutSeconds; // 0x408(0x4)
		bool bDeactivateOnClose; // 0x40C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x40D(0x3) UNKNOWN PROPERTY
		UImage* Image_Background; // 0x410(0x8)
		UCommonButtonBase* Button_Close; // 0x418(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x420(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CMSBackgroundWidget");
			return ret;
		}

		void SetBackgroundImage(FString URL); // Flags: Final|RequiredAPI|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE88118(relative to base address)
		void OnStartingDownloadBackground(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDownloadBackgroundComplete(UTexture2D* NewBackground); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBoundActionButton
	// Inherited from UCommonBoundActionButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x13E0 - 0x13A8)
	class UFortBoundActionButton : public UCommonBoundActionButton	
	{
	public:
		UClass* KeyboardStyle; // 0x13A8(0x8)
		UClass* LargeKeyboardStyle; // 0x13B0(0x8)
		UClass* GamepadStyle; // 0x13B8(0x8)
		UClass* LargeGamepadStyle; // 0x13C0(0x8)
		UClass* MobileStyle; // 0x13C8(0x8)
		UClass* LargeMobileStyle; // 0x13D0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBoundActionButton");
			return ret;
		}
	};


	// Class FortniteUI.FortClickThroughButton
	// Inherited from UButton -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x580 - 0x568)
	class UFortClickThroughButton : public UButton	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x568(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortClickThroughButton");
			return ret;
		}
	};


	// Class FortniteUI.FortCommittableButtonGroup
	// Inherited from UCommonButtonGroupLegacy -> UCommonButtonGroupBase -> UCommonWidgetGroupBase -> UObject
	// Size: 0x10 (0x210 - 0x200)
	class UFortCommittableButtonGroup : public UCommonButtonGroupLegacy	
	{
	public:
		FMulticastInlineDelegate OnButtonCommitted; // 0x200(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommittableButtonGroup");
			return ret;
		}
	};


	// Class FortniteUI.FortPageDotItem
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPageDotItem : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPageDotItem");
			return ret;
		}
	};


	// Class FortniteUI.FortDottedPagination
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UFortDottedPagination : public UUserWidget	
	{
	public:
		bool bUseWrapping; // 0x2B0(0x1)
		unsigned char UnknownData00_6[0xF]; // 0x2B1(0xF) UNKNOWN PROPERTY
		UListView* ListView_Dots; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDottedPagination");
			return ret;
		}
	};


	// Class FortniteUI.FortLazyImage
	// Inherited from UCommonLazyImage -> UImage -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3A0 - 0x370)
	class UFortLazyImage : public UCommonLazyImage	
	{
	public:
		bool bApplyDropShadow; // 0x370(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x371(0x3) UNKNOWN PROPERTY
		FLinearColor ShadowColorAndOpacity; // 0x374(0x10)
		unsigned char UnknownData01_7[0x14]; // 0x384(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLazyImage");
			return ret;
		}

		void SetShadowColorAndOpacity(FLinearColor InColorAndOpacity); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE892D4(relative to base address)
		void SetFromLazyMaterialAndTexture(TWeakObjectPtr<UMaterialInterface*>& LazyMaterial, TWeakObjectPtr<UTexture2D*>& LazyTexture, FName& ParameterName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE886E0(relative to base address)
		void SetFortBrushSize(TEnumAsByte<EFortBrushSize> FortBrushSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88660(relative to base address)
		void SetBrushFromURL(FString CMSImageURL, bool bMatchSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88304(relative to base address)
		void SetBrushFromLazyTexture_DontMatchSize(TWeakObjectPtr<UTexture2D*>& LazyTexture); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE88258(relative to base address)
		void SetBrushFromItemInstance(UFortItem* ItemInstance); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE881D8(relative to base address)
		void SetBrushFromItemDefinition(UItemDefinitionBase* ItemDefinition); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C3C4A18(relative to base address)
	};


	// Class FortniteUI.FortMaterialProgressBarStyle
	// Inherited from UObject
	// Size: 0xD8 (0x100 - 0x28)
	class UFortMaterialProgressBarStyle : public UObject	
	{
	public:
		FName BackgroundColorParamName; // 0x28(0x4)
		FLinearColor BackgroundColor; // 0x2C(0x10)
		FFortMaterialProgressBarSectionStyle BarSectionStyles; // 0x3C(0xC0)
		unsigned char UnknownData00_7[0x4]; // 0xFC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMaterialProgressBarStyle");
			return ret;
		}
	};


	// Class FortniteUI.FortMaterialProgressBar
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x3D8 - 0x2D8)
	class UFortMaterialProgressBar : public UCommonUserWidget	
	{
	public:
		UClass* Style; // 0x2D8(0x8)
		FName BackgroundColorParamName; // 0x2E0(0x4)
		FLinearColor BackgroundColor; // 0x2E4(0x10)
		EFortMaterialProgressBarSectionOverflowBehavior OverflowBehavior; // 0x2F4(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2F5(0x3) UNKNOWN PROPERTY
		FFortMaterialProgressBarSectionInfo BarSectionInfo; // 0x2F8(0xD0)
		UCommonBorder* ProgressBar; // 0x3C8(0x8)
		UMaterialInstanceDynamic* ProgressBarMID; // 0x3D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMaterialProgressBar");
			return ret;
		}

		void SetStyle(UClass* BarStyle); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE894F4(relative to base address)
		void SetProgressBarSectionPercent(TEnumAsByte<EFortMaterialProgressBarSection> BarSection, float Percent); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88E94(relative to base address)
		void SetProgressBarSectionColor(TEnumAsByte<EFortMaterialProgressBarSection> BarSection, FLinearColor Color, EFortMaterialProgressBarSectionColorNumber ColorNumber); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE88C80(relative to base address)
		void SetBackgroundColor(FLinearColor Color); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE88000(relative to base address)
	};


	// Class FortniteUI.FortMultiSizeImage
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x458 (0x5B0 - 0x158)
	class UFortMultiSizeImage : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x158(0x8) UNKNOWN PROPERTY
		FFortMultiSizeBrush MultiSizeBrush; // 0x160(0x420)
		TEnumAsByte<EFortBrushSize> BrushSize; // 0x580(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x581(0x3) UNKNOWN PROPERTY
		FLinearColor ColorAndOpacity; // 0x584(0x10)
		unsigned char UnknownData02_7[0x14]; // 0x594(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultiSizeImage");
			return ret;
		}

		void SetMultiSizeBrush(FFortMultiSizeBrush& MultiSizeBrush); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE88AC4(relative to base address)
		void SetColorAndOpacity(FLinearColor& Color); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE884F8(relative to base address)
		void SetBrushSize(TEnumAsByte<EFortBrushSize> BrushSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8846C(relative to base address)
	};


	// Class FortniteUI.FortNumericEditableText
	// Inherited from UEditableTextBox -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0xE80 - 0xE68)
	class UFortNumericEditableText : public UEditableTextBox	
	{
	public:
		int32_t MinValue; // 0xE68(0x4)
		int32_t MaxValue; // 0xE6C(0x4)
		unsigned char UnknownData00_7[0x10]; // 0xE70(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNumericEditableText");
			return ret;
		}

		void SetMinValue(int32_t NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88A48(relative to base address)
		void SetMaxValue(int32_t NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE889CC(relative to base address)
		bool GetNumericValue(int32_t& OutNumericValue); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86508(relative to base address)
		int32_t GetMinValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE864F0(relative to base address)
		int32_t GetMaxValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F8D75DC(relative to base address)
	};


	// Class FortniteUI.FortRelativeAnchorCanvasSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x10 (0x48 - 0x38)
	class UFortRelativeAnchorCanvasSlot : public UPanelSlot	
	{
	public:
		TWeakObjectPtr<UWidget*> AnchorWidget; // 0x38(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x40(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRelativeAnchorCanvasSlot");
			return ret;
		}

		void SetAnchorWidget(UWidget* NewAnchorWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87F80(relative to base address)
	};


	// Class FortniteUI.FortRelativeAnchorCanvas
	// Inherited from UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x188 - 0x170)
	class UFortRelativeAnchorCanvas : public UPanelWidget	
	{
	public:
		int32_t ZLayerOffset; // 0x170(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x174(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRelativeAnchorCanvas");
			return ret;
		}

		void SetZLayerOffset(int32_t Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89690(relative to base address)
		UFortRelativeAnchorCanvasSlot AddSlot(UWidget* ContentWidget, UWidget* AnchorWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8532C(relative to base address)
	};


	// Class FortniteUI.FortSimpleMaterialProgressBar
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x3A8 - 0x2D8)
	class UFortSimpleMaterialProgressBar : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnFillAnimationFinished; // 0x2D8(0x10)
		bool bOverrideDefaultColorA; // 0x2E8(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2E9(0x3) UNKNOWN PROPERTY
		FLinearColor CachedColorA; // 0x2EC(0x10)
		bool bOverrideDefaultColorB; // 0x2FC(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2FD(0x3) UNKNOWN PROPERTY
		FLinearColor CachedColorB; // 0x300(0x10)
		bool bOverrideDefaultColorBackground; // 0x310(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x311(0x3) UNKNOWN PROPERTY
		FLinearColor CachedColorBackground; // 0x314(0x10)
		bool bOverrideDefaultEnableColoredSegments; // 0x324(0x1)
		bool bCachedEnableColoredSegments; // 0x325(0x1)
		bool bOverrideDefaultSegmentColor; // 0x326(0x1)
		unsigned char UnknownData03_6[0x1]; // 0x327(0x1) UNKNOWN PROPERTY
		FLinearColor CachedSegmentColor; // 0x328(0x10)
		bool bOverrideDefaultSegments; // 0x338(0x1)
		unsigned char UnknownData04_6[0x3]; // 0x339(0x3) UNKNOWN PROPERTY
		int32_t Segments; // 0x33C(0x4)
		bool bOverrideDefaultSegmentEdge; // 0x340(0x1)
		unsigned char UnknownData05_6[0x3]; // 0x341(0x3) UNKNOWN PROPERTY
		float SegmentEdge; // 0x344(0x4)
		bool bOverrideDefaultFillEdgeSoftness; // 0x348(0x1)
		unsigned char UnknownData06_6[0x3]; // 0x349(0x3) UNKNOWN PROPERTY
		float FillEdgeSoftness; // 0x34C(0x4)
		bool bOverrideDefaultGlowEdge; // 0x350(0x1)
		unsigned char UnknownData07_6[0x3]; // 0x351(0x3) UNKNOWN PROPERTY
		float GlowEdge; // 0x354(0x4)
		bool bOverrideDefaultGlowSoftness; // 0x358(0x1)
		unsigned char UnknownData08_6[0x3]; // 0x359(0x3) UNKNOWN PROPERTY
		float GlowSoftness; // 0x35C(0x4)
		bool bOverrideDefaultOutlineScale; // 0x360(0x1)
		unsigned char UnknownData09_6[0x3]; // 0x361(0x3) UNKNOWN PROPERTY
		float OutlineScale; // 0x364(0x4)
		bool bUseStroke; // 0x368(0x1)
		unsigned char UnknownData10_6[0x7]; // 0x369(0x7) UNKNOWN PROPERTY
		UMaterialInterface* StrokeMaterial; // 0x370(0x8)
		UMaterialInterface* NoStrokeMaterial; // 0x378(0x8)
		FName ProgressParamName; // 0x380(0x4)
		unsigned char UnknownData11_6[0x4]; // 0x384(0x4) UNKNOWN PROPERTY
		UImage* Image_Bar; // 0x388(0x8)
		UWidgetAnimation* BoundAnim_FillBar; // 0x390(0x8)
		UMaterialInstanceDynamic* CachedMID; // 0x398(0x8)
		unsigned char UnknownData12_7[0x8]; // 0x3A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleMaterialProgressBar");
			return ret;
		}

		void SetStartProgress(float StartProgress); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89474(relative to base address)
		void SetSegments(int32_t NumSegments); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE890F4(relative to base address)
		void SetSegmentColor(FLinearColor SegmentColor); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE88FDC(relative to base address)
		void SetProgress(float Progress); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74896088C(relative to base address)
		void SetEnableColoredSegments(bool bEnableColoredSegments); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE885D8(relative to base address)
		void SetColorBackground(FLinearColor ColorBackground); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF748A5C458(relative to base address)
		void SetColorB(FLinearColor ColorB); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74892A764(relative to base address)
		void SetColorA(FLinearColor ColorA); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74892A954(relative to base address)
		void OnFillAnimationFinished__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AnimateProgressFromStart(float Start, float End, float AnimSpeed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE855C0(relative to base address)
		void AnimateProgressFromCurrent(float End, float AnimSpeed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE854FC(relative to base address)
	};


	// Class FortniteUI.FortTextButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x1470 - 0x13E0)
	class UFortTextButton : public UCommonButtonLegacy	
	{
	public:
		FText DefaultText; // 0x13E0(0x10)
		bool bUseAllCaps; // 0x13F0(0x1)
		bool bOverrideFont; // 0x13F1(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x13F2(0x6) UNKNOWN PROPERTY
		FSlateFontInfo Font; // 0x13F8(0x58)
		FSlateColor FontColor; // 0x1450(0x14)
		unsigned char UnknownData01_6[0x4]; // 0x1464(0x4) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Content; // 0x1468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextButton");
			return ret;
		}
	};


	// Class FortniteUI.FortEventTeamMatchHistoryEntryData
	// Inherited from UObject
	// Size: 0x58 (0x80 - 0x28)
	class UFortEventTeamMatchHistoryEntryData : public UObject	
	{
	public:
		int32_t MatchNumber; // 0x28(0x4)
		int32_t Eliminations; // 0x2C(0x4)
		int32_t CreativeScore; // 0x30(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x34(0x4) UNKNOWN PROPERTY
		TArray<int32_t> AlternativeStats; // 0x38(0x10)
		int32_t Placement; // 0x48(0x4)
		int32_t SecondsAlive; // 0x4C(0x4)
		bool bShowEliminations; // 0x50(0x1)
		bool bIsLive; // 0x51(0x1)
		bool bIsReplayAvailable; // 0x52(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x53(0x5) UNKNOWN PROPERTY
		FString SessionId; // 0x58(0x10)
		TArray<FString> TeamAccountIds; // 0x68(0x10)
		bool bIsScoreContributor; // 0x78(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x79(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventTeamMatchHistoryEntryData");
			return ret;
		}
	};


	// Class FortniteUI.FortEventTeamMatchHistoryStat
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortEventTeamMatchHistoryStat : public UUserWidget	
	{
	public:
		UWidget* Widget_Icon; // 0x2B0(0x8)
		UCommonTextBlock* Widget_Score; // 0x2B8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventTeamMatchHistoryStat");
			return ret;
		}
	};


	// Class FortniteUI.FortEventTeamMatchHistoryEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x1460 - 0x13E0)
	class UFortEventTeamMatchHistoryEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_MatchNumber; // 0x13E8(0x8)
		UCommonTextBlock* Text_TimeAlive; // 0x13F0(0x8)
		UCommonTextBlock* Text_Eliminations; // 0x13F8(0x8)
		UCommonTextBlock* Text_Placement; // 0x1400(0x8)
		UCommonTextBlock* Text_CreativeScore; // 0x1408(0x8)
		UOverlay* Overlay_OnlineStatus; // 0x1410(0x8)
		UCommonBorder* Border_InteractionContent; // 0x1418(0x8)
		UWidget* Icon_Eliminations; // 0x1420(0x8)
		UWidget* Icon_Placement; // 0x1428(0x8)
		UWidget* Icon_CreativeScore; // 0x1430(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat0; // 0x1438(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat1; // 0x1440(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat2; // 0x1448(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat3; // 0x1450(0x8)
		UFortEventTeamMatchHistoryEntryData* MatchData; // 0x1458(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventTeamMatchHistoryEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortEventTeamMatchHistoryModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x5A8 - 0x560)
	class UFortEventTeamMatchHistoryModal : public UFortActivatablePanel	
	{
	public:
		UCommonListView* ListView_MatchHistory; // 0x560(0x8)
		UCommonTextBlock* Text_TeamNames; // 0x568(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat0; // 0x570(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat1; // 0x578(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat2; // 0x580(0x8)
		UFortEventTeamMatchHistoryStat* Widget_AltStat3; // 0x588(0x8)
		UFortEventLeaderboardEntryData* LeaderboardEntryData; // 0x590(0x8)
		UFortEventTeamMatchHistoryEntryData* LastClickedMatchHistoryEntry; // 0x598(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventTeamMatchHistoryModal");
			return ret;
		}

		void SetupMatchHistory(UFortEventLeaderboardEntryData* DataForDisplay, FString TournamentId, FString EventWindowId, FString LeaderboardGroupingKey, FString LeaderboardInstanceId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FE8971C(relative to base address)
		void OnSetupMatchHistory(FString TournamentId, FString EventWindowId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortFlagImage
	// Inherited from UFortLazyImage -> UCommonLazyImage -> UImage -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x3B0 - 0x398)
	class UFortFlagImage : public UFortLazyImage	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x398(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFlagImage");
			return ret;
		}
	};


	// Class FortniteUI.FortFlagSelectionModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x618 - 0x560)
	class UFortFlagSelectionModal : public UFortActivatablePanel	
	{
	public:
		UFortFlagObject* SelectedFlag; // 0x560(0x8)
		float FlagConfirmSpinnerDelay; // 0x568(0x4)
		unsigned char UnknownData00_6[0x1C]; // 0x56C(0x1C) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Confirmation; // 0x588(0x8)
		UCommonTextBlock* Text_CurrentFlagRegionName; // 0x590(0x8)
		UFortFlagImage* CurrentFlagImage; // 0x598(0x8)
		UFortFlagImage* ConfirmationCurrentFlagImage; // 0x5A0(0x8)
		UFortFlagImage* ConfirmationTargetFlagImage; // 0x5A8(0x8)
		UCommonTileView* TileView_FlagOptions; // 0x5B0(0x8)
		UCommonTextBlock* Text_FlagRegionName; // 0x5B8(0x8)
		UCommonTextBlock* Text_ChangeRegionBlock; // 0x5C0(0x8)
		UCommonButtonBase* Button_Change; // 0x5C8(0x8)
		UCommonButtonBase* Button_ConfirmationCancel; // 0x5D0(0x8)
		UCommonButtonBase* Button_ConfirmationConfirm; // 0x5D8(0x8)
		UCommonButtonBase* Button_Cancel; // 0x5E0(0x8)
		UCommonButtonLegacy* Button_CloseMobile; // 0x5E8(0x8)
		UImage* Image_Spinner; // 0x5F0(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x5F8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFlagSelectionModal");
			return ret;
		}
	};


	// Class FortniteUI.FortFlagObject
	// Inherited from UObject
	// Size: 0x48 (0x70 - 0x28)
	class UFortFlagObject : public UObject	
	{
	public:
		FString RegionId; // 0x28(0x10)
		FText DisplayName; // 0x38(0x10)
		TWeakObjectPtr<UTexture2D*> FlagTexture; // 0x48(0x20)
		bool bSelected; // 0x68(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x69(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFlagObject");
			return ret;
		}
	};


	// Class FortniteUI.FortFlagTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortFlagTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		FName IconParamName; // 0x13E8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x13EC(0x4) UNKNOWN PROPERTY
		UFortFlagObject* SourceObject; // 0x13F0(0x8)
		UFortFlagImage* FlagImage; // 0x13F8(0x8)
		UImage* Image_Active; // 0x1400(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFlagTileButton");
			return ret;
		}
	};


	// Class FortniteUI.FortTournamentAbandonMatchDialog
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UFortTournamentAbandonMatchDialog : public UFortActivatablePanel	
	{
	public:
		UCommonButtonBase* Button_LeaveMatch; // 0x560(0x8)
		UCommonButtonBase* Button_ContinueMatch; // 0x568(0x8)
		UCommonDateTimeTextBlock* Text_LeaveMatchTime; // 0x570(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x578(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentAbandonMatchDialog");
			return ret;
		}
	};


	// Class FortniteUI.ContentBrowserFilterEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UContentBrowserFilterEntry : public UCommonButtonLegacy	
	{
	public:
		FMulticastInlineDelegate OnFilterEnabled; // 0x13E0(0x10)
		FMulticastInlineDelegate OnFilterSelected; // 0x13F0(0x10)
		UCommonTextBlock* TextBlock_FilterName; // 0x1400(0x8)
		bool bFilterActive; // 0x1408(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x1409(0x7) UNKNOWN PROPERTY
		UContentBrowserTag* Tag; // 0x1410(0x8)
		FText ButtonText; // 0x1418(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x1428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ContentBrowserFilterEntry");
			return ret;
		}

		void UpdateCheckMarkState(bool bIsChecked); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateButtonText(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A8D0(relative to base address)
		void SetIsFilterActive(bool bInFilterActive); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88854(relative to base address)
		bool IsFilterActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE877A4(relative to base address)
	};


	// Class FortniteUI.ContentBrowserTag
	// Inherited from UObject
	// Size: 0x18 (0x40 - 0x28)
	class UContentBrowserTag : public UObject	
	{
	public:
		FName TagID; // 0x28(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2C(0x4) UNKNOWN PROPERTY
		FText TagName; // 0x30(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ContentBrowserTag");
			return ret;
		}
	};


	// Class FortniteUI.ContentBrowserFiltersPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x350 - 0x2D8)
	class UContentBrowserFiltersPanel : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnFilterChanged; // 0x2D8(0x10)
		FMulticastInlineDelegate OnFocusChanged; // 0x2E8(0x10)
		UClass* FilterEntryWidgetClass; // 0x2F8(0x8)
		UVerticalBox* Box_Filters; // 0x300(0x8)
		UScrollBox* ScrollBox_FilterScroll; // 0x308(0x8)
		UContentBrowserFilterEntry* Button_All; // 0x310(0x8)
		USearchPanel* SearchPanel; // 0x318(0x8)
		unsigned char UnknownData00_7[0x30]; // 0x320(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ContentBrowserFiltersPanel");
			return ret;
		}

		void HandleShowAll(bool bShowAllItems, UObject* ListItemObject); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE871D4(relative to base address)
		void HandleSearchTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE87138(relative to base address)
		void HandleFilterSelected(bool bIsFilterEnabled, UContentBrowserFilterEntry* Entry); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE86A20(relative to base address)
		void HandleFilterEnabled(bool bIsFilterEnabled, UObject* ListItemObject); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE8695C(relative to base address)
		int32_t GetFilterCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C5A3370(relative to base address)
	};


	// Class FortniteUI.AthenaAccountContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UAthenaAccountContext : public UBlueprintContextBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaAccountContext");
			return ret;
		}

		void SimulateBattleBookPurchase(int32_t NumLevelsToPurchase, int32_t& BonusLevelsGranted, bool& bOverLimit); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE89E10(relative to base address)
		bool ShouldReplaceBattleStarsWithAlternateReward(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE899A0(relative to base address)
		bool IsAtMaxBattlePassTier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87658(relative to base address)
		FText GetCurrentSeasonNumberAsText(bool bFullText); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86110(relative to base address)
		int32_t GetCurrentSeasonNumber(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE860C0(relative to base address)
		UAthenaSeasonItemDefinition GetCurrentSeasonDefinition(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8607C(relative to base address)
		FText GetCurrentChapterNumberAsText(bool bFullText); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85F94(relative to base address)
		FText GetCurrentChapterAndSeasonText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85F20(relative to base address)
		void GetBattleBookPurchaseLimit(int32_t& MaxNumLevelsPossibleToPurchase, int32_t& BonusLevelsGranted); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE85D60(relative to base address)
	};


	// Class FortniteUI.AthenaHUDContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x458 (0x488 - 0x30)
	class UAthenaHUDContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x30(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnLocalPlayerWon; // 0x38(0x10)
		FMulticastInlineDelegate OnLocalPlayerDeathOnWin; // 0x48(0x10)
		FMulticastInlineDelegate OnLocalTeamWon; // 0x58(0x10)
		FMulticastInlineDelegate OnLocalTeamLost; // 0x68(0x10)
		FMulticastInlineDelegate OnLocalPlayerLost; // 0x78(0x10)
		FMulticastInlineDelegate OnLocalPlayerKilledPlayer; // 0x88(0x10)
		FMulticastInlineDelegate OnLocalPlayerDBNOStateChanged; // 0x98(0x10)
		FMulticastInlineDelegate OnPawnEmoteStopped; // 0xA8(0x10)
		FMulticastInlineDelegate OnUIGameplayCue; // 0xB8(0x10)
		FMulticastInlineDelegate OnLocalPlayerBeginSkydiving; // 0xC8(0x10)
		FMulticastInlineDelegate OnAthenaAutoFireChanged; // 0xD8(0x10)
		FMulticastInlineDelegate OnPlayerFiredWeapon; // 0xE8(0x10)
		FMulticastInlineDelegate OnShowUrgentQuestMessage; // 0xF8(0x10)
		FMulticastInlineDelegate OnUrgentQuestEndedMessage; // 0x108(0x10)
		FMulticastInlineDelegate OnDuelChange; // 0x118(0x10)
		FMulticastInlineDelegate OnLowPerformanceMode; // 0x128(0x10)
		FMulticastInlineDelegate OnPTTStateChange; // 0x138(0x10)
		FMulticastInlineDelegate OnCanPTTChange; // 0x148(0x10)
		FMulticastInlineDelegate ShowMobilePickerDelegate; // 0x158(0x10)
		FMulticastInlineDelegate OnPlayerNameChangeDelegate; // 0x168(0x10)
		FMulticastInlineDelegate OnResurrectingNowDelegate; // 0x178(0x10)
		FMulticastInlineDelegate OnAllWinnersAnnouncedDelegate; // 0x188(0x10)
		FMulticastInlineDelegate OnSignalQualityChangeDelegate; // 0x198(0x10)
		FMulticastInlineDelegate OnForwardStartedFalling; // 0x1A8(0x10)
		FMulticastInlineDelegate OnSpecialActorListChanged; // 0x1B8(0x10)
		unsigned char UnknownData01_6[0x18]; // 0x1C8(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnFireStopped; // 0x1E0(0x10)
		FMulticastInlineDelegate OnPostGameWidgetPlacementChange; // 0x1F0(0x10)
		FMulticastInlineDelegate OnForceStartPostGameFlow; // 0x200(0x10)
		FMulticastInlineDelegate OnForceAllQuickbarsMinimizedChanged; // 0x210(0x10)
		FMulticastInlineDelegate OnPlaylistExtensionWidgetCreatedNotSupported; // 0x220(0x10)
		FMulticastInlineDelegate OnClearPlaylistExtensionWidgetNotSupported; // 0x230(0x10)
		FMulticastInlineDelegate OnStartPostGameMenu; // 0x240(0x10)
		FMulticastInlineDelegate OnRecoverFromPostGameMenu; // 0x250(0x10)
		FMulticastInlineDelegate OnOverrideInventoryPanel; // 0x260(0x10)
		TArray<FEliminationTimelineEntry> EliminationTimeline; // 0x270(0x10)
		unsigned char UnknownData02_6[0x188]; // 0x280(0x188) UNKNOWN PROPERTY
		TWeakObjectPtr<UWidget*> MoveButtonWidgetPtr; // 0x408(0x8)
		FAthenaWinnerInfo WinnerInfo; // 0x410(0x20)
		unsigned char UnknownData03_6[0x1]; // 0x430(0x1) UNKNOWN PROPERTY
		bool bMoveButtonMode; // 0x431(0x1)
		bool bPendingAttachToHUD; // 0x432(0x1)
		bool bLocalPlayerWonMatch; // 0x433(0x1)
		TWeakObjectPtr<AFortPlayerPawnAthena*> BoundPlayerPawn; // 0x434(0x8)
		unsigned char UnknownData04_6[0x4]; // 0x43C(0x4) UNKNOWN PROPERTY
		UAthenaPlayerViewModel* PlayerViewModel; // 0x440(0x8)
		unsigned char UnknownData05_7[0x40]; // 0x448(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaHUDContext");
			return ret;
		}

		float VictoryStingerTimeUntilFadeOut(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE8AA54(relative to base address)
		bool UseTapToShoot(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EE87DA0(relative to base address)
		void UseOrRleoadFromHUDStop(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8AA28(relative to base address)
		void UseOrRleoadFromHUDStart(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A9FC(relative to base address)
		void UpdateSelectedWidgetMoveOffsetVector(FVector2D& VectorOffset, float fMoveScale); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE8A8E4(relative to base address)
		void TryBestUseForActor(AActor* ActorToUse); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A818(relative to base address)
		void TakeMovementInputFromHUD(FVector2D MoveVector); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE8A700(relative to base address)
		void TakeLookStickInputFromHUD(FVector2D LookStickPosition); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE8A5E8(relative to base address)
		void TakeLookInputFromHUD(FRotator LookRotator); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE8A4C8(relative to base address)
		void TakeItemSelectionInputFromHUD(int32_t TouchIndex, int32_t SlotIdx, bool& bIsUsing, EFortQuickBars InQuickBar, bool bReloadOrUseIfAlreadySelected, bool bStopUseImmediately); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE8A21C(relative to base address)
		void SwitchToPrimaryQuickbar(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A1F0(relative to base address)
		void SwapQuickBarFocusFromHUD(EFortQuickBars InQuickBar, int32_t SlotOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A118(relative to base address)
		void StopTargettingFromHUD(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE8A0E0(relative to base address)
		void StopItemSelectionInputFromHUD(int32_t TouchIndex, int32_t SlotIdx, EFortQuickBars InQuickBar); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89FE8(relative to base address)
		void StartPostGameMenu(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE89FCC(relative to base address)
		void SimpleFireStop(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89DFC(relative to base address)
		void SimpleFireStart(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89DE8(relative to base address)
		void ShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE89CF0(relative to base address)
		void ShowUrgentQuestEndedMessage(FUrgentQuestData& UrgentQuestData, bool Success); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE89B5C(relative to base address)
		void ShowMobilePicker__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowMobilePicker(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89B40(relative to base address)
		void ShowMarkerGameModeMessage(int32_t PlayerId, int32_t InstanceID); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE89A60(relative to base address)
		void ShowGameModeMessage(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE89A30(relative to base address)
		bool ShouldVictoryUIPushEmoteInput(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B26388(relative to base address)
		bool ShouldPlayCustomEndScreenAtLoss(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE89968(relative to base address)
		bool ShouldDisplayScoreUI(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89944(relative to base address)
		bool ShouldDisplayPlacement(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89920(relative to base address)
		bool ShouldAlwaysDisplaySquadInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE898FC(relative to base address)
		void SetTargetingToggleable(bool bNewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE895F0(relative to base address)
		void SetShouldForceDisableAutorun(bool bShouldDisable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE893F0(relative to base address)
		void SetSelectWidgetToMoveMode(bool bSet); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE891B8(relative to base address)
		void SetSelectedInventoryItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE89254(relative to base address)
		void SetResourceMaterial(TEnumAsByte<EFortResourceType> NewMaterial); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88F58(relative to base address)
		void SetPTTState(EPTTState NewPushToTalkState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88B80(relative to base address)
		void SetPostGameWidgetPlacement(FName WidgetPlacement); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE88C00(relative to base address)
		void SetLockOnStickCoords(FVector2D& LockOnCoords); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FE88954(relative to base address)
		void SetLocalPlayerWonMatch(bool bLocalPlayerWon); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE888D4(relative to base address)
		void SelectWidgetToMove(UWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87E80(relative to base address)
		void ReloadFromHUD(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87E54(relative to base address)
		void RecoverFromPostGameMenu(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE87E38(relative to base address)
		void PushGameOverEmoteInput(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87E10(relative to base address)
		void PTTStateChange__DelegateSignature(EPTTState NewPushToTalkState); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OwnerOrWeaponHasTag(FGameplayTag InTag); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87CF4(relative to base address)
		void OverrideInventoryPanel(UUserWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE87C64(relative to base address)
		void OnStartPostGameMenu__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSpecialActorListChanged__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSignalQualityChange__DelegateSignature(float NewQuality); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowUrgentQuestMessage__DelegateSignature(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResurrectingNow__DelegateSignature(bool bResurrectingNow); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRecoverFromPostGameMenu__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReadyForWinnerInfoDisplay(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE87C50(relative to base address)
		void OnPostGameWidgetPlacement__DelegateSignature(FName WidgetPlacement); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaylistExtensionWidgetCreatedNotSupported__DelegateSignature(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerNameChange__DelegateSignature(FString NewName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerFiredWeapon__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPawnEmoteStopped__DelegateSignature(UFortItemDefinition* MontageItemDef, AFortPawn* PawnEmoting); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOverrideInventoryPanel__DelegateSignature(UUserWidget* Widget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowPerformanceMode__DelegateSignature(bool bInLowPerformanceMode); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalTeamWon__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalTeamLost__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerWon__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerLost__DelegateSignature(EEndOfMatchReason LostReason); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerKilledPlayer__DelegateSignature(AFortPlayerStateAthena* Player); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerDeathOnWin__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerDBNOStateChanged__DelegateSignature(bool bIsDBNO); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerBeginSkydiving__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnForwardStartedFalling__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnForceStartPostGameFlow__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnForceAllQuickbarsMinimizedChanged__DelegateSignature(bool bEnabled); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFireStopped__DelegateSignature(int32_t StopFireIndex); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDuelStarted__DelegateSignature(EDuelState DuelState, FDuelOverlayData& DuelOverlayData); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearPlaylistExtensionWidgetNotSupported__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCanPTTChange__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBountyObjectiveEndedMessage__DelegateSignature(FUrgentQuestData& UrgentQuestData, bool Success); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAthenaHUDAllWinnersAnnounced__DelegateSignature(FAthenaWinnerInfo& WinnerInfo); // Flags: MulticastDelegate|Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAthenaAutoFireChanged__DelegateSignature(bool bEntering); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAllWinnersAnnounced(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749AAEC8C(relative to base address)
		void LookFireFromHUDStop(int32_t TouchIndex, UWidget* DebugWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87B8C(relative to base address)
		void LookFireFromHUDStart(int32_t TouchIndex, UWidget* DebugWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87AC8(relative to base address)
		void JumpFromHudStart(int32_t TouchIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE87A04(relative to base address)
		void JumpFromHudEnd(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE879F0(relative to base address)
		bool IsVictoryUICinematic(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE879B8(relative to base address)
		bool IsUsingScope(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87994(relative to base address)
		bool IsTargeting(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87928(relative to base address)
		bool IsRunningOnBattery(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87904(relative to base address)
		bool IsOperatingTurret(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE878C4(relative to base address)
		bool IsMovingSelectedWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87888(relative to base address)
		bool IsInSelectWidgetToMoveMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EDD28B4(relative to base address)
		bool IsInBuildMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87848(relative to base address)
		bool IsFiringFromTouch(int32_t TouchIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE877BC(relative to base address)
		bool IsCurrentWeaponFiring(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87750(relative to base address)
		bool IsCurrentWeaponChargeable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE8772C(relative to base address)
		bool IsCrouching(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE876EC(relative to base address)
		bool IsAutoRunEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE876C8(relative to base address)
		bool IsActionBound(FName ActionName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE875CC(relative to base address)
		void HideGameModeMessage(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE874D8(relative to base address)
		bool HasWifi(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749859FE0(relative to base address)
		bool HasLockOnTarget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE874B4(relative to base address)
		bool HasFiringTouch(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87498(relative to base address)
		bool HasAutofireTarget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE87474(relative to base address)
		void HandleWeaponChanged(AFortPawn* InPawn, AFortWeapon* InNewWeapon, AFortWeapon* InPlayerWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE8732C(relative to base address)
		void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74909F918(relative to base address)
		void HandleSpectatorViewTargetChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE87318(relative to base address)
		void HandlePlayersLeftUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF748C5C0E8(relative to base address)
		void HandlePawnEmoteStopped(UFortItemDefinition* MontageItemDef, AFortPawn* PawnEmoting); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE87074(relative to base address)
		void HandleOnNPCUnconvertEvent(AFortPawn* UnconvertedFortPawn, EUnconvertReason UnconvertReason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE86E0C(relative to base address)
		void HandleOnNPCConvertEvent(AFortPawn* ConvertedFortPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE86BB0(relative to base address)
		void HandleLocalPlayerDBNOStateChanged(AFortPawn* FortPawn, bool bIsDBNO); // Flags: Final|Native|Private, Memory Exec: 0x7FF7493CB554(relative to base address)
		void HandleLocalPlayerBeginSkydiving(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FE86AE4(relative to base address)
		void GetWinnerText(FText& ReturnText, FText& WinnerName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FE86854(relative to base address)
		FText GetVictoryText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE867B4(relative to base address)
		USoundCue GetVictoryStinger(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86790(relative to base address)
		ETouchInteractMode GetTouchInteractMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86748(relative to base address)
		int32_t GetSquadSize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86704(relative to base address)
		int32_t GetSquadConnectedCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE866E0(relative to base address)
		EPTTState GetPTTState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C9DE90(relative to base address)
		FString GetPlayerName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE8667C(relative to base address)
		FLinearColor GetPlayerColor(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86630(relative to base address)
		void GetLocalTime(int32_t& Hours, int32_t& Minutes); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86374(relative to base address)
		bool GetLocalPlayerWonMatch(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE8635C(relative to base address)
		int32_t GetJumpPressedTouchIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86344(relative to base address)
		int32_t GetInteractPressedTouchIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE8632C(relative to base address)
		bool GetInLowPerformanceMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7499E15E4(relative to base address)
		UFortAthenaHUDInfoDataAsset GetHUDInfoDataAsset(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86308(relative to base address)
		FText GetGliderDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE862CC(relative to base address)
		float GetGameOverDelayTime(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE862A4(relative to base address)
		TArray GetEliminationTimeline(); // Flags: Final|Native|Public|Const, Memory Exec: 0x7FF74FE86288(relative to base address)
		TWeakObjectPtr GetCustomDBNOWidgetClass(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE86240(relative to base address)
		TWeakObjectPtr GetCustomDBNOReviveMaterial(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE861F8(relative to base address)
		bool GetCanPTT(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C9DEA8(relative to base address)
		TArray GetBoundActions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85EBC(relative to base address)
		float GetBatteryLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E12724C(relative to base address)
		void ForwardOnSpecialActorListChanged(FSpecialActorRepData& SpecialActorData); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FE85CBC(relative to base address)
		void ForceVictoryRoyaleUI(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FE85CA8(relative to base address)
		void ForceStartPostGameFlow(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85C94(relative to base address)
		void ForceFireFromHUDStop(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85C50(relative to base address)
		void FireFromHUDStop(int32_t TouchIndex, UWidget* DebugWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85B8C(relative to base address)
		void FireFromHUDStart(int32_t TouchIndex, UWidget* DebugWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85AC8(relative to base address)
		void ExecuteActionNameFromHUDWithEventType(FName ActionName, TEnumAsByte<EInputEvent> KeyEvent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85A04(relative to base address)
		void ExecuteActionNameFromHUD(FName ActionName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85980(relative to base address)
		void EndUseFromHUD(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE85954(relative to base address)
		void EnableAutoRunFromHUD(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE858D4(relative to base address)
		bool DoesPlaylistUIExtensionSlotContainWidget(EUIExtensionSlot PlaylistSlot); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85804(relative to base address)
		float DisplayPlayerWonTime(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE857DC(relative to base address)
		void CycleQuickbar(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FE857B4(relative to base address)
		bool CurrentWeaponAllowsTargeting(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85790(relative to base address)
		bool CanShootInVehicle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85750(relative to base address)
		bool CanCurrentWeaponAutoFireFromReticle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE85708(relative to base address)
		bool CanAutoRun(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE856E4(relative to base address)
		void BeginUseFromHUD(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FE856BC(relative to base address)
	};


	// Class FortniteUI.AthenaInventoryContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x70 (0xA0 - 0x30)
	class UAthenaInventoryContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnInventoryItemSelected; // 0x30(0x10)
		FMulticastInlineDelegate OnInventorySwapStarted; // 0x40(0x10)
		FMulticastInlineDelegate OnInventorySwapComplete; // 0x50(0x10)
		unsigned char UnknownData00_7[0x40]; // 0x60(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaInventoryContext");
			return ret;
		}

		void StartOrFinishSwap(int32_t SlotIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB78C4(relative to base address)
		void SetSelectedInventoryItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB724C(relative to base address)
		void OnAthenaInventorySwapStarted__DelegateSignature(int32_t SlotIndex); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAthenaInventorySwapComplete__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAthenaInventoryPanelOpened__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAthenaInventoryItemSelected__DelegateSignature(UFortItem* Item); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSwapping(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB560C(relative to base address)
		UFortItem GetSelectedInventoryItem(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB434C(relative to base address)
		void CancelSwap(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFAE0(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorUIContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x1F0 (0x220 - 0x30)
	class UAthenaSpectatorUIContext : public UBlueprintContextBase	
	{
	public:
		TMap<FUniqueNetIdRepl, UAthenaRemotePlayerViewData*> PlayerDataMap; // 0x30(0x50)
		TMap<char, UAthenaRemoteSquadViewData*> InSessionSquadDataMap; // 0x80(0x50)
		unsigned char UnknownData00_6[0x50]; // 0xD0(0x50) UNKNOWN PROPERTY
		AFortPlayerControllerSpectating* SpectatingPC; // 0x120(0x8)
		FUniqueNetIdRepl FollowedPlayerUID; // 0x128(0x30)
		FUniqueNetIdRepl ReplayRelevancyPlayerUID; // 0x158(0x30)
		unsigned char UnknownData01_7[0x98]; // 0x188(0x98) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorUIContext");
			return ret;
		}

		void OnPlayerStateAdded(AFortPlayerStateAthena* FPSA); // Flags: Final|Native|Private, Memory Exec: 0x7FF74902B684(relative to base address)
		void OnPlayerControllerSet(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEB5994(relative to base address)
		void OnPlayerBecameRelevant(AFortPlayerState* FPS); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC20FC(relative to base address)
		void OnPlayerBecameIrrelevant(AFortPlayerState* FPS); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC1FC4(relative to base address)
		void OnPawnForReplayRelevancyChanged(AFortPawn* InPawnForReplayRelevancy); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEB5914(relative to base address)
		void OnGameStateSet(AFortGameState* InGameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEB5894(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF7490F6D9C(relative to base address)
		UAthenaRemotePlayerViewData GetPlayerData(FUniqueNetIdRepl PlayerUID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3CAC(relative to base address)
		bool GetPipMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3C94(relative to base address)
		UAthenaRemotePlayerViewData GetFollowedPlayerData(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2520(relative to base address)
	};


	// Class FortniteUI.CMSContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x660 (0x690 - 0x30)
	class UCMSContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_3[0x118]; // 0x30(0x118) UNKNOWN PROPERTY
		FCmsJsonMessages CachedCmsMessages; // 0x148(0x1F0)
		unsigned char UnknownData01_6[0x8]; // 0x338(0x8) UNKNOWN PROPERTY
		UFortPlayerSurveyInterpreter* PlayerSurveyInterpreter; // 0x340(0x8)
		unsigned char UnknownData02_7[0x348]; // 0x348(0x348) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CMSContext");
			return ret;
		}

		bool ShouldAutoOpenNews(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB735C(relative to base address)
		void MarkPlaylistInformationAsViewed(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5830(relative to base address)
		void MarkNewsAsShown(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB57A8(relative to base address)
		bool IsNewPlaylistInformationAvailable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F7116B8(relative to base address)
		bool HasScoringRuleDisplayInfo(FName RuleName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4EA0(relative to base address)
		bool GetSurvivalCMSText(FText& Title, FText& Body); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4538(relative to base address)
		FFortShowdownScoringRuleDisplayInfo GetScoringRuleDisplayInfo(FName RuleName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB423C(relative to base address)
		FSubgameScreenSource GetLatestSubgameInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB3430(relative to base address)
		FDynamicBackgroundsSource GetLatestDynamicBackgrounds(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB33F4(relative to base address)
		FCreativeAdSource GetLatestCreativeAds(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB33B8(relative to base address)
	};


	// Class FortniteUI.CreativeHUDLContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x140 (0x170 - 0x30)
	class UCreativeHUDLContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnRotationAxisChanged; // 0x30(0x10)
		FMulticastInlineDelegate OnScaleAxisChanged; // 0x40(0x10)
		FMulticastInlineDelegate OnCreativeGhostChanged; // 0x50(0x10)
		FMulticastInlineDelegate OnCreativeInvulnerableChanged; // 0x60(0x10)
		FMulticastInlineDelegate OnCreativeHeatmapToggled; // 0x70(0x10)
		FMulticastInlineDelegate OnDropToFloorChanged; // 0x80(0x10)
		FMulticastInlineDelegate OnPrecisionChanged; // 0x90(0x10)
		FMulticastInlineDelegate OnMoveToolLineOfSightBlockingChanged; // 0xA0(0x10)
		FMulticastInlineDelegate OnMoveToolEquippedChanged; // 0xB0(0x10)
		FMulticastInlineDelegate OnMoveToolScaleModified; // 0xC0(0x10)
		FMulticastInlineDelegate OnCreativeQuickMenuDisplayedChanged; // 0xD0(0x10)
		FMulticastInlineDelegate OnMoveToolRotationModified; // 0xE0(0x10)
		FMulticastInlineDelegate OnCreativeQuickbarEnabledChanged; // 0xF0(0x10)
		FMulticastInlineDelegate OnCreativeModeEnabledChanged; // 0x100(0x10)
		FMulticastInlineDelegate OnCreativeQuickbarActiveChanged; // 0x110(0x10)
		FMulticastInlineDelegate OnCreativeQuickbarEquippedChanged; // 0x120(0x10)
		FMulticastInlineDelegate OnPropPlaySoundCountdownChanged; // 0x130(0x10)
		FMulticastInlineDelegate OnPropLockInPlaceChanged; // 0x140(0x10)
		FMulticastInlineDelegate OnIsCreativeModeratorModeActiveChanged; // 0x150(0x10)
		AFortCreativeMoveTool* CurrentMoveTool; // 0x160(0x8)
		bool bPropLockedInPlace; // 0x168(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x169(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativeHUDLContext");
			return ret;
		}

		void OnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB59D0(relative to base address)
		void OnPlayerPawnSet(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB59BC(relative to base address)
		void OnPlayerControllerSet(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB59A8(relative to base address)
		void OnCreativeQuickbarComponentLoaded(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB5880(relative to base address)
		bool IsPropLockedInPlace(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB55F4(relative to base address)
		void HandleOnCreativeModeEnabledChanged(bool bIsEnabled); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB4DA0(relative to base address)
		EScaleAxis GetScaleAxis(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB41E0(relative to base address)
		FRotator GetRotationAxis(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4178(relative to base address)
		void GetPrecisionLevel(bool& SnappingEnabled, char& GridSnappingIndex); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3F88(relative to base address)
		AFortPlayerState GetOwningPlayerState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB39AC(relative to base address)
		AFortPlayerPawn GetOwningPlayerPawn(); // Flags: Final|Native|Public|Const, Memory Exec: 0x7FF74FEB3988(relative to base address)
		bool GetDropToFloorEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB220C(relative to base address)
		EHitTraceRule GetCurrentHitTraceRule(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2078(relative to base address)
		UDataTable GetCreativeItemListSourceFromPlaylist(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1630(relative to base address)
		void ForwardOnScaleAxisChanged(EScaleAxis Axis); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB0868(relative to base address)
		void ForwardOnRotationAxisChanged(char AxisIndex); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB07E8(relative to base address)
		void ForwardOnPropLockedInPlacedChanged(bool bLockedInPlace); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB0754(relative to base address)
		void ForwardOnPrecisionChanged(bool bPrecisionOn, char GridSnapIndex); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB0690(relative to base address)
		void ForwardOnMoveToolScaleModified(FVector currentVector); // Flags: Final|Native|Public|HasDefaults, Memory Exec: 0x7FF74FEB0570(relative to base address)
		void ForwardOnMoveToolRotationModified(FQuat currentRotationOffset); // Flags: Final|Native|Public|HasDefaults, Memory Exec: 0x7FF74FEB0450(relative to base address)
		void ForwardOnLOSChanged(EHitTraceRule HitTraceRule); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB03D0(relative to base address)
		void ForwardOnDropToFloorChanged(bool bDropToFloorOn); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB0350(relative to base address)
		void ForwardOnCreativeQuickMenuDisplayedChanged(bool bIsDisplayed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB0140(relative to base address)
		void ForwardOnCreativeQuickbarEquippedChanged(bool bIsEquipped); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB02D0(relative to base address)
		void ForwardOnCreativeQuickbarEnabledChanged(bool bIsEnabled); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB0250(relative to base address)
		void ForwardOnCreativeQuickbarActiveChanged(bool bIsActive); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB01D0(relative to base address)
		void ForwardOnCreativeInvulnerableChanged(bool bIsInvulnerable); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB00C0(relative to base address)
		void ForwardOnCreativeHeatmapTogged(bool bIsHeatmapToggled); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB0040(relative to base address)
		void ForwardOnCreativeGhostChanged(bool bIsGhostEnabled); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEAFFC0(relative to base address)
	};


	// Class FortniteUI.FortAccountStatsContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortAccountStatsContext : public UBlueprintContextBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAccountStatsContext");
			return ret;
		}

		bool CanShowAccountStats(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAFA50(relative to base address)
	};


	// Class FortniteUI.FortActivityImageContext
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x230 (0x260 - 0x30)
	class UFortActivityImageContext : public UFortLocalPlayerSubsystem	
	{
	public:
		TMap<FString, FFortActivityImageCache> SmallCachedImageMap; // 0x30(0x50)
		TMap<FString, FFortActivityImageCache> LargeCachedImageMap; // 0x80(0x50)
		TMap<FString, FFortActivityCompressedImageCache> CompressedImageMap; // 0xD0(0x50)
		TMap<FString, FFortActivityImageCache> SmallCachedCreatorLogoImageMap; // 0x120(0x50)
		TMap<FString, FFortActivityImageCache> LargeCachedCreatorLogoImageMap; // 0x170(0x50)
		unsigned char UnknownData00_7[0xA0]; // 0x1C0(0xA0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityImageContext");
			return ret;
		}
	};


	// Class FortniteUI.FortFrontEndContext
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x418 (0x448 - 0x30)
	class UFortFrontEndContext : public UFortLocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x30(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnLobbyPlayerGadgetsClicked; // 0x38(0x10)
		unsigned char UnknownData01_6[0x30]; // 0x48(0x30) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnRadialPickerStatusChanged; // 0x78(0x10)
		FMulticastInlineDelegate OnFrontEndCameraChanged; // 0x88(0x10)
		FMulticastInlineDelegate OnTheaterPinClicked; // 0x98(0x10)
		FMulticastInlineDelegate OnSetPreviewedSceneTheater; // 0xA8(0x10)
		FMulticastInlineDelegate OnTheaterSelected; // 0xB8(0x10)
		FMulticastInlineDelegate OnTheaterDataChanged; // 0xC8(0x10)
		FMulticastInlineDelegate OnTheaterTileClicked; // 0xD8(0x10)
		unsigned char UnknownData02_6[0x10]; // 0xE8(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnTheaterTileDoubleClicked; // 0xF8(0x10)
		FMulticastInlineDelegate OnTheaterTileFocused; // 0x108(0x10)
		FMulticastInlineDelegate OnTheaterTileUnfocused; // 0x118(0x10)
		FMulticastInlineDelegate OnShouldShowPhoenixDisplayChanged; // 0x128(0x10)
		unsigned char UnknownData03_6[0x18]; // 0x138(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnVaultItemViewed; // 0x150(0x10)
		FMulticastInlineDelegate OnVaultItemsViewed; // 0x160(0x10)
		FMulticastInlineDelegate OnSeasonTabVariantPreviewInfoChanged; // 0x170(0x10)
		unsigned char UnknownData04_6[0x10]; // 0x180(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnPlayerLoggedOut; // 0x190(0x10)
		unsigned char UnknownData05_6[0x18]; // 0x1A0(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnMainTabSelected; // 0x1B8(0x10)
		FMulticastInlineDelegate OnSocialImportClosed; // 0x1C8(0x10)
		unsigned char UnknownData06_6[0x20]; // 0x1D8(0x20) UNKNOWN PROPERTY
		FFortFrontEndFeatureStruct Features; // 0x1F8(0xF0)
		unsigned char UnknownData07_6[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY
		FUnlockableVariantPreviewInfo SeasonTabVariantPreviewInfo; // 0x2F0(0x20)
		unsigned char UnknownData08_6[0xD8]; // 0x310(0xD8) UNKNOWN PROPERTY
		UFortServerBrowserHelper* ServerBrowserHelper; // 0x3E8(0x8)
		unsigned char UnknownData09_7[0x58]; // 0x3F0(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontEndContext");
			return ret;
		}

		void ViewVaultItemsFromOffer(FCatalogOffer& CatalogOffer, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB81FC(relative to base address)
		void ViewVaultItems(TArray<UFortItem*>& ItemsToView, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7FC0(relative to base address)
		void ViewVaultItemFromDefinition(UFortItemDefinition* ItemToViewDefinition, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB7E78(relative to base address)
		void ViewVaultItem(UFortItem* ItemToView, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB7D6C(relative to base address)
		UFortSocialImportPanel ShowSocialImport(UClass* PanelClass); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB7718(relative to base address)
		bool ShouldShowSocialImport(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB74F4(relative to base address)
		bool ShouldShowPhoenixDisplay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC691A0(relative to base address)
		bool ShouldShowJunoOutfitsFTUE(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB73E0(relative to base address)
		bool ShouldShowAccountItemWarning(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB73BC(relative to base address)
		void SetSelectedTheater(FString TheaterId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB72CC(relative to base address)
		void SetSeasonTabVariantPreviewInfo(FUnlockableVariantPreviewInfo Info); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB7120(relative to base address)
		void SetLocalVariantPreview(UAthenaCosmeticItemDefinition* CosmeticItem, FGameplayTag VariantChannelTag, FGameplayTag VariantTag, FString CustomData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6D8C(relative to base address)
		void SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6A7C(relative to base address)
		void SetFrontEndCamera(EFrontEndCamera NewState, FViewTargetTransitionParams TransitionParams); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7485A1A54(relative to base address)
		void SetDefaultLocalVariantPreview(UAthenaCosmeticItemDefinition* CosmeticItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6908(relative to base address)
		void SetCurrentLockerSubslotIndex(int32_t NewIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB688C(relative to base address)
		bool SelectTileForQuest(UFortQuestItem* QuestItem, float& OutCriticalMissionDifficultyOverrideMin, float& OutCriticalMissionDifficultyOverrideMax); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB6224(relative to base address)
		void SelectDefaultTheaterTile(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB61F0(relative to base address)
		void SelectDefaultTheater(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB61DC(relative to base address)
		void PushContentWidget_Adv(UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5B5C(relative to base address)
		void PlayLevelUpEffect(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5AF8(relative to base address)
		void PlayEvolutionEffect(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5A94(relative to base address)
		void OnPlayerProfileInitialized(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749BC98E0(relative to base address)
		void JunoOutfitsFTUEShown(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5760(relative to base address)
		bool IsTileMissionAlertRewardClaimed(AFortTheaterMapTile* Tile); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB5624(relative to base address)
		bool IsCelebrateEffectPlaying(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5450(relative to base address)
		bool IsActiveTileMissionValid(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5370(relative to base address)
		bool Is4PlayerTile(AFortTheaterMapTile* Tile); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB51A8(relative to base address)
		void HideAthenaStoreNewItemBang(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FEB4F50(relative to base address)
		void HandleDynamicSocialImportClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEB4D8C(relative to base address)
		UClass GetUITestingClass(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C6345FC(relative to base address)
		bool GetUIOrderedAllTheaterData(TArray<FFortTheaterMapData>& OutAllTheaterData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4CAC(relative to base address)
		bool GetTileMissionDetails(AFortTheaterMapTile* Tile, FFortMissionDetails& MissionDetails); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB48D0(relative to base address)
		bool GetTheaterData(FString TheaterId, FFortTheaterMapData& OutTheaterData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4780(relative to base address)
		FString GetSelectedTheaterId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4460(relative to base address)
		bool GetSelectedTheaterData(FFortTheaterMapData& OutTheaterData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4370(relative to base address)
		void GetSelectableGadgets(TArray<UFortWorldItem*>& SelectableGadgets, TArray<UFortWorldItem*>& LastSelectedGadgets); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74E829158(relative to base address)
		FUnlockableVariantPreviewInfo GetSeasonTabVariantPreviewInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB42F0(relative to base address)
		void GetPostMaxAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t RewardOffset); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3E08(relative to base address)
		bool GetOutpostCoreLevelByTheaterId(FString TheaterId, int32_t& OutCoreLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3858(relative to base address)
		bool GetOutpostCoreLevelByItemDefinition(UFortOutpostItemDefinition* OutpostCoreItemDef, int32_t& OutCoreLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3694(relative to base address)
		FText GetMCPRegionText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748A2E1FC(relative to base address)
		FText GetMCPRegion(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3474(relative to base address)
		FGameDifficultyInfo GetMaxAvailableDifficulty(bool bIncludeMissionAlertTiles); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB34B0(relative to base address)
		EFortFrontendInventoryFilter GetInventoryFilterForAccountItemWarning(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2AC4(relative to base address)
		bool GetHighestEnduranceWaveReachedByItemDefinition(UFortOutpostItemDefinition* OutpostCoreItemDef, int32_t& HighestWaveNumber); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB26A8(relative to base address)
		AFortPlayerPawn GetHeroPlayerPawnForCurrentDisplayedItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB25F4(relative to base address)
		AFortPlayerPawn GetHeroPlayerPawnByIndex(int32_t PartyMemberIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB2544(relative to base address)
		EFrontEndCamera GetFrontEndHeroCamera(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748B4BEEC(relative to base address)
		EFrontEndCamera GetFrontEndCamera(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7485A21CC(relative to base address)
		bool GetFocusedOrActiveTileMissionDetails(FFortMissionDetails& MissionDetails); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2430(relative to base address)
		AFortTheaterMapTile GetFocusedOrActiveTile(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB240C(relative to base address)
		void GetFeatureState(EFortFrontEndFeature Feature, EFortFrontEndFeatureState& OutFeatureState, EFortFrontEndFeatureStateReason& OutReason); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB224C(relative to base address)
		FText GetCurrentTheaterName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2108(relative to base address)
		int32_t GetCurrentLockerSubslotIndex(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB20F0(relative to base address)
		void GetCriticalMissionRewards(TArray<FFortMissionRewardInfo>& RewardList); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1FE0(relative to base address)
		TArray GetAvailableDifficulties(bool bIncludeMissionAlertTiles); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB10EC(relative to base address)
		bool GetAllTheaterData(TArray<FFortTheaterMapData>& OutAllTheaterData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1014(relative to base address)
		bool GetActiveTileMissionDetails(FFortMissionDetails& MissionDetails); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0E00(relative to base address)
		AFortTheaterMapTile GetActiveTile(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0DDC(relative to base address)
		void GetAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t AccountLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0904(relative to base address)
		void ClearSelectedTheater(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFCB0(relative to base address)
		void ClearLocalPreview(bool StopUsingLocalPreview); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFC1C(relative to base address)
		bool CanShowLockerSlotType(EAthenaCustomizationCategory SlotType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAFA6C(relative to base address)
		bool CanFindTileForQuest(UFortQuestItem* QuestItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAF7E8(relative to base address)
		bool CanCompleteQuestInFocusedOrActiveTileMission(UFortQuestItem* QuestItem); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAF724(relative to base address)
		void BroadcastMainTabSelected(FName TabName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAF698(relative to base address)
		bool AreProfilesAvailableForWriting(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAF59C(relative to base address)
		void AccountItemWarningShown(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAF51C(relative to base address)
	};


	// Class FortniteUI.FortGlobalUIContext
	// Inherited from UFortLocalPlayerSubsystem -> ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x590 (0x5C0 - 0x30)
	class UFortGlobalUIContext : public UFortLocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x30(0x20) UNKNOWN PROPERTY
		FMulticastInlineDelegate SubGameChanged; // 0x50(0x10)
		unsigned char UnknownData01_6[0x40]; // 0x60(0x40) UNKNOWN PROPERTY
		bool bShouldSubgameSelectStartOnCampaignUpsell; // 0xA0(0x1)
		unsigned char UnknownData02_6[0x7]; // 0xA1(0x7) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnKeybindsChanged; // 0xA8(0x10)
		FMulticastInlineDelegate OnInputActionHoldStarted; // 0xB8(0x10)
		FMulticastInlineDelegate OnInputActionHoldStopped; // 0xC8(0x10)
		FMulticastInlineDelegate OnRefreshHUDForRespawn; // 0xD8(0x10)
		FMulticastInlineDelegate OnGenericActionChanged; // 0xE8(0x10)
		FMulticastInlineDelegate OnEnterVehicleDriver; // 0xF8(0x10)
		FMulticastInlineDelegate OnEnterVehiclePassenger; // 0x108(0x10)
		FMulticastInlineDelegate OnExitVehicle; // 0x118(0x10)
		FMulticastInlineDelegate OnVehicleSeatChanged; // 0x128(0x10)
		unsigned char UnknownData03_6[0x30]; // 0x138(0x30) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnScoreReportChanged; // 0x168(0x10)
		unsigned char UnknownData04_6[0x60]; // 0x178(0x60) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnLoadingScreenVisibilityChanged; // 0x1D8(0x10)
		FMulticastInlineDelegate OnLocalPlayerControllerConnectionChanged; // 0x1E8(0x10)
		unsigned char UnknownData05_6[0x30]; // 0x1F8(0x30) UNKNOWN PROPERTY
		TMap<FName, UFortUIMessageManager*> MessageManagersByName; // 0x228(0x50)
		TMap<EFortUIFeature, FFortUIFeatureStruct> Features; // 0x278(0x50)
		unsigned char UnknownData06_6[0x140]; // 0x2C8(0x140) UNKNOWN PROPERTY
		UAthenaMatchReadyDesktopPopup* AthenaMatchReadyNotificationWidget; // 0x408(0x8)
		unsigned char UnknownData07_6[0x10]; // 0x410(0x10) UNKNOWN PROPERTY
		UFortHelpItem* ActiveContextSpecificHelpItem; // 0x420(0x8)
		bool bIsUIVisible; // 0x428(0x1)
		bool bShowRateWidget; // 0x429(0x1)
		unsigned char UnknownData08_6[0x6]; // 0x42A(0x6) UNKNOWN PROPERTY
		TMap<ESubGame, bool> IsAllContentInstalledCacheMap; // 0x430(0x50)
		FText FeedbackTitle; // 0x480(0x10)
		FDateTime FirstLoginTime; // 0x490(0x8)
		FTimerHandle AddictionMsgTimer; // 0x498(0x8)
		FUniqueNetIdRepl CurrentLocalPlayerUniqueNetId; // 0x4A0(0x30)
		unsigned char UnknownData09_6[0x14]; // 0x4D0(0x14) UNKNOWN PROPERTY
		bool bQuestMapTabRequested; // 0x4E4(0x1)
		unsigned char UnknownData10_6[0x3]; // 0x4E5(0x3) UNKNOWN PROPERTY
		FGameplayTag QuestMapChallengeTabRequested; // 0x4E8(0x4)
		unsigned char UnknownData11_6[0x9C]; // 0x4EC(0x9C) UNKNOWN PROPERTY
		TScriptInterface<Class> MatchmakingWidgetExtension; // 0x588(0x10)
		TScriptInterface<Class> RankedWidgetExtension; // 0x598(0x10)
		unsigned char UnknownData12_7[0x18]; // 0x5A8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGlobalUIContext");
			return ret;
		}

		void UnregisterScriptedActions(TArray<UClass*>& ScriptedActions); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7CD0(relative to base address)
		void UnregisterScriptedAction(UClass* ScriptedAction); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7C00(relative to base address)
		void UnregisterInputAction(UUserWidget* UserWidget, FDataTableRowHandle InputActionRow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB7A9C(relative to base address)
		void UnbindToFeatureState(EFortUIFeature Feature, FDelegateProperty Delegate); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB79C4(relative to base address)
		void TetherChanged(bool bIsTethered); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB7944(relative to base address)
		bool ShowWebURL(FString URL, EFortUrlType URLType); // Flags: Final|RequiredAPI|Native|Public, Memory Exec: 0x7FF74FEB77E0(relative to base address)
		bool ShowVehicleHealthBarOnPlayerHUD(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB77BC(relative to base address)
		bool ShowCreativeContentDownloadDialog(FDelegateProperty& OnSubGameContentReadyCallback, FDelegateProperty& OnSubGameContentCanceledCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7600(relative to base address)
		void ShowConsoleAccountPicker(int32_t ControllerIndex, FDelegateProperty& CompletionDelegate); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7518(relative to base address)
		bool ShouldShowRateWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB74DC(relative to base address)
		bool ShouldShowPhoenixDisplay(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB7454(relative to base address)
		void SetRatingWidgetFeedbackTitle(FText& Title); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB7078(relative to base address)
		void SetInputMode(EFortInputMode InMode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6D0C(relative to base address)
		void SetHideStwItemRefundHelp(bool bInHideHelp); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6C5C(relative to base address)
		void SetHidePerkRecombobulatorHelp(bool bInHideHelp); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6BAC(relative to base address)
		void SetCurrentInputPresetName(FString InputPresetName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB67F0(relative to base address)
		void SetCurrentCustomInputTemplatePresetName(FString InputPresetName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB670C(relative to base address)
		void SetContextHelpItem(UFortHelpItem* ContextSpecificHelpItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6680(relative to base address)
		void SendLeaveZoneAnalytic(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB666C(relative to base address)
		void SendExperienceRatingAnalytic(FString RatingType, FString FeedbackSentBy, FText& RatingQuestion, int32_t& StarCount, FString GameSessionId, FString Comment); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB6344(relative to base address)
		void RunLauncherWithOptions(FString Options); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB615C(relative to base address)
		void ReturnToSubGameSelect(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB6148(relative to base address)
		void RegisterScriptedActions(TArray<UClass*>& ScriptedActions); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB60AC(relative to base address)
		void RegisterScriptedAction(UClass* ScriptedAction); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB5FDC(relative to base address)
		void RegisterInputAction(UUserWidget* UserWidget, FDataTableRowHandle InputActionRow, FDelegateProperty CommitedEvent, int32_t InFilterPriority); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5CF0(relative to base address)
		void RefreshHUDForRespawn(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB5CDC(relative to base address)
		void QuitGame(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5CC8(relative to base address)
		void OnQueryFortBackendVersionDelegate__DelegateSignature(FFortBackendVersion FortBackendVersion); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature(bool bConnected); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadingScreenVisibilityChangedDelegate__DelegateSignature(bool IsVisible); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Logout(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB5794(relative to base address)
		bool IsUsingGamepad(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749711F68(relative to base address)
		bool IsPendingLogout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB559C(relative to base address)
		bool IsMobileApp(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E23DB64(relative to base address)
		bool IsInZone(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748327D38(relative to base address)
		bool IsInOutpostZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB5578(relative to base address)
		bool IsGamepadAttached(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749859FE0(relative to base address)
		bool IsDesktopPlatform(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749859FE0(relative to base address)
		bool IsCustomGamepadConfig(int32_t ConfigIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB54EC(relative to base address)
		bool IsCurrentlyShowingLoadingScreen(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB54C8(relative to base address)
		bool IsCreativeModeAccessLimited(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB54A4(relative to base address)
		bool IsAllContentInstalled(ESubGame SubGame); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEB53C4(relative to base address)
		void InputActionHoldStopped(FName InputActionName, bool bCompletedSuccessfully); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB50E4(relative to base address)
		void InputActionHoldStarted(FName InputActionName, float HoldDuration); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB5020(relative to base address)
		void HideBang(EFortBangType Type); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB4F9C(relative to base address)
		void HandleVehicleSeatChanged(int32_t SeatIndex); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEB4E20(relative to base address)
		FName GetUseActionName(ECommonInputType OverrideInputType); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749687530(relative to base address)
		FName GetTrapPickerActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4C0C(relative to base address)
		FName GetTrapHotbarActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4B74(relative to base address)
		FName GetTrapConfirmActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4AD4(relative to base address)
		void GetTopLevelHelpItems(TArray<UFortHelpItem*>& ActiveHelpEntries); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB49F8(relative to base address)
		FName GetToggleInventoryActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB49CC(relative to base address)
		FName GetTargetActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB46F0(relative to base address)
		FName GetSwitchQuickBarActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4650(relative to base address)
		ESubGame GetSubGame(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749AAE634(relative to base address)
		FString GetSessionId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB44F8(relative to base address)
		FString GetSessionConnectString(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB44A0(relative to base address)
		UFortUIScoreReport GetScoreReport(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB4218(relative to base address)
		FName GetRotatePrimitiveClockwiseActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB40D8(relative to base address)
		TWeakObjectPtr GetRankedWidgetInfoModalOverride(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB4090(relative to base address)
		UFortQuestManager GetQuestManager(ESubGame SubGame); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74973EAC0(relative to base address)
		FName GetPickerConfirmActionName(EFortPickerMode PickerMode); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3C14(relative to base address)
		FName GetPickerCancelActionName(EFortPickerMode PickerMode); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3B2C(relative to base address)
		FName GetPerformBuildingImprovementInteractionActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3A8C(relative to base address)
		FName GetPerformBuildingEditInteractionActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB39EC(relative to base address)
		FName GetMoveForwardActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3668(relative to base address)
		FString GetModuleIdAndVersion(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3628(relative to base address)
		UFortUIMessageManager GetMessageManager(FName ManagerName, bool& bCreatedNew); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEB3568(relative to base address)
		UFortUIRewardReport GetLastMissionRewardReport(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB3394(relative to base address)
		FGameSummaryInfo GetLastGameSummaryInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB3314(relative to base address)
		bool GetKeysBoundToAction(FName Action, FKey& OutPrimaryKey, FKey& OutSecondaryKey, bool bForceGamepadKey, FName PresetNameOverride); // Flags: Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2F7C(relative to base address)
		FKey GetKeyForAction(FName Action, bool bForceGamepadKey, FName PresetNameOverride); // Flags: Final|RequiredAPI|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2E58(relative to base address)
		void GetKBMPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<FString>& InputPresetNames, TArray<FText>& InputPresetFriendlyNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2CC4(relative to base address)
		void GetKBMPlayerInputPresetDescriptionForSubGame(ESubGame SubGame, int32_t CurrentPreset, FText& InputPresetDescription, FText& InputPresetSubDescription); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2B14(relative to base address)
		FName GetJumpActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2AE8(relative to base address)
		UTexture2D GetInputTypeIcon(ECommonInputType InputType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB2A3C(relative to base address)
		int32_t GetInputPriority(EInputPriority Priority); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7496FCC90(relative to base address)
		bool GetInputActionGroup(FName& ActionName, EFortInputActionGroup& OutInputActionGroup); // Flags: Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB292C(relative to base address)
		FName GetHoagieBoostName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2860(relative to base address)
		bool GetHideStwItemRefundHelp(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2660(relative to base address)
		bool GetHidePerkRecombobulatorHelp(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2618(relative to base address)
		FName GetFireActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB23B0(relative to base address)
		FText GetFeedbackTitle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB236C(relative to base address)
		void GetFeatureState(EFortUIFeature Feature, EFortUIFeatureState& OutFeatureState, EFortUIFeatureStateReason& OutReason); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74812C06C(relative to base address)
		FString GetCustomGamepadInputPresetName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB2178(relative to base address)
		FString GetCurrentInputPresetName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB20B0(relative to base address)
		FName GetCreativeToggleInvulnerablityName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1F88(relative to base address)
		FName GetCreativeToggleHeatmapName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1F30(relative to base address)
		FName GetCreativeToggleGhostName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1ED8(relative to base address)
		FName GetCreativeSpawnModeratorBotName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1E80(relative to base address)
		FName GetCreativeQuickbarActivateClutchName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1E28(relative to base address)
		FName GetCreativeMoveToolMultiSelectName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1DD0(relative to base address)
		FName GetCreativeMoveToolEquippedGrabOrLetGoName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1D78(relative to base address)
		FName GetCreativeMoveToolEquippedDeleteName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1D20(relative to base address)
		FName GetCreativeMoveToolEquippedCopyGrabOrDuplicateName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1CC8(relative to base address)
		FName GetCreativeMoveToolClearMultiSelectName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1C70(relative to base address)
		FName GetCreativeMoveObjectsFreelySwitchAxisName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1C18(relative to base address)
		FName GetCreativeMoveObjectsFreelyRotateCounterclockwiseName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1BC0(relative to base address)
		FName GetCreativeMoveObjectsFreelyRotateClockwiseName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1B68(relative to base address)
		FName GetCreativeMoveObjectsFreelyPushName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1B10(relative to base address)
		FName GetCreativeMoveObjectsFreelyPullName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1AB8(relative to base address)
		FName GetCreativeMoveObjectsFreelyExitName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1A60(relative to base address)
		FName GetCreativeMoveObjectsFreelyDuplicateName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1A08(relative to base address)
		FName GetCreativeMoveObjectsFreelyDropToFloorName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB19B0(relative to base address)
		FName GetCreativeMoveObjectsFreelyChangePrecisionLevelName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1958(relative to base address)
		FName GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1900(relative to base address)
		FName GetCreativeMoveBuildingsOnGridRotateClockwiseName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB18A8(relative to base address)
		FName GetCreativeMoveBuildingsOnGridMirrorName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1850(relative to base address)
		FName GetCreativeMoveBuildingsOnGridExitName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB17F8(relative to base address)
		FName GetCreativeMoveBuildingsOnGridDuplicateName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB17A0(relative to base address)
		FName GetCreativeModeratorOpenToolModeName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1748(relative to base address)
		FName GetCreativeModeratorOpenPhotoModeName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB16F0(relative to base address)
		FDateTime GetCreativeModeLimitedAccessEndTime(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1684(relative to base address)
		FName GetCreativeFlyUpActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB15D8(relative to base address)
		FName GetCreativeFlyDownActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1580(relative to base address)
		FName GetCreativeDespawnModeratorBotName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1528(relative to base address)
		UFortCollectionBookManager GetCollectionBookManager(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1504(relative to base address)
		FName GetChangeMaterialActionName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB14A8(relative to base address)
		FName GetBuildConfirmActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB1408(relative to base address)
		bool GetBrushForKey(FKey Key, FSlateBrush& Brush); // Flags: Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB11DC(relative to base address)
		FName GetAltInteractionActionName(ECommonInputType OverrideInputType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495666A8(relative to base address)
		void GetAllPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<FString>& InputPresetNames, TArray<FText>& InputPresetFriendlyNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0EB0(relative to base address)
		FName GetActionForKey(FName PresetName, FKey Key, EFortInputActionGroup InputActionGroup, bool bIsUsingGamepad); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0A74(relative to base address)
		void GenericActionChanged(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEB08E8(relative to base address)
		void ForceSetFeatureState(EFortUIFeature Feature, EFortUIFeatureState ForcedState, EFortUIFeatureStateReason Reason); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFEC8(relative to base address)
		void ExitVehicle(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEAFEB4(relative to base address)
		void EnterVehiclePassenger(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEAFEA0(relative to base address)
		void EnterVehicleDriver(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEAFE8C(relative to base address)
		void DrawAttention(UWidget* BaseWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFE1C(relative to base address)
		void DisplayStateContent(bool bDisplay); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFD9C(relative to base address)
		void CopyToClipboard(FString ClipboardText); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFD0C(relative to base address)
		float ContentInstallationProgress(ESubGame SubGame); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EDDE8B4(relative to base address)
		void ClearRatingWidgetInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFC98(relative to base address)
		void ClearLastMissionReports(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAFC08(relative to base address)
		void ClearLastGameSummaryInfo(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FEAFBC8(relative to base address)
		void CheckFlag(FString FlagName, EFlagStatus& OutStatus); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEAFAF4(relative to base address)
		bool CanPlay(ESubGame SubGame, FText& DenialReason); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAF964(relative to base address)
		bool CanMatchmake(ESubGame SubGame, FText& DenialReason); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEAF878(relative to base address)
		void BindToFeatureStateAndInitialize(EFortUIFeature Feature, FDelegateProperty Delegate); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEAF5C0(relative to base address)
		bool AllowQuit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749ACFF84(relative to base address)
		bool AllowLogout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEAF570(relative to base address)
	};


	// Class FortniteUI.FocusedBuildingDynamicData
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFocusedBuildingDynamicData : public UPrimaryDataAsset	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FocusedBuildingDynamicData");
			return ret;
		}
	};


	// Class FortniteUI.FortHUDContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x740 (0x770 - 0x30)
	class UFortHUDContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x30(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnCursorModeChanging; // 0x38(0x10)
		FMulticastInlineDelegate OnCursorModeChanged; // 0x48(0x10)
		FMulticastInlineDelegate OnRequestPromptDisplay; // 0x58(0x10)
		FMulticastInlineDelegate OnGameViewportActivationChanged; // 0x68(0x10)
		FMulticastInlineDelegate OnMgmtMenuTabChangeRequested; // 0x78(0x10)
		FMulticastInlineDelegate OnGetHUDElementWidgetsForTags; // 0x88(0x10)
		FMulticastInlineDelegate OnIndicatorModeChanged; // 0x98(0x10)
		FMulticastInlineDelegate OnContextualReticleChanged; // 0xA8(0x10)
		FMulticastInlineDelegate OnVehicleFocused; // 0xB8(0x10)
		FMulticastInlineDelegate OnPawnFocused; // 0xC8(0x10)
		FMulticastInlineDelegate OnBuildingFocused; // 0xD8(0x10)
		FMulticastInlineDelegate OnActorFocusedForCreative; // 0xE8(0x10)
		FMulticastInlineDelegate OnFocusedBuildingStateChanged; // 0xF8(0x10)
		FMulticastInlineDelegate OnOpenInspect; // 0x108(0x10)
		FMulticastInlineDelegate OnFocusedBuildingHealthChanged; // 0x118(0x10)
		FMulticastInlineDelegate OnFocusedBuildingBigHealthChanged; // 0x128(0x10)
		FMulticastInlineDelegate OnFocusedBuildingRepairCostChanged; // 0x138(0x10)
		FMulticastInlineDelegate OnFocusedBuildingAttachedTrapDurabilityChanged; // 0x148(0x10)
		FMulticastInlineDelegate OnFocusedBuildingAttachedTrapChanged; // 0x158(0x10)
		FMulticastInlineDelegate OnFocusedBuildingDynamicDataReceived; // 0x168(0x10)
		FMulticastInlineDelegate OnDamagedResourceBuilding; // 0x178(0x10)
		FMulticastInlineDelegate OnDamagedResourceVehicle; // 0x188(0x10)
		FMulticastInlineDelegate OnPlayerCanInteract; // 0x198(0x10)
		FMulticastInlineDelegate OnInteractUpdated; // 0x1A8(0x10)
		FMulticastInlineDelegate OnPlayerTargetingChanged; // 0x1B8(0x10)
		FMulticastInlineDelegate OnScoreChanged; // 0x1C8(0x10)
		FMulticastInlineDelegate OnScoreStatChanged; // 0x1D8(0x10)
		FMulticastInlineDelegate OnZoneCompleted; // 0x1E8(0x10)
		FMulticastInlineDelegate OnPawnSet; // 0x1F8(0x10)
		FMulticastInlineDelegate OnDamageReceived; // 0x208(0x10)
		FMulticastInlineDelegate OnUnableToPerformAction; // 0x218(0x10)
		FMulticastInlineDelegate OnLocalPlayerMaxHealthChanged; // 0x228(0x10)
		FMulticastInlineDelegate OnLocalPlayerHealthChanged; // 0x238(0x10)
		FMulticastInlineDelegate OnLocalPlayerDied; // 0x248(0x10)
		FMulticastInlineDelegate OnLocalPlayerSpawned; // 0x258(0x10)
		FMulticastInlineDelegate OnLocalPlayerRevived; // 0x268(0x10)
		FMulticastInlineDelegate OnHUDScaleChanged; // 0x278(0x10)
		FMulticastInlineDelegate OnReticleSettingsChanged; // 0x288(0x10)
		FMulticastInlineDelegate OnLocalPlayerKillsChanged; // 0x298(0x10)
		FMulticastInlineDelegate OnLocalPlayerPlaceChanged; // 0x2A8(0x10)
		FMulticastInlineDelegate OnLocalPlayerViewTargetChanged; // 0x2B8(0x10)
		FMulticastInlineDelegate OnToggledBattleMapLive; // 0x2C8(0x10)
		FMulticastInlineDelegate OnLocalPlayerMaxShieldChanged; // 0x2D8(0x10)
		FMulticastInlineDelegate OnLocalPlayerShieldChanged; // 0x2E8(0x10)
		FMulticastInlineDelegate OnLocalPlayerMaxStaminaChanged; // 0x2F8(0x10)
		FMulticastInlineDelegate OnLocalPlayerStaminaChanged; // 0x308(0x10)
		FMulticastInlineDelegate OnToggleScoreboard; // 0x318(0x10)
		FMulticastInlineDelegate OnEndOfDayRecap; // 0x328(0x10)
		FMulticastInlineDelegate OnWaveCombatStart; // 0x338(0x10)
		FMulticastInlineDelegate OnWaveBasedModifiersApplied; // 0x348(0x10)
		FMulticastInlineDelegate OnActiveGameplayModifiersChanged; // 0x358(0x10)
		FMulticastInlineDelegate OnHordeTierInitialized; // 0x368(0x10)
		FMulticastInlineDelegate OnHordeTierComplete; // 0x378(0x10)
		FMulticastInlineDelegate OnHordeWaveComplete; // 0x388(0x10)
		FMulticastInlineDelegate OnBuildingMaterialCycled; // 0x398(0x10)
		FMulticastInlineDelegate OnHighlightsCountChanged; // 0x3A8(0x10)
		FMulticastInlineDelegate OnHUDStateRefreshed; // 0x3B8(0x10)
		FMulticastInlineDelegate OnShouldTriggerCooldownUpdate; // 0x3C8(0x10)
		FMulticastInlineDelegate OnRequestSetInZoneTitleBarVisibility; // 0x3D8(0x10)
		FMulticastInlineDelegate OnRequestHidePickaxeSlotKeybinds; // 0x3E8(0x10)
		unsigned char UnknownData01_6[0x28]; // 0x3F8(0x28) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnUIGameplayCue; // 0x420(0x10)
		FMulticastInlineDelegate OnWeaponEquippedDelegate; // 0x430(0x10)
		FMulticastInlineDelegate OnWeaponUnEquippedDelegate; // 0x440(0x10)
		FMulticastInlineDelegate OnWeaponModSlotsEquippedDelegate; // 0x450(0x10)
		FMulticastInlineDelegate OnWeaponModSlotsUnequippedDelegate; // 0x460(0x10)
		FMulticastInlineDelegate OnWeaponHudKeyActionUpdated; // 0x470(0x10)
		FMulticastInlineDelegate OnAbilityDecisionWindowStackUpdated; // 0x480(0x10)
		FMulticastInlineDelegate OnWorldDaysElapsedChanged; // 0x490(0x10)
		FMulticastInlineDelegate OnNumSurvivorsRescuedChanged; // 0x4A0(0x10)
		FMulticastInlineDelegate OnEarnedBadgesChanged; // 0x4B0(0x10)
		FMulticastInlineDelegate OnPotentialBadgesChanged; // 0x4C0(0x10)
		FMulticastInlineDelegate OnMissionManagerCreated; // 0x4D0(0x10)
		FMulticastInlineDelegate OnMissionsUpdated; // 0x4E0(0x10)
		FMulticastInlineDelegate OnFocusedMissionChanged; // 0x4F0(0x10)
		FMulticastInlineDelegate OnTheaterUniqueIDChanged; // 0x500(0x10)
		FMulticastInlineDelegate OnZoneDifficultyInfoRowChanged; // 0x510(0x10)
		FMulticastInlineDelegate OnDifficultyIncreaseRewardTierChanged; // 0x520(0x10)
		FMulticastInlineDelegate OnDifficultyIncreaseRewardsChanged; // 0x530(0x10)
		FMulticastInlineDelegate OnMissionGeneratorChanged; // 0x540(0x10)
		FMulticastInlineDelegate OnMissionRewardsChanged; // 0x550(0x10)
		FMulticastInlineDelegate OnPointOfInterestAdded; // 0x560(0x10)
		FMulticastInlineDelegate OnPointOfInterestRemoved; // 0x570(0x10)
		unsigned char UnknownData02_6[0x18]; // 0x580(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnHUDElementVisibilityChanged; // 0x598(0x10)
		FMulticastInlineDelegate OnLocalChallengesVisibilityChanged; // 0x5A8(0x10)
		unsigned char UnknownData03_6[0x10]; // 0x5B8(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnDebugHUDObjectiveHeightChangedDelegate; // 0x5C8(0x10)
		FMulticastInlineDelegate OnBuildModeChanged; // 0x5D8(0x10)
		FMulticastInlineDelegate OnPersonalVehicleModeChanged; // 0x5E8(0x10)
		FMulticastInlineDelegate OnPlayerVehicleStateChanged; // 0x5F8(0x10)
		unsigned char UnknownData04_6[0x30]; // 0x608(0x30) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSpreadRadiusChanged; // 0x638(0x10)
		TArray<FString> HotfixElementsToHide; // 0x648(0x10)
		bool bDebugHudObjectiveHeight; // 0x658(0x1)
		bool bPendingAttachToHUD; // 0x659(0x1)
		unsigned char UnknownData05_6[0x2]; // 0x65A(0x2) UNKNOWN PROPERTY
		TWeakObjectPtr<AFortPlayerState*> OwningPlayerState; // 0x65C(0x8)
		TWeakObjectPtr<ABuildingActor*> CurFocusedBuilding; // 0x664(0x8)
		TWeakObjectPtr<ABuildingTrap*> CurFocusedTrap; // 0x66C(0x8)
		unsigned char UnknownData06_6[0xC]; // 0x674(0xC) UNKNOWN PROPERTY
		TWeakObjectPtr<ABuildingActor*> BuildingFocusCandidates; // 0x680(0x18)
		TWeakObjectPtr<AFortPlayerPawn*> BoundPlayerPawn; // 0x698(0x8)
		unsigned char UnknownData07_6[0xB4]; // 0x6A0(0xB4) UNKNOWN PROPERTY
		TWeakObjectPtr<AFortWeapon*> CachedCurrentWeapon; // 0x754(0x8)
		TWeakObjectPtr<AFortWeapon*> CachedPreviousWeapon; // 0x75C(0x8)
		TWeakObjectPtr<UFortTouchControlRegion*> TouchControlRegion; // 0x764(0x8)
		unsigned char UnknownData08_7[0x4]; // 0x76C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDContext");
			return ret;
		}

		void UpdateTrapAttachedToBuilding(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEE157C(relative to base address)
		void TriggerCooldownUpdate(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE147C(relative to base address)
		void ToggleFullScreenMap(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FEE10C4(relative to base address)
		void ShowAerialFeedback(FName BoundActionName, FText& FeedbackText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEE07E8(relative to base address)
		bool ShouldOnlyShowNextPrevBuildingSlotKeybinds(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEE07C4(relative to base address)
		void SetPreparingMgmtMenu(bool bPreparing); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0350(relative to base address)
		void SetIsLocalChallengesVisible(bool bIsVisible); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE023C(relative to base address)
		void SetIndicatorsState(EFortIndicatorState NewState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE01BC(relative to base address)
		void SetIndicatorsAllowed(bool bIndicatorsAllowed); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0140(relative to base address)
		void SetHUDElementVisibility(FGameplayTagContainer& HUDElementTags, bool bHideElements, FName& ReasonName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF748595AF8(relative to base address)
		void SetCursorModeLocked(bool bLocked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFE84(relative to base address)
		void SendFocusedBuildingDynamicData(UFocusedBuildingDynamicData* DynamicData); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FEDFB5C(relative to base address)
		void RequestPromptDisplay(FFortHUDTagPromptData& PromptData, FGameplayTag& Tag); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEDF4A8(relative to base address)
		void RequestMgmtMenuTab(FName TabName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF428(relative to base address)
		void RequestHidePickaxeSlotKeybinds(bool bShouldHide); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FEDF398(relative to base address)
		void RemovePointOfInterest(AActor* PointOfInterest); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF308(relative to base address)
		bool PreviewItemPickUp(UFortItem* InItem, EFortQuickBars InQuickBarType, int32_t& OutSlotIndex, TMap<int32_t, int32_t>& OutItemsToPush, TArray<int32_t>& OutItemsToDrop); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEDF004(relative to base address)
		bool IsPreparingMgmtMenu(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC550E4(relative to base address)
		bool IsLocalChallengesVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCBFC(relative to base address)
		bool IsInEditMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCADC(relative to base address)
		bool IsInCursorMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749690AFC(relative to base address)
		bool IsContextTutorialActive(FGameplayTag TutorialType); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC9C0(relative to base address)
		void HideAerialFeedback(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC82C(relative to base address)
		void HandleWeaponDataLoaded(AFortWeapon* Weapon, UFortWeaponItemDefinition* WeaponData); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDC1E8(relative to base address)
		void HandleVehicleStateChanged(AFortPlayerPawn* PlayerPawn, AActor* NewVehicle, AActor* OldVehicle); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDC0F0(relative to base address)
		void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74909F7C4(relative to base address)
		void HandleToggledBattleMapLive(ABattleMapPawnLive* NewSpectatorPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDC070(relative to base address)
		void HandleSpectatorViewTargetChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDC05C(relative to base address)
		void HandlePersonalVehicleModeChanged(bool bEnteredVehicle); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBFDC(relative to base address)
		void HandleLocalPlayerViewTargetChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBFC8(relative to base address)
		void HandleLocalPlayerPlaceChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBFB4(relative to base address)
		void HandleLocalPlayerKillsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBFA0(relative to base address)
		void HandleLocalPlayerBuildCostChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBF88(relative to base address)
		void HandleLocalPawnSpawned(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBF74(relative to base address)
		void HandleLocalPawnRevived(AController* EventInstigator); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBEF4(relative to base address)
		void HandleLocalPawnDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FEDBE30(relative to base address)
		void HandleFocusedBuildingAbilitySystemComponentInitialized(); // Flags: Final|Native|Private, Memory Exec: 0x7FF748837CA0(relative to base address)
		void HandleBuildingModeChanged(bool bEntering); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FEDBDB0(relative to base address)
		void HandleActorFocusedForCreative(AActor* NewActor); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FEDBD20(relative to base address)
		float GetTimeToDelayEndOfDayZoneWidgetDisplay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB3BC(relative to base address)
		float GetScoreDisplayFactor(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAD30(relative to base address)
		TArray GetPotentialBadges(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA15C(relative to base address)
		AFortPlayerStateZone GetPlayerStateZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA114(relative to base address)
		int32_t GetNumAllowedDifficultyIncreases(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9B28(relative to base address)
		void GetMissionRewards(TArray<UFortItem*>& MissionRewards, TArray<UFortItem*>& MissionAlertRewards); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9898(relative to base address)
		TArray GetMissionOverviewObjectives(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED97FC(relative to base address)
		AFortMissionManager GetMissionManager(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED97D8(relative to base address)
		int32_t GetLocalPlayerPlacement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9768(relative to base address)
		bool GetLocalPlayerHasWinningPlacement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9744(relative to base address)
		bool GetLocalPlayerHasPlacement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9720(relative to base address)
		bool GetLocalPlayerHasLosingPlacement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED96F4(relative to base address)
		EFortIndicatorState GetIndicatorsState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9348(relative to base address)
		void GetHUDElementWidgetsForTags(FGameplayTagContainer& HUDElementTags, TArray<UFortHUDElementWidget*>& OutWidgets); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED90D0(relative to base address)
		AFortGameStateZone GetGameStateZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8F18(relative to base address)
		AFortMission GetFocusedMission(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8EAC(relative to base address)
		bool GetFocusedBuildingInfo(FFortFocusedBuildingInfo& OutBuildingInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8E0C(relative to base address)
		TArray GetEarnedBadges(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8BAC(relative to base address)
		int32_t GetDifficultyIncreaseRewardsTier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8B40(relative to base address)
		void GetDifficultyIncreaseRewardsDifference(int32_t BaseDifficultyIncreaseTier, int32_t ComparedDifficultyIncreaseTier, TArray<FFortItemDelta>& RewardDeltaInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8A28(relative to base address)
		void GetDifficultyIncreaseRewards(int32_t DifficultyIncreaseTier, TArray<FFortItemDelta>& DifficultyIncreaseRewards); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8940(relative to base address)
		FGameplayTagContainer GetCurrentPrimaryMissionTags(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED843C(relative to base address)
		FFortHUDState GetCurrentHUDState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8378(relative to base address)
		UFortHero GetCurrentHero(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8390(relative to base address)
		ABuildingActor GetCurrentFocusedBuilding(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8350(relative to base address)
		bool GetCurrentBasicMissionInfo(FFortBasicMissionInfo& BasicMissionInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED82A0(relative to base address)
		AFortWeapon GetCachedCurrentWeapon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7D80(relative to base address)
		bool GetBuildingActorInfo(ABuildingActor* BuildingActor, FFortFocusedBuildingInfo& OutBuildingInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7C70(relative to base address)
		AFortBluGloManager GetBluGloManager(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7C4C(relative to base address)
		void GetAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t AccountLevel); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEB0904(relative to base address)
		void ForwardOnWeaponUnEquipped(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6E80(relative to base address)
		void ForwardOnWeaponModUnequipped(AFortWeapon* CurrentWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6E00(relative to base address)
		void ForwardOnWeaponModEquipped(AFortWeapon* CurrentWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF748E5DB14(relative to base address)
		void ForwardOnWeaponHudKeyActionUpdated(AFortWeapon* Weapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6D80(relative to base address)
		void ForwardOnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF748E71458(relative to base address)
		void ForwardOnNumSurvivorsRescuedChanged(int32_t NumSurvivorsRescued); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6D00(relative to base address)
		void ForwardOnMissionsUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6CE4(relative to base address)
		void ForwardOnAbilityDecisionWindowStackUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FED6CC8(relative to base address)
		void EnterCursorMode(FName ActionName, UUserWidget* CursorModeWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED67B4(relative to base address)
		void EnterCameraMode(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED677C(relative to base address)
		bool AreIndicatorsEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED4E3C(relative to base address)
		bool AreHUDElementsVisible(FGameplayTagContainer& HUDElementTags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED4D74(relative to base address)
		void AddPointOfInterest(AActor* PointOfInterest, FText DisplayText, UTexture2D* DisplayImage, bool bSpecifyColor, FLinearColor ImageColor); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FED47E8(relative to base address)
	};


	// Class FortniteUI.FortInventoryContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x2D8 (0x308 - 0x30)
	class UFortInventoryContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnMcpWorldItemsChanged; // 0x30(0x10)
		FMulticastInlineDelegate OnMcpOutpostItemsChanged; // 0x40(0x10)
		FMulticastInlineDelegate OnWorldItemListChanged; // 0x50(0x10)
		FMulticastInlineDelegate OnOutpostItemListChanged; // 0x60(0x10)
		FMulticastInlineDelegate OnItemPickedUp; // 0x70(0x10)
		FMulticastInlineDelegate OnQuickbarContentsChanged; // 0x80(0x10)
		FMulticastInlineDelegate OnQuickbarRecordsChanged; // 0x90(0x10)
		FMulticastInlineDelegate OnQuickbarSlotFocusChanged; // 0xA0(0x10)
		FMulticastInlineDelegate OnQuickbarSecondarySlotFocusChanged; // 0xB0(0x10)
		FMulticastInlineDelegate OnQuickbarForceFullUpdate; // 0xC0(0x10)
		FMulticastInlineDelegate OnWorldItemsChanged; // 0xD0(0x10)
		unsigned char UnknownData00_6[0x20]; // 0xE0(0x20) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnCraftItemFailed; // 0x100(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x110(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnVaultItemLimitStateChangedEvent; // 0x120(0x10)
		unsigned char UnknownData02_6[0x48]; // 0x130(0x48) UNKNOWN PROPERTY
		TMap<UFortSchematicItemDefinition*, bool> SchematicLockedStates; // 0x178(0x50)
		unsigned char UnknownData03_7[0x140]; // 0x1C8(0x140) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInventoryContext");
			return ret;
		}

		bool WouldExceedMaxStackSize(UFortItemDefinition* ItemDefinition, int32_t QuantityToTest); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEE1660(relative to base address)
		bool WillAllItemsSlotInCollectionBook(TArray<UFortItem*>& Items); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEE15B4(relative to base address)
		void UpdateLastSeenResearchPointCollectionNodes(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE1554(relative to base address)
		void UpdateLastSeenHomebasePoints(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE152C(relative to base address)
		bool RemoveItemFromQuickBar(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF278(relative to base address)
		FFortItemQuantityPair MakeItemQuantityPair(UItemDefinitionBase* ItemDefinition, int32_t ItemQuantity); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD098(relative to base address)
		FFortItemInstanceQuantityPair MakeItemInstanceQuantityPair(UFortItem* Item, TEnumAsByte<EFortInventoryType> InventoryType, int32_t ItemQuantity); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDCF94(relative to base address)
		bool IsTrapAvailableForBuilding(ABuildingSMActor* Actor); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCC34(relative to base address)
		bool HasUnseenResearchPointCollectionNodes(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC760(relative to base address)
		bool HasUnseenHomebasePoints(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC728(relative to base address)
		bool HasUnavailableItemsInStorage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC6BC(relative to base address)
		bool HasTrapReadyForBuilding(ABuildingSMActor* BuildingToAttachTo); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC5F4(relative to base address)
		bool HasGameplayTagContainerExact(FGameplayTagContainer GameplayTagContainer); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC498(relative to base address)
		bool HasGameplayTagContainer(FGameplayTagContainer GameplayTagContainer); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDC33C(relative to base address)
		void HandleMcpProfilesInitialized(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749994B3C(relative to base address)
		EVaultItemLimitStatus GetVaultItemLimitStatus(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBB98(relative to base address)
		int32_t GetVaultItemLimit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBB80(relative to base address)
		TArray GetUserFriendlyTags(UFortItem* Item, bool bAddWeaponTier); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEDBAA4(relative to base address)
		FRecipe GetUpgradeItemRarityRecipeFromItemDefintion(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDB9A8(relative to base address)
		void GetUnseenTransformKeys(EConversionControlKeyRequest RequestType, EInventoryContentSortType SortType, TArray<UFortAccountItem*>& TransformKeys); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEDB890(relative to base address)
		FText GetTrapAttachTypeName(ABuildingSMActor* Actor); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB7C4(relative to base address)
		bool GetTransmogSacrificeDataFromItemDefintion(UFortItemDefinition* ItemDefinition, FTransmogSacrifice& OutTransmogData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB6C8(relative to base address)
		void GetTransformKeys(EConversionControlKeyRequest RequestType, EInventoryContentSortType SortType, TArray<UFortAccountItem*>& TransformKeys); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FEDB5B0(relative to base address)
		int32_t GetTotalItemQuantityByDefinition(UItemDefinitionBase* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB3E4(relative to base address)
		FText GetTierText(EFortItemTier Tier); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEDB310(relative to base address)
		int32_t GetStorageOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB0B8(relative to base address)
		int32_t GetStorageNumItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB078(relative to base address)
		int32_t GetStorageCapacity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB054(relative to base address)
		UFortResourceItemDefinition GetResourceItemDefinition(TEnumAsByte<EFortResourceType> ResourceType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAB84(relative to base address)
		int32_t GetResourceCount(TEnumAsByte<EFortResourceType> ResourceType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAAF8(relative to base address)
		FText GetRecyclingWarningText(EItemRecyclingWarning Warning, bool WereAnyItemsAnimate); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FEDA9F8(relative to base address)
		UFortItem GetQuickBarSlottedItem(EFortQuickBars InQuickBar, int32_t Slot); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA26C(relative to base address)
		void GetQuickbarFocus(EFortQuickBars& OutQuickBar, int32_t& OutSlot, int32_t& OutSecondarySlot, int32_t& OutPreviousFocusedSlot); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA354(relative to base address)
		int32_t GetNumOfItemToMulch(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9C60(relative to base address)
		int32_t GetNumItemsToMulch(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9C3C(relative to base address)
		int32_t GetNumInInventory(UFortItemDefinition* ItemDefinition, bool bIncludeReserved); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9B78(relative to base address)
		int32_t GetLevelsPerItemPromotion(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED95E8(relative to base address)
		TArray GetItemsToMulchBP(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9584(relative to base address)
		FText GetItemStackCount_Creative(int32_t Quantity); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FED94F0(relative to base address)
		void GetItemInstancesByDefinition(UFortItemDefinition* ItemDefinition, TArray<UFortItem*>& Items); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED936C(relative to base address)
		AFortWeapon GetEquippedWeapon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74907F3C4(relative to base address)
		int32_t GetDeployableBaseOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED875C(relative to base address)
		void GetDeployableBaseItemCounts(int32_t& ItemsCount, int32_t& MaxItemsCount, int32_t& OverflowItemsCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8538(relative to base address)
		UFortResourceItemDefinition GetCurrentResourceItemDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED84C0(relative to base address)
		int32_t GetCurrentResourceCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED849C(relative to base address)
		UFortWorldItemDefinition GetCurrentAmmoItemDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED827C(relative to base address)
		int32_t GetCountOfVaultLimitedItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EDD11B0(relative to base address)
		TArray GetConversionRecipesFromItemDefintion(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED8084(relative to base address)
		int32_t GetBackpackOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7AC4(relative to base address)
		void GetBackpackItemCounts(int32_t& ItemsCount, int32_t& MaxItemsCount, int32_t& OverflowItemsCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED78A0(relative to base address)
		void GetAccountItemsByType(EFortItemType ItemType, TArray<UFortAccountItem*>& Items); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7420(relative to base address)
		void GetAccountItemsByFilterType(FString SearchText, EInventoryContentSortType SortType, EFortInventoryFilter Subtype, TArray<UFortAccountItem*>& OutItemList); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7294(relative to base address)
		void ForceItemsChanged(TArray<EFortInventoryFilter>& InventoryFilters); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED6C2C(relative to base address)
		void EquipItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED698C(relative to base address)
		void EnumerateRecyclingWarningsForItems(TArray<UFortItem*>& Items, TArray<EItemRecyclingWarning>& OutWarnings); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FED6878(relative to base address)
		bool DropItemOnQuickBar(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6680(relative to base address)
		bool DropItem(UFortWorldItem* ItemBeingDropped, int32_t Quantity); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED65BC(relative to base address)
		bool DropCreativeItemOnQuickBar(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED64C0(relative to base address)
		void DestroyWorldItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6198(relative to base address)
		bool CraftSchematic(UFortSchematicItem* SchematicItem, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED5F34(relative to base address)
		bool CraftAndSlotSchematic(UFortSchematicItem* SchematicItem, int32_t PostCraftSlot, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED5C98(relative to base address)
		bool CanUpgradeItemRarity(UFortItem* Item, TArray<EItemEvolutionRestrictionReason>& OutRestrictionReasons); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FED58A0(relative to base address)
		bool CanSwapItem(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5704(relative to base address)
		bool CanRecycle(UFortItem* Item, TArray<EItemRecyclingRestrictionReason>& OutRestrictionReasons); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED558C(relative to base address)
		bool CanItemBePromoted(UFortItem* Item, TArray<FFortItemQuantityPair>& Costs); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED546C(relative to base address)
		bool CanItemBeMulched(UFortItem* Item, FText& OutRestrictionReasons); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED5380(relative to base address)
		bool CanEvolve(UFortItem* Item, TArray<EItemEvolutionRestrictionReason>& OutRestrictionReasons); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED5290(relative to base address)
		bool CanCraftSchematic(UFortSchematicItem* SchematicItem, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED4F64(relative to base address)
		bool AreAnyItemsUnseenForInventoryFilter(EFortFrontendInventoryFilter InventoryFilter); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED4CE8(relative to base address)
		bool AreAnyItemsInanimate(TArray<UFortItem*>& Items); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FED4C04(relative to base address)
		bool AreAnyItemsAnimate(TArray<UFortItem*>& Items); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FED4B20(relative to base address)
	};


	// Class FortniteUI.FortLeaderboardContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortLeaderboardContext : public UBlueprintContextBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaderboardContext");
			return ret;
		}

		bool CanShowStats(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED56D8(relative to base address)
		bool CanShowLeaderboards(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED56AC(relative to base address)
		bool CanShowGlobalLeaderboards(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED5680(relative to base address)
	};


	// Class FortniteUI.FortPickerContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x190 (0x1C0 - 0x30)
	class UFortPickerContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnShowPicker; // 0x30(0x10)
		FMulticastInlineDelegate OnPickerConfirm; // 0x40(0x10)
		FMulticastInlineDelegate OnPickerCancel; // 0x50(0x10)
		FMulticastInlineDelegate OnPickerOptionMoved; // 0x60(0x10)
		FMulticastInlineDelegate OnPickerOptionChosen; // 0x70(0x10)
		FMulticastInlineDelegate OnPickerRefreshItems; // 0x80(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x90(0x18) UNKNOWN PROPERTY
		TArray<FItemDefOptionData> CustomPickerMenuItems; // 0xA8(0x10)
		TArray<FSquadQuickChatOptionData> SquadChatMenuItems; // 0xB8(0x10)
		TMap<UItemDefinitionBase*, FTrackedTrapTimeAndCount> TrackedTrapsMap; // 0xC8(0x50)
		unsigned char UnknownData01_6[0x8]; // 0x118(0x8) UNKNOWN PROPERTY
		UFortPickerData* PickerData; // 0x120(0x8)
		TArray<UFortSchematicItem*> AccountTrapSchematics; // 0x128(0x10)
		TArray<FFortPickerTemporaryWheel> AvailableWheels; // 0x138(0x10)
		int32_t CurrentWheelIndex; // 0x148(0x4)
		unsigned char UnknownData02_6[0x14]; // 0x14C(0x14) UNKNOWN PROPERTY
		TMap<FGameplayTag, FText> CategoryTitles; // 0x160(0x50)
		TArray<FGameplayTag> CategoryTags; // 0x1B0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPickerContext");
			return ret;
		}

		bool UseLeftThumbstick(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEE1590(relative to base address)
		void ShowRadialPickerMenu(EFortPickerToDisplay PickerType, int32_t WheelIndex, UObject* ContextObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE08C4(relative to base address)
		void SetFortPickerData(UFortPickerData* Data); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749B24480(relative to base address)
		void RestoreInputAxes(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF6A8(relative to base address)
		void PickerOptionAccepted(int32_t Option); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEC84(relative to base address)
		void PickerCanceled(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEC70(relative to base address)
		void LegacySwitchToAdjacentWheel(int32_t SelectionDirection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDCE54(relative to base address)
		void GetRadialPickerOptionItem(int32_t Index, UFortItem* Item, bool& bOptionEnabled); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA888(relative to base address)
		void GetRadialPickerOptionImageAndLabel(int32_t Index, FText& Label, FSlateBrush& Brush, TWeakObjectPtr<UTexture2D*>& Icon, bool& bOptionEnabled, bool& bIsLocked); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA594(relative to base address)
		void GetPickerWheelAdjacency(bool& bCanPageLeft, bool& bCanPageRight); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED9F50(relative to base address)
		int32_t GetNumPickerOptions(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9CF0(relative to base address)
		UFortItem GetListPickerOption(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9614(relative to base address)
		int32_t GetCurrentWheelIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED84E4(relative to base address)
		FText GetCurrentPickerDisplayName(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED83D0(relative to base address)
		void GetAdjacentPickerWheelInformation(int32_t Direction, FText& AdjacentTitle, bool& bCanPageThisDirection); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FED7504(relative to base address)
		bool DoesRadialCloseOnRelease(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED641C(relative to base address)
	};


	// Class FortniteUI.FortSettingsContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0xE0 (0x110 - 0x30)
	class UFortSettingsContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_3[0xC]; // 0x30(0xC) UNKNOWN PROPERTY
		float MinGammaValue; // 0x3C(0x4)
		float MaxGammaValue; // 0x40(0x4)
		unsigned char UnknownData01_7[0xCC]; // 0x44(0xCC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsContext");
			return ret;
		}

		void YawInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE18A4(relative to base address)
		void YawInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE1824(relative to base address)
		void YawForMotionInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE17A4(relative to base address)
		void YawForMotionInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE17A4(relative to base address)
		void UpdateGammaSettings(float GammaValue); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FEE14AC(relative to base address)
		void TouchVerticalSensitivityValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE13FC(relative to base address)
		void TouchTargetingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE137C(relative to base address)
		void TouchLookSensitivityChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE12FC(relative to base address)
		void TouchLookAccelerationMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE127C(relative to base address)
		void TouchEditModeMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE11FC(relative to base address)
		void TouchDragScopedSensitivityValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE117C(relative to base address)
		void TouchBuildingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE10FC(relative to base address)
		void TargetingToggleChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE1044(relative to base address)
		void TargetingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0FC4(relative to base address)
		void TapInteractChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0F44(relative to base address)
		void SprintToggleChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0EC4(relative to base address)
		void SprintCancelsReloadChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C079284(relative to base address)
		void SoundFXVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0E44(relative to base address)
		void SliderSettingReset(ESettingType InSettingType, FText NameText, float PreviousValue, float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0CCC(relative to base address)
		void SliderSettingChanged(ESettingType InSettingType, FText NameText, float PreviousValue, float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0B54(relative to base address)
		void ShowViewerCountChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0AD4(relative to base address)
		void ShowTemperatureChanged(bool IsChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0A64(relative to base address)
		void ShowSeasonLevelChanged(bool bInChanged); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE09D0(relative to base address)
		bool ShouldSeparateSettingsAndMoreMenus(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749376D14(relative to base address)
		void SetVoiceChatSettings(ESocialCommsPermission NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0740(relative to base address)
		void SetVoiceChatPTTEnabled(bool bNewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE06C0(relative to base address)
		void SetVoiceChat3DEnabled(bool bNewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0640(relative to base address)
		void SetVisualizeAudioSources(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE05C0(relative to base address)
		void SetSubtitlesEnabled(bool bNewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0540(relative to base address)
		void SetShowVoiceIndicators(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0440(relative to base address)
		void SetQuality(int32_t NewQuality); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE03D0(relative to base address)
		void SetLockPrimaryInputMethodToMouse(bool bLock); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE02D0(relative to base address)
		void SetIgnoreGamepadInput(bool bIgnore); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE00C0(relative to base address)
		void SetFOVMinimum(float NewFOVMinimum); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE0040(relative to base address)
		void SetFOVMaximum(float NewFOVMaximum); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFFC0(relative to base address)
		void SetEnableRudderControl(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFF40(relative to base address)
		void SetColorBlindStrength(int32_t InColorBlindStrength); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFE04(relative to base address)
		void SetColorBlindMode(int32_t InMode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFD84(relative to base address)
		void SetAutoJoinGameVoiceChannel(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFD04(relative to base address)
		void SetAllowSidekickFeature1(bool bInChecked); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FEDFC70(relative to base address)
		void SetAllowGameVolumeWhenMinimized(EFortAllowBackgroundAudioSetting NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFBEC(relative to base address)
		void ScopedMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFADC(relative to base address)
		void SafeZoneChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDFA6C(relative to base address)
		void RudderMaxThrottleChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF9EC(relative to base address)
		void RudderDeadZoneChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF96C(relative to base address)
		void RotatorSettingReset(ESettingType InSettingType, FText NameText, int32_t PreviousValue, int32_t NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF814(relative to base address)
		void RotatorSettingChanged(ESettingType InSettingType, FText NameText, int32_t PreviousValue, int32_t NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF6BC(relative to base address)
		void ResetGamepadMoveStickDeadZone(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF63C(relative to base address)
		void ResetGamepadLookStickDeadZone(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDF5D0(relative to base address)
		void PowerSaverModeChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEF84(relative to base address)
		void PitchInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEF04(relative to base address)
		void PitchInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEE84(relative to base address)
		void PitchForMotionInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEE04(relative to base address)
		void PitchForMotionInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEE04(relative to base address)
		void PitchForAircraftSecondaryInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDED84(relative to base address)
		void PitchForAircraftSecondaryInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDED84(relative to base address)
		void PitchForAircraftPrimaryInversionReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDED04(relative to base address)
		void PitchForAircraftPrimaryInversionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDED04(relative to base address)
		void PeripheralLightingChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEBF0(relative to base address)
		void OpenSettingsIfSaved(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEB78(relative to base address)
		void OnTurboBuildReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEAF8(relative to base address)
		void OnTurboBuildChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDEA78(relative to base address)
		void OnTouchEditChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE9F8(relative to base address)
		void OnSmartBuildChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE958(relative to base address)
		void OnSlideButtonHoldTimeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE8D8(relative to base address)
		void OnShowGlobalChatEnabledChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE858(relative to base address)
		void OnShadowPlayHighlightsChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE7D8(relative to base address)
		void OnReplayRecordingPreferenceChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE758(relative to base address)
		void OnQuickEditChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE6D8(relative to base address)
		void OnPlayerSurveysAllowedChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE658(relative to base address)
		void OnPlaceDangerMarkerWhenTargetingChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE5D8(relative to base address)
		void OnLocalNotificationsChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE558(relative to base address)
		void OnLargeTeamsReplayRecordingPreferenceChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE4D8(relative to base address)
		void OnHUDScaleChanged(float bInHUDScale); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE458(relative to base address)
		void OnGamepadAutoRunChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE3D8(relative to base address)
		void OnForceFeedbackChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE358(relative to base address)
		void OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE2D8(relative to base address)
		void OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE258(relative to base address)
		void OnEnableTryBuildOnFocusChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE1D8(relative to base address)
		void OnEnablePreferredItemSlotsChanged(bool bInChanged); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE138(relative to base address)
		void OnEditModeAimAssistChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE0B8(relative to base address)
		void OnEditConfirmOnReleaseChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDE038(relative to base address)
		void OnEditButtonHoldTimeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDFB8(relative to base address)
		void OnDisablePreEditsWhenPlacingBuildingChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDF38(relative to base address)
		void OnCrossplayPreferenceChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDEB8(relative to base address)
		void OnCreativeTurboDeleteReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDE38(relative to base address)
		void OnCreativeTurboDeleteChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDE38(relative to base address)
		void OnCreativeModeReplayRecordingPreferenceChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDDB8(relative to base address)
		void OnContextTutorialChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDD38(relative to base address)
		void OnClipRemindersEnabledChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDCA4(relative to base address)
		void OnBuildingPossessionChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDC24(relative to base address)
		void OnAutoSortConsumablesToRightChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDBA4(relative to base address)
		void OnAutoPickupWeaponsConsolePCChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDB24(relative to base address)
		void OnAutoPickupWeaponsChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDAA4(relative to base address)
		void OnAutoOpenDoorsChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDDA24(relative to base address)
		void OnAutoClamberChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD990(relative to base address)
		void OnAutoChangeMaterialReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD910(relative to base address)
		void OnAutoChangeMaterialChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD890(relative to base address)
		void OnAimAssistReset(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD810(relative to base address)
		void OnAimAssistChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD790(relative to base address)
		void MusicVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD710(relative to base address)
		void MouseSensitivityYChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD690(relative to base address)
		void MouseSensitivityXChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD610(relative to base address)
		void MouseSensitivityMultiplierForAircraftChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD590(relative to base address)
		void MotionTargetingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD510(relative to base address)
		void MotionScopedMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD490(relative to base address)
		void MotionHarvestingToolMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD410(relative to base address)
		void MotionControlEnabledValueChanged(bool NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD390(relative to base address)
		void MotionAxisValueChanged(int32_t NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD310(relative to base address)
		void MasterVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDD280(relative to base address)
		void InWorldInteractChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC940(relative to base address)
		void HoldToSwapPickupChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC8C0(relative to base address)
		void HideOtherPlayerNamesChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC840(relative to base address)
		void HiddenMatchmakingDelayMaxReset(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC818(relative to base address)
		void HiddenMatchmakingDelayMaxChanged(int32_t InValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDC798(relative to base address)
		void GyroSensitivityValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDBCA0(relative to base address)
		bool GetYawInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBC7C(relative to base address)
		bool GetYawForMotionInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBC58(relative to base address)
		ESocialCommsPermission GetVoiceChatSettings(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBC1C(relative to base address)
		bool GetVoiceChatPTTEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBBF8(relative to base address)
		bool GetVoiceChat3DEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBBD4(relative to base address)
		bool GetVisualizeAudioSources(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDBBB0(relative to base address)
		bool GetTurboBuild(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB86C(relative to base address)
		float GetTouchVerticalSensitivityValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB588(relative to base address)
		float GetTouchTargetingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB560(relative to base address)
		float GetTouchLookSensitivityValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB538(relative to base address)
		float GetTouchLookAccelerationMultiplier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB510(relative to base address)
		bool GetTouchEditState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB4EC(relative to base address)
		float GetTouchEditModeMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB4C4(relative to base address)
		float GetTouchDragScopedSensitivityValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB49C(relative to base address)
		float GetTouchBuildingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB474(relative to base address)
		bool GetTargetTypeIndicatorVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB288(relative to base address)
		bool GetTargetingToggleState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB2EC(relative to base address)
		float GetTargetingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB2C4(relative to base address)
		bool GetTapInteractState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB264(relative to base address)
		bool GetSubtitlesEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB240(relative to base address)
		bool GetSprintToggleState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB030(relative to base address)
		bool GetSprintCancelsReloadState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		float GetSoundFXVolumeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDB008(relative to base address)
		bool GetSmartBuildState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAFCC(relative to base address)
		float GetSliderSettingValue(ESettingType InSettingType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDAF3C(relative to base address)
		float GetSlideButtonHoldTimeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAF14(relative to base address)
		bool GetShowVoiceIndicators(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAEF0(relative to base address)
		bool GetShowViewerCountEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAECC(relative to base address)
		bool GetShowTemperature(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDAEA8(relative to base address)
		bool GetShowSeasonLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAE68(relative to base address)
		bool GetShowGlobalChatEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAE44(relative to base address)
		bool GetShadowPlayHighlightsEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAE20(relative to base address)
		TArray GetSettingDisplayNames(ESettingType InSettingType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDAD5C(relative to base address)
		float GetScopedMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAD08(relative to base address)
		float GetSafeZoneValue(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDACE0(relative to base address)
		float GetRudderMaxThrottle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDACB8(relative to base address)
		float GetRudderDeadZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAC90(relative to base address)
		int32_t GetRotatorSettingValue(ESettingType InSettingType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDAC04(relative to base address)
		bool GetReplayRecordingEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDAAD4(relative to base address)
		bool GetQuickEditState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA330(relative to base address)
		int32_t GetQuality(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA248(relative to base address)
		EFortPreferredItemSlotItemType GetPreferredItemSlotType(int32_t SlotIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA1BC(relative to base address)
		bool GetPowerSaverMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA198(relative to base address)
		bool GetPlayerSurveysAllowed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA138(relative to base address)
		bool GetPlaceDangerMarkerWhenTargeting(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA0F0(relative to base address)
		bool GetPitchInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA0CC(relative to base address)
		bool GetPitchForMotionInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA0A8(relative to base address)
		bool GetPitchForAircraftSecondaryInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA084(relative to base address)
		bool GetPitchForAircraftPrimaryInversionState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDA060(relative to base address)
		bool GetPeripheralLightingEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9F2C(relative to base address)
		float GetMusicVolumeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9B00(relative to base address)
		FVector2D GetMouseSensitivityValue(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9AD0(relative to base address)
		float GetMouseSensitivityMultiplierForAircraft(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9AA8(relative to base address)
		float GetMotionTargetingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9A80(relative to base address)
		float GetMotionScopedMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9A58(relative to base address)
		float GetMotionHarvestingToolMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9A30(relative to base address)
		bool GetMotionControlsEnabledValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9A0C(relative to base address)
		int32_t GetMotionAxisValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED99E8(relative to base address)
		TArray GetMotionAxisNames(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED99AC(relative to base address)
		float GetMasterVolumeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED97B0(relative to base address)
		bool GetLockPrimaryInputMethodToMouse(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED978C(relative to base address)
		bool GetLocalNotificationsState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED96D0(relative to base address)
		bool GetLargeTeamsReplayRecordingEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED95C4(relative to base address)
		bool GetInWorldInteractState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9324(relative to base address)
		bool GetIgnoreGamepadInput(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9300(relative to base address)
		float GetHUDScaleRaw(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9224(relative to base address)
		float GetHUDScale(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED91FC(relative to base address)
		bool GetHoldToSwapPickupState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED92DC(relative to base address)
		EHitNumbersMode GetHitNumbersMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED92B8(relative to base address)
		EHitFeedbackMode GetHitFeedbackMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9294(relative to base address)
		bool GetHideOtherPlayerNames(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9270(relative to base address)
		int32_t GetHiddenMatchmakingDelayMax(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED924C(relative to base address)
		float GetGyroSensitivityValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED90A8(relative to base address)
		float GetGammaSettings(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9080(relative to base address)
		float GetGamepadTargetingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9058(relative to base address)
		float GetGamepadScopedMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9030(relative to base address)
		float GetGamepadMoveStickDeadZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9008(relative to base address)
		float GetGamepadLookStickDeadZone(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8FE0(relative to base address)
		FVector2D GetGamepadLookSensitivityValue(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8FB0(relative to base address)
		float GetGamepadEditModeMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8F88(relative to base address)
		float GetGamepadBuildingMultiplierValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8F60(relative to base address)
		bool GetGamepadAutoRunState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8F3C(relative to base address)
		float GetFOVMinimum(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8D78(relative to base address)
		float GetFOVMaximum(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8D50(relative to base address)
		bool GetForceFeedbackState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8EF4(relative to base address)
		bool GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8DE8(relative to base address)
		bool GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8DC4(relative to base address)
		bool GetFirstPersonCameraState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8DA0(relative to base address)
		bool GetEnableTryBuildOnFocus(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8D2C(relative to base address)
		bool GetEnableRudderControl(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8D08(relative to base address)
		bool GetEnablePreferredItemSlots(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8CC8(relative to base address)
		bool GetEditModeAimAssistState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8CA4(relative to base address)
		bool GetEditConfirmOnReleaseState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8C80(relative to base address)
		float GetEditButtonHoldTimeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8C58(relative to base address)
		bool GetDoubleTapAutorunToggleState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8B88(relative to base address)
		bool GetDisablePreEditsWhenPlacingBuildingState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8B64(relative to base address)
		float GetDialogVolumeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8918(relative to base address)
		float GetDamageNumbersScale(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED84FC(relative to base address)
		bool GetCrossplayPreference(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8258(relative to base address)
		bool GetCreativeTurboDelete(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8234(relative to base address)
		bool GetCreativeModeReplayRecordingEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8210(relative to base address)
		bool GetContextTutorialState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8060(relative to base address)
		int32_t GetColorBlindStrength(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED803C(relative to base address)
		TArray GetColorBlindModeNames(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED8000(relative to base address)
		int32_t GetColorBlindMode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7FDC(relative to base address)
		bool GetClipRemindersEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7FA0(relative to base address)
		float GetCinematicsVolume(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7F78(relative to base address)
		float GetChatVolumeValue(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7E8C(relative to base address)
		bool GetBuildingPossessionShown(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7D5C(relative to base address)
		bool GetAutoSortConsumablesToRight(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7858(relative to base address)
		EAutorunLockZonePreferenceMobile GetAutorunLockZonePreferenceMobile(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED787C(relative to base address)
		bool GetAutoPickupWeaponsConsolePC(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7834(relative to base address)
		bool GetAutoPickupWeapons(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7810(relative to base address)
		bool GetAutoOpenDoors(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED77EC(relative to base address)
		bool GetAutoJoinGameVoiceChannel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED77C8(relative to base address)
		bool GetAutoEquipState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED77A4(relative to base address)
		bool GetAutoClamberEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7768(relative to base address)
		bool GetAutoChangeMaterial(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7744(relative to base address)
		bool GetAnonymousModeEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7720(relative to base address)
		bool GetAnonymousCharacterModeEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED76FC(relative to base address)
		bool GetAllowSidekickFeature1(); // Flags: Final|Native|Public|Const, Memory Exec: 0x7FF74FED76C0(relative to base address)
		EFortAllowBackgroundAudioSetting GetAllowGameVolumeWhenMinimized(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7684(relative to base address)
		bool GetAimAssistState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7660(relative to base address)
		void GamepadTargetingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED7214(relative to base address)
		void GamepadScopedMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED7194(relative to base address)
		void GamepadMoveStickDeadZoneChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FED7114(relative to base address)
		void GamepadLookStickDeadZoneChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FED7094(relative to base address)
		void GamepadLookSensitivityYChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED7014(relative to base address)
		void GamepadLookSensitivityXChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6F94(relative to base address)
		void GamepadEditModeMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6F14(relative to base address)
		void GamepadBuildingMultiplierValueChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6E94(relative to base address)
		void FirstPersonCameraChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6BAC(relative to base address)
		void DoubleTapAutorunToggleChanged(bool bToggleState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6440(relative to base address)
		void DialogVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED62C0(relative to base address)
		void CinematicsVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5C18(relative to base address)
		void ChatVolumeChanged(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5B74(relative to base address)
		void AutorunLockZonePreferenceMobileChanged(int32_t InAutorunLockZonePreference); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED4EE4(relative to base address)
		void AutoEquipChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED4E64(relative to base address)
		void AnonymousModeChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED4AA0(relative to base address)
		void AnonymousCharacterModeChanged(bool bInChecked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED4A20(relative to base address)
	};


	// Class FortniteUI.FortStoreContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0xF0 (0x120 - 0x30)
	class UFortStoreContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x30(0x28) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnStoreStateChange; // 0x58(0x10)
		FMulticastInlineDelegate OnStoreSkipOpenChanged; // 0x68(0x10)
		TArray<FCardPackOffer> Offers; // 0x78(0x10)
		TArray<FCard> CardList; // 0x88(0x10)
		int32_t CardIndex; // 0x98(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x9C(0x4) UNKNOWN PROPERTY
		FOpenedCardPack OpenedCardPack; // 0xA0(0x10)
		EFortRarity LastCardRarity; // 0xB0(0x1)
		unsigned char UnknownData02_6[0x7]; // 0xB1(0x7) UNKNOWN PROPERTY
		TArray<FCard> PurchasedItemList; // 0xB8(0x10)
		TArray<UFortCardPackItem*> PurchasedCardPacks; // 0xC8(0x10)
		unsigned char UnknownData03_7[0x48]; // 0xD8(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreContext");
			return ret;
		}

		void SetSkipOpening(bool bSkipOpen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEE04C0(relative to base address)
		bool MakeChoice(int32_t ChoiceIdx, UFortAccountItemDefinition* ChoiceItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FEDCED4(relative to base address)
		bool IsWaitingForMcp(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCE3C(relative to base address)
		bool IsOpeningDirectPack(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCC14(relative to base address)
		bool IsItemMissingFromCollectionBook(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FEDCB20(relative to base address)
		EFortStoreState GetStoreState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7491C7738(relative to base address)
		bool GetSkipOpening(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C4E7FC4(relative to base address)
		int32_t GetPackOpeningLimit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9F10(relative to base address)
		int32_t GetOwnedSurvivorCount(UFortItem* SurvivorItem); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9E80(relative to base address)
		int32_t GetOwnedItemCount(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9DD8(relative to base address)
		int32_t GetNumUnopenedCardPacksRemaining(UFortCardPackItemDefinition* PackType, bool bCountChoicePacks); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED9D14(relative to base address)
		TArray GetChoiceCards(int32_t CardIdx); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7EB4(relative to base address)
		bool GetCard(int32_t CardIdx, FCard& ResultOut); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED7DA8(relative to base address)
		void FireInteractionAnalyticsEvent(FString Interaction, FString Details); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FED6ABC(relative to base address)
		bool ExitSummary(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6A50(relative to base address)
		bool ExitCurrencyStore(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6A0C(relative to base address)
		bool EnterCurrencyStore(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED6790(relative to base address)
		bool DoesItemSlotExistInCollectionBook(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FED6340(relative to base address)
		bool ChoiceResultComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5BF4(relative to base address)
		bool CardPackOpeningComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5B50(relative to base address)
		bool CardPackDestroyComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5B2C(relative to base address)
		bool CardFrontRevealComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5AF4(relative to base address)
		bool CardFlipComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5A5C(relative to base address)
		bool CardExitComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5A24(relative to base address)
		bool CardEntryComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED59EC(relative to base address)
		bool CardBackRevealComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED59B4(relative to base address)
		bool CardAddedToSummaryComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FED5990(relative to base address)
	};


	// Class FortniteUI.FortTooltipUIContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortTooltipUIContext : public UBlueprintContextBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTooltipUIContext");
			return ret;
		}

		bool HasTooltipStats(UObject* Object); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF27FDC(relative to base address)
		TArray GetUpgradeStats(UObject* Object, UFortTooltipContext* TooltipContext, int32_t UpgradeLevelDelta, bool bUseSummaryTooltip); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF26FA0(relative to base address)
		bool GetUIDataForTag(FGameplayTag& Tag, FFortTagUIData& OutData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF26E74(relative to base address)
		TArray GetTooltipStats(UObject* Object, UFortTooltipContext* TooltipContext, bool bSummaryStats); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF26B38(relative to base address)
		bool GetTooltipStat(UObject* Object, UFortTooltipContext* TooltipContext, FGameplayTag Token, FFortDisplayAttribute& OutDisplayAttribute, bool bUseSummaryTooltip); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF74FF26884(relative to base address)
		UFortTooltipLoadingWrapper GetTooltipLoadingWrapper(UObject* Object, bool bSummaryDescription); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF267BC(relative to base address)
		TArray GetTooltipAttributes(UObject* Object); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF266D0(relative to base address)
		bool GetDisplayNameAndMultiBrushForTag(FGameplayTag& Tag, FText& OutDisplayName, FFortMultiSizeBrush& OutBrush); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25490(relative to base address)
		bool GetDescription(UObject* Object, UFortTooltipContext* TooltipContext, TArray<FText>& OutDescription, bool bSummaryDescription); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF74FF25280(relative to base address)
		TArray GetComparisonStats(UObject* Object, UObject* ComparisonObject, UFortTooltipContext* TooltipContext, bool bUseSummaryTooltip); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF24F68(relative to base address)
		bool GetCombinedDescription(UObject* Object, UFortTooltipContext* TooltipContext, FText& OutDescription, bool bSummaryDescription); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF74FF24D88(relative to base address)
	};


	// Class FortniteUI.FortTutorialContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x118 (0x148 - 0x30)
	class UFortTutorialContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnUpdateTutorialAnnouncement; // 0x30(0x10)
		FMulticastInlineDelegate OnNewAnnouncementStartedOnClientDelegate; // 0x40(0x10)
		unsigned char UnknownData00_7[0xF8]; // 0x50(0xF8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTutorialContext");
			return ret;
		}

		void UpdateTutorialAnnouncement(FFortClientAnnouncementData_Tutorial AnnouncementData, bool bShow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2AB14(relative to base address)
		void UnhideTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24B5C(relative to base address)
		void UnhideAllTutorialCallouts(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A9BC(relative to base address)
		AFortClientAnnouncement TryGetActivePrimaryAnnouncement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2A96C(relative to base address)
		void TryClearingPendingQuest(UFortQuestItem* Quest); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A8E8(relative to base address)
		void StartTutorial(FName WidgetName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A824(relative to base address)
		void SkipTutorial(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A7FC(relative to base address)
		bool ShouldPromptToSkipTutorial(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2A754(relative to base address)
		void OnNewAnnouncementStartedOnClient(AFortClientAnnouncement* NewAnnouncement); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF2900C(relative to base address)
		bool IsTutorialCalloutVisible(FName WidgetName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF28B80(relative to base address)
		bool IsObjectiveNextTutorialObjective(UFortQuestItem* Quest, FName TutorialObjectiveName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2880C(relative to base address)
		void HideTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF281E4(relative to base address)
		bool GetTutorialData(FName& TutorialObjectiveName, FFortUITutorialData& OutTutorialData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF26D3C(relative to base address)
		void GetTutorialCallouts(TArray<FName>& WidgetNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF26C60(relative to base address)
		void GetHiddenTutorialCallouts(TArray<FName>& WidgetNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF25738(relative to base address)
		void FinishTutorial(UFortQuestItem* Quest, FName WidgetName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24C58(relative to base address)
		void EnableTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24B5C(relative to base address)
		void DisableTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24A60(relative to base address)
		void ContinueTutorial(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24724(relative to base address)
		void ClearTutorialCallouts(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF246F8(relative to base address)
		bool CanStartTutorial(UFortQuestItem* Quest, FName WidgetName, ETutorialType TutorialType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24530(relative to base address)
	};


	// Class FortniteUI.FortUIDataConfigurationContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortUIDataConfigurationContext : public UBlueprintContextBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIDataConfigurationContext");
			return ret;
		}

		bool UseSpecificPinataWeapon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2AD2C(relative to base address)
		bool IsQuestVOEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28A44(relative to base address)
		bool IsLimitedToES2Features(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF287E0(relative to base address)
		bool IsChatEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28328(relative to base address)
		TWeakObjectPtr GetSoftWidgetClassForAlias(FGameplayTag& WidgetAlias); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25FDC(relative to base address)
		TArray GetItemTypesToUseVaultCamera(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25838(relative to base address)
		TWeakObjectPtr GetHUDLayoutToolV2SoftClass(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF256F0(relative to base address)
		FPostProcessSettings GetFrontEndFFSettings(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25608(relative to base address)
		bool AreSocialFeaturesEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF242B4(relative to base address)
		bool ArePartyFeaturesEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2427C(relative to base address)
	};


	// Class FortniteUI.PrmSubsystem
	// Inherited from ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0xD0 (0x100 - 0x30)
	class UPrmSubsystem : public ULocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x30(0x18) UNKNOWN PROPERTY
		TArray<UPrmMotdSurface*> MotdSurfaces; // 0x48(0x10)
		TArray<FString> DisabledMotdSurfaces; // 0x58(0x10)
		UMotdListViewModel* Motds; // 0x68(0x8)
		UMotdChannel* MotdChannel; // 0x70(0x8)
		unsigned char UnknownData01_7[0x88]; // 0x78(0x88) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PrmSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.FortConversationTask
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortConversationTask : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortConversationTask");
			return ret;
		}
	};


	// Class FortniteUI.CreativeContentBrowserItemInfo
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UCreativeContentBrowserItemInfo : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativeContentBrowserItemInfo");
			return ret;
		}

		void UpdateWithText(FText& DisplayName, FText& TypeName, FText& Description); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateWithLevel(FLevelInstanceListElement& LevelInstanceElement); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateWithFortItem(UFortItem* Item); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowDescription(bool bShow); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeDynamicUIDirector
	// Inherited from ADynamicUIDirectorBase -> AActor -> UObject
	// Size: 0x148 (0x3F8 - 0x2B0)
	class AFortCreativeDynamicUIDirector : public ADynamicUIDirectorBase	
	{
	public:
		TMap<FGameplayTag, UDynamicUIScene*> CreativeScenesMap; // 0x2B0(0x50)
		TArray<FMinigameStateScenes> MinigameStateScenes; // 0x300(0x10)
		TMap<FGameplayTag, UDynamicUIScene*> ActiveScenesMap; // 0x310(0x50)
		unsigned char UnknownData00_7[0x98]; // 0x360(0x98) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeDynamicUIDirector");
			return ret;
		}

		void OnPlayerEnteredSpatialGameplayActor(FEventMessageTag Channel, FPlayerEnterSpatialActorContext& Context); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF2908C(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27A54(relative to base address)
	};


	// Class FortniteUI.FortCoreGamerObjectiveRadial
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x300 - 0x2B0)
	class UFortCoreGamerObjectiveRadial : public UUserWidget	
	{
	public:
		int32_t TrackedIndex; // 0x2B0(0x4)
		unsigned char UnknownData00_7[0x4C]; // 0x2B4(0x4C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCoreGamerObjectiveRadial");
			return ret;
		}

		void UpdateCaptureState(ECaptureState NewCaptureState, ECaptureState OldCaptureState, char TrackedStateOwnerTeam, float Progress); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF2A9D4(relative to base address)
		void OnTrackedObjectiveUpdated(FTrackedObjective& CurrentTrackedObjective); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTrackedObjectiveSet(FTrackedObjective& NewTrackedObjective); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveOwningTeamChanged(char NewTeam, char OldTeam, bool bForceUpdate); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveDisabled(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveContested(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveCaptured(char OwningTeam); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveBeingNeutralized(char NeutralizingTeam, float Percentage); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveBeingDeneutralized(char DeneutralizingTeam, float Percentage); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveBeingDecaptured(char DecapturingTeam, float Percentage); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveBeingCaptured(char CapturingTeam, float Percentage); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnObjectiveBecameNeutral(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameStateChanged(EFortMinigameState NewMinigameState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsUsingGameCamera(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28E54(relative to base address)
		void HandleTrackedObjectiveUpdated(int32_t InTrackedIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27EDC(relative to base address)
		void HandleTrackedObjectiveTeamUpdated(int32_t InTrackedIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27E5C(relative to base address)
		UFortMinigameObjectiveTrackerComponent GetObjectiveTracker(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25CB0(relative to base address)
		float GetNormalizedDistanceFromScreenCenter(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF25C68(relative to base address)
		AFortMinigame GetMinigame(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25BD4(relative to base address)
	};


	// Class FortniteUI.FortCoreGamerObjectiveWidget
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x448 - 0x3D0)
	class UFortCoreGamerObjectiveWidget : public UMinigameWidgetBase	
	{
	public:
		UClass* ObjectiveRadialClass; // 0x3D0(0x8)
		UClass* DestructibleTrackerClass; // 0x3D8(0x8)
		FMargin ObjectivePadding; // 0x3E0(0x10)
		UHorizontalBox* ObjectiveContainer; // 0x3F0(0x8)
		TMap<int32_t, UFortCoreGamerObjectiveRadial*> TrackedObjectiveWidgetMap; // 0x3F8(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCoreGamerObjectiveWidget");
			return ret;
		}

		void HandleTrackedObjectiveRemoved(int32_t TrackedIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27DDC(relative to base address)
		void HandleTrackedObjectiveAdded(int32_t TrackedIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27D5C(relative to base address)
		char GetOwnerPlayerTeam(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25CD4(relative to base address)
	};


	// Class FortniteUI.FortCoreGamerScoreTracker
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3D8 - 0x3D0)
	class UFortCoreGamerScoreTracker : public UMinigameWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCoreGamerScoreTracker");
			return ret;
		}

		void PopulateTeamRows(TArray<UFortCoreGamerScoreTrackerRow*> ScoreTrackerRows); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF29584(relative to base address)
		void OnUpdate(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSeparatorVisibilitySet(bool bVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetTimeRemainingText(bool& bHasTimeLimit); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF26620(relative to base address)
		FText GetTeamNameForPlayerState(AFortPlayerState* PlayerState); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2649C(relative to base address)
		FText GetTeamName(int32_t InTeamIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF263C4(relative to base address)
		void GetTeamData(int32_t DesiredTeamIndex, FMinigameTeam& OutTeam, bool& bFoundTeam); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF26248(relative to base address)
		int32_t GetScoreForTeam(int32_t InTeamIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25EF0(relative to base address)
		int32_t GetScoreForPlayer(APlayerState* InPlayerState); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25E60(relative to base address)
		TArray GetRankings(int32_t& OutLocalRankingArrayIndex); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25CF8(relative to base address)
		int32_t GetLocalTeamIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2590C(relative to base address)
		int32_t GetHighestOpposingTeamIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25814(relative to base address)
		int32_t GetGoalScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25690(relative to base address)
	};


	// Class FortniteUI.FortCoreGamerScoreTrackerRow
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortCoreGamerScoreTrackerRow : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCoreGamerScoreTrackerRow");
			return ret;
		}

		void OnRowDataSet(int32_t TeamPlacement, FText& TeamName, int32_t TeamScore, bool bIsLocalTeam); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeAdsView
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortCreativeAdsView : public UUserWidget	
	{
	public:
		TArray<FCreativeAdData> CreativeAdList; // 0x2B0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeAdsView");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeAdTile
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x348 - 0x2D8)
	class UFortCreativeAdTile : public UCommonUserWidget	
	{
	public:
		UEpicCMSImage* Image_CreativeAd; // 0x2D8(0x8)
		FCreativeAdData CMSAdEntry; // 0x2E0(0x68)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeAdTile");
			return ret;
		}

		void PopulateAdTile(FCreativeAdData& Entry); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF29434(relative to base address)
		void OnCMSDataUpdated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeAffiliatePanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortCreativeAffiliatePanel : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeAffiliatePanel");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeBossInfo
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x408 - 0x3D0)
	class UFortCreativeBossInfo : public UMinigameWidgetBase	
	{
	public:
		bool bShowHealthbarIfLocalPlayerIsBoss; // 0x3D0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3D1(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* Text_PlayerName; // 0x3D8(0x8)
		UImage* Image_HealthBar; // 0x3E0(0x8)
		UImage* Image_ShieldBar; // 0x3E8(0x8)
		UImage* Image_DBNOBar; // 0x3F0(0x8)
		AFortPlayerStateAthena* BossPlayerState; // 0x3F8(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x400(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeBossInfo");
			return ret;
		}

		void OnBossPlayerStateChanged(AFortPlayerStateAthena* PlayerState, UCreativePlayerHealthInfoComponent* HealthInfoComponent); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF28EB4(relative to base address)
		void HandleHitPointsChanged(AFortPlayerState* PlayerState, float Health, float HealthMax, float Shield, float ShieldMax); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27344(relative to base address)
	};


	// Class FortniteUI.FortCreativeCaptureScreenshotHUD
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UFortCreativeCaptureScreenshotHUD : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCaptureScreenshotHUD");
			return ret;
		}

		void ResetPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29E1C(relative to base address)
		void HandleButtonResetClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF2731C(relative to base address)
		void HandleButtonConfirmClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF272F4(relative to base address)
		void HandleButtonCancelClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF272CC(relative to base address)
		void CancelPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF246E4(relative to base address)
		bool BeginPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF242E0(relative to base address)
		void AcceptPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF23FDC(relative to base address)
	};


	// Class FortniteUI.FortCreativeChannelBrowser
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortCreativeChannelBrowser : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeChannelBrowser");
			return ret;
		}

		bool ShouldShowChannelDetails(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A778(relative to base address)
		void RequestCloseUI(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29940(relative to base address)
		TMap GetSortedDeviceMap(TMap<AActor*, FText>& InDeviceMap); // Flags: Final|Native|Static|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF2609C(relative to base address)
	};


	// Class FortniteUI.FortCreativeDeviceBrowser
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x340 (0x730 - 0x3F0)
	class UFortCreativeDeviceBrowser : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		UCommonListView* ListView_Devices; // 0x408(0x8)
		UFortCreativeDeviceBrowserListView* ListView_Subscriptions; // 0x410(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x418(0x10) UNKNOWN PROPERTY
		TArray<int32_t> CreativeDeviceInfo; // 0x428(0x10)
		TMap<int32_t, FCreativeDeviceInfo> CreativeDeviceInfoMap; // 0x438(0x50)
		TMap<int32_t, FCreativeDeviceCached> KnownDevicesMap; // 0x488(0x50)
		unsigned char UnknownData02_6[0x58]; // 0x4D8(0x58) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Select; // 0x530(0x8)
		UCommonButtonBase* Button_Teleport; // 0x538(0x8)
		TWeakObjectPtr<UObject*> Selected_ListView_Devices_Teleport_Target; // 0x540(0x8)
		TWeakObjectPtr<UObject*> Selected_ListView_Subscriptions_Teleport_Target; // 0x548(0x8)
		unsigned char UnknownData03_6[0x18]; // 0x550(0x18) UNKNOWN PROPERTY
		FString CurrentSearchString; // 0x568(0x10)
		UCommonButtonBase* Button_TextSearch; // 0x578(0x8)
		unsigned char UnknownData04_6[0x2]; // 0x580(0x2) UNKNOWN PROPERTY
		EDeviceTrackingSortingType CurrentSort; // 0x582(0x1)
		EDeviceTrackingFilterType CurrentFilter; // 0x583(0x1)
		FName CurrentSortName; // 0x584(0x4)
		FName CurrentFilterName; // 0x588(0x4)
		unsigned char UnknownData05_6[0x4]; // 0x58C(0x4) UNKNOWN PROPERTY
		UAthenaCustomizationPickerSortAndFilterBlade* Blade_SortAndFilter; // 0x590(0x8)
		UFortCTAButton* Button_SortAndFilter; // 0x598(0x8)
		UCommonButtonBase* Button_CloseSortAndFilterBlade; // 0x5A0(0x8)
		UCommonButtonBase* Button_Back; // 0x5A8(0x8)
		UCommonTextBlock* Text_SortTag; // 0x5B0(0x8)
		UCommonTextBlock* Text_FilterTag; // 0x5B8(0x8)
		EDeviceTrackingSortingType DefaultSort; // 0x5C0(0x1)
		unsigned char UnknownData06_6[0x7]; // 0x5C1(0x7) UNKNOWN PROPERTY
		TMap<EDeviceTrackingSortingType, FName> SortEnumToSortNameMap; // 0x5C8(0x50)
		TMap<FName, FText> SortNameToSortDisplayText; // 0x618(0x50)
		EDeviceTrackingFilterType DefaultFilter; // 0x668(0x1)
		unsigned char UnknownData07_6[0x7]; // 0x669(0x7) UNKNOWN PROPERTY
		TMap<EDeviceTrackingFilterType, FName> FilterEnumToFilterNameMap; // 0x670(0x50)
		TMap<FName, FText> FilterNameToFilterDisplayText; // 0x6C0(0x50)
		unsigned char UnknownData08_6[0x8]; // 0x710(0x8) UNKNOWN PROPERTY
		UCommonListView* ListView_Traversal_Device; // 0x718(0x8)
		UFortCreativeDeviceBrowserListView* ListView_Traversal_Subscriptions; // 0x720(0x8)
		UWidget* TraversalDialog; // 0x728(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeDeviceBrowser");
			return ret;
		}

		void SetSortByName(FName SortName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A190(relative to base address)
		void SetSort(EDeviceTrackingSortingType NewSortToUse); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A110(relative to base address)
		void SetSearchString(FString SearchString); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A080(relative to base address)
		void SetFilterByName(FName FilterName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF29F74(relative to base address)
		void SetFilter(EDeviceTrackingFilterType NewFilterToUse); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF29EF4(relative to base address)
		void RequestTeleportByListItem(UObject* ListItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29D88(relative to base address)
		void RequestTeleportByGUID(int32_t TeleportTargetGUID); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29D08(relative to base address)
		void RequestTeleport(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29CDC(relative to base address)
		bool RequestSelectDevice(int32_t DeviceTrackingGUIDToAssign); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29C50(relative to base address)
		bool RequestPageBasicDeviceTrackingInfos(bool bAddRequestedPageToCurrentPage, FString SearchString, EDeviceTrackingFilterType Filter, EDeviceTrackingSortingType Sort); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29AEC(relative to base address)
		bool RequestPage(bool bAddRequestedPageToCurrentPage, FString SearchString, EDeviceTrackingFilterType& Filter, EDeviceTrackingSortingType& SortToUse); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF2996C(relative to base address)
		void RequestCloseUI(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29940(relative to base address)
		void OpenTraversalDialog(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF292A4(relative to base address)
		void OnTeleporting(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectedDeviceNoSubscriptions(FCreativeDeviceInfo& SelectedDeviceInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectedDeviceInfoFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnListViewRefreshNeeded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeviceInfosPageUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeviceDetailsInfoReceived(FCreativeDeviceInfo& SelectedDeviceInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTraversalEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28B5C(relative to base address)
		bool IsTraversalDialogOpen(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28B44(relative to base address)
		bool IsTraversalAllowed(int32_t DeviceTrackingGUID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28AB8(relative to base address)
		bool IsTeleportEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28A94(relative to base address)
		bool IsTeleportAllowed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28A70(relative to base address)
		bool IsBrowsingSubscriptions(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28304(relative to base address)
		bool IsBrowsingDevices(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF282E0(relative to base address)
		void HandleButtonTextSearchClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		AActor GetTeleportActorFromListViewObject(UObject* ListViewObject); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		float GetSearchInputDelay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25FAC(relative to base address)
		float GetScrollOffsetToRequestNewPage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25F7C(relative to base address)
		float GetRequestDelay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25E30(relative to base address)
		int32_t GetNumDevicesCached(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25C90(relative to base address)
		int32_t GetDeviceGUIDFromListViewObject(UObject* ListViewObject); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetCurrentTeleportTargetGUID(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2525C(relative to base address)
		AActor GetCurrentTeleportTarget(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25238(relative to base address)
		void DebugPrintCreativeDeviceWithBindingsInfo(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void DebugPrintCreativeDeviceInfo(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74921B8F8(relative to base address)
		UEventBrowserSubscriptionListEntryObj CreateSubscriptionListMessage(UObject* Outer, FString Message); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2497C(relative to base address)
		UEventBrowserSubscriptionListEntryObj CreateSubscriptionListItem(UObject* Outer, FCreativeDeviceSubscription& Subscription); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF24844(relative to base address)
		UEventBrowserSubscriptionListEntryObj CreateSubscriptionListHeader(UObject* Outer, bool bIsEvent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24768(relative to base address)
		void CloseTraversalDialog(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF24710(relative to base address)
	};


	// Class FortniteUI.EventBrowserSubscriptionListEntryObj
	// Inherited from UObject
	// Size: 0x70 (0x98 - 0x28)
	class UEventBrowserSubscriptionListEntryObj : public UObject	
	{
	public:
		bool bIsEvent; // 0x28(0x1)
		bool bIsHeader; // 0x29(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x2A(0x2) UNKNOWN PROPERTY
		int32_t DeviceTrackingGUID; // 0x2C(0x4)
		FString DisplayName; // 0x30(0x10)
		FCreativeDeviceSubscription Subscription; // 0x40(0x58)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EventBrowserSubscriptionListEntryObj");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeDeviceBrowserListEntry
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortCreativeDeviceBrowserListEntry : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x1390(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeDeviceBrowserListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeDeviceBrowserListView
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0xB30 - 0xB30)
	class UFortCreativeDeviceBrowserListView : public UCommonListView	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeDeviceBrowserListView");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeExitDialog
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortCreativeExitDialog : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_Confirm; // 0x3F0(0x8)
		UCommonButtonBase* Button_Back; // 0x3F8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x400(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeExitDialog");
			return ret;
		}

		void OnConfirmClicked(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF28F78(relative to base address)
		void OnBackClicked(); // Flags: Final|Native|Public, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortCreativeGameInfoMapTab
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x188 (0x578 - 0x3F0)
	class UFortCreativeGameInfoMapTab : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x3F0(0x28) UNKNOWN PROPERTY
		FAthenaMapScreenContainerTabInfo MapTabInfo; // 0x418(0x40)
		UFortCreativeMiniGameInfo* MinigameInfo_Header; // 0x458(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_MainContent; // 0x460(0x8)
		UFortIslandDescriptionWidget* IslandDescription_GameInfoContent; // 0x468(0x8)
		UWidget* Widget_LikeAndFavoriteContent; // 0x470(0x8)
		UWidget* Widget_MiscellaneousContent; // 0x478(0x8)
		UWidget* Widget_CreditsContent; // 0x480(0x8)
		UCommonButtonBase* Button_Exit; // 0x488(0x8)
		UFortExpressYourSupportFavoriteButton* Button_Favorite; // 0x490(0x8)
		UFortExpressYourSupportThumbsUpButton* Button_Like; // 0x498(0x8)
		UCommonButtonBase* Button_Respawn; // 0x4A0(0x8)
		UCommonButtonBase* Button_ClearSavedData; // 0x4A8(0x8)
		UCommonButtonBase* Button_GameInfoSubTab; // 0x4B0(0x8)
		UCommonButtonBase* Button_LikeAndFavoriteSubTab; // 0x4B8(0x8)
		UCommonButtonBase* Button_MiscellaneousSubTab; // 0x4C0(0x8)
		UCommonButtonBase* Button_CreditsSubTab; // 0x4C8(0x8)
		UCommonButtonGroupBase* ButtonGroup_SubTabs; // 0x4D0(0x8)
		UFortCreativeCreatorAttributions* CreatorAttributions; // 0x4D8(0x8)
		UClass* ConfirmationWindowClass; // 0x4E0(0x8)
		FText RespawnConfirmationTitle; // 0x4E8(0x10)
		FText RespawnConfirmationDescription; // 0x4F8(0x10)
		FText RespawnConfirmButtonName; // 0x508(0x10)
		FText ClearSavedDataConfirmationTitle; // 0x518(0x10)
		FText ClearSavedDataConfirmationDescription; // 0x528(0x10)
		FText ClearSavedDataConfirmButtonName; // 0x538(0x10)
		FText ClearSavedDataPostConfirmationText; // 0x548(0x10)
		TWeakObjectPtr<UTexture2D*> ClearSavedDataConfirmationIcon; // 0x558(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeGameInfoMapTab");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandDetailsPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x168 (0x440 - 0x2D8)
	class UFortCreativeIslandDetailsPanel : public UCommonUserWidget	
	{
	public:
		UImage* Image_Island; // 0x2D8(0x8)
		UImage* Image_LoadingSpinner; // 0x2E0(0x8)
		UScrollBox* ScrollBox_Details; // 0x2E8(0x8)
		UCommonTextBlock* Text_IslandDescription; // 0x2F0(0x8)
		UCommonTextBlock* Text_Creator; // 0x2F8(0x8)
		UCommonTextBlock* Text_IslandName; // 0x300(0x8)
		UCommonTextBlock* Text_PublishedIslandCode; // 0x308(0x8)
		UCommonTextBlock* Text_MaximumNumberOfPlayers; // 0x310(0x8)
		UCommonTextBlock* Text_MatchmakingDescription; // 0x318(0x8)
		FSlateBrush DefaultImageIslandBrush; // 0x320(0xB0)
		FText MaxNumberOfPlayerTextFormat; // 0x3D0(0x10)
		FText MatchmakingOffText; // 0x3E0(0x10)
		FText MatchmakingKeepFullText; // 0x3F0(0x10)
		FText MatchmakingRespectPartiesTextFormat; // 0x400(0x10)
		FDataTableRowHandle ScrollUpInputRowHandle; // 0x410(0x10)
		FDataTableRowHandle ScrollDownInputRowHandle; // 0x420(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x430(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandDetailsPanel");
			return ret;
		}

		void UpdateLinkCodeVisuals(UFortGameActivity* Activity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearLinkCodeVisuals(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandLink
	// Inherited from UObject
	// Size: 0xC8 (0xF0 - 0x28)
	class UFortCreativeIslandLink : public UObject	
	{
	public:
		FOnlineLinkId LinkId; // 0x28(0x18)
		FString CreatorUsername; // 0x40(0x10)
		FString SupportCode; // 0x50(0x10)
		FString Title; // 0x60(0x10)
		FString Tagline; // 0x70(0x10)
		TArray<FString> DescriptionTags; // 0x80(0x10)
		FString Introduction; // 0x90(0x10)
		FString ImageUrl; // 0xA0(0x10)
		EFortCreativeIslandLinkCategory category; // 0xB0(0x1)
		bool bDummyLink; // 0xB1(0x1)
		unsigned char UnknownData00_6[0x2]; // 0xB2(0x2) UNKNOWN PROPERTY
		int32_t Matchmaking_MaximumNumberOfPlayers; // 0xB4(0x4)
		FString Matchmaking_MMSType; // 0xB8(0x10)
		int32_t Matchmaking_PlayersPerTeam; // 0xC8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0xCC(0x4) UNKNOWN PROPERTY
		FDateTime SortDate; // 0xD0(0x8)
		EOnlineLinkModerationStatus ModerationStatus; // 0xD8(0x1)
		unsigned char UnknownData02_7[0x17]; // 0xD9(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandLink");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandLinkEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortCreativeIslandLinkEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandLinkEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandLinkScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x160 (0x6C0 - 0x560)
	class UFortCreativeIslandLinkScreen : public UFortActivatablePanel	
	{
	public:
		int32_t NumDebugIslandLinks; // 0x560(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x564(0x4) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnCreativeIslandCodeConfirmed; // 0x568(0x10)
		FMulticastInlineDelegate OnEditableTextIslandLinkModified; // 0x578(0x10)
		FText MatchmakingOffDescription; // 0x588(0x10)
		FText MatchmakingKeepFullDescription; // 0x598(0x10)
		FText MatchmakingRespectPartiesDescription; // 0x5A8(0x10)
		UEditableText* EditableText_IslandLink; // 0x5B8(0x8)
		UListView* ListView_IslandLinks; // 0x5C0(0x8)
		UScrollBox* ScrollBox_Details; // 0x5C8(0x8)
		UFortCreativeIslandLink* LastLinkQueried; // 0x5D0(0x8)
		UFortCreativeIslandLink* UserEnteredIslandLink; // 0x5D8(0x8)
		UCommonButtonLegacy* Button_Select; // 0x5E0(0x8)
		UCommonButtonLegacy* Button_CloseMobile; // 0x5E8(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x5F0(0x8)
		UCommonButtonLegacy* Button_Refresh; // 0x5F8(0x8)
		UCommonButtonLegacy* Button_Remove; // 0x600(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_Tabs; // 0x608(0x8)
		FCachedIslandsGroup FavoriteIslands; // 0x610(0x28)
		FCachedIslandsGroup IslandHistory; // 0x638(0x28)
		AFortAthenaCreativePortal* TargetPortal; // 0x660(0x8)
		FDateTime LastRefreshTime; // 0x668(0x8)
		FOnlineLinkId LastTestedLinkId; // 0x670(0x18)
		bool bCodeLookupRequestInFlight; // 0x688(0x1)
		bool bFriendsGetRequestInFlight; // 0x689(0x1)
		bool bFavoritesOnlyMode; // 0x68A(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x68B(0x5) UNKNOWN PROPERTY
		FDataTableRowHandle DetailsScrollUpInputRowHandle; // 0x690(0x10)
		FDataTableRowHandle DetailsScrollDownInputRowHandle; // 0x6A0(0x10)
		unsigned char UnknownData02_7[0x10]; // 0x6B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandLinkScreen");
			return ret;
		}

		void SetTargetPortal(AFortAthenaCreativePortal* Portal); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2A210(relative to base address)
		void SetFavoritesOnlyMode(bool bFavoritesOnly); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF29E64(relative to base address)
		void RemoveIslandFromHistory(FOnlineLinkId& LinkCode); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF298A8(relative to base address)
		void RemoveIslandFromFavorites(UFortCreativeIslandLink* LinkEntry); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2965C(relative to base address)
		void OnCreativeIslandLinkValidated(EFortActivityValidationResult Error, bool IsValidModerationState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCreativeIslandLinksPopulated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsPartyEligible(UFortCreativeIslandLink* IslandLink); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF28908(relative to base address)
		void HandleIslandSelectionChanged(UObject* Item); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27890(relative to base address)
		void HandleIslandLinkCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF27764(relative to base address)
		void HandleIslandLinkChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF276C8(relative to base address)
		FText GetTextFromLinkId(FOnlineLinkId& LinkId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF2656C(relative to base address)
		FText GetMatchmakingTypeDescription(UFortCreativeIslandLink* IslandLink); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF25930(relative to base address)
		FOnlineLinkId GetLinkIdFromInput(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF258CC(relative to base address)
		void AddIslandToFavorites(UFortCreativeIslandLink* LinkEntry); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF23FF0(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandLinkScreenServerBrowser
	// Inherited from UFortCreativeIslandLinkScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x6F8 - 0x6C0)
	class UFortCreativeIslandLinkScreenServerBrowser : public UFortCreativeIslandLinkScreen	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x6C0(0x30) UNKNOWN PROPERTY
		UFortCreativeIslandLink* LastSelectedIsland; // 0x6F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandLinkScreenServerBrowser");
			return ret;
		}

		void SetLastSelectedIsland(UFortCreativeIslandLink* InLastSelectedIsland); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29FF4(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandSelectTab
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortCreativeIslandSelectTab : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x40]; // 0x3F0(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectTab");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandSelectCodeTab
	// Inherited from UFortCreativeIslandSelectTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x490 - 0x430)
	class UFortCreativeIslandSelectCodeTab : public UFortCreativeIslandSelectTab	
	{
	public:
		UCommonButtonBase* Button_Select; // 0x430(0x8)
		UEditableText* EditableText_IslandLink; // 0x438(0x8)
		UFortCreativeIslandDetailsPanel* IslandDetailsPanel; // 0x440(0x8)
		UCommonButtonBase* Button_Favorite; // 0x448(0x8)
		UWidget* Widget_LaunchError; // 0x450(0x8)
		UFortGameActivityProvider* ActivityProvider; // 0x458(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x460(0x20) UNKNOWN PROPERTY
		UFortGameActivity* LastActivityQueried; // 0x480(0x8)
		UFortGameActivity* UserEnteredActivity; // 0x488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectCodeTab");
			return ret;
		}

		void OnActivityValidatedWithEmptyIslandLink(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivityValidated(EFortActivityValidationResult ValidateResult); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivityClear(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleActivityCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF271A4(relative to base address)
		void HandleActivityChanged(FText& Text); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF27108(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandSelectV2
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x478 - 0x3F0)
	class UFortCreativeIslandSelectV2 : public UCommonActivatableWidget	
	{
	public:
		TArray<UFortCreativeIslandSelectTabData*> TabData; // 0x3F0(0x10)
		unsigned char UnknownData00_6[0x30]; // 0x400(0x30) UNKNOWN PROPERTY
		UFortCreativeIslandSelectScreen* IslandSelect_Base; // 0x430(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x438(0x28) UNKNOWN PROPERTY
		TArray<UFortCreativeIslandSelectTab*> Tabs; // 0x460(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x470(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectV2");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandSelectDiscovery
	// Inherited from UFortCreativeIslandSelectV2 -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x490 - 0x478)
	class UFortCreativeIslandSelectDiscovery : public UFortCreativeIslandSelectV2	
	{
	public:
		FName DiscoverySurfaceName; // 0x478(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x47C(0x4) UNKNOWN PROPERTY
		UClass* SurfaceWidget; // 0x480(0x8)
		uint32_t InsertDiscoveryTabsAtIndex; // 0x488(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x48C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectDiscovery");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandSelectListTab
	// Inherited from UFortCreativeIslandSelectTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x4C8 - 0x430)
	class UFortCreativeIslandSelectListTab : public UFortCreativeIslandSelectTab	
	{
	public:
		UListView* ListView_Activities; // 0x430(0x8)
		UCommonButtonBase* Button_Select; // 0x438(0x8)
		UCommonButtonBase* Button_Remove; // 0x440(0x8)
		UCommonButtonBase* Button_Favorite; // 0x448(0x8)
		UWidgetSwitcher* Switcher_IslandsList; // 0x450(0x8)
		UOverlay* Overlay_IslandListContent; // 0x458(0x8)
		UOverlay* Overlay_NoIslandsContent; // 0x460(0x8)
		UOverlay* Overlay_NoFavorites; // 0x468(0x8)
		UTextBlock* Text_NoIslands; // 0x470(0x8)
		UUserWidget* Widget_LaunchError; // 0x478(0x8)
		UImage* Image_LoadingIndicator; // 0x480(0x8)
		UFortCreativeIslandDetailsPanel* IslandDetailsPanel; // 0x488(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x490(0x8) UNKNOWN PROPERTY
		UFortGameActivityProvider* ActivityProvider; // 0x498(0x8)
		UObject* LastItemToTriggerLoading; // 0x4A0(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x4A8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectListTab");
			return ret;
		}

		void HandleListScrolled(float ItemOffset, float DistanceRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27990(relative to base address)
		void HandleIslandSelectionChanged(UObject* Item); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF27910(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandSelectScreen
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x2E8 - 0x2B0)
	class UFortCreativeIslandSelectScreen : public UUserWidget	
	{
	public:
		UFortCreativeTabGroup* Tab_Group; // 0x2B0(0x8)
		UCommonActivatableWidgetSwitcher* Widget_Switcher; // 0x2B8(0x8)
		UCommonButtonBase* Button_CloseMobile; // 0x2C0(0x8)
		UCommonButtonBase* Button_Cancel; // 0x2C8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2D0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectScreen");
			return ret;
		}

		void HandleTabChanged(int32_t TabIndex); // Flags: Native|Protected, Memory Exec: 0x7FF74DC6700C(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandSelectTabData
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x40 (0x70 - 0x30)
	class UFortCreativeIslandSelectTabData : public UPrimaryDataAsset	
	{
	public:
		EFortCreativeIslandSelectTabType TabType; // 0x30(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x31(0x7) UNKNOWN PROPERTY
		FText Title; // 0x38(0x10)
		FText EmptyTabDescription; // 0x48(0x10)
		int32_t IndexOverride; // 0x58(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x5C(0x4) UNKNOWN PROPERTY
		UClass* WidgetClass; // 0x60(0x8)
		UClass* DataProvider; // 0x68(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelectTabData");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeItemDetailsSidePanel
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class UFortCreativeItemDetailsSidePanel : public UUserWidget	
	{
	public:
		TArray<FString> SpecialItemTags; // 0x2B0(0x10)
		UImage* Image_SelectedItem; // 0x2C0(0x8)
		UCommonVisibilitySwitcher* Switcher_Details; // 0x2C8(0x8)
		UCreativeContentBrowserItemInfo* ContentBrowserItemInfo_ItemDetails; // 0x2D0(0x8)
		UFortItemDetailsHostPanel* ItemInspectionMainItemDetails_LegacyDetailsPanel; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeItemDetailsSidePanel");
			return ret;
		}

		void SetSpecialItemTagVisibility(FString SpecialItemTag); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeItemListWrapper
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortCreativeItemListWrapper : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeItemListWrapper");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeMatchmakingDetails
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x438 - 0x3F0)
	class UFortCreativeMatchmakingDetails : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_Confirm; // 0x3F0(0x8)
		UCommonButtonBase* Button_Cancel; // 0x3F8(0x8)
		TArray<UCommonTextBlock*> Text_Bullets; // 0x400(0x10)
		UCommonTextBlock* Text_IslandName; // 0x410(0x8)
		UCommonTextBlock* Text_LinkCode; // 0x418(0x8)
		UCommonTextBlock* Text_Creator; // 0x420(0x8)
		UCommonTextBlock* Text_PlayerCount; // 0x428(0x8)
		UCommonTextBlock* Text_IslandDescription; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMatchmakingDetails");
			return ret;
		}

		void SetupInfo(UFortGameActivity* LinkData); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF2A524(relative to base address)
		void Open(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF291F4(relative to base address)
		void Close(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
		void BP_SetupInfo(UFortGameActivity* LinkData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Open(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_InitialSetup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Confirm(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_Cancel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeMatchmakingHUD
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortCreativeMatchmakingHUD : public UCommonActivatableWidget	
	{
	public:
		UFortKeybindWidget* KeybindWidget_MMHUD; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMatchmakingHUD");
			return ret;
		}

		void Open(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF29264(relative to base address)
		void OnMatchmakingComplete(bool bSuccess); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF28F8C(relative to base address)
		void CancelMatchmaking(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF246D0(relative to base address)
		void BP_PartyLeaderSetup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnMatchmakingComplete(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnKeybindComplete(AFortPlayerControllerAthena* FortPC); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeMyIslandUtils
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortCreativeMyIslandUtils : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMyIslandUtils");
			return ret;
		}

		bool ShouldUseLegacyPublishUI(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A7E4(relative to base address)
		bool ShouldHideIslandSettingsTab(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A73C(relative to base address)
		bool ShouldHideDefaultMyIslandTab(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A6B4(relative to base address)
		bool ShouldHideDefaultCreativeTab(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A638(relative to base address)
		bool ShouldForceShowDefaultMyIslandTab(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A620(relative to base address)
		bool ShouldAddTabsToMapScreen(APlayerController* PlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2A5A4(relative to base address)
		void OptInForVideoPlayerDeviceUpgrade(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FF2937C(relative to base address)
		void OptInForDeviceUpgrades(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF74FF292E4(relative to base address)
		bool IsUserLocaleValid(int32_t& OutUserLocaleLength, int32_t& OutMaxUserLocaleLength, FCreativeIslandInfo& IslandInfo); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF28C5C(relative to base address)
		bool IsPublishFAQEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF28A2C(relative to base address)
		bool IsIslandTitleValid(int32_t& OutTitleLength, int32_t& OutMinTitleLength, int32_t& OutMaxTitleLength, FCreativeIslandInfo& IslandInfo); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF28570(relative to base address)
		bool IsIslandSettingsTeamStructureInformationEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF28558(relative to base address)
		bool IsIslandIntroductionValid(int32_t& OutIntroductionLength, int32_t& OutMaxIntroductionLength, FCreativeIslandInfo& IslandInfo); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF28360(relative to base address)
		bool HasUpgradedVideoPlayerDevice(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2814C(relative to base address)
		bool HasUpgradedDevices(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2809C(relative to base address)
		bool HasCreatorRefreshPermission(APlayerController* PlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF27F5C(relative to base address)
		int32_t GetStringSearchMinCharacters(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF26230(relative to base address)
		float GetStringSearchDelay(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF26214(relative to base address)
		FName GetMyIslandTabID(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25C3C(relative to base address)
		FText GetMyIslandDisplayName(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25C10(relative to base address)
		int32_t GetMinimumTitleLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25BF8(relative to base address)
		int32_t GetMaximumTitleLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25BBC(relative to base address)
		int32_t GetMaximumLocaleLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25BA4(relative to base address)
		int32_t GetMaximumIntroductionLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25B8C(relative to base address)
		int32_t GetMaximumDescriptionTagLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25B74(relative to base address)
		int32_t GetMaximumDescriptionLength(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25B5C(relative to base address)
		FString GetCreatorPortalUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2521C(relative to base address)
		FString GetCreatorPortalQrImageUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25200(relative to base address)
		FString GetCreatorPortalPublishUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF251E4(relative to base address)
		FString GetCreatorPortalPublishQrImageUrl(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF251C8(relative to base address)
		FName GetCreativeIslandUIOverridesRegistryName(); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2519C(relative to base address)
		FName GetCreativeIslandUIOverridesDefaultRowName(); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25170(relative to base address)
		FString GetCreativeForumsUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25154(relative to base address)
		FString GetCreativeForumsQrImageUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25138(relative to base address)
		FString GetCreativeDocumentationUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2511C(relative to base address)
		FString GetCreativeDocumentationQrImageUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF25100(relative to base address)
		FName GetCreativeBrowserTabID(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF250D4(relative to base address)
		FString GetCollabCreatorPortalUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF24D6C(relative to base address)
		FString GetCollabCreatorPortalQrImageUrl(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF24D50(relative to base address)
		bool CanUpdateIslandThumbnail(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF2462C(relative to base address)
		bool CanPublish(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF24490(relative to base address)
		bool CanOptInForVideoPlayerDeviceUpgrade(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF243E8(relative to base address)
		bool CanOptInForDeviceUpgrades(APlayerController* PlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF24340(relative to base address)
	};


	// Class FortniteUI.FortCreativePlayerInfoIndicator
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x450 - 0x3C0)
	class UFortCreativePlayerInfoIndicator : public UFortActorIndicatorWidget	
	{
	public:
		FVector RelativeLocationWhileDBNO; // 0x3C0(0x18)
		FVector RelativeLocationWhileAlive; // 0x3D8(0x18)
		FVector2D ScreenSpaceOffsetToScale; // 0x3F0(0x10)
		TArray<EFortMinigameState> ValidMinigameTypesToShowIndicator; // 0x400(0x10)
		bool bKeepTargetUntilNewValidTarget; // 0x410(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x411(0x7) UNKNOWN PROPERTY
		UImage* Image_HealthBar; // 0x418(0x8)
		UImage* Image_ShieldBar; // 0x420(0x8)
		UImage* Image_DBNOBar; // 0x428(0x8)
		AFortPlayerStateAthena* TrackedPlayerState; // 0x430(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x438(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePlayerInfoIndicator");
			return ret;
		}

		void HandlePlayerExitedVolume(APlayerState* Client, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27C98(relative to base address)
		void HandlePlayerEnteredVolume(APlayerState* Client, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27BD4(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF27B18(relative to base address)
		void HandleIndicatorRulesChanged(EPlayerIndicatorDisplayMode DisplayMode); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF2764C(relative to base address)
		void HandleHitPointsChanged(AFortPlayerState* PlayerState, float Health, float HealthMax, float Shield, float ShieldMax); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF274C8(relative to base address)
	};


	// Class FortniteUI.FortCreativePlayOptions
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x590 - 0x560)
	class UFortCreativePlayOptions : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x560(0x18) UNKNOWN PROPERTY
		UFortCreativeServersView* View_CreativeOptionsServers; // 0x578(0x8)
		UCommonButtonLegacy* Button_Play; // 0x580(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x588(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePlayOptions");
			return ret;
		}

		bool ShouldShowImportPlatformFriendsOption(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF6681C(relative to base address)
		void ImportPlatformFriends(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF65C28(relative to base address)
		void HandleCancelClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorDialogBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x440 - 0x3F0)
	class UFortCreativePropertyEditorDialogBase : public UCommonActivatableWidget	
	{
	public:
		UCanvasPanelSlot* PanelSlot; // 0x3F0(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x3F8(0x18) UNKNOWN PROPERTY
		bool bIsOpen; // 0x410(0x1)
		bool bShouldDisableMessageKnobsDialogActionsWhileOpen; // 0x411(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x412(0x6) UNKNOWN PROPERTY
		UWidgetAnimation* Anim_IntroOutro; // 0x418(0x8)
		unsigned char UnknownData02_7[0x20]; // 0x420(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorDialogBase");
			return ret;
		}

		void Reset(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
		void Open(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66110(relative to base address)
		void OnShowLoadingSpinnerChanged(bool bShowingLoadingSpinner); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOutroAnimFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOpen(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIntroAnimFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInputMethodChanged(ECommonInputType InputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClose(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UCreativePropertyEditWidgetUserOptionBase GetOwningEditWidget(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64D74(relative to base address)
		void Close(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF646A0(relative to base address)
		void AddOption(UObject* Object); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF645D4(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorColorPickerDialog
	// Inherited from UFortCreativePropertyEditorDialogBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x480 - 0x440)
	class UFortCreativePropertyEditorColorPickerDialog : public UFortCreativePropertyEditorDialogBase	
	{
	public:
		UCommonTileView* TileView_Swatches; // 0x440(0x8)
		UEditableTextBox* EditableText_Search; // 0x448(0x8)
		FDataTableRowHandle SearchInputRowHandle; // 0x450(0x10)
		TArray<UObject*> UnfilteredListItems; // 0x460(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x470(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorColorPickerDialog");
			return ret;
		}

		bool ShouldListItemBeCollapsed(FText& InDisplayName); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF66708(relative to base address)
		void OnSearchInput(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSearchTextChanged(FText& SearchText); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF6575C(relative to base address)
		int32_t GetItemIndexFromUnfilteredItemList(UObject* Item); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF64CB0(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorEventBindingDialog
	// Inherited from UFortCreativePropertyEditorDialogBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x530 - 0x440)
	class UFortCreativePropertyEditorEventBindingDialog : public UFortCreativePropertyEditorDialogBase	
	{
	public:
		UCommonListView* ListView_Entries; // 0x440(0x8)
		UEditableTextBox* EditableText_Search; // 0x448(0x8)
		FDataTableRowHandle BackInputRowHandle; // 0x450(0x10)
		FDataTableRowHandle SearchInputRowHandle; // 0x460(0x10)
		FText SearchHintTextDevices; // 0x470(0x10)
		FText SearchHintTextEvents; // 0x480(0x10)
		FText SearchHintTextFunctions; // 0x490(0x10)
		TArray<UObject*> UnfilteredListItems; // 0x4A0(0x10)
		TArray<FBasicDeviceTrackingInfo> FullTrackingInfoList; // 0x4B0(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x4C0(0x8) UNKNOWN PROPERTY
		UFortCreativePropertyEditorEventBindingDialogListItemProxy* SelectedItemProxy; // 0x4C8(0x8)
		unsigned char UnknownData01_7[0x60]; // 0x4D0(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog");
			return ret;
		}

		void OnUnfilteredListItemsSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSearchInput(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSearchEnabled(); // Flags: Final|Native|Static|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF65C78(relative to base address)
		void HandleSearchTextChanged(FText& SearchText); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF657E8(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorEventBindingDialogListEntry
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortCreativePropertyEditorEventBindingDialogListEntry : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_EntryName; // 0x1398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorEventBindingDialogListEntry");
			return ret;
		}

		void OnDisplayNameSet(FText& DisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorEventBindingDialogListItemProxy
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortCreativePropertyEditorEventBindingDialogListItemProxy : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x28(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorEventBindingDialogListItemProxy");
			return ret;
		}

		FText GetDisplayName(bool bFormatted); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64B90(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorFilter
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x380 - 0x2D8)
	class UFortCreativePropertyEditorFilter : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnSelectedFilterChanged; // 0x2D8(0x10)
		UCommonTextBlock* Text_FilterName; // 0x2E8(0x8)
		UDynamicEntryBox* EntryBox_FilterButtons; // 0x2F0(0x8)
		UCommonButtonBase* Button_PreviousFilter; // 0x2F8(0x8)
		UCommonButtonBase* Button_NextFilter; // 0x300(0x8)
		UClass* TabButtonStyle; // 0x308(0x8)
		TArray<FFortTabListRegistrationInfo> TabInfos; // 0x310(0x10)
		UCommonButtonGroupBase* FilterButtonGroup; // 0x320(0x8)
		TMap<UCommonButtonBase*, FFortTabListRegistrationInfo> FilterButtonToTabInfoMap; // 0x328(0x50)
		unsigned char UnknownData00_7[0x8]; // 0x378(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorFilter");
			return ret;
		}

		void OnSelectedFilterChanged__DelegateSignature(FName SelectedFilterId, FName PreviouslySelectedFilterId); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFilterButtonCreated(UCommonButtonBase* FilterButton, FFortTabListRegistrationInfo& TabInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FName GetSelectedFilterButtonId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64DB0(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditorLevelListDialog
	// Inherited from UFortCreativePropertyEditorDialogBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x450 - 0x440)
	class UFortCreativePropertyEditorLevelListDialog : public UFortCreativePropertyEditorDialogBase	
	{
	public:
		UFortEditableFilteredCountedTextBox* FilteredTextEntry_Widget; // 0x440(0x8)
		UCommonListView* ListView_Levels; // 0x448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorLevelListDialog");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePropertyEditorInstancedLevelListDialog
	// Inherited from UFortCreativePropertyEditorLevelListDialog -> UFortCreativePropertyEditorDialogBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x458 - 0x450)
	class UFortCreativePropertyEditorInstancedLevelListDialog : public UFortCreativePropertyEditorLevelListDialog	
	{
	public:
		UCommonButtonBase* IconButton_NewLevel; // 0x450(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditorInstancedLevelListDialog");
			return ret;
		}

		bool ValidateLevelNameText(FString LevelName); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF66A30(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1A8 (0x598 - 0x3F0)
	class UCreativePropertyEditWidgetBase : public UCommonActivatableWidget	
	{
	public:
		UUserWidget* ExtraContentWidget; // 0x3F0(0x8)
		UFortCreativePropertyEditorDialogBase* DialogWidget; // 0x3F8(0x8)
		unsigned char UnknownData00_6[0xC0]; // 0x400(0xC0) UNKNOWN PROPERTY
		UClass* ExtraContentWidgetClass; // 0x4C0(0x8)
		bool bAutoCreateDialogWidget; // 0x4C8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x4C9(0x7) UNKNOWN PROPERTY
		UClass* DialogWidgetClass; // 0x4D0(0x8)
		float DeviceOptionValueMin; // 0x4D8(0x4)
		float DeviceOptionValueMax; // 0x4DC(0x4)
		unsigned char UnknownData02_6[0x18]; // 0x4E0(0x18) UNKNOWN PROPERTY
		TArray<FText> AvailableStepperValueLabels; // 0x4F8(0x10)
		int32_t CurrentIndexInStepperValue; // 0x508(0x4)
		int32_t StartingIndexInStepperValue; // 0x50C(0x4)
		FGameplayTagContainer CachedGrantedContextTags; // 0x510(0x20)
		bool bAlwaysShowEditWidget; // 0x530(0x1)
		unsigned char UnknownData03_6[0x37]; // 0x531(0x37) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Collapse; // 0x568(0x8)
		unsigned char UnknownData04_7[0x28]; // 0x570(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetBase");
			return ret;
		}

		void SetIsModified(bool bModified); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1730(relative to base address)
		void SetCurrentIndexInStepperValue(int32_t InStepperValue); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF1388(relative to base address)
		void RequestSelected(UObject* ObjectToSelect, bool bNavigateToItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF0ECC(relative to base address)
		FText RequestDeviceName(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF0D58(relative to base address)
		void RequestCloseDialog(bool bSetFocusToOptionsList); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF0CD4(relative to base address)
		bool RefreshGrantedContextTags(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74E0ABD98(relative to base address)
		void OnEditWidgetSelectedChanged(bool bSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEditDialogOpenStateChanged(bool bIsOpen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsDialogOpen(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF021C(relative to base address)
		FText GetStepperLabelForIndex(int32_t Index); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEF16C(relative to base address)
		bool GetIsModified(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEF50(relative to base address)
		FText GetEntryDisplayValue(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEE38(relative to base address)
		FText GetEntryDisplayName(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEDF8(relative to base address)
		FText GetEntryDescriptionText(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEDB8(relative to base address)
		void BP_PostInitEditWidget(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnModified(bool bModified); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnEditWidgetClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetUserOptionBase
	// Inherited from UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5A0 - 0x598)
	class UCreativePropertyEditWidgetUserOptionBase : public UCreativePropertyEditWidgetBase	
	{
	public:
		UObject* OptionDataObject; // 0x598(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetUserOptionBase");
			return ret;
		}

		UObject GetInitializingObject(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEEB4(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditWidgetEventBinding
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x5D0 - 0x5A0)
	class UFortCreativePropertyEditWidgetEventBinding : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		UCommonTextBlock* Text_PropertyName; // 0x5A0(0x8)
		UCommonButtonBase* Button_AddBinding; // 0x5A8(0x8)
		UClass* EntryClass; // 0x5B0(0x8)
		FDataTableRowHandle ShowHideBindingsInputAction; // 0x5B8(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x5C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding");
			return ret;
		}

		void OnShowBindings(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPropertyNameSet(FText& PropertyName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNumEventReferencesChanged(int32_t NumEventReferences); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNumAvailableDevicesChanged(int32_t NumAvailableDevices); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsAnySubItemSelectedChanged(bool bIsAnySubItemSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHideBindings(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsShowingBindings(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF65C90(relative to base address)
		EFortGameplayEventReferenceType GetEventReferenceType(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64C28(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyEditWidgetEventBindingButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortCreativePropertyEditWidgetEventBindingButton : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_Name; // 0x1390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingButton");
			return ret;
		}

		void OnTextSet(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsDisplayingButtonOptionsSet(bool bIsDisplayingButtonOptions); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEventReferenceTypeSet(EFortGameplayEventReferenceType EventReferenceType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyListEntryBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x458 - 0x3F0)
	class UFortCreativePropertyListEntryBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x68]; // 0x3F0(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyListEntryBase");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry
	// Inherited from UFortCreativePropertyListEntryBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x4A0 - 0x458)
	class UFortCreativePropertyEditWidgetEventBindingEntry : public UFortCreativePropertyListEntryBase	
	{
	public:
		UFortCreativePropertyEditWidgetEventBindingButton* Button_SelectDevice; // 0x458(0x8)
		UFortCreativePropertyEditWidgetEventBindingButton* Button_SelectOption; // 0x460(0x8)
		FDataTableRowHandle SelectDeviceAdditionalAction; // 0x468(0x10)
		FDataTableRowHandle SelectOptionAdditionalAction; // 0x478(0x10)
		UWidget* LastFocusedButton; // 0x488(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x490(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry");
			return ret;
		}

		void OnOptionDisplayNameSet(FText& OptionDisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsParentItemSelectedChanged(bool bIsParentItemSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEntrySelectedStateChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDeviceDisplayNameSet(FText& DeviceDisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyListItemBase
	// Inherited from UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFortCreativePropertyListItemBase : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x28(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyListItemBase");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePropertyEventBindingListItem
	// Inherited from UFortCreativePropertyListItemBase -> UObject
	// Size: 0x60 (0x90 - 0x30)
	class UFortCreativePropertyEventBindingListItem : public UFortCreativePropertyListItemBase	
	{
	public:
		unsigned char UnknownData00_1[0x60]; // 0x30(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyEventBindingListItem");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePropertyKnobEntry
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x1460 - 0x1390)
	class UFortCreativePropertyKnobEntry : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnKnobEntryEditWidgetStateChanged; // 0x1398(0x10)
		FMulticastInlineDelegate OnKnobEntryEditWidgetContextTagsChanged; // 0x13A8(0x10)
		UCreativePropertyEditWidgetBase* EntryEditWidget; // 0x13B8(0x8)
		UClass* FallbackEditWidget; // 0x13C0(0x8)
		UClass* FallbackUserOptionEditWidget; // 0x13C8(0x8)
		UClass* FallbackStringUserOptionEditWidget; // 0x13D0(0x8)
		UClass* FallbackMusicUserOptionEditWidget; // 0x13D8(0x8)
		UClass* FallbackMessageComponentEditWidget; // 0x13E0(0x8)
		UClass* FallbackDeviceButtonComponentEditWidget; // 0x13E8(0x8)
		UClass* FallbackColorUserOptionEditWidget; // 0x13F0(0x8)
		UClass* FallbackIconUserOptionEditWidget; // 0x13F8(0x8)
		UClass* FallbackEventDescriptorUserOptionEditWidget; // 0x1400(0x8)
		UClass* FallbackEventFunctionUserOptionEditWidget; // 0x1408(0x8)
		UClass* FallbackNumericUserOptionEditWidget; // 0x1410(0x8)
		UCommonVisibilitySwitcher* Switcher_Content; // 0x1418(0x8)
		UPanelWidget* Panel_SummaryBox; // 0x1420(0x8)
		UPanelWidget* Panel_ContentBox; // 0x1428(0x8)
		UCommonTextBlock* Text_DisplayName; // 0x1430(0x8)
		UCommonTextBlock* Text_DisplayedValue; // 0x1438(0x8)
		UNamedSlot* NamedSlot_ExtraContent; // 0x1440(0x8)
		UPanelWidget* Panel_DebugText; // 0x1448(0x8)
		UCreativePropertyEditWidgetBase* CustomEditWidgetForSanitizeQuery; // 0x1450(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1458(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyKnobEntry");
			return ret;
		}

		void SetIsModified(bool bModified); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF66534(relative to base address)
		void OnKnobEntryEditWidgetStateChanged__DelegateSignature(bool bOpened); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnKnobEntryEditWidgetContextTagsChanged__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetIsModified(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF64C78(relative to base address)
		void ForceFocusWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF649C4(relative to base address)
		void ClearModified(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF64678(relative to base address)
		void BP_PostInitSummaryData(UCreativePropertyEditWidgetBase* CustomEditWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnModified(bool bModified); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativePropertyNumericEntry
	// Inherited from USpinBox -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x790 - 0x790)
	class UFortCreativePropertyNumericEntry : public USpinBox	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePropertyNumericEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePublishModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x4A8 - 0x3F0)
	class UFortCreativePublishModal : public UCommonActivatableWidget	
	{
	public:
		int32_t DescriptionEntryCharLimit; // 0x3F0(0x4)
		int32_t NameEntryCharLimit; // 0x3F4(0x4)
		bool bFakePublishingFlow; // 0x3F8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3F9(0x7) UNKNOWN PROPERTY
		UCommonAnimatedSwitcher* Switcher_Content; // 0x400(0x8)
		UCommonTextBlock* Text_IslandCode; // 0x408(0x8)
		UCommonTextBlock* Text_ErrorInNameField; // 0x410(0x8)
		UCommonTextBlock* Text_ErrorInDescriptionField; // 0x418(0x8)
		UCommonTextBlock* Text_ErrorInRequiredTags; // 0x420(0x8)
		UCommonTextBlock* Text_ErrorInIslandBudget; // 0x428(0x8)
		UCommonTextBlock* Text_ErrorOnPublish; // 0x430(0x8)
		UCommonTextBlock* Text_CharCountTitle; // 0x438(0x8)
		UCommonTextBlock* Text_CharCountDesc; // 0x440(0x8)
		UCommonTextBlock* Text_IslandPublishedSuccess; // 0x448(0x8)
		UCommonButtonBase* Button_Submit; // 0x450(0x8)
		UCommonButtonBase* Button_CopyCode; // 0x458(0x8)
		UCheckBox* CheckBox_ClearAllPlayersData; // 0x460(0x8)
		UEditableTextBox* EditText_Name; // 0x468(0x8)
		UEditableTextBox* EditText_Description; // 0x470(0x8)
		int32_t NumTagsRequiredToPublish; // 0x478(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x47C(0x4) UNKNOWN PROPERTY
		TScriptInterface<Class> SpatialGameplayInterfaceToPublish; // 0x480(0x10)
		unsigned char UnknownData02_7[0x18]; // 0x490(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePublishModal");
			return ret;
		}

		void OnValidCheckComplete(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPublishSuccess(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPublishError(FText& ErrorText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPublishBegin(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNameTextCommitted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDescriptionTextCommitted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCodeCopied(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleNameTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommittMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF65420(relative to base address)
		void HandleNameTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF65384(relative to base address)
		void HandleDescriptionTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommittMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF64EB8(relative to base address)
		void HandleDescriptionTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF64E1C(relative to base address)
		void BP_Reset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeRichTextEditorWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x130 (0x520 - 0x3F0)
	class UFortCreativeRichTextEditorWidget : public UCommonActivatableWidget	
	{
	public:
		UMultiLineEditableText* EditableText; // 0x3F0(0x8)
		UWrapBox* WordButtons_WBox; // 0x3F8(0x8)
		UDynamicEntryBox* EntryBox_StyleButtons; // 0x400(0x8)
		UCommonButtonBase* Style_Tab_Button; // 0x408(0x8)
		UCommonButtonBase* Text_Tab_Button; // 0x410(0x8)
		UWidgetSwitcher* PanelSwitcher; // 0x418(0x8)
		UWidget* Text_Overlay; // 0x420(0x8)
		UWidget* Style_Overlay; // 0x428(0x8)
		UCommonButtonBase* RemoveStyles_Button; // 0x430(0x8)
		UCommonTextBlock* Text_CharCount; // 0x438(0x8)
		UFortConfirmationWindow* ConfirmationWindow; // 0x440(0x8)
		UCommonButtonGroupBase* TabsButtonGroup; // 0x448(0x8)
		bool bIsLineBreakAllowed; // 0x450(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x451(0x3) UNKNOWN PROPERTY
		int32_t EntryCharLimit; // 0x454(0x4)
		bool bStylingInProgress; // 0x458(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x459(0x7) UNKNOWN PROPERTY
		UFortCreativeRichTextWordButton* LastSelectedWordButton; // 0x460(0x8)
		TArray<FStyleButtonReference> StyleButtonReferences; // 0x468(0x10)
		TSet<UFortCreativeRichTextWordButton*> Set_SelectedWordButtons; // 0x478(0x50)
		UClass* WordButtonClass; // 0x4C8(0x8)
		UClass* StyleButtonClass; // 0x4D0(0x8)
		UDataTable* RichTextStylesTable; // 0x4D8(0x8)
		FText SampleText; // 0x4E0(0x10)
		unsigned char UnknownData02_7[0x30]; // 0x4F0(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeRichTextEditorWidget");
			return ret;
		}

		void ShowConfirmationDialog(EConfirmDialogType DialogType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF66840(relative to base address)
		void SetRichStyleSetOverride(UDataTable* RichStyleSetOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF665B4(relative to base address)
		void SetEntryCharLimit(int32_t InCharLimit); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF663B8(relative to base address)
		void SetAllowStyleEditing(bool InAllowStyleEditing); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C2BC1E8(relative to base address)
		void SetAllowLineBreaks(bool InAllowLineBreaks); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF662B8(relative to base address)
		void OnWordButtonCreated(UFortCreativeRichTextWordButton* WordButton); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateWordButtonLabel(FText& ButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateCommitCancelState(bool Enabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateButtonsVisibility(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStyleButtonSelectedChanged(UCommonButtonBase* Button, bool Selected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStyleButtonCreated(UCommonButtonBase* Button, FString Label, FString FormattedText, UDataTable* TextStyleSet, bool bIsDefaultButton); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitializedFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFormatError(FText& Description); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCharLimitReached(bool bIsReached); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsStyleEditorEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF65CB4(relative to base address)
		void HandleWordButtonHovered(UFortCreativeRichTextWordButton* Button); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65BA8(relative to base address)
		void HandleWordButtonClicked(UFortCreativeRichTextWordButton* Button); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65B28(relative to base address)
		void HandleTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FF65A0C(relative to base address)
		void HandleTabButtonSelected(UCommonButtonBase* AssociatedButton, int32_t ButtonIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65948(relative to base address)
		void HandleStyleButtonClicked(UCommonButtonBase* Button, int32_t Index); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65884(relative to base address)
		FString GetTextInRange(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF64DDC(relative to base address)
		EButtonContext GetButtonContext(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF649D8(relative to base address)
		void ClearSelectedWordButtons(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF6468C(relative to base address)
		bool CanShowStyleEditor(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64658(relative to base address)
		void BP_WordButtonHovered(UFortCreativeRichTextWordButton* Button); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_DialogConfirmed(EConfirmDialogType DialogType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeRichTextWordButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x13C0 - 0x1390)
	class UFortCreativeRichTextWordButton : public UCommonButtonBase	
	{
	public:
		URichTextBlock* Rich_Text; // 0x1390(0x8)
		UClass* ButtonStyle; // 0x1398(0x8)
		FString RawText; // 0x13A0(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x13B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeRichTextWordButton");
			return ret;
		}

		void OnButtonInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeServerOptionTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortCreativeServerOptionTile : public UCommonButtonLegacy	
	{
	public:
		UCommonTextBlock* Text_JoinServerType; // 0x13E0(0x8)
		UCommonTextBlock* Text_JoinServerPlayerCount; // 0x13E8(0x8)
		UFortCreativeServerInfo* Server; // 0x13F0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeServerOptionTile");
			return ret;
		}

		void SetBPData(UFortCreativeServerInfo* ServerInfo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeServerInfo
	// Inherited from UObject
	// Size: 0x48 (0x70 - 0x28)
	class UFortCreativeServerInfo : public UObject	
	{
	public:
		int32_t CurrentPlayerCount; // 0x28(0x4)
		int32_t MaxPlayerCount; // 0x2C(0x4)
		TArray<FString> MatchFriendsList; // 0x30(0x10)
		FString OwnerName; // 0x40(0x10)
		UFortSocialUser* FriendInMatch; // 0x50(0x8)
		EFortCreativeServerPrivacySetting PrivacySetting; // 0x58(0x1)
		bool IsNewServer; // 0x59(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x5A(0x6) UNKNOWN PROPERTY
		FText ServerTypeText; // 0x60(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeServerInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeServersView
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortCreativeServersView : public UCommonUserWidget	
	{
	public:
		int32_t MaxSuggestedServers; // 0x2D8(0x4)
		bool bShowDebugServers; // 0x2DC(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2DD(0x3) UNKNOWN PROPERTY
		UClass* TileItemClass; // 0x2E0(0x8)
		UCommonButtonGroupLegacy* ServerButtonGroup; // 0x2E8(0x8)
		UScrollBox* ScrollBox_ServerList; // 0x2F0(0x8)
		TArray<UFortCreativeServerInfo*> ServerList; // 0x2F8(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x308(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeServersView");
			return ret;
		}

		void RefreshServerList(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF66198(relative to base address)
		void OnCreativeServerListRefreshed(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigateServerRight(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF65D04(relative to base address)
		void NavigateServerLeft(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF65CF0(relative to base address)
	};


	// Class FortniteUI.FortCreativeStartScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x4F0 - 0x3F0)
	class UFortCreativeStartScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0xB8]; // 0x3F0(0xB8) UNKNOWN PROPERTY
		AFortMinigame* CurrentMinigame; // 0x4A8(0x8)
		AActor* CurrentContainer; // 0x4B0(0x8)
		UInputComponent* IgnoreToggleInventoryInputComponent; // 0x4B8(0x8)
		UFortCreativeMiniGameInfo* MinigameInfo; // 0x4C0(0x8)
		UFortHoldableButton* HoldableButton_Start; // 0x4C8(0x8)
		UCommonButtonBase* Button_MoreInfo; // 0x4D0(0x8)
		UWidgetAnimation* BoundAnim_StartGame; // 0x4D8(0x8)
		unsigned char UnknownData01_6[0x4]; // 0x4E0(0x4) UNKNOWN PROPERTY
		float AutoStartTimerPeriod; // 0x4E4(0x4)
		unsigned char UnknownData02_7[0x8]; // 0x4E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeStartScreen");
			return ret;
		}

		bool IsNewCreativeStartScreenEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF65C60(relative to base address)
		void HandleVolumeMinigameChanged(AFortMinigame* Minigame); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65AA8(relative to base address)
		void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF652C0(relative to base address)
		void HandleInGameLoadScreenChanged(AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, FText HUDReasonText); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF6519C(relative to base address)
		void HandleFullScreenMapToggled(bool bMapVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF6511C(relative to base address)
	};


	// Class FortniteUI.FortCreativeTabGroup
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x300 - 0x2B0)
	class UFortCreativeTabGroup : public UUserWidget	
	{
	public:
		FMulticastInlineDelegate OnCurrentTabChanged; // 0x2B0(0x10)
		UClass* TabButtonClass; // 0x2C0(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x2C8(0x10) UNKNOWN PROPERTY
		USoundBase* TabOnHoveredSound; // 0x2D8(0x8)
		USoundBase* TabOnPressedSound; // 0x2E0(0x8)
		UClass* TabButtonStyle; // 0x2E8(0x8)
		UAthenaScrollBox* Tab_Box; // 0x2F0(0x8)
		UCommonButtonGroupBase* TabGroup; // 0x2F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeTabGroup");
			return ret;
		}

		void PreviousTab(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66124(relative to base address)
		void OnTabButtonAdded(UCommonButtonBase* Button, FText& TabName, FSlateBrush& TabIcon); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSimpleTabButtonAdded(UCommonButtonBase* Button, FText& TabName); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentTabChanged__DelegateSignature(int32_t CurrentTabIndex); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NextTab(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF65D18(relative to base address)
	};


	// Class FortniteUI.FortCreativeTeamSelectWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortCreativeTeamSelectWidget : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeTeamSelectWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortExpressYourSupportToggleButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x13D0 - 0x1390)
	class UFortExpressYourSupportToggleButton : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_NormalText; // 0x1390(0x8)
		FText ToggledOnText; // 0x1398(0x10)
		FText ToggledOffText; // 0x13A8(0x10)
		FText ToggledOnHoveredText; // 0x13B8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortExpressYourSupportToggleButton");
			return ret;
		}
	};


	// Class FortniteUI.FortExpressYourSupportFavoriteButton
	// Inherited from UFortExpressYourSupportToggleButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x13F0 - 0x13C8)
	class UFortExpressYourSupportFavoriteButton : public UFortExpressYourSupportToggleButton	
	{
	public:
		UFortGameActivity* Activity; // 0x13C8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x13D0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortExpressYourSupportFavoriteButton");
			return ret;
		}

		void SetActivity(UFortGameActivity* NewActivity); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66238(relative to base address)
		void Refresh(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66170(relative to base address)
	};


	// Class FortniteUI.FortExpressYourSupportThumbsUpButton
	// Inherited from UFortExpressYourSupportToggleButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x1400 - 0x13C8)
	class UFortExpressYourSupportThumbsUpButton : public UFortExpressYourSupportToggleButton	
	{
	public:
		UFortSidebarOnboardTooltipWidget* SidebarOnboardingLikeIsland; // 0x13C8(0x8)
		FString SourceName; // 0x13D0(0x10)
		unsigned char UnknownData00_7[0x20]; // 0x13E0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortExpressYourSupportThumbsUpButton");
			return ret;
		}

		void TrySendLikeAnalytic(AFortPlayerPawn* Pawn); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF669B0(relative to base address)
		void Refresh(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66184(relative to base address)
		FString GetCreatorName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64A4C(relative to base address)
	};


	// Class FortniteUI.FortIslandDescriptionLineData
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortIslandDescriptionLineData : public UObject	
	{
	public:
		FText IslandDescriptionLine; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortIslandDescriptionLineData");
			return ret;
		}
	};


	// Class FortniteUI.FortIslandDescriptionListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortIslandDescriptionListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_IslandDescriptionLine; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortIslandDescriptionListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortIslandDescriptionWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortIslandDescriptionWidget : public UCommonUserWidget	
	{
	public:
		UCommonListView* ListView_IslandDescriptionLines; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortIslandDescriptionWidget");
			return ret;
		}

		void OnDescriptionChanged(bool bIsEmptyDescription); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTrapCreativeConfigMenu
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortTrapCreativeConfigMenu : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTrapCreativeConfigMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortUserOptionEventContainerProxy
	// Inherited from UFortUserOptionProxy -> UObject
	// Size: 0x138 (0x1C0 - 0x88)
	class UFortUserOptionEventContainerProxy : public UFortUserOptionProxy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x88(0x18) UNKNOWN PROPERTY
		TMap<int32_t, FBasicDeviceTrackingInfo> DeviceGuidToBasicDeviceInfo; // 0xA0(0x50)
		unsigned char UnknownData01_7[0xD0]; // 0xF0(0xD0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUserOptionEventContainerProxy");
			return ret;
		}

		void OnRequestedDeviceChanged(int32_t DeviceGuid); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65D88(relative to base address)
		void OnMatchmakingDialogDeactivated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF65D74(relative to base address)
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddCreativeContentBrowserTab
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIGameFeatureAction_AddCreativeContentBrowserTab : public UFortUIGameFeatureAction	
	{
	public:
		TArray<FCreativeContentBrowserTabInitializer> CreativeContentBrowserTabInitializersToAdd; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddCreativeContentBrowserTab");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeVolumeWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortCreativeVolumeWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeVolumeWidget");
			return ret;
		}

		void OnVolumeManagerClientEnterVolume(APlayerState* PlayerState, AFortVolume* Volume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF65EF8(relative to base address)
		void OnGameInstanceGameStateSet(AFortGameState* GameState); // Flags: Native|Protected, Memory Exec: 0x7FF74DC86EF4(relative to base address)
		AFortVolume GetVolume(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EA67BDC(relative to base address)
		void BindToVolumeManager(); // Flags: Native|Protected, Memory Exec: 0x7FF7470D9EB4(relative to base address)
	};


	// Class FortniteUI.FortCreativeHeatmapOverBudgetWidget
	// Inherited from UFortCreativeVolumeWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B8 - 0x2B8)
	class UFortCreativeHeatmapOverBudgetWidget : public UFortCreativeVolumeWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeHeatmapOverBudgetWidget");
			return ret;
		}

		void BP_OnHeatmapOverBudgetChanged(bool bHeatmapOverBudget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeSimplePlayerMetricInformationWidget
	// Inherited from UFortCreativeVolumeWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B8 - 0x2B8)
	class UFortCreativeSimplePlayerMetricInformationWidget : public UFortCreativeVolumeWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeSimplePlayerMetricInformationWidget");
			return ret;
		}

		void OnSimplePlayerMetricInformationUpdated(APlayerState* PlayerState, FSimpleMetricInformation& SimpleMetricInformation); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FF65E08(relative to base address)
		void BP_OnSimplePlayerMetricInformationUpdated(FSimpleMetricInformation& SimpleMetricInformation); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeVolumePerformanceMetricWidget
	// Inherited from UFortCreativeVolumeWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x308 - 0x2B8)
	class UFortCreativeVolumePerformanceMetricWidget : public UFortCreativeVolumeWidget	
	{
	public:
		FVolumePerformanceMetrics LastVolumePerformanceMetrics; // 0x2B8(0x38)
		EFortBudgetCategory VolumePerformanceMetricCategory; // 0x2F0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2F1(0x3) UNKNOWN PROPERTY
		int32_t LastCostPreviewOfSelectedActor; // 0x2F4(0x4)
		int32_t HighestCellLastCostPreviewOfSelectedActor; // 0x2F8(0x4)
		unsigned char UnknownData01_7[0xC]; // 0x2FC(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget");
			return ret;
		}

		void OnVolumePerformanceMetricsUpdated(FVolumePerformanceMetrics& VolumePerformanceMetrics); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FF66080(relative to base address)
		void OnVolumeManagerVolumeStateChanged(ESpatialLoadingState VolumeState, AFortVolume* Volume); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF65FBC(relative to base address)
		void BP_OnVolumePerformanceMetricsUpdated(FVolumePerformanceMetrics& VolumePerformanceMetrics); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCostPreviewOfSelectedActorUpdated(int32_t CostPreviewOfSelectedActor, int32_t HighestCellCostPreviewOfSelectedActor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortStandardGlobalActionDetailsDataSource
	// Inherited from UObject
	// Size: 0x48 (0x70 - 0x28)
	class UFortStandardGlobalActionDetailsDataSource : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		UFortGlobalUIContext* GlobalUIContext; // 0x30(0x8)
		UCommonInputSubsystem* CommonInputSubsystem; // 0x38(0x8)
		TWeakObjectPtr<AFortPlayerController*> FortPlayerController; // 0x40(0x8)
		unsigned char UnknownData01_6[0x12]; // 0x48(0x12) UNKNOWN PROPERTY
		FFortGlobalActionDetailsFunctionContext ActionDetailsContext; // 0x5A(0x1)
		unsigned char UnknownData02_7[0x15]; // 0x5B(0x15) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandardGlobalActionDetailsDataSource");
			return ret;
		}

		void SetGlobalUIContext(UFortGlobalUIContext* Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF664B4(relative to base address)
		void SetGlobalAction(EFortGlobalAction Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66434(relative to base address)
		void SetCommonInputSubsystem(UCommonInputSubsystem* Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66338(relative to base address)
		void SetActionDetailsContext(FFortGlobalActionDetailsFunctionContext& Value); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF661AC(relative to base address)
		void HandlePlayerControllerChanged(UObject* Source); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF656E0(relative to base address)
		void FortNameDataSourceOnChangeInternalDelegate__DelegateSignature(UObject* Source); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortStandardGlobalActionDetailsDataSource ConstructWithDefaultContexts(UObject* Outer, UWidget* ContextWidget, EFortGlobalAction GlobalAction, FFortGlobalActionDetailsFunctionContext& ActionDetailsContext); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF64840(relative to base address)
		UFortStandardGlobalActionDetailsDataSource Construct(UObject* Outer, UFortGlobalUIContext* GlobalUIContext, UCommonInputSubsystem* CommonInputSubsystem, EFortGlobalAction GlobalAction, FFortGlobalActionDetailsFunctionContext& ActionDetailsContext); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF646B4(relative to base address)
	};


	// Class FortniteUI.FortTimerTimespanDataSource
	// Inherited from UObject
	// Size: 0x38 (0x60 - 0x28)
	class UFortTimerTimespanDataSource : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x38]; // 0x28(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTimerTimespanDataSource");
			return ret;
		}

		void TimespanSourceDelegate__DelegateSignature(FTimespan& Result); // Flags: Public|Delegate|HasOutParms|HasDefaults, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TickManually(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF6699C(relative to base address)
		void StopTimer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF66988(relative to base address)
		void StartTimer(float Delay, bool bTickImmediately); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF668C0(relative to base address)
		void SetTimespanSource(FDelegateProperty& Value); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF66664(relative to base address)
		void FortTimespanDataSourceOnChangeInternalDelegate__DelegateSignature(UObject* Source); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ActivityBrowserBlueprintLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UActivityBrowserBlueprintLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ActivityBrowserBlueprintLibrary");
			return ret;
		}

		bool IsSubModeSelectVisualsEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF65CCC(relative to base address)
		bool IsAttributionsPageFeatureEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF65C3C(relative to base address)
		int32_t GetCurrentPlatformClampedColumnSize(int32_t ColumnSize, bool bDisplayAsSquareTile); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF64ACC(relative to base address)
	};


	// Class FortniteUI.FortActivityBrowserModeSetListEntry
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UFortActivityBrowserModeSetListEntry : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x1390(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityBrowserModeSetListEntry");
			return ret;
		}

		void OnSavedActivitySet(bool IsSaved); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreviewImageChanged(bool bIsLoading, UTexture* Texture); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPartySizeChanged(int32_t PartySize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivityNameSet(FText& ActivityName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetIsSavedActivity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64C98(relative to base address)
		EFortInvalidActivityReason GetInvalidActivityReason(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF64C4C(relative to base address)
	};


	// Class FortniteUI.FortActivityBrowserSoloButton
	// Inherited from UFortTextButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x14C0 - 0x1470)
	class UFortActivityBrowserSoloButton : public UFortTextButton	
	{
	public:
		FText SecondaryText; // 0x1470(0x10)
		UClass* SecondaryTextStyle; // 0x1480(0x8)
		UCommonTextBlock* Text_Secondary; // 0x1488(0x8)
		bool bEnableMobileOverrides; // 0x1490(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x1491(0x3) UNKNOWN PROPERTY
		int32_t MinWidthOverride; // 0x1494(0x4)
		int32_t MinHeightOverride; // 0x1498(0x4)
		FMargin TextPaddingOverride; // 0x149C(0x10)
		int32_t FontSizeOverride; // 0x14AC(0x4)
		UMaterialInterface* MaterialOverride; // 0x14B0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x14B8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityBrowserSoloButton");
			return ret;
		}

		void SetSecondaryText(FText& InSecondaryText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF96BF0(relative to base address)
	};


	// Class FortniteUI.FortActivityBrowserTag
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UFortActivityBrowserTag : public UUserWidget	
	{
	public:
		UCommonTextBlock* Text_TagDescription; // 0x2B0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2B8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityBrowserTag");
			return ret;
		}

		void SetTextAndType(FText& InText, EFortActivityBrowserTagType NewTagType); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FF96CC0(relative to base address)
		void OnTagUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		EFortActivityBrowserTagType GetTagType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E84EE30(relative to base address)
	};


	// Class FortniteUI.FortActivityDetailsDisplay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x3B0 - 0x2D8)
	class UFortActivityDetailsDisplay : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x68]; // 0x2D8(0x68) UNKNOWN PROPERTY
		TArray<FString> XpTagMnemonicWhitelist; // 0x340(0x10)
		float IntroDelay; // 0x350(0x4)
		float DetailsScrollStartDelay; // 0x354(0x4)
		float DetailsScrollSpeed; // 0x358(0x4)
		float DetailsScrollEndDelay; // 0x35C(0x4)
		UCommonRichTextBlock* Text_ActivityOrigin; // 0x360(0x8)
		UCommonTextBlock* Text_ActivityName; // 0x368(0x8)
		UCommonTextBlock* Text_ActivityDescription; // 0x370(0x8)
		UScrollBox* ScrollBox_ActivityDescription; // 0x378(0x8)
		UDynamicEntryBox* EntryBox_ActivityTags; // 0x380(0x8)
		UWidgetAnimation* DetailsIntro; // 0x388(0x8)
		UWidgetAnimation* DetailsOutro; // 0x390(0x8)
		UCommonButtonBase* Button_Accept; // 0x398(0x8)
		UCommonButtonBase* Button_Details; // 0x3A0(0x8)
		UCommonButtonBase* Button_Favorite; // 0x3A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityDetailsDisplay");
			return ret;
		}

		void UpdateLinkCode(FText& LinkCode, bool bIsCreativeActivity); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateIsFavorite(bool bIsFavorite, bool bPlayAnimation); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF9741C(relative to base address)
		void UpdateCCU(int32_t CCUCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ToggleFavorite(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF972DC(relative to base address)
		void ResetWidgetState(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPartySizeChanged(int32_t PartySize); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnParentActivated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOutroAnimationFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF95E54(relative to base address)
		void OnLockStateChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerPromotedToLeader(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerDemoted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsFavoriteChanged(bool bIsFavorite, bool bPlayAnimation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFriendsPlayingChanged(int32_t NumPlaying); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDetailsUpdated(bool bIsDetailsValid, bool bIsFavoritable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDescriptionScrollRestarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsPreviewTile(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95D84(relative to base address)
		bool IsDownloadRequired(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95BF4(relative to base address)
		bool IsDisplayingCategory(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E74BD58(relative to base address)
		bool IsActivityEpicOriginal(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95B64(relative to base address)
		bool IsActivityEpicCreated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95B40(relative to base address)
		void HandlePartySizeChanged(int32_t NewPartySize); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF957F0(relative to base address)
		void HandleLocalPlayerPromotedToLeader(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF956C8(relative to base address)
		void HandleLocalPlayerDemoted(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF956B4(relative to base address)
		void HandleFavoriteClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95374(relative to base address)
		void HandleDetailsClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF952D8(relative to base address)
		UFortGameActivity GetSelectedGameActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94C1C(relative to base address)
		EFortInvalidActivityReason GetInvalidActivityReason(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94514(relative to base address)
		FText GetCreatorTextFormat(FText& CreatorName); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FF94154(relative to base address)
		TArray GetContentWarningStrings(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF940F4(relative to base address)
		void AcceptActivity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD180A8(relative to base address)
	};


	// Class FortniteUI.FortActivityDetailsDisplayHero
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortActivityDetailsDisplayHero : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityDetailsDisplayHero");
			return ret;
		}
	};


	// Class FortniteUI.FortActivityDetailsModal
	// Inherited from UFortActivityDetailsModalBase -> UFortActivityView -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x628 - 0x570)
	class UFortActivityDetailsModal : public UFortActivityDetailsModalBase	
	{
	public:
		unsigned char UnknownData00_3[0x1]; // 0x570(0x1) UNKNOWN PROPERTY
		bool bShouldForceCreatorPageFirstTimeTooltip; // 0x571(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x572(0x6) UNKNOWN PROPERTY
		UCommonTextBlock* Text_LinkCode; // 0x578(0x8)
		UCommonTextBlock* Text_LinkCodeVersion; // 0x580(0x8)
		UCommonTextBlock* Text_VersionSubmode; // 0x588(0x8)
		UFortActivityDetailsDisplay* DetailsDisplay_SelectedActivity; // 0x590(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x598(0x8)
		UCommonButtonBase* Button_Back; // 0x5A0(0x8)
		UCommonButtonBase* Button_BackBoard; // 0x5A8(0x8)
		UFortActivityVideoCycle* ActivityVideoCycle; // 0x5B0(0x8)
		UCommonButtonBase* Button_Favorite; // 0x5B8(0x8)
		UFortActivityModeSetSelection* List_SubModeList; // 0x5C0(0x8)
		UCommonButtonBase* Button_IslandFill; // 0x5C8(0x8)
		UCommonButtonBase* Button_IslandPrivacy; // 0x5D0(0x8)
		UCommonButtonBase* Button_CreatorPage; // 0x5D8(0x8)
		UCommonButtonBase* Button_Attributions; // 0x5E0(0x8)
		UCommonActivatableWidget* ActivityDetailsModal_CreatorPageTooltip; // 0x5E8(0x8)
		bool bAllowSubmodeSelect; // 0x5F0(0x1)
		unsigned char UnknownData02_7[0x37]; // 0x5F1(0x37) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityDetailsModal");
			return ret;
		}

		void UpdatePrivacyAndFill(bool bIsPrivate, bool bIsFill); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF974E0(relative to base address)
		void OnSubModeSelectionChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowSubModeFirstTimeNotification(FText& ActivityAndSettingText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectedSubModeTextChanged(FText& ActivityText, FText& SettingText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreviewImageChanged(bool bIsLoading, UTexture* Texture); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLockStateChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsFavoriteChanged(bool bIsFavorite); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnButtonToggleValueSet(UCommonButtonBase* ButtonToggle, bool bValue); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnButtonToggleAvailabilityUpdated(UCommonButtonBase* ButtonToggle, bool bIsAvailable, bool bIsForcedMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAttributionsVisibilityUpdated(bool bShouldShowAttributionsOption); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsModeSetActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95D60(relative to base address)
		bool IsLocalPlayerPartyLeader(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95D18(relative to base address)
		bool IsCreativeModeSetActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95BD0(relative to base address)
		void HandleSquadFillButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF958D4(relative to base address)
		void HandlePrivacyButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95870(relative to base address)
		void HandleItemClicked(UObject* SelectedItem); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95474(relative to base address)
		void HandleFavoriteButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF952EC(relative to base address)
		void HandleCreatorPageButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF952C4(relative to base address)
		void HandleBackButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95288(relative to base address)
		void HandleAttributionsButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95274(relative to base address)
		void HandleAcceptButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF9519C(relative to base address)
		UFortGameActivity GetSelectedGameActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94C40(relative to base address)
		EFortInvalidActivityReason GetInvalidActivityReason(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94538(relative to base address)
		bool CanShowModeSetButton(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF939DC(relative to base address)
	};


	// Class FortniteUI.FortActivityHabaneroButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x13C0 - 0x1390)
	class UFortActivityHabaneroButton : public UCommonButtonBase	
	{
	public:
		bool bCommitSelectionOnClick; // 0x1390(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x1391(0x7) UNKNOWN PROPERTY
		UFortHabaneroTierWidget* HabaneroWidget; // 0x1398(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x13A0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityHabaneroButton");
			return ret;
		}

		void ToggleFillOnlyVisibility(bool bIsFillOnlyEnabled); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RefreshHabaneroSelection(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF95FD8(relative to base address)
		void OnHabaneroAvailabilityChanged(bool bIsAvailable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDesiredHabaneroSelectionChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CommitCurrentHabaneroSelection(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF93AD8(relative to base address)
	};


	// Class FortniteUI.FortActivityModeSetSelection
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0xB40 - 0xB30)
	class UFortActivityModeSetSelection : public UCommonListView	
	{
	public:
		UFortGameActivity* CachedGameActivity; // 0xB30(0x8)
		UFortGameActivity* SavedActivity; // 0xB38(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityModeSetSelection");
			return ret;
		}
	};


	// Class FortniteUI.FortActivityPrivacyButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UFortActivityPrivacyButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x1390(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityPrivacyButton");
			return ret;
		}

		void OnPrivacyAvailabilityChanged(bool bIsAvailable, bool bShouldBeVisibile); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDesiredPrivacySelectionChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivityScaleFontList
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortActivityScaleFontList : public UObject	
	{
	public:
		TArray<FFortActivityScaleFontData> ScaleData; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityScaleFontList");
			return ret;
		}
	};


	// Class FortniteUI.FortActivityScalingTextBlock
	// Inherited from UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x330 - 0x328)
	class UFortActivityScalingTextBlock : public UCommonTextBlock	
	{
	public:
		UClass* Scaling; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityScalingTextBlock");
			return ret;
		}
	};


	// Class FortniteUI.FortActivitySquadFillButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x13C0 - 0x1390)
	class UFortActivitySquadFillButton : public UCommonButtonBase	
	{
	public:
		FText FillOnlyText; // 0x1390(0x10)
		bool bCommitSelectionOnClick; // 0x13A0(0x1)
		bool bIsPrivateGameSelected; // 0x13A1(0x1)
		unsigned char UnknownData00_7[0x1E]; // 0x13A2(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivitySquadFillButton");
			return ret;
		}

		void ToggleFillOnlyVisibility(bool bIsFillOnlyEnabled); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RefreshSquadFillSelection(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96058(relative to base address)
		void RefreshSquadFillAvailability(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96044(relative to base address)
		void OnSquadFillAvailabilityChanged(bool bIsAvailable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDesiredSquadFillSelectionChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetPreferredDisabledFillOption(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF948A4(relative to base address)
		void CommitCurrentFillSelection(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF93AC4(relative to base address)
	};


	// Class FortniteUI.FortActivityVideoCycle
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UFortActivityVideoCycle : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x1]; // 0x2D8(0x1) UNKNOWN PROPERTY
		bool bBumperFinished; // 0x2D9(0x1)
		bool bVideoLoaded; // 0x2DA(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x2DB(0x5) UNKNOWN PROPERTY
		UClass* MovieWidgetClass; // 0x2E0(0x8)
		UFortVideoWidgetBase* ActivityMovieWidget; // 0x2E8(0x8)
		float MovieStartDelay; // 0x2F0(0x4)
		float MovieRestartDelay; // 0x2F4(0x4)
		unsigned char UnknownData02_7[0x40]; // 0x2F8(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityVideoCycle");
			return ret;
		}

		void PlayVideoOutro(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayVideoIntro(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayVideoBumper(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayVideo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF95FC4(relative to base address)
		void PlaySelectedActivityMovie(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FF95FB0(relative to base address)
		void HandleVideoCycleClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF958FC(relative to base address)
		void HandleMovieWidgetMediaStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF957C8(relative to base address)
		void HandleMovieWidgetMediaPreEndEvent(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF957B4(relative to base address)
		void HandleMovieWidgetMediaOpened(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF957A0(relative to base address)
		void HandleMovieWidgetMediaError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF95720(relative to base address)
		void HandleMovieWidgetMediaEndReached(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF9570C(relative to base address)
		void HandleMovieWidgetMediaClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF956F8(relative to base address)
		UFortGameActivity GetSelectedGameActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94C80(relative to base address)
	};


	// Class FortniteUI.FortActivityViewModel
	// Inherited from UFortDiscoverTileItemVM -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x120 (0x200 - 0xE0)
	class UFortActivityViewModel : public UFortDiscoverTileItemVM	
	{
	public:
		bool bIsFavorite; // 0xE0(0x1)
		EFortCreativeDiscoveryPanelType PanelType; // 0xE1(0x1)
		EFortDiscoverLabelStyle LabelTagStyle; // 0xE2(0x1)
		unsigned char UnknownData00_6[0x5]; // 0xE3(0x5) UNKNOWN PROPERTY
		FString ReasonSurfaced; // 0xE8(0x10)
		bool bIsLeader; // 0xF8(0x1)
		unsigned char UnknownData01_6[0x3]; // 0xF9(0x3) UNKNOWN PROPERTY
		int32_t PartySize; // 0xFC(0x4)
		bool bIsCurrentActivity; // 0x100(0x1)
		EFortInvalidActivityReason InvalidActivityReason; // 0x101(0x1)
		bool bShouldShowIARCRating; // 0x102(0x1)
		bool bShouldShowSpacer; // 0x103(0x1)
		unsigned char UnknownData02_6[0x44]; // 0x104(0x44) UNKNOWN PROPERTY
		TMap<uint32_t, ECreativeLinkPreviewSize> MinColumnSizeToImageSize; // 0x148(0x50)
		unsigned char UnknownData03_7[0x68]; // 0x198(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivityViewModel");
			return ret;
		}

		void OpenRatingInfoURL(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF95E68(relative to base address)
		bool IsSplitScreenDisabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95E14(relative to base address)
		bool IsRatingRefused(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95DF0(relative to base address)
		bool IsRatingNotApplicable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95DCC(relative to base address)
		bool IsPreviewTile(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95DA8(relative to base address)
		bool IsEpicOriginalCreated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95C60(relative to base address)
		bool IsEpicLabsCreated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95C3C(relative to base address)
		bool IsEpicCreated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95C18(relative to base address)
		bool IsAgeRatingTextureRectangular(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95BAC(relative to base address)
		bool IsActivityLocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95B88(relative to base address)
		bool HasUniqueCreatorLogoImage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95A08(relative to base address)
		bool HasAgeRating(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74947E054(relative to base address)
		FVector2D GetTextureSize(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94FE0(relative to base address)
		int32_t GetTeamSizeRangeMin(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94DFC(relative to base address)
		int32_t GetTeamSizeRangeMax(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94DD8(relative to base address)
		FName GetReferenceSurfaceName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94B44(relative to base address)
		FText GetReferencePanelSourceLabelText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94B00(relative to base address)
		FName GetReferencePanelName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94AD4(relative to base address)
		EFortDiscoverLabelStyle GetReferencePanelLabelTagStyle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94AA8(relative to base address)
		UFortDiscoverProviderViewModel GetReferencedPanelVM(UFortDiscoverSurfaceViewModel* InSurfaceViewModel); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94B70(relative to base address)
		TArray GetRatingInteractiveElements(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94A6C(relative to base address)
		TArray GetRatingDescriptors(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94A30(relative to base address)
		ERatingsBoard GetRatingBoard(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94A0C(relative to base address)
		FGameplayTag GetProductTag(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF948C8(relative to base address)
		int32_t GetNumFriendsPlaying(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74947DF08(relative to base address)
		FString GetMnemonic(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF94738(relative to base address)
		int32_t GetMaxTeamSize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94714(relative to base address)
		int32_t GetMaxPlayersRangeMin(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF946F0(relative to base address)
		int32_t GetMaxPlayersRangeMax(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF946CC(relative to base address)
		EFortActivityLinkCategory GetLinkCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94648(relative to base address)
		FText GetLabelText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF945D8(relative to base address)
		FString GetIslandCreatorName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94598(relative to base address)
		bool GetIsFavorite(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F71118C(relative to base address)
		FString GetImageURL(ECreativeLinkPreviewSize InSize); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94470(relative to base address)
		UTexture GetImageTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF9444C(relative to base address)
		EActivityImageLoadingState GetImageLoadingState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E84E074(relative to base address)
		UFortGameActivity GetGameActivity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF943D8(relative to base address)
		FText GetDisplaySubName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94254(relative to base address)
		FText GetDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74947DD64(relative to base address)
		FText GetDescription(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94218(relative to base address)
		EActivityImageLoadingState GetCreatorLogoImageLoadingState(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E84E08C(relative to base address)
		UTexture GetCreatorLogoImage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94130(relative to base address)
		int32_t GetCCUCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF940D0(relative to base address)
		UTexture2DDynamic GetAgeRatingTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93F60(relative to base address)
		FText GetAgeRatingText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93F24(relative to base address)
		FText GetAgeRatingShortText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93EE8(relative to base address)
		FText GetActivitySourceLabelText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93EAC(relative to base address)
		EFortActivityIsLockedReason GetActivityLockedReason(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93E80(relative to base address)
		AFortPlayerController GetActivityLockedPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93E54(relative to base address)
		EFortDiscoverLabelStyle GetActivityLabelTagStyle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93E30(relative to base address)
		bool DoesActivityRequirePurchase(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93BB0(relative to base address)
	};


	// Class FortniteUI.FortDiscoverPanelTreeViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x28 (0x90 - 0x68)
	class UFortDiscoverPanelTreeViewModel : public UMVVMViewModelBase	
	{
	public:
		UFortDiscoverProviderViewModel* Panel; // 0x68(0x8)
		UFortActivityViewModel* ReferencingActivity; // 0x70(0x8)
		TArray<UFortDiscoverPanelTreeViewModel*> Children; // 0x78(0x10)
		TWeakObjectPtr<UFortDiscoverPanelTreeViewModel*> Parent; // 0x88(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverPanelTreeViewModel");
			return ret;
		}

		UFortDiscoverPanelTreeViewModel GetParent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94798(relative to base address)
	};


	// Class FortniteUI.FortDiscoverSurfaceCache
	// Inherited from UObject
	// Size: 0x30 (0x58 - 0x28)
	class UFortDiscoverSurfaceCache : public UObject	
	{
	public:
		TArray<FCachedSurfaceData> CachedSurfacesData; // 0x28(0x10)
		UFortGameActivityProvider* CachedWinterfestActivityProvider; // 0x38(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x40(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverSurfaceCache");
			return ret;
		}
	};


	// Class FortniteUI.FortDiscoverProviderViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x108 (0x170 - 0x68)
	class UFortDiscoverProviderViewModel : public UMVVMViewModelBase	
	{
	public:
		FString PanelName; // 0x68(0x10)
		FName SurfaceName; // 0x78(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x7C(0x4) UNKNOWN PROPERTY
		TArray<UFortDiscoverTileItemVM*> Items; // 0x80(0x10)
		bool bUsesHorizontalScrolling; // 0x90(0x1)
		bool bHasViewAll; // 0x91(0x1)
		bool bIsSquareTiles; // 0x92(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x93(0x1) UNKNOWN PROPERTY
		int32_t ColumnSize; // 0x94(0x4)
		int32_t MaxVisibleRows; // 0x98(0x4)
		int32_t MaxVisibleRowsIgnoringPlatform; // 0x9C(0x4)
		FText PanelDisplayName; // 0xA0(0x10)
		FText PanelDisplaySubtitle; // 0xB0(0x10)
		bool bQueryingPageInProgress; // 0xC0(0x1)
		unsigned char UnknownData02_7[0xAF]; // 0xC1(0xAF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDiscoverProviderViewModel");
			return ret;
		}

		void StopVisibleImpression(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF97004(relative to base address)
		void StartVisibleImpressions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96FE8(relative to base address)
		void SetVisibleImpressions(int32_t FirstVisibleIndex, int32_t LastVisibleIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96DEC(relative to base address)
		void ResetImpressions(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96318(relative to base address)
		bool HasPanelReferences(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF959E4(relative to base address)
		FString GetFeatureTagPropertyValue(FString PropertyName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF942D0(relative to base address)
		void CheckAndFetchNextPage(int32_t SelectionIndex, bool bForceFetchNextPage); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93A00(relative to base address)
	};


	// Class FortniteUI.FortSocialInfoVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UFortSocialInfoVM : public UMVVMViewModelBase	
	{
	public:
		FString URL; // 0x68(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialInfoVM");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerPageProfileVM
	// Inherited from UFortDiscoverTileItemVM -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x110 (0x1F0 - 0xE0)
	class UFortPlayerPageProfileVM : public UFortDiscoverTileItemVM	
	{
	public:
		unsigned char UnknownData00_3[0x70]; // 0xE0(0x70) UNKNOWN PROPERTY
		FText Name; // 0x150(0x10)
		FText Bio; // 0x160(0x10)
		EActivityImageLoadingState AvatarImageLoadingState; // 0x170(0x1)
		EActivityImageLoadingState HeaderImageLoadingState; // 0x171(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x172(0x6) UNKNOWN PROPERTY
		TMap<ESocialLinkType, UFortSocialInfoVM*> SocialInfos; // 0x178(0x50)
		bool bAmIFollowing; // 0x1C8(0x1)
		unsigned char UnknownData02_6[0x1]; // 0x1C9(0x1) UNKNOWN PROPERTY
		bool bAmISupporting; // 0x1CA(0x1)
		bool bIsPlaying; // 0x1CB(0x1)
		bool bIsSelf; // 0x1CC(0x1)
		unsigned char UnknownData03_6[0x3]; // 0x1CD(0x3) UNKNOWN PROPERTY
		FString SurfaceName; // 0x1D0(0x10)
		FMulticastInlineDelegate BP_OnReachedMaxNumberOfFollowedCreators; // 0x1E0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerPageProfileVM");
			return ret;
		}

		void UpdateInteraction(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FF97408(relative to base address)
		void ToggleAmIFollowing(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF972C0(relative to base address)
		void ReportCreator(UUserWidget* ContextWidget); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FF9606C(relative to base address)
		void OpenSocialUrl(ESocialLinkType& SocialType); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E74D514(relative to base address)
		void OnReachedMaxNumberOfFollowedCreators__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasHeaderImageUrl(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF959C8(relative to base address)
		bool HasAvatarImageUrl(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF959AC(relative to base address)
		UTexture GetHeaderImage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94418(relative to base address)
		UTexture GetAvatarImage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93F84(relative to base address)
	};


	// Class FortniteUI.FortPlayerPageVM
	// Inherited from UFortPlayerPageProfileVM -> UFortDiscoverTileItemVM -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x1F8 - 0x1F0)
	class UFortPlayerPageVM : public UFortPlayerPageProfileVM	
	{
	public:
		UFortDiscoverSurfaceViewModel* SurfaceVM; // 0x1F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerPageVM");
			return ret;
		}
	};


	// Class FortniteUI.FortDynamicUIPlayerProxy
	// Inherited from ULocalPlayerSubsystem -> USubsystem -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UFortDynamicUIPlayerProxy : public ULocalPlayerSubsystem	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x30(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicUIPlayerProxy");
			return ret;
		}
	};


	// Class FortniteUI.EmergencyNoticeBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UEmergencyNoticeBase : public UCommonUserWidget	
	{
	public:
		UBorder* Border_TestBG; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EmergencyNoticeBase");
			return ret;
		}

		void ShowNotice(FText& Title, FText& Body); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideNotice(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortEventLeaderboardEntryData
	// Inherited from UObject
	// Size: 0x78 (0xA0 - 0x28)
	class UFortEventLeaderboardEntryData : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x78]; // 0x28(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLeaderboardEntryData");
			return ret;
		}

		bool ShouldShowQualifiedIcon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF96FA0(relative to base address)
		int32_t GetTotalVictoryRoyales(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95178(relative to base address)
		int32_t GetTotalTrackedStat(FString TrackedStatName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF950DC(relative to base address)
		int32_t GetTotalPointsForCategory(FName ScoreCategoryId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95050(relative to base address)
		int32_t GetTotalMatchesPlayed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95034(relative to base address)
		int32_t GetTotalEliminations(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF95010(relative to base address)
		void GetTeammateDisplayNames(TArray<FString>& DisplayNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94E20(relative to base address)
		FText GetTeamDisplayNameText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94D9C(relative to base address)
		FString GetTeamAccountId(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94CC0(relative to base address)
		int32_t GetScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94C00(relative to base address)
		int32_t GetRank(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74DA2D6C8(relative to base address)
		FString GetPlayerDisplayName(FString AccountId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF947DC(relative to base address)
		int32_t GetPageIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF9477C(relative to base address)
		int32_t GetNumTeammates(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94764(relative to base address)
		FString GetLiveSessionId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF9468C(relative to base address)
		bool GetIsMatchPointWinner(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94580(relative to base address)
		FString GetEventWindowId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF942B0(relative to base address)
		FString GetEventId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94290(relative to base address)
		float GetAverageTrackedStat(FString TrackedStatName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94014(relative to base address)
		float GetAveragePlacement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93FEC(relative to base address)
		float GetAverageMatchScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93FB8(relative to base address)
		bool DoesLeaderboardHaveQualifiedIcons(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF93BD4(relative to base address)
	};


	// Class FortniteUI.FortEventLeaderboardTeammateEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortEventLeaderboardTeammateEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_PlayerName; // 0x2D8(0x8)
		UFortFlagImage* IdentityFlag; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLeaderboardTeammateEntry");
			return ret;
		}

		void SetPlayerName(FString PlayerName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96B44(relative to base address)
		void SetPlayerFlag(TWeakObjectPtr<UTexture2D*> PlayerFlag); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96A34(relative to base address)
		void OnLeaderboardEntrySelected(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardEntryDeselected(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortEventLeaderboardEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortEventLeaderboardEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortFlagImage* FlagImage; // 0x13E8(0x8)
		UDynamicEntryBox* DynamicEntryBox_TeamEntries; // 0x13F0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLeaderboardEntry");
			return ret;
		}

		void SetPlayerFlag(TWeakObjectPtr<UTexture2D*> PlayerFlag); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF96924(relative to base address)
		void InitializeTeamTextEntry(UUserWidget* TeamEntryWidget, FText& Usernames); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DisplayTeamUsernames(UFortEventLeaderboardEntryData* LeaderboardEntryData); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF93B30(relative to base address)
	};


	// Class FortniteUI.FortLeaderboardListViewWrapper
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortLeaderboardListViewWrapper : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UListView* ListView_LeaderboardEntries; // 0x3F8(0x8)
		UWidget* Content_LoadingEntries; // 0x400(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaderboardListViewWrapper");
			return ret;
		}

		void OnLeaderboardEntryAdded(ELeaderboardDisplayType NewDisplayType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLeaderboardViewTab
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortLeaderboardViewTab : public UCommonActivatableWidget	
	{
	public:
		UTextBlock* Text_DebugId; // 0x3F0(0x8)
		bool bDisplayTabHeaders; // 0x3F8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3F9(0x7) UNKNOWN PROPERTY
		UCommonWidgetSwitcherLegacy* Switcher_LeaderboardEntries; // 0x400(0x8)
		UFortLeaderboardListViewWrapper* ActivatableContent_LeaderboardListWrapper; // 0x408(0x8)
		UCommonBorder* Content_NoLeaderboardEntries; // 0x410(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaderboardViewTab");
			return ret;
		}

		void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UListView GetListView(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF9466C(relative to base address)
	};


	// Class FortniteUI.FortEventLeaderboardScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1A8 (0x598 - 0x3F0)
	class UFortEventLeaderboardScreen : public UCommonActivatableWidget	
	{
	public:
		TArray<UFortEventLeaderboardEntryData*> LeaderboardEntries; // 0x3F0(0x10)
		UFortEventLeaderboardEntryData* MyEntryData; // 0x400(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x408(0x8) UNKNOWN PROPERTY
		UFortEventLeaderboardEntryData* EntryToShowDetails; // 0x410(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x418(0x8) UNKNOWN PROPERTY
		FString RepresentedEventId; // 0x420(0x10)
		FString RepresentedEventWindowId; // 0x430(0x10)
		unsigned char UnknownData02_6[0x10]; // 0x440(0x10) UNKNOWN PROPERTY
		UFortLeaderboardViewTab* ActivatableContent_LeaderboardTab; // 0x450(0x8)
		ETournamentDisplayType EventDisplayType; // 0x458(0x1)
		unsigned char UnknownData03_6[0x7]; // 0x459(0x7) UNKNOWN PROPERTY
		FDataTableRowHandle AlternativeLeaderboardsTab_LeftAction; // 0x460(0x10)
		FDataTableRowHandle AlternativeLeaderboardsTab_RightAction; // 0x470(0x10)
		FDataTableRowHandle FriendsToggleTab_LeftAction; // 0x480(0x10)
		FDataTableRowHandle FriendsToggleTab_RightAction; // 0x490(0x10)
		UScrollBox* ScrollBox_AlternativeLeaderboardsTabs; // 0x4A0(0x8)
		UScrollBox* ScrollBox_FriendsToggleTabs; // 0x4A8(0x8)
		UWidget* Widget_AlternativeLeaderboardsTabsParent; // 0x4B0(0x8)
		UWidget* Widget_FriendsToggleTabsParent; // 0x4B8(0x8)
		UCommonActionWidget* ActionWidget_AlternativeLeaderboards_TabLeft; // 0x4C0(0x8)
		UCommonActionWidget* ActionWidget_AlternativeLeaderboards_TabRight; // 0x4C8(0x8)
		UCommonActionWidget* ActionWidget_FriendsToggle_TabLeft; // 0x4D0(0x8)
		UCommonActionWidget* ActionWidget_FriendsToggle_TabRight; // 0x4D8(0x8)
		UCommonButtonBase* Button_ViewLiveGames; // 0x4E0(0x8)
		UCommonButtonGroupBase* AlternativeLeaderboardsTabButtonGroup; // 0x4E8(0x8)
		UCommonButtonGroupBase* FriendsToggleTabButtonGroup; // 0x4F0(0x8)
		UClass* TabsClass; // 0x4F8(0x8)
		FText Text_FriendsToggle_ShowingFriends; // 0x500(0x10)
		FText Text_FriendsToggle_ShowingFull; // 0x510(0x10)
		TMap<UCommonButtonBase*, FFortLeaderboardRequestIds> TabButtonsToLeaderboardsIds; // 0x520(0x50)
		bool bIsMainLeaderboardNonWindow; // 0x570(0x1)
		unsigned char UnknownData04_7[0x27]; // 0x571(0x27) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLeaderboardScreen");
			return ret;
		}

		void SetEvent(FString EventId, FString EventWindowId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF96594(relative to base address)
		void RequestNextPage(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF96304(relative to base address)
		void OnShowLeaderboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardEntrySelected(UFortEventLeaderboardEntryData* EntryData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDetailsPanelUpdate(bool bShowDetailsPanel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAlternativeLeaderboardsTabVisibilityChange(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeFriendsToggleTabButton(UCommonButtonBase* TabButton, FText& TabText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeAlternativeLeaderboardsTabButton(UCommonButtonBase* TabButton, FText& TabText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLeaderboardSetInView(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF95668(relative to base address)
		void HandleFriendsToggleTabSelectionChanged(UCommonButtonBase* TabButton, int32_t TabIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF95388(relative to base address)
		void HandleAlternativeLeaderboardsTabSelectionChanged(UCommonButtonBase* TabButton, int32_t TabIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF951B0(relative to base address)
		UFortEventLeaderboardEntryData GetMyLeaderboardEntry(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74C2D1464(relative to base address)
	};


	// Class FortniteUI.FortEventLevelNavigationActorIndicator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortEventLevelNavigationActorIndicator : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLevelNavigationActorIndicator");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialFrontend
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x480 - 0x3F0)
	class UAthenaSpatialFrontend : public UCommonActivatableWidget	
	{
	public:
		UUserWidget* PersistentScreenWidget; // 0x3F0(0x8)
		FGameplayTagContainer HidePersistentScreenCameraTags; // 0x3F8(0x20)
		bool bHideCameraSpatialScreenOnTransistion; // 0x418(0x1)
		EFortBangType BangType; // 0x419(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x41A(0x6) UNKNOWN PROPERTY
		UCommonLazyWidget* Lazy_ActiveScreen; // 0x420(0x8)
		FGameplayTag StartingActiveCamera; // 0x428(0x4)
		FGameplayTag ChallengesCameraTag; // 0x42C(0x4)
		FDataTableRowHandle SelectObjectInputAction; // 0x430(0x10)
		unsigned char UnknownData01_6[0x4]; // 0x440(0x4) UNKNOWN PROPERTY
		bool bEnableSpatialInputPreprocessingByDefault; // 0x444(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x445(0x3) UNKNOWN PROPERTY
		UFortGameStateComponent_EventLevel* EventGameStateComponent; // 0x448(0x8)
		unsigned char UnknownData03_7[0x30]; // 0x450(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialFrontend");
			return ret;
		}

		void OnSelectedNavObjectChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEventLevelTransitionComplete(FGameplayTag& ActiveCamera); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEventLevelTransitionBegin(FGameplayTag& TargetCamera, AFortEventLevelNavigationActor* TargetNavActor); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortEventLevelScreen
	// Inherited from UAthenaSpatialFrontend -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x4A0 - 0x480)
	class UFortEventLevelScreen : public UAthenaSpatialFrontend	
	{
	public:
		UFortEventLevelData* EventLevelScreenData; // 0x480(0x8)
		UFortActivatableVideoPanel* CinematicMovieWidgetInstance; // 0x488(0x8)
		FTimerHandle StreamedVideoOpeningTimer; // 0x490(0x8)
		bool bCollapseTopbar; // 0x498(0x1)
		bool bCollapseBottombar; // 0x499(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x49A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventLevelScreen");
			return ret;
		}

		void StreamedVideoOpeningTimedOut(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF972AC(relative to base address)
		void StreamedVideoOnUrlSuccess(FString OpenedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF97210(relative to base address)
		void StreamedVideoOnUrlFailure(FString OpenedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF97174(relative to base address)
		void StreamedVideoOnSkipButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF97160(relative to base address)
		void StreamedVideoOnSkipBeforeVideoURLReceived(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF9714C(relative to base address)
		void StreamedVideoOnOpenFailure(FString OpenedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF970BC(relative to base address)
		void StreamedVideoOnMediaPlayerEndReached(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF970A8(relative to base address)
		void StreamedVideoOnMediaOpened(FString OpenedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF97018(relative to base address)
		void OnEventCinematicVideoFinished(); // Flags: Native|Protected, Memory Exec: 0x7FF74E2F35D0(relative to base address)
	};


	// Class FortniteUI.FortPlayerBanned
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortPlayerBanned : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerBanned");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialBanModal
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x538 - 0x528)
	class UFortSocialBanModal : public UCommonActivatablePanelLegacy	
	{
	public:
		UCommonButtonLegacy* Button_CloseModal; // 0x528(0x8)
		UCommonRichTextBlock* RichText_TimeRemaining; // 0x530(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialBanModal");
			return ret;
		}

		void OnDisplayModeSet(bool bIsBanned); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortReportActioned
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortReportActioned : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReportActioned");
			return ret;
		}
	};


	// Class FortniteUI.FireModeCustomOptionButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFireModeCustomOptionButton : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_CustomOptionName; // 0x1390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FireModeCustomOptionButton");
			return ret;
		}

		void SetCustomOptionName(FText NewName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF964F8(relative to base address)
	};


	// Class FortniteUI.FireModeSelectionReminderModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFireModeSelectionReminderModal : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Confirm; // 0x408(0x8)
		UCommonButtonBase* Button_Cancel; // 0x410(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FireModeSelectionReminderModal");
			return ret;
		}
	};


	// Class FortniteUI.FireModeSelectionScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFireModeSelectionScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UCommonButtonGroupBase* ButtonGroup_FireModeTiles; // 0x3F8(0x8)
		UPanelWidget* FireModeTileRow; // 0x400(0x8)
		UCommonButtonBase* Button_Confirm; // 0x408(0x8)
		UPanelWidget* MobileCloseButtonContainer; // 0x410(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FireModeSelectionScreen");
			return ret;
		}
	};


	// Class FortniteUI.FireModeTile
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x1480 - 0x1390)
	class UFireModeTile : public UCommonButtonBase	
	{
	public:
		TMap<EFireModeType, FText> FireModeNames; // 0x1390(0x50)
		FText FireModeDescription; // 0x13E0(0x10)
		FText RecommendedTag; // 0x13F0(0x10)
		FText CustomOptionsTabName; // 0x1400(0x10)
		EFireModeType PresetFireModeType; // 0x1410(0x1)
		EFireModeType CustomOption1; // 0x1411(0x1)
		EFireModeType CustomOption2; // 0x1412(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x1413(0x5) UNKNOWN PROPERTY
		FString VideoUID; // 0x1418(0x10)
		UMediaTexture* VideoTexture; // 0x1428(0x8)
		UCommonTextBlock* Text_RecommendedTag; // 0x1430(0x8)
		UCommonTextBlock* Text_Title; // 0x1438(0x8)
		UCommonTextBlock* Text_Description; // 0x1440(0x8)
		UCommonTextBlock* Text_CustomOptionsTabName; // 0x1448(0x8)
		UButton* Button_ToggleCustomOptions; // 0x1450(0x8)
		UFireModeCustomOptionButton* Button_CustomOption1; // 0x1458(0x8)
		UFireModeCustomOptionButton* Button_CustomOption2; // 0x1460(0x8)
		UFortFireModeStreamingVideo* VideoPlayer; // 0x1468(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x1470(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FireModeTile");
			return ret;
		}

		void UpdateDisplayedText(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF9735C(relative to base address)
		void SetIsCustomOptionsPanelOpen(bool bIsOpen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96698(relative to base address)
		void OnMoviePlaybackChanged(bool bIsPlaying); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCustomOptionsPanelToggled(bool bIsOpen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleVideoPlayerPlaybackResumed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF95910(relative to base address)
		void HandleToggleCustomOptionsClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF958E8(relative to base address)
	};


	// Class FortniteUI.FortAbilitiesPageTileBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortAbilitiesPageTileBase : public UCommonButtonLegacy	
	{
	public:
		UCommonWidgetSwitcherLegacy* SwitcherAbilityBindingSwitcher; // 0x13E0(0x8)
		UFortKeybindWidget* KeybindAbilityKeybind; // 0x13E8(0x8)
		UFortKeybindWidget* KeybindAbilityKeybindCombo1; // 0x13F0(0x8)
		UFortKeybindWidget* KeybindAbilityKeybindCombo2; // 0x13F8(0x8)
		int32_t QuickBarSlot; // 0x1400(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x1404(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAbilitiesPageTileBase");
			return ret;
		}

		void UpdateGamepadKeyBindingText(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF973F4(relative to base address)
	};


	// Class FortniteUI.FortAccountLinkingWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC8 (0x628 - 0x560)
	class UFortAccountLinkingWindow : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x70]; // 0x560(0x70) UNKNOWN PROPERTY
		UCommonWidgetSwitcherLegacy* Switcher_Main; // 0x5D0(0x8)
		UBackgroundBlur* HaveEpicAccountBlur; // 0x5D8(0x8)
		UBackgroundBlur* SkipSignInBlur; // 0x5E0(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_NoThanks; // 0x5E8(0x8)
		UCircularThrobber* Throbber_LoginDelay; // 0x5F0(0x8)
		UCommonButtonLegacy* Button_Signup; // 0x5F8(0x8)
		UCommonButtonLegacy* Button_Login; // 0x600(0x8)
		UCommonButtonLegacy* Button_NoThanks; // 0x608(0x8)
		UCommonButtonLegacy* Button_SkipSignInSignup; // 0x610(0x8)
		UCommonButtonLegacy* Button_SkipSignInLogin; // 0x618(0x8)
		UCommonButtonLegacy* Button_SkipSignInNoThanks; // 0x620(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAccountLinkingWindow");
			return ret;
		}

		void HandleSkipSignUpClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF95884(relative to base address)
		void HandleSkipNoThanksClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF958AC(relative to base address)
		void HandleSkipLoginClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF956DC(relative to base address)
		void HandleSignupClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF95884(relative to base address)
		void HandleNoThanksClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF957DC(relative to base address)
		void HandleLoginClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF956DC(relative to base address)
		void FortNewPlatformReceipt__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAccountPinLinkingWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x660 - 0x560)
	class UFortAccountPinLinkingWindow : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x90]; // 0x560(0x90) UNKNOWN PROPERTY
		UCommonWidgetSwitcherLegacy* Switcher_Main; // 0x5F0(0x8)
		UBackgroundBlur* Blur_PinGrantCodeInfo; // 0x5F8(0x8)
		UBackgroundBlur* Blur_InitialRequest; // 0x600(0x8)
		UBackgroundBlur* Blur_SkipSignIn; // 0x608(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_NoThanks; // 0x610(0x8)
		UCircularThrobber* Throbber_LoginDelay; // 0x618(0x8)
		UCommonButtonLegacy* Button_CreateEpicAccount; // 0x620(0x8)
		UCommonButtonLegacy* Button_GoLinking; // 0x628(0x8)
		UCommonButtonLegacy* Button_SkipLinking; // 0x630(0x8)
		UCommonButtonLegacy* Button_CancelPinRequest; // 0x638(0x8)
		UCommonButtonLegacy* Button_SkipGoBackLinking; // 0x640(0x8)
		UCommonButtonLegacy* Button_SkipSignInNoThanks; // 0x648(0x8)
		UHorizontalBox* Container_CreateEpicAccount; // 0x650(0x8)
		UFortPinGrantCodeInfoWidget* PinGrantCodeInfoWidget; // 0x658(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAccountPinLinkingWindow");
			return ret;
		}

		void UpdateExpiringTime(int32_t RemainingTime); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF97370(relative to base address)
		void ShowPinLoading(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF96FCC(relative to base address)
		void ShowCurrentPinInfo(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF96FB8(relative to base address)
		void SetPinGrantInfo(FString PinCode, FString ActivationURL, FText& InfoText); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FF967D8(relative to base address)
		void SetInitialSection(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF96684(relative to base address)
		void PinCodeIssue(FText& ErrorMessage, FText& InfoText); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FF95EA4(relative to base address)
		void HandleSkipNoThanksClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF958C0(relative to base address)
		void HandleSkipLinkingClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF95898(relative to base address)
		void HandleLinkAccountClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF956A0(relative to base address)
		void HandleGoBackToInitialRequest(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF95460(relative to base address)
		void HandleGenerateCodeClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF9544C(relative to base address)
		void HandleCreateAccountClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF952B0(relative to base address)
		void HandleCancelPinRequestClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FF9529C(relative to base address)
		void FortNewPlatformReceipt__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CreateHeadlessAccount(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FF93AEC(relative to base address)
	};


	// Class FortniteUI.FortActorCanvas
	// Inherited from UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x1C8 - 0x170)
	class UFortActorCanvas : public UPanelWidget	
	{
	public:
		FGameplayTagContainer DefaultHUDElementTags; // 0x170(0x20)
		bool bDrawElementsInOrder; // 0x190(0x1)
		unsigned char UnknownData00_7[0x37]; // 0x191(0x37) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActorCanvas");
			return ret;
		}

		void OnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF749038220(relative to base address)
		UFortActorCanvasSlot AddActorIndicator(UFortActorIndicatorWidget* Indicator); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749586D9C(relative to base address)
	};


	// Class FortniteUI.FortActorCanvasSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x18 (0x50 - 0x38)
	class UFortActorCanvasSlot : public UPanelSlot	
	{
	public:
		TEnumAsByte<EHorizontalAlignment> HorizontalAlignment; // 0x38(0x1)
		TEnumAsByte<EVerticalAlignment> VerticalAlignment; // 0x39(0x1)
		bool bCanAutoRemove; // 0x3A(0x1)
		unsigned char UnknownData00_7[0x15]; // 0x3B(0x15) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActorCanvasSlot");
			return ret;
		}

		void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74876B8AC(relative to base address)
		void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74876B82C(relative to base address)
		void SetCanAutoRemove(bool bAllowAutoRemove); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74876B958(relative to base address)
	};


	// Class FortniteUI.FortAffiliateEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortAffiliateEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x13E0(0x18) UNKNOWN PROPERTY
		UCommonTextBlock* OptionDisplayName; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAffiliateEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortAffiliateEntryData
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortAffiliateEntryData : public UObject	
	{
	public:
		FString AffiliateName; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAffiliateEntryData");
			return ret;
		}
	};


	// Class FortniteUI.FortAffilateModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UFortAffilateModal : public UFortActivatablePanel	
	{
	public:
		FString SourceName; // 0x560(0x10)
		UCommonButtonBase* AcceptButton; // 0x570(0x8)
		UEditableText* AffiliateKey; // 0x578(0x8)
		UListView* AffiliateSuggestionList; // 0x580(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAffilateModal");
			return ret;
		}
	};


	// Class FortniteUI.FortAnnouncementWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortAnnouncementWidget : public UCommonUserWidget	
	{
	public:
		AFortClientAnnouncement* BoundAnnouncement; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAnnouncementWidget");
			return ret;
		}

		void UpdateWidgetData(AFortClientAnnouncement* Announcement); // Flags: BlueprintCosmetic|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetTextForAction(FName& ActionName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94EE4(relative to base address)
		FName FindFirstUnboundAction(FText AnnouncementBody); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93D80(relative to base address)
		void BindUpdateEvents(AFortClientAnnouncement* Announcement); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF938A8(relative to base address)
		void AnnouncementStopped(AFortClientAnnouncement* Announcement); // Flags: BlueprintCosmetic|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMatchmakingWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UFortMatchmakingWidgetBase : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaCreativeMatchmakingWidget
	// Inherited from UFortMatchmakingWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UFortAthenaCreativeMatchmakingWidget : public UFortMatchmakingWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x318(0x18) UNKNOWN PROPERTY
		bool bIsCreativeHUD : 1; // 0x330:0(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x331(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaCreativeMatchmakingWidget");
			return ret;
		}

		void TogglePlayerReadyState(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF972F0(relative to base address)
		void SetupOwningPlayerForReadyCheckInput(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF96F4C(relative to base address)
		void SetOwningPlayerReadyState(bool bInReadyState); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF96718(relative to base address)
		void OnUpdatedSquadReadyInformationBP(int32_t SquadMembers, int32_t ReadySquadMembers, bool AmIReady); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaySimpleIntroOutroWithDelay(float InDelay); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeOnHideWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FF95E38(relative to base address)
		void InGameMathcmakingUpdateCheckFailed(EUpdateCompletionStatus Status); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FF95A3C(relative to base address)
		bool HasAnyPlayerOptedOutOfCrossPlatformPlay(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FF95924(relative to base address)
		void HandlePartyLeaderReadinessChangedBP(EGameReadiness GameReadiness, int32_t SquadMemberIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMatchmakingPartyReadyBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInGameReadinessChangedBP(EGameReadiness GameReadiness, int32_t SquadMemberIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetIsDestPlaylistCreativeRoyale(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FF94564(relative to base address)
		void DisableOwningPlayerForReadyCheckInput(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF93B1C(relative to base address)
	};


	// Class FortniteUI.FortAthenaMatchmakingTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x110 (0x14F0 - 0x13E0)
	class UFortAthenaMatchmakingTile : public UCommonButtonLegacy	
	{
	public:
		UEpicCMSImage* GameModeImage; // 0x13E0(0x8)
		UCommonBorder* AdSpace; // 0x13E8(0x8)
		UCommonTextBlock* AdText; // 0x13F0(0x8)
		UCommonTextBlock* SpecialAdText; // 0x13F8(0x8)
		UCommonTextBlock* GameModeName; // 0x1400(0x8)
		UCommonTextBlock* SubGameModeName; // 0x1408(0x8)
		int32_t BorderDisplayStyle; // 0x1410(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x1414(0x4) UNKNOWN PROPERTY
		FAthenaPlaylistEntry CMSPlaylistEntry; // 0x1418(0x78)
		UFortActiveFriendsViolator* Violator_ActiveFriends; // 0x1490(0x8)
		FPlaylistFrontEndData TilePlaylistData; // 0x1498(0x50)
		unsigned char UnknownData01_7[0x8]; // 0x14E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaMatchmakingTile");
			return ret;
		}

		void UpdateTileAvailability(bool Available); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TilePlaylistSetAsMatchmakingPlaylist(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetTileSize(int32_t NumRowTiles); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetDefaultImage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateTextFieldsFromCMS(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9F3C(relative to base address)
		void PlaylistChanged(FPlaylistFrontEndData& PlaylistToRepresent); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCMSDataUpdated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaMatchmakingWidgetLegacy
	// Inherited from UFortMatchmakingWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F0 (0x508 - 0x318)
	class UFortAthenaMatchmakingWidgetLegacy : public UFortMatchmakingWidgetBase	
	{
	public:
		TWeakObjectPtr<UClass*> HabaneroAnimatedMessageClass; // 0x318(0x20)
		unsigned char UnknownData00_6[0xD8]; // 0x338(0xD8) UNKNOWN PROPERTY
		FText RegionLockTitle; // 0x410(0x10)
		TWeakObjectPtr<UClass*> CampaignReadyScreenClass; // 0x420(0x20)
		bool bPlaylistHasSquadFillOption; // 0x440(0x1)
		bool bHasPlaylistPrivateMatchOption; // 0x441(0x1)
		unsigned char UnknownData01_6[0x76]; // 0x442(0x76) UNKNOWN PROPERTY
		UFortHabaneroDisplayData* HabaneroDisplayData; // 0x4B8(0x8)
		UCommonTextBlock* Text_FillStatus; // 0x4C0(0x8)
		UCommonTextBlock* Text_PrivateMatch; // 0x4C8(0x8)
		UFortCTAButton* Button_SquadFill; // 0x4D0(0x8)
		UFortCTAButton* Button_PrivateMatch; // 0x4D8(0x8)
		UFortShowdownDetailView* ShowdownViolator; // 0x4E0(0x8)
		UAthenaMatchmakingViolator* BasicViolator; // 0x4E8(0x8)
		bool bOverrideBattleRoyaleRankedSeasonName; // 0x4F0(0x1)
		bool bOverrideDelMarRankedSeasonName; // 0x4F1(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x4F2(0x6) UNKNOWN PROPERTY
		UFortMatchmakingSuggestionWidget* SuggestionWidget; // 0x4F8(0x8)
		unsigned char UnknownData03_7[0x8]; // 0x500(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy");
			return ret;
		}

		void ShowSelectedActivityDetailsPage(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFCAB74(relative to base address)
		void ShouldShowMatchmakingDetails(bool bShow); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetShowingDiscoveryEntryFlowToolTip(bool bShowTooltip); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestPlay(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFCA000(relative to base address)
		void PlaylistChanged(FPlaylistFrontEndData& NewPlaylist, FText& PlaylistCMSOverrideName, EFortLobbyType LobbyType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlaylistActivityChanged(FPlaylistFrontEndData& NewPlaylist, FText& ActivityName, EFortLobbyType LobbyType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnViolatorStyleRefreshed(EFortMatchmakingViolatorStyle NewViolatorStyle); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartMatchClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9E60(relative to base address)
		void OnSocialUserSittingOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetViewDetailsButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetStartMatchButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPlayButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPlayButtonText(FText& PlayButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPlayButtonSecondaryText(FText& PlayButtonSecondaryText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPlayButtonEnabled(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPartySizeWarningVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPartySizeWarningText(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetMatchmakingModeButtonText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetMatchmakingModeButtonEnabled(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetMatchmakingMessageText(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetMatchmakingHeaderText(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetInstallButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetInstallButtonEnabled(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetHabaneroText(FText& HabaneroString, EHabaneroDisplayState& State); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetContentDownloadProgressText(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetContentDownloadProgressBar(float Progress); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetContentBeaconDownloadVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetCancelButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetCancelButtonText(FText& CancelButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetCancelButtonEnabled(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreStartMatchmaking(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9E4C(relative to base address)
		void OnPlayButtonLockStateChanged(bool bLockState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnModeSelectButtonUpdated(bool bShouldShow, bool bShouldEnable); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnModeLockedVisibility(AFortPlayerController* BestLockedPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingModeButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9E38(relative to base address)
		void OnMatchmakingFinishedBlueprint(bool bSuccess, UFortPlaylistAthena* Playlist); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerSittingOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLocalPlayerPromotedToLeader(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInstallClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9E24(relative to base address)
		void OnHabaneroStateUpdated(bool bIsHabaneroEnabled, bool bIsHabaneroIsland); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OnGetPlayButtonEnabled(); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FGeometry OnGetPlayButtonCachedGeometry(); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCancelClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9C5C(relative to base address)
		void OnBlackoutCountdownVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBlackoutCountdownText(FText& Text); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAvailablePlaylistsUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSquadFillEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC9A2C(relative to base address)
		bool IsSinglePlayerActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74959F980(relative to base address)
		bool IsPrivateMatchEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC99C4(relative to base address)
		bool IsAnyCreativeModeSelectActivity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC9808(relative to base address)
		bool IsAllSelectEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC97CC(relative to base address)
		bool HasRankedOptions(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748075494(relative to base address)
		void HandleMatchMakingModeCalled(FString IslandMnemonic, FName InPlaylistName); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8E0C(relative to base address)
		FText GetSinglePlayerMatchText(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC89D4(relative to base address)
		FText GetPrivateMatchText(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8780(relative to base address)
		FText GetFillStatusText(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7FC8(relative to base address)
		UClass GetCustomHeaderWidgetFromIslandExtension(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749715BA8(relative to base address)
		FText GetCreativeModeSelectText(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7A78(relative to base address)
		FText GetButtonPublicMatchText(); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74FFC7910(relative to base address)
		FText GetButtonPrivateMatchText(); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74FFC78D0(relative to base address)
		FGameSelectionButtonInfo GetButtonModeSetTextFromIslandExtension(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748074F1C(relative to base address)
	};


	// Class FortniteUI.FortAthenaTabsScreenBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortAthenaTabsScreenBase : public UCommonActivatableWidget	
	{
	public:
		TArray<EFortUIFeature> TabsUIFeature; // 0x3F0(0x10)
		UCommonWidgetSwitcherLegacy* TabContentSwitcher; // 0x400(0x8)
		UFortMtxStoreRootBase* StoreMain_Root; // 0x408(0x8)
		FGameplayTag SeasonTrailerAutoplayEndingCamera; // 0x410(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x414(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTabsScreenBase");
			return ret;
		}
	};


	// Class FortniteUI.FortBangInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortBangInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBangInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortBangWrapperOld
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x1B8 - 0x170)
	class UFortBangWrapperOld : public UContentWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x170(0x8) UNKNOWN PROPERTY
		EFortBangSize Size; // 0x178(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x179(0x7) UNKNOWN PROPERTY
		FVector2D Offset; // 0x180(0x10)
		EFortBangType BangType; // 0x190(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x191(0x3) UNKNOWN PROPERTY
		FName TutorialNameID; // 0x194(0x4)
		EFortTutorialGlowType TutorialGlowType; // 0x198(0x1)
		unsigned char UnknownData03_7[0x1F]; // 0x199(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBangWrapperOld");
			return ret;
		}

		void SetBangVisibility(bool InVisible); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA064(relative to base address)
	};


	// Class FortniteUI.FortBangWrapper_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortBangWrapper_NUI : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		EFortBangType BangType; // 0x2E0(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2E1(0x3) UNKNOWN PROPERTY
		FName TutorialNameID; // 0x2E4(0x4)
		UNamedSlot* ContentSlot; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBangWrapper_NUI");
			return ret;
		}

		void UnregisterTutorialNameID(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCADA0(relative to base address)
		void SetTutorialNameID(FName InTutorialNameID); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAA80(relative to base address)
		void SetBangType(EFortBangType NewBangType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748A5089C(relative to base address)
		void SetBangStateBP(bool bEnabled, int32_t Count); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748A507CC(relative to base address)
		void OnTutorialCalloutFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStopCallout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartCallout(FName TutorialObjectiveName, ETutorialType TutorialType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBangStateChanged(bool bEnabled, int32_t Count); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AsyncPlaySound2D(UObject* WorldContextObject, TWeakObjectPtr<USoundBase*> SoundToLoad, float VolumeMultiplier, float PitchMultiplier, float StartTime); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC6CA0(relative to base address)
	};


	// Class FortniteUI.FortButtonStyle
	// Inherited from UObject
	// Size: 0x20C8 (0x20F0 - 0x28)
	class UFortButtonStyle : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FFortStateStyle NormalBase; // 0x30(0x440)
		FFortStateStyle NormalHovered; // 0x470(0x440)
		FFortStateStyle NormalPressed; // 0x8B0(0x440)
		FFortStateStyle SelectedBase; // 0xCF0(0x440)
		FFortStateStyle SelectedHovered; // 0x1130(0x440)
		FFortStateStyle SelectedPressed; // 0x1570(0x440)
		FFortStateStyle Disabled; // 0x19B0(0x440)
		FFortMultiSizeMargin ButtonPadding; // 0x1DF0(0x60)
		FFortMultiSizeFont Font; // 0x1E50(0x210)
		FFortMultiSizeMargin CustomPadding; // 0x2060(0x60)
		FSlateSound PressedSlateSound; // 0x20C0(0x18)
		FSlateSound HoveredSlateSound; // 0x20D8(0x18)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonStyle");
			return ret;
		}

		FMargin GetMarginBySizeFromMultiSizeMargin(FFortMultiSizeMargin& MultiSizeMargin, TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC8520(relative to base address)
		FSlateFontInfo GetFontBySizeFromMultiSizeFont(FFortMultiSizeFont& MultiSizeFont, TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC80C4(relative to base address)
		FSlateFontInfo GetFontBySize(TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC800C(relative to base address)
		FMargin GetCustomPaddingBySize(TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7F04(relative to base address)
		FMargin GetButtonPaddingBySize(TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC780C(relative to base address)
		FSlateBrush GetBrushBySizeFromMultiSizeBrush(FFortMultiSizeBrush& MultiSizeBrush, TEnumAsByte<EFortBrushSize> Size); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC7618(relative to base address)
	};


	// Class FortniteUI.FortBaseButton
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x7C0 (0xA80 - 0x2C0)
	class UFortBaseButton : public UFortUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2C0(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate EnabledChanged; // 0x2C8(0x10)
		FMulticastInlineDelegate SelectedChanged; // 0x2D8(0x10)
		FMulticastInlineDelegate ButtonClicked; // 0x2E8(0x10)
		EFortBangSize BangSize; // 0x2F8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2F9(0x7) UNKNOWN PROPERTY
		FVector2D BangOffset; // 0x300(0x10)
		EFortBangType BangType; // 0x310(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x311(0x3) UNKNOWN PROPERTY
		FName TutorialNameID; // 0x314(0x4)
		EFortTutorialGlowType TutorialGlowType; // 0x318(0x1)
		unsigned char UnknownData03_6[0x7]; // 0x319(0x7) UNKNOWN PROPERTY
		UClass* Style; // 0x320(0x8)
		TEnumAsByte<EFortBrushSize> BrushSize; // 0x328(0x1)
		unsigned char UnknownData04_6[0x7]; // 0x329(0x7) UNKNOWN PROPERTY
		FSlateSound PressedSlateSoundOverride; // 0x330(0x18)
		FSlateSound HoveredSlateSoundOverride; // 0x348(0x18)
		bool bSelectable; // 0x360(0x1)
		unsigned char UnknownData05_6[0x3]; // 0x361(0x3) UNKNOWN PROPERTY
		FName SelectionGroup; // 0x364(0x4)
		bool bToggleable; // 0x368(0x1)
		bool bClickable; // 0x369(0x1)
		TEnumAsByte<EButtonClickMethod> ClickMethod; // 0x36A(0x1)
		unsigned char UnknownData06_7[0x715]; // 0x36B(0x715) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBaseButton");
			return ret;
		}

		void SetStyle(UClass* InStyle); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA8F4(relative to base address)
		void SetSelectionGroup(FName InSelectionGroup); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA868(relative to base address)
		void SetSelected(bool InSelected); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA7E8(relative to base address)
		void SetHovered(bool InHovered); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA4C0(relative to base address)
		void SetClickMethod(TEnumAsByte<EButtonClickMethod> InClickMethod); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA274(relative to base address)
		void SetClickable(bool InClickable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA308(relative to base address)
		void SetBrushSize(TEnumAsByte<EFortBrushSize> InSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA164(relative to base address)
		void SetBangVisibility(bool bVisible); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA0E4(relative to base address)
		void OnButtonClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FFC7560(relative to base address)
		UFortButtonStyle GetStyle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8A18(relative to base address)
		int32_t GetSelectionGroupIndex(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC88F4(relative to base address)
		bool GetSelected(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC88B4(relative to base address)
		FFortStateStyle GetCurrentStateStyle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7E44(relative to base address)
		FSlateFontInfo GetCurrentFont(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7D6C(relative to base address)
		FMargin GetCurrentCustomPadding(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7D18(relative to base address)
		FMargin GetCurrentButtonPadding(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7ABC(relative to base address)
		void ForceClick(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC7560(relative to base address)
	};


	// Class FortniteUI.FortBorderStyleList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortBorderStyleList : public UCommonUserWidget	
	{
	public:
		FName BordersPath; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBorderStyleList");
			return ret;
		}

		TArray GetBorderStyles(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7574(relative to base address)
	};


	// Class FortniteUI.FortBuildingInfoIndicatorWidget
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3C0 - 0x3C0)
	class UFortBuildingInfoIndicatorWidget : public UFortActorIndicatorWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBuildingInfoIndicatorWidget");
			return ret;
		}

		void SetKeyBindWidgetBoundAction(UFortKeybindWidget* FortKeybindWidget, FName ActionName, EFortBuildingInteraction InteractionType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA5F8(relative to base address)
	};


	// Class FortniteUI.FortButtonInternalWidget
	// Inherited from UButton -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x580 - 0x568)
	class UFortButtonInternalWidget : public UButton	
	{
	public:
		bool IsClickable; // 0x568(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x569(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortButtonInternalWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortChatContainer
	// Inherited from USocialChatContainer -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x360 - 0x308)
	class UFortChatContainer : public USocialChatContainer	
	{
	public:
		FMulticastInlineDelegate OnChatContainerFocus; // 0x308(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x318(0x18) UNKNOWN PROPERTY
		TWeakObjectPtr<USocialChatChannel*> CacheChannelForPlatformMessage; // 0x330(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x338(0x8) UNKNOWN PROPERTY
		USocialChatChannel* CombinedChannel; // 0x340(0x8)
		UClass* ActionMenuClass; // 0x348(0x8)
		UFortSocialInteractionMenu* ActionMenu; // 0x350(0x8)
		UMenuAnchor* MenuAnchor_MessageActions; // 0x358(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChatContainer");
			return ret;
		}

		void OnSendButtonDisplayChanged(bool bShowSendButton); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTextChatRestricted(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC9AAC(relative to base address)
		UUserWidget HandleGetMenuContentForAnchor(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74D097B08(relative to base address)
		FText GetTextChatDisabledText(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8AB4(relative to base address)
		void ChatContainerFocus__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortChatMessageEntry
	// Inherited from USocialChatMessageEntry -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x410 - 0x410)
	class UFortChatMessageEntry : public USocialChatMessageEntry	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChatMessageEntry");
			return ret;
		}

		void OnFocusedChanged(bool bIsFocused); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		EChatMessageOrigin GetMessageOrigin(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC86D8(relative to base address)
	};


	// Class FortniteUI.FortCMSInfoCarousel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x5E8 - 0x560)
	class UFortCMSInfoCarousel : public UFortActivatablePanel	
	{
	public:
		TMap<FString, UClass*> MessageWidgetLayoutMap; // 0x560(0x50)
		UCommonWidgetCarousel* Carousel; // 0x5B0(0x8)
		UCommonWidgetCarouselNavBar* CarouselNavBar; // 0x5B8(0x8)
		FString CMSInfoId; // 0x5C0(0x10)
		float AutoScrollInterval; // 0x5D0(0x4)
		unsigned char UnknownData00_7[0x14]; // 0x5D4(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCMSInfoCarousel");
			return ret;
		}

		void NavigatePageRight(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9C48(relative to base address)
		void NavigatePageLeft(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC9C34(relative to base address)
	};


	// Class FortniteUI.FortCommonTileView
	// Inherited from UCommonTileView -> UTileView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0xB60 - 0xB58)
	class UFortCommonTileView : public UCommonTileView	
	{
	public:
		bool bConsumeTouchInputWhenScrolling; // 0xB58(0x1)
		bool bEnableMobileScrollBarThicknessOverride; // 0xB59(0x1)
		unsigned char UnknownData00_6[0x2]; // 0xB5A(0x2) UNKNOWN PROPERTY
		float MobileScrollBarThicknessOverride; // 0xB5C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCommonTileView");
			return ret;
		}

		int32_t GetNumberItemsPerRow(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC86FC(relative to base address)
	};


	// Class FortniteUI.FortCreativeCollabDialogWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortCreativeCollabDialogWidget : public UCommonActivatableWidget	
	{
	public:
		FMulticastInlineDelegate OnDialogResultSet; // 0x3F0(0x10)
		bool bCanCreateIslands; // 0x400(0x1)
		bool bOnlyCloseButton; // 0x401(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x402(0x6) UNKNOWN PROPERTY
		FString RequiredEntitlement; // 0x408(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeCollabDialogWidget");
			return ret;
		}

		void SetDialogResult(ECollabDialogExitResult SelectedResult); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFCA42C(relative to base address)
		void SetCloseOnly(bool bCloseOnly); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA3AC(relative to base address)
		void SetCanCreateIslands(bool bCanCreate); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA1F4(relative to base address)
		void OnDialogExit__DelegateSignature(ECollabDialogExitResult Action); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCollabEntitlementUpdated(bool bEntitlementGranted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetHasCollabEntitlement(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8460(relative to base address)
		void CheckIfHasCollabEntitlement(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC72B4(relative to base address)
	};


	// Class FortniteUI.FortCreativeContentBrowserTabPanelBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortCreativeContentBrowserTabPanelBase : public UCommonActivatableWidget	
	{
	public:
		FMulticastInlineDelegate OnSelectionChanged; // 0x3F0(0x10)
		unsigned char UnknownData00_6[0x4]; // 0x400(0x4) UNKNOWN PROPERTY
		FName TabName; // 0x404(0x4)
		FText TabLabel; // 0x408(0x10)
		TArray<FName> LastFilters; // 0x418(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeContentBrowserTabPanelBase");
			return ret;
		}

		void SelectTab(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsUsingSidePanel(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EA67DF8(relative to base address)
		int32_t GetSelectedItemIndex(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC88CC(relative to base address)
		EFortCreativeItemType GetItemType(); // Flags: Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFC84A8(relative to base address)
	};


	// Class FortniteUI.FortCreativeOptionsCategory
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x308 - 0x2B0)
	class UFortCreativeOptionsCategory : public UUserWidget	
	{
	public:
		FCreativeOptionCategoryData OptionCategory; // 0x2B0(0x18)
		TArray<UFortCreativeOption*> CreativeOptions; // 0x2C8(0x10)
		UFortCreativeGlobalOptions* GlobalOptionsUI; // 0x2D8(0x8)
		UCommonListView* ListView_Options; // 0x2E0(0x8)
		UCommonTextBlock* Text_CategoryText; // 0x2E8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2F0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeOptionsCategory");
			return ret;
		}

		void OnSelectionUpdated(UFortMatchmakingKnobsSpinnerButton* CurrentSelection); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UCommonListView GetOptionsList(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D789374(relative to base address)
	};


	// Class FortniteUI.FortCreativeGlobalOptions
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x5B8 - 0x560)
	class UFortCreativeGlobalOptions : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		int32_t CachedLastUsedIndexInCategory; // 0x568(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x56C(0x4) UNKNOWN PROPERTY
		TArray<UFortCreativeOptionsCategory*> CategoryListViews; // 0x570(0x10)
		UFortCreativeOptionsBundle* OptionsAsset; // 0x580(0x8)
		unsigned char UnknownData02_6[0x10]; // 0x588(0x10) UNKNOWN PROPERTY
		UFortCreativeOptionsCategory* Category_Player; // 0x598(0x8)
		UFortCreativeOptionsCategory* Category_MoveTool; // 0x5A0(0x8)
		UCommonButtonBase* Button_Cancel; // 0x5A8(0x8)
		UCommonTextBlock* Text_ToolTipText; // 0x5B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeGlobalOptions");
			return ret;
		}

		void UpdateCachedIndices(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFCADB4(relative to base address)
		UFortCreativeOptionsCategory GetOptionListFromMemoryPointer(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8720(relative to base address)
	};


	// Class FortniteUI.FortCreativeInfoIndicatorWidget
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3C0 - 0x3C0)
	class UFortCreativeInfoIndicatorWidget : public UFortActorIndicatorWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeInfoIndicatorWidget");
			return ret;
		}

		void SetKeyBindWidgetBoundAction(UFortKeybindWidget* FortKeybindWidget, FName ActionName, EFortBuildingInteraction InteractionType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA6F0(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandPanel
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UFortCreativeIslandPanel : public UFortHUDElementWidget	
	{
	public:
		FMulticastInlineDelegate OnSupportCreator; // 0x318(0x10)
		UInputComponent* PanelInputComponent; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandPanel");
			return ret;
		}

		void PushPanelInputComponent(APlayerController* PlayerController); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9F50(relative to base address)
		void PopPanelInputComponent(APlayerController* PlayerController); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9EBC(relative to base address)
		FString GetSupportCode(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8A3C(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandSelect
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UFortCreativeIslandSelect : public UFortActivatablePanel	
	{
	public:
		UCommonButtonGroupLegacy* TabButtonGroup; // 0x560(0x8)
		UCommonListView* ListView_IslandList; // 0x568(0x8)
		FString RequiredEntitlement; // 0x570(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x580(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandSelect");
			return ret;
		}

		void OnCollabEntitlementChanged(bool bEntitlementGranted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetHasCollabApproval(FString GameFeatureSetName); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC83C0(relative to base address)
		void CheckIfHasCollabEntitlement(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC72F0(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandNamingModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x598 - 0x560)
	class UFortCreativeIslandNamingModal : public UFortActivatablePanel	
	{
	public:
		FText InitialDisplayText; // 0x560(0x10)
		FText DefaultIslandName; // 0x570(0x10)
		UFortCreativeRealEstatePlotItemDefinition* TemplateRealEstatePlotDefinition; // 0x580(0x8)
		UFortEditableFilteredCountedTextBox* FilteredTextEntryWidget_Name; // 0x588(0x8)
		UCommonButtonLegacy* Button_Confirm; // 0x590(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandNamingModal");
			return ret;
		}

		void InitFromPlotItemDefinition(UFortCreativeRealEstatePlotItemDefinition* RealEstateItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC95BC(relative to base address)
		void InitFromIslandLink(UFortCreativeIslandLink* IslandLink); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC922C(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandGeneration
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x198 (0x6F8 - 0x560)
	class UFortCreativeIslandGeneration : public UFortActivatablePanel	
	{
	public:
		UDataRegistry* IslandTemplateDataTable; // 0x560(0x8)
		TArray<UFortCreativeRealEstatePlotItemDefinition*> FilteredIslandTemplateDefinitions; // 0x568(0x10)
		TArray<UFortCreativeRealEstatePlotItemDefinition*> FilteredCollabIslandTemplateDefinitions; // 0x578(0x10)
		UCommonTileView* StartingIslandsTileView; // 0x588(0x8)
		UCommonTileView* TemplateIslandsTileView; // 0x590(0x8)
		UCommonTileView* CollabIslandsTileView; // 0x598(0x8)
		UUIKitModularButton* AcceptButton; // 0x5A0(0x8)
		UCommonTextBlock* IslandTemplateNameText; // 0x5A8(0x8)
		UCommonTextBlock* IslandDescriptionText; // 0x5B0(0x8)
		UCommonTextBlock* PublishedIslandName; // 0x5B8(0x8)
		UCommonTextBlock* PublishedIslandCode; // 0x5C0(0x8)
		UCommonTextBlock* PublishedIslandAuthor; // 0x5C8(0x8)
		UCommonTextBlock* PublishedIslandBulletOne; // 0x5D0(0x8)
		UCommonTextBlock* PublishedIslandBulletTwo; // 0x5D8(0x8)
		UCommonTextBlock* PublishedIslandBulletThree; // 0x5E0(0x8)
		UCommonButtonGroupLegacy* TabButtonGroup; // 0x5E8(0x8)
		UFortLazyImage* CollabPartnerIcon; // 0x5F0(0x8)
		TWeakObjectPtr<UTexture2D*> CollabPartnerIconDefault; // 0x5F8(0x20)
		FString CurrentPlotName; // 0x618(0x10)
		FText CollabTabName; // 0x628(0x10)
		FString RequiredEntitlement; // 0x638(0x10)
		TWeakObjectPtr<UClass*> CurrentCollabInfoDialog; // 0x648(0x20)
		TMap<FString, FFortCreativeIslandSelectCollabProperties> CollabPropertiesMap; // 0x668(0x50)
		FCachedIslandsGroup CachedTemplateIslands; // 0x6B8(0x28)
		TArray<UFortCreativeIslandLink*> IslandLinks; // 0x6E0(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x6F0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandGeneration");
			return ret;
		}

		void TemplateIslandsOnCurrentItemSelectionChanged(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAD20(relative to base address)
		void StartingIslandsOnCurrentItemSelectionChanged(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAC1C(relative to base address)
		void SetupIslandTemplateData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAB0C(relative to base address)
		void OnSelectionUpdated(UFortCreativeIslandTemplateButton* CurrentSelection); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandFilterComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCollabEntitlementChanged(bool bEntitlementGranted); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleNoOptionsLoaded(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCancelClicked(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74D8BB404(relative to base address)
		bool GetShowTemplateIslands(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC899C(relative to base address)
		bool GetShowCollabIslandsTab(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8918(relative to base address)
		bool GetHasCollabApproval(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC82B8(relative to base address)
		void GetCurrentCollabProperties(bool& bOutIsValid, FFortCreativeIslandSelectCollabProperties& OutCurrentCollabProperties); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7B10(relative to base address)
		FText GetCollabIslandsTabDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7968(relative to base address)
		void CollabIslandsOnCurrentItemSelectionChanged(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC732C(relative to base address)
		void CheckIfHasCollabEntitlement(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC72C8(relative to base address)
		void ChangeTermsAndConditionsVisibility(ESlateVisibility NewVisibility); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ChangeCollabIslandsTabVisibility(bool bShowTab); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandTemplateButton
	// Inherited from UAthenaCreativeItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x1670 - 0x15A0)
	class UFortCreativeIslandTemplateButton : public UAthenaCreativeItemTileButton	
	{
	public:
		FVector2D FeaturedIslandTemplateImageSize; // 0x15A0(0x10)
		UFortLazyImage* TemplateImage; // 0x15B0(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x15B8(0x8) UNKNOWN PROPERTY
		FSlateBrush DefaultFeaturedTemplateImage; // 0x15C0(0xB0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandTemplateButton");
			return ret;
		}

		UFortCreativeRealEstatePlotItemDefinition GetPlotTemplateDefinition(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC875C(relative to base address)
		UFortCreativeIslandLink GetIslandLink(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC8484(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandMultipleIPUIBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x138 (0x698 - 0x560)
	class UFortCreativeIslandMultipleIPUIBase : public UFortActivatablePanel	
	{
	public:
		ECollabIPGatingStatus PlayerIPGatingStatus; // 0x560(0x1)
		unsigned char UnknownData00_6[0x57]; // 0x561(0x57) UNKNOWN PROPERTY
		TMap<FString, FFortCreativeIslandMultipleIPSelectCollabProperties> CollabPropertiesMap; // 0x5B8(0x50)
		UDataRegistry* IslandTemplateDataTable; // 0x608(0x8)
		TMap<FString, FText> GFSDisplayNamesMap; // 0x610(0x50)
		FString RequiredEntitlement; // 0x660(0x10)
		FString RequiredICP_Entitlement; // 0x670(0x10)
		FString RequiredIP_Entitlement; // 0x680(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x690(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandMultipleIPUIBase");
			return ret;
		}

		void UpdatePlayerIPGatingStatus(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC72DC(relative to base address)
		void OnCollabEntitlementChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsIslandPlayable(FString McpId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC983C(relative to base address)
		bool GetHasCollabApproval(FString GameFeatureSetName, ECollabIPGatingContext Context); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC82DC(relative to base address)
		void CheckIfHasCollabEntitlement(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFC72DC(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandMultipleIPSelect
	// Inherited from UFortCreativeIslandMultipleIPUIBase -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x6A0 - 0x698)
	class UFortCreativeIslandMultipleIPSelect : public UFortCreativeIslandMultipleIPUIBase	
	{
	public:
		UCommonListView* ListView_IslandList; // 0x698(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandMultipleIPSelect");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeIslandMultipleIPNamingModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x5A0 - 0x560)
	class UFortCreativeIslandMultipleIPNamingModal : public UFortActivatablePanel	
	{
	public:
		FText InitialDisplayText; // 0x560(0x10)
		FText DefaultIslandName; // 0x570(0x10)
		UFortCreativeRealEstatePlotItemDefinition* TemplateRealEstatePlotDefinition; // 0x580(0x8)
		UFortEditableFilteredCountedTextBox* FilteredTextEntryWidget_Name; // 0x588(0x8)
		UFortLazyImage* IslandImage; // 0x590(0x8)
		UCommonButtonBase* Button_Confirm; // 0x598(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandMultipleIPNamingModal");
			return ret;
		}

		void InitFromPlotItemDefinition(UFortCreativeRealEstatePlotItemDefinition* RealEstateItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC93A0(relative to base address)
		void InitFromIslandLink(UFortCreativeIslandLink* IslandLink); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9080(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandMultipleIPGeneration
	// Inherited from UFortCreativeIslandMultipleIPUIBase -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1A8 (0x840 - 0x698)
	class UFortCreativeIslandMultipleIPGeneration : public UFortCreativeIslandMultipleIPUIBase	
	{
	public:
		UCommonTileView* StartingIslandsTileView; // 0x698(0x8)
		UCommonTileView* TemplateIslandsTileView; // 0x6A0(0x8)
		UCommonTileView* CollabIslandsTileView; // 0x6A8(0x8)
		UCommonTileView* CollabTileView; // 0x6B0(0x8)
		UCommonTileView* CollabTileView; // 0x6B8(0x8)
		UCommonTileView* CollabTileView; // 0x6C0(0x8)
		UCommonTileView* CollabTileView; // 0x6C8(0x8)
		UUIKitModularButton* AcceptButton; // 0x6D0(0x8)
		UCommonTextBlock* IslandTemplateNameText; // 0x6D8(0x8)
		UCommonTextBlock* IslandDescriptionText; // 0x6E0(0x8)
		UCommonTextBlock* PublishedIslandName; // 0x6E8(0x8)
		UCommonTextBlock* PublishedIslandCode; // 0x6F0(0x8)
		UCommonTextBlock* PublishedIslandAuthor; // 0x6F8(0x8)
		UCommonTextBlock* PublishedIslandBulletOne; // 0x700(0x8)
		UCommonTextBlock* PublishedIslandBulletTwo; // 0x708(0x8)
		UCommonTextBlock* PublishedIslandBulletThree; // 0x710(0x8)
		UFortLazyImage* CollabPartnerIcon; // 0x718(0x8)
		TWeakObjectPtr<UTexture2D*> CollabPartnerIconDefault; // 0x720(0x20)
		FString CurrentSelectedIslandID; // 0x740(0x10)
		TWeakObjectPtr<UClass*> CurrentCollabInfoDialog; // 0x750(0x20)
		TMap<FString, FFortCreativeIslandMultipleIPSelectCollabProperties> IslandCollabPropertiesMap; // 0x770(0x50)
		FCachedIslandsGroup CachedTemplateIslands; // 0x7C0(0x28)
		TArray<UFortCreativeIslandLink*> IslandLinks; // 0x7E8(0x10)
		TArray<UCommonTileView*> AvailableTileViews; // 0x7F8(0x10)
		int32_t MaxAvailableTileViews; // 0x808(0x4)
		unsigned char UnknownData00_6[0x24]; // 0x80C(0x24) UNKNOWN PROPERTY
		TArray<UUIKitTabGroupButtonViewModel*> TabViewModels; // 0x830(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandMultipleIPGeneration");
			return ret;
		}

		void SetupIslandTemplateData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAB60(relative to base address)
		void OnSelectionUpdated(UFortCreativeIslandMultipleIPTemplateButton* CurrentSelection); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandFilterComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentItemSelectionChanged(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9C98(relative to base address)
		void HandleNoOptionsLoaded(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCancelClicked(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74D8BB404(relative to base address)
		UCommonTileView GetTileViewForTab(FName InTabID); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8B80(relative to base address)
		UCommonTileView GetTileViewForItem(UObject* InItem); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC8AF0(relative to base address)
		bool GetShowTemplateIslands(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC89B8(relative to base address)
		bool GetShowCollabIslandsTab(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC893C(relative to base address)
		void GetPropertiesForTab(FName InTabID, FFortCreativeIslandMultipleIPSelectCollabProperties& OutTabProperties); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC87C4(relative to base address)
		void GetCurrentCollabProperties(bool& bOutIsValid, FFortCreativeIslandMultipleIPSelectCollabProperties& OutCurrentCollabProperties); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7C14(relative to base address)
		void ChangeTermsAndConditionsVisibility(ESlateVisibility NewVisibility); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ChangeCollabIslandsTabVisibility(bool bShowTab); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeIslandMultipleIPTemplateButton
	// Inherited from UAthenaCreativeItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x1670 - 0x15A0)
	class UFortCreativeIslandMultipleIPTemplateButton : public UAthenaCreativeItemTileButton	
	{
	public:
		FVector2D FeaturedIslandTemplateImageSize; // 0x15A0(0x10)
		UFortLazyImage* TemplateImage; // 0x15B0(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x15B8(0x8) UNKNOWN PROPERTY
		FSlateBrush DefaultFeaturedTemplateImage; // 0x15C0(0xB0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeIslandMultipleIPTemplateButton");
			return ret;
		}

		UFortCreativeRealEstatePlotItemDefinition GetPlotTemplateDefinition(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC875C(relative to base address)
		UFortCreativeIslandLink GetIslandLink(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC8484(relative to base address)
	};


	// Class FortniteUI.FortCreativeItemListMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x490 (0x880 - 0x3F0)
	class UFortCreativeItemListMenu : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY
		UClass* PanelDataClass; // 0x420(0x8)
		UDataTable* ItemListCategorySource; // 0x428(0x8)
		UFortCreativeItemListPanelData* ItemListPanelData; // 0x430(0x8)
		UClass* InventoryTabClass; // 0x438(0x8)
		UClass* LevelManagementTabClass; // 0x440(0x8)
		UClass* InventoryTabButton; // 0x448(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x450(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate BP_OnItemSelected; // 0x458(0x10)
		UFortCreativeItemListTabPanel* ChestTabPanel; // 0x468(0x8)
		UFortCreativeLevelManagementTabPanel* LevelManagementTabPanel; // 0x470(0x8)
		UFortCreativeItemListTabPanel* SubItemsTabPanel; // 0x478(0x8)
		FName TabNameID; // 0x480(0x4)
		unsigned char UnknownData02_6[0xC]; // 0x484(0xC) UNKNOWN PROPERTY
		FFortTabButtonLabelInfo TabButtonLabelInfo; // 0x490(0xF0)
		FAthenaMapScreenContainerTabInfo MapScreenContainerTabInfo; // 0x580(0x40)
		bool bAddItemToInventoryOnEquip; // 0x5C0(0x1)
		bool bLoadItemsOnInitialized; // 0x5C1(0x1)
		unsigned char UnknownData03_6[0x2]; // 0x5C2(0x2) UNKNOWN PROPERTY
		int32_t LastUsedSlot; // 0x5C4(0x4)
		FName LastSelectedTab; // 0x5C8(0x4)
		unsigned char UnknownData04_6[0x34]; // 0x5CC(0x34) UNKNOWN PROPERTY
		TMap<FName, UFortCreativeItemListTabPanel*> TabMap; // 0x600(0x50)
		unsigned char UnknownData05_6[0x188]; // 0x650(0x188) UNKNOWN PROPERTY
		UFortTabListWidgetBase_Legacy* TabList_Categories; // 0x7D8(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_Categories; // 0x7E0(0x8)
		UWidgetSwitcher* Switcher_NoItemInChest; // 0x7E8(0x8)
		UWidgetSwitcher* Switcher_CommandBar; // 0x7F0(0x8)
		UFortCreativeMenuQuickbar* MenuQuickbar_QuickBars; // 0x7F8(0x8)
		UCommonButtonLegacy* Button_ResetChest; // 0x800(0x8)
		UCommonButtonLegacy* Button_CreateChest; // 0x808(0x8)
		UCommonButtonLegacy* Button_AddToQuickBar; // 0x810(0x8)
		UCommonButtonLegacy* Button_OpenItem; // 0x818(0x8)
		UCommonButtonLegacy* Button_PlaceNow; // 0x820(0x8)
		UCommonButtonLegacy* Button_Equip; // 0x828(0x8)
		UCommonButtonLegacy* Button_AddToChest; // 0x830(0x8)
		UCommonButtonLegacy* Button_Drop; // 0x838(0x8)
		UCommonButtonLegacy* Button_CreateLlama; // 0x840(0x8)
		UCommonButtonLegacy* Button_RemoveFromChest; // 0x848(0x8)
		UOverlay* Overlay_SearchFilters; // 0x850(0x8)
		UContentBrowserFiltersPanel* FiltersPanel; // 0x858(0x8)
		UCommonVisibilitySwitcher* Switcher_SidePanels; // 0x860(0x8)
		UFortCreativeItemDetailsSidePanel* ItemDetailsSidePanel_DefaultSidePanel; // 0x868(0x8)
		UWidgetSwitcher* Switcher_InventoryPermission; // 0x870(0x8)
		UWidgetSwitcher* Switcher_EditorConnected; // 0x878(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeItemListMenu");
			return ret;
		}

		void VerifyPermissionsToCreativeInventory(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFCAE44(relative to base address)
		void UpdateDetailsPanel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAE30(relative to base address)
		void SwitchItemDetailsPanel(bool bUseLegacy); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAC9C(relative to base address)
		void SpawnContainer(UClass* SupplyDropClass); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAB88(relative to base address)
		void SetSubTabOpened(bool bIsOpened); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCAA00(relative to base address)
		void SetIsItemCommandsEnabled(bool bInIsItemCommandEnabled); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA578(relative to base address)
		void RefreshChestWidgetState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9FD8(relative to base address)
		bool PlaceSelectionInMoveTool(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9E98(relative to base address)
		bool OpenSelection(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9E74(relative to base address)
		void OnSelectionOpened(FFortItemEntry& PreviousSelectedItem, FName PreviousTab); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSearchFiltersVisibilityChanged(ESlateVisibility NewVisibility); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemsLoaded(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemEquipped(FFortItemEntry& EquippedItemEntry); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitSubTab(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC9D18(relative to base address)
		void OnCreativeQuickbarComponentLoaded(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFC9C84(relative to base address)
		void OnContentRatingFilterChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC9C70(relative to base address)
		void NativeOnItemsRefreshed(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFC9C20(relative to base address)
		void NativeOnItemsLoaded(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFC9C0C(relative to base address)
		void LoadItems(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9AD0(relative to base address)
		bool IsSubTabOpened(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC9A94(relative to base address)
		void InitializeTabs(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC97B8(relative to base address)
		void HandleTabSelected(FName TabID); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FFC9000(relative to base address)
		void HandleSelectionChanged(UFortCreativeContentBrowserTabPanelBase* Tab); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8F80(relative to base address)
		void HandleQuickbarPanelIsFocused(bool bIsFocused); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8F00(relative to base address)
		void HandleItemDetailsInputAction(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8DF8(relative to base address)
		void HandleFilterPanelIsFocused(bool bIsFocused); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8D78(relative to base address)
		void HandleFilterChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8D64(relative to base address)
		void HandleEquipItem(FFortItemEntry& ItemEntry); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FFC8CA0(relative to base address)
		void HandleChestItemCountChanged(int32_t Count); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8C20(relative to base address)
		void HandleAddSelectionToMoveToolComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFC8C0C(relative to base address)
		FName GetLastSelectedTabName(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC84D0(relative to base address)
		UFortCreativeContentBrowserTabPanelBase GetCurrentTab(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7EE0(relative to base address)
		FFortItemEntry GetCurrentSelection(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7DE0(relative to base address)
		bool EquipSelection(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC753C(relative to base address)
		bool EquipItem(FFortItemEntry& ItemEntry); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC7474(relative to base address)
		bool DropItem(FFortItemEntry& SelectedItem); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC73AC(relative to base address)
		bool CanEquip(FFortItemEntry& SelectedItem); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC71B4(relative to base address)
		bool CanDropItem(FFortItemEntry& SelectedItem); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC70EC(relative to base address)
		bool CanAddToChest(FFortItemEntry& SelectedItem); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7024(relative to base address)
		void BroadcastOnItemEquipped(FFortItemEntry ItemToSpawn); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC6EBC(relative to base address)
		void BroadcastOnCloseFromContentBrowser(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC6EA0(relative to base address)
		bool AddSelectionToQuickBar(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC6C74(relative to base address)
	};


	// Class FortniteUI.FortCreativeItemListPanelData
	// Inherited from UObject
	// Size: 0x70 (0x98 - 0x28)
	class UFortCreativeItemListPanelData : public UObject	
	{
	public:
		TArray<UFortItemDefinition*> AllItems; // 0x28(0x10)
		TArray<FItemListCategoryArray> CategoryList; // 0x38(0x10)
		FMulticastInlineDelegate OnLoadItemsComplete; // 0x48(0x10)
		unsigned char UnknownData00_7[0x40]; // 0x58(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeItemListPanelData");
			return ret;
		}

		void LoadItems(UObject* Target, TArray<FName>& DefaultCategoryTags); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC9AE4(relative to base address)
		bool IsLoadInProgress(UObject* Target); // Flags: Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFC9930(relative to base address)
		FText GetInteractionText(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3331D4(relative to base address)
		UFortCreativeItemListPanelData GetCreativeItemListPanelData(UObject* Target, UClass* PanelDataClass); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFC799C(relative to base address)
		void CancelLoad(UObject* Target); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D04D084(relative to base address)
	};


	// Class FortniteUI.FortCreativeItemListTabPanel
	// Inherited from UFortCreativeContentBrowserTabPanelBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x3D8 (0x808 - 0x430)
	class UFortCreativeItemListTabPanel : public UFortCreativeContentBrowserTabPanelBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x430(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSourceItemCountChanged; // 0x438(0x10)
		FDataTableRowHandle ItemDetailsInputRowHandle; // 0x448(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x458(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnItemDetailsInputAction; // 0x460(0x10)
		UAthenaCreativeItemTileView* CreativeTileView_ItemOptions; // 0x470(0x8)
		FFortItemEntry CurrentItemEntry; // 0x478(0x1A8)
		FMulticastInlineDelegate OnItemCountChanged; // 0x620(0x10)
		TArray<FFortItemEntry> Items; // 0x630(0x10)
		TArray<FFortItemEntry> SourceItems; // 0x640(0x10)
		unsigned char UnknownData02_6[0x1B0]; // 0x650(0x1B0) UNKNOWN PROPERTY
		UFortCreativeItemListMenu* CreativeItemListMenuParent; // 0x800(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeItemListTabPanel");
			return ret;
		}

		void RestoreLastSelection(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFCA050(relative to base address)
		void RemoveSelectedItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC9FEC(relative to base address)
		void ItemEquipped(FFortItemEntry& Item); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsEmpty(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFC9820(relative to base address)
		bool GetCollapseBorderPadFlagForCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7984(relative to base address)
		EFortItemCardSize GetCardSizeForCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC7950(relative to base address)
		void FocusCurrentSelection(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearFilteredItems(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC7318(relative to base address)
		void ClearAllItems(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFC7304(relative to base address)
		bool CanPlayerCreateInVolume(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFC727C(relative to base address)
		void AddItemToSource(FFortItemEntry& ItemToAdd); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC6B70(relative to base address)
		void AddItem(FFortItemEntry& ItemToAdd); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFC6AAC(relative to base address)
	};


	// Class FortniteUI.FortCreativeLevelManagementTabPanel
	// Inherited from UFortCreativeContentBrowserTabPanelBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x150 (0x580 - 0x430)
	class UFortCreativeLevelManagementTabPanel : public UFortCreativeContentBrowserTabPanelBase	
	{
	public:
		ULevelManagementListView* LevelManagementListView_Options; // 0x430(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x438(0x8) UNKNOWN PROPERTY
		FSlateBrush LevelManagementBrush; // 0x440(0xB0)
		bool bIsUsingSidePanel; // 0x4F0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x4F1(0x7) UNKNOWN PROPERTY
		FLevelInstanceListElement CurrentLevelEntry; // 0x4F8(0x38)
		ULevelManagementListEntry* CurrentLevelEntryWidget; // 0x530(0x8)
		TArray<FLevelInstanceListElement> LevelEntries; // 0x538(0x10)
		unsigned char UnknownData02_7[0x38]; // 0x548(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeLevelManagementTabPanel");
			return ret;
		}

		UWidget RefreshFocusWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF094C(relative to base address)
		void LevelListUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFF02A8(relative to base address)
		void HandleLevelDeleteClicked(FLevelInstanceListElement& LevelInstanceListElement, bool bDeleteSilently); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEF8FC(relative to base address)
		void ClearAllItems(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE0E0(relative to base address)
	};


	// Class FortniteUI.FortCreativeMenuQuickbar
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x470 - 0x3F0)
	class UFortCreativeMenuQuickbar : public UCommonActivatableWidget	
	{
	public:
		FMulticastInlineDelegate OnFocusChanged; // 0x3F0(0x10)
		FMulticastInlineDelegate OnEquipItem; // 0x400(0x10)
		FMulticastInlineDelegate OnQuickbarStateChanged; // 0x410(0x10)
		UItemDefinitionBase* CurrentItemDefinition; // 0x420(0x8)
		EFortCreativeItemType CurrentType; // 0x428(0x1)
		unsigned char UnknownData00_6[0x27]; // 0x429(0x27) UNKNOWN PROPERTY
		UWidgetSwitcher* Switcher_QuickBars; // 0x450(0x8)
		UAthenaQuickbarEditorBase* AthenaQuickbar_Creative; // 0x458(0x8)
		UAthenaQuickbarEditorBase* AthenaQuickbar_Trap; // 0x460(0x8)
		UAthenaQuickbarEditorBase* AthenaQuickbar_Primary; // 0x468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMenuQuickbar");
			return ret;
		}

		void ShowQuickbar(EFortContentBrowserQuickbarState InQuickbarState); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF233C(relative to base address)
		void OnQuickbarHighlight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleAddItemToQuickbarAction(EFortQuickBars QuickBarType, int32_t SlotNum, UItemDefinitionBase* ItemDefinition); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFEF300(relative to base address)
	};


	// Class FortniteUI.FortItemListOptionProxy
	// Inherited from UFortUserOptionProxy -> UObject
	// Size: 0x28 (0xB0 - 0x88)
	class UFortItemListOptionProxy : public UFortUserOptionProxy	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x88(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListOptionProxy");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeMessageKnobsDialog
	// Inherited from UFortMatchmakingKnobsModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x318 (0x9D0 - 0x6B8)
	class UFortCreativeMessageKnobsDialog : public UFortMatchmakingKnobsModal	
	{
	public:
		FDataTableRowHandle MainMenuInputRowHandle; // 0x6B8(0x10)
		UFortCreativePropertyEditorDialogBase* CurrentDialog; // 0x6C8(0x8)
		UObject* CachedSelectedPreFilterOption; // 0x6D0(0x8)
		unsigned char UnknownData00_6[0x60]; // 0x6D8(0x60) UNKNOWN PROPERTY
		UClass* LegacyEntryWidgetClass; // 0x738(0x8)
		UClass* AdvancedEntryWidgetClass; // 0x740(0x8)
		unsigned char UnknownData01_6[0xD0]; // 0x748(0xD0) UNKNOWN PROPERTY
		TArray<FFortItemListOptionBucket> ItemListBuckets; // 0x818(0x10)
		FMulticastInlineDelegate OnFilterListCompleted; // 0x828(0x10)
		UCanvasPanel* CanvasPanel_OptionsDialog; // 0x838(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x840(0x8) UNKNOWN PROPERTY
		UBackgroundBlur* BackgroundBlur_ConfirmDialog; // 0x848(0x8)
		FText ItemName; // 0x850(0x10)
		UCommonActionWidget* Action_SelectedItemAdditionalAction; // 0x860(0x8)
		UCommonTextBlock* Text_SelectedItemAdditionalAction; // 0x868(0x8)
		UClass* ConfirmationDialogClass; // 0x870(0x8)
		UAthenaConfirmationWindow* CachedConfirmationDialogWidget; // 0x878(0x8)
		unsigned char UnknownData03_6[0x120]; // 0x880(0x120) UNKNOWN PROPERTY
		UFortCTAButton* Button_EventBrowser; // 0x9A0(0x8)
		TWeakObjectPtr<UClass*> SoftDeviceBrowserClass; // 0x9A8(0x20)
		unsigned char UnknownData04_7[0x8]; // 0x9C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMessageKnobsDialog");
			return ret;
		}

		bool ShouldShowAdditonalActionButtons(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF2304(relative to base address)
		void SetOptionsButtonsEnabled(bool bInButtonsEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetFocusToItem(UObject* Item); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF14D4(relative to base address)
		void RemoveTagFilter(bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0BF8(relative to base address)
		void RemoveStringFilter(bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0B74(relative to base address)
		void RemoveIsModifiedFilter(bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0AF0(relative to base address)
		void RefreshUIOnDeviceButtonClicked(); // Flags: Native|Public, Memory Exec: 0x7FF74E3138A4(relative to base address)
		void RefreshTagFilterForGrantedContextTags(bool bRefreshOnlyWhenChanged, bool bUpdateSelectionForGamepad, bool bUpdateSelectForMouse); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF09D0(relative to base address)
		void OnShowLoadingSpinnerChanged(bool bShowLoadingSpinner); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEntryAdditionalActionChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDialogOpenStateChanged(bool bIsOpen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnConfirmationDialogWidgetCreated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeHandleOnRenameInput(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FFF02BC(relative to base address)
		bool IsAnyFilterActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFF01AC(relative to base address)
		bool HasClearItemsConfirmation(); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E23FFD0(relative to base address)
		void HandleMainMenuInput(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDeviceBrowserButtonPressed(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FFEF6AC(relative to base address)
		void HandleClearItemsClicked(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74E313DBC(relative to base address)
		float GetOptionsListScrollSpeed(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetItemCount(); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEF0A4(relative to base address)
		ESlateVisibility GetDesiredAdditionalActionButtonsVisiblity(ESlateVisibility RequestedVisibility); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEECA4(relative to base address)
		UAthenaConfirmationWindow GetConfirmationDialogWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFEEB08(relative to base address)
		FText GetClearItemsConfirmationText(); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEAC8(relative to base address)
		void GenerateFilteredEntries(bool bUpdateSelectionForGamepad, bool bUpdateSelectionForMouse); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE82C(relative to base address)
		void FilterEntriesByTag(FGameplayTagContainer Tags, bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE4E0(relative to base address)
		void FilterEntriesByString(FString FilterString, bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE3EC(relative to base address)
		void FilterEntriesByIsModified(bool bShowUnmodifiedEntries, bool UpdateSelection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE318(relative to base address)
		void DisableFilters(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE1B0(relative to base address)
		bool ContainsItem(); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D0978EC(relative to base address)
		void CloseDialog(bool bSetFocusToOptionsList); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFEE11C(relative to base address)
		bool CheckDestructiveSettings(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEDFA8(relative to base address)
		void BP_DialogConfirmed(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCreativeMiniGameInfo
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x338 - 0x2B0)
	class UFortCreativeMiniGameInfo : public UUserWidget	
	{
	public:
		FMulticastInlineDelegate OnSupportCreator; // 0x2B0(0x10)
		FMulticastInlineDelegate OnToggleDetails; // 0x2C0(0x10)
		UCommonTextBlock* Text_Name; // 0x2D0(0x8)
		UCommonTextBlock* Text_CreatorName; // 0x2D8(0x8)
		UCommonTextBlock* Text_SupportCode; // 0x2E0(0x8)
		UCommonTextBlock* Text_Bullet1; // 0x2E8(0x8)
		UCommonTextBlock* Text_Bullet2; // 0x2F0(0x8)
		UCommonTextBlock* Text_Bullet3; // 0x2F8(0x8)
		UDynamicEntryBox* EntryBox_MiniGameTags; // 0x300(0x8)
		int32_t SizeFont_Bullet_Mobile; // 0x308(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x30C(0x4) UNKNOWN PROPERTY
		UInputComponent* PanelInputComponent; // 0x310(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x318(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMiniGameInfo");
			return ret;
		}

		void PushPanelInputComponent(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF0914(relative to base address)
		void PopPanelInputComponent(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF0900(relative to base address)
		void OnVisible(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF05F4(relative to base address)
		void OnTextSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSupportCodeChanged(FText& SupportCode); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FFF0498(relative to base address)
		void OnPublishedIslandCodeDisplayChanged(ECreativePublishedIslandCodeDisplay PublishedIslandCodeDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMiniGameStartedFromInputComponent(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandTitleChanged(FText& IslandName); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FFF03E4(relative to base address)
		void OnIslandCodeChanged(FText& SupportCode); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameInfoBulletsChanged(TArray<FString>& GameInfoBullets); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FFF031C(relative to base address)
		void OnCreatorNameChanged(FText& CreatorName); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74EBBC930(relative to base address)
		bool IsStartGameEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF0284(relative to base address)
		void HandleCreativePlotLinkedVolumeChanged(AFortVolume* CreativeLinkedVolume); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEF5CC(relative to base address)
		TArray GetIslandDescriptionTags(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEF044(relative to base address)
		void GetIslandDescriptionLocationData(FMargin& Margin, TEnumAsByte<EHorizontalAlignment>& Alignment); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74FFEEF68(relative to base address)
		void GetCreatorInformation(FString& OutCreatorName, FString& OutSupportCode); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEB2C(relative to base address)
		bool ForceRefresh(bool bSetupInputComponent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE700(relative to base address)
		bool AreDetailsToggleable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEDEB8(relative to base address)
	};


	// Class FortniteUI.FortCreativeMoreInfoPanel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x438 - 0x3F0)
	class UFortCreativeMoreInfoPanel : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UFortEditableFilteredCountedTextBox* FilteredText_IslandTitle; // 0x3F8(0x8)
		UFortEditableFilteredCountedTextBox* FilteredText_IslandIntroduction1; // 0x400(0x8)
		UFortEditableFilteredCountedTextBox* FilteredText_IslandIntroduction2; // 0x408(0x8)
		UFortEditableFilteredCountedTextBox* FilteredText_IslandIntroduction3; // 0x410(0x8)
		UCommonButtonBase* Button_Apply; // 0x418(0x8)
		UCommonButtonBase* Button_Clear; // 0x420(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x428(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeMoreInfoPanel");
			return ret;
		}

		void SetIslandTitle(FText& IslandTitle); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFF1848(relative to base address)
		void SetIslandIntroduction(TArray<FText>& IslandIntroduction); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFF17B0(relative to base address)
		void OnUpdatePlotData(TArray<FString>& Errors, FCreativeIslandInfo& IslandInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsUpdatingChanged(bool bIsUpdating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandMetaDataUpdateTimedOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIslandMetaDataUpdateComplete(FString Error); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleIslandMetaDataUpdateComplete(FString Error); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEF86C(relative to base address)
	};


	// Class FortniteUI.FortCreativePermissionOptions
	// Inherited from UFortMatchmakingKnobsModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x6C8 - 0x6B8)
	class UFortCreativePermissionOptions : public UFortMatchmakingKnobsModal	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x6B8(0x8) UNKNOWN PROPERTY
		bool bCanEdit; // 0x6C0(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x6C1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePermissionOptions");
			return ret;
		}

		void OnApplyChanges(bool bSuccessful); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ArePermisionChecksEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FFEDEDC(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetStringBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x5D0 - 0x5A0)
	class UCreativePropertyEditWidgetStringBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		UFortEditableFilteredCountedTextBox* FilteredTextEntry_Widget; // 0x5A0(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x5A8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetStringBase");
			return ret;
		}

		bool HandlesCharLimitValidation(); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74EFD3CBC(relative to base address)
		int32_t GetEntryCharacterLimit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEED7C(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetMusicTrackBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x5A0 - 0x5A0)
	class UCreativePropertyEditWidgetMusicTrackBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetMusicTrackBase");
			return ret;
		}
	};


	// Class FortniteUI.CreativePropertyEditWidgetMessageComponentBase
	// Inherited from UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5A8 - 0x598)
	class UCreativePropertyEditWidgetMessageComponentBase : public UCreativePropertyEditWidgetBase	
	{
	public:
		UEditableText* EditableText_NumericEntry; // 0x598(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetMessageComponentBase");
			return ret;
		}

		void HandleChannelNumericEntryCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FFEF498(relative to base address)
		void HandleChannelNumericEntryChanged(FText& Text); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FFEF3F8(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5B0 - 0x5A0)
	class UCreativePropertyEditWidgetDirectNumericInputBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY
		UFortCreativePropertyNumericEntry* CreativeProperty_NumericEntry; // 0x5A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase");
			return ret;
		}

		void TryGetCurrentOptionValue(FString& Data); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF2880(relative to base address)
		void SetNumericEntryEditable(bool bIsEditable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1B48(relative to base address)
		FString ParseTeamOrClassOptionsAsString(FString OriginalString); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0854(relative to base address)
		void OnRotated(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0484(relative to base address)
		void HandleNumericEntryCommited(float InValue, TEnumAsByte<ETextCommit> CommitInfo); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FFEFBFC(relative to base address)
		void HandleNumericEntryChanged(float InValue); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74FFEFB78(relative to base address)
		void CheckIsNumeircValueModified(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEDFCC(relative to base address)
		void BP_PostNumericUpdateEditWidget(bool IsCustomValue); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetDeviceButtonComponentBase
	// Inherited from UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5A0 - 0x598)
	class UCreativePropertyEditWidgetDeviceButtonComponentBase : public UCreativePropertyEditWidgetBase	
	{
	public:
		UFortCreativeDeviceButtonComponent* DeviceButtonComponent; // 0x598(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetDeviceButtonComponentBase");
			return ret;
		}

		UFortCreativeDeviceButtonComponent GetDeviceButtonComponent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEED24(relative to base address)
		FText GetButtonLabel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEA68(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetTintedIconIntBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5B0 - 0x5A0)
	class UCreativePropertyEditWidgetTintedIconIntBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		TArray<UColorOptionObjectWrapper*> ColorOptionObjects; // 0x5A0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetTintedIconIntBase");
			return ret;
		}

		FPlaylistOptionTintedIconIntValue GetCustomValueOption(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEC60(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetIconBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5B0 - 0x5A0)
	class UCreativePropertyEditWidgetIconBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		TArray<UIconOptionObjectWrapper*> IconOptionObjects; // 0x5A0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetIconBase");
			return ret;
		}
	};


	// Class FortniteUI.CreativePropertyEditWidgetLevelListBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5B0 - 0x5A0)
	class UCreativePropertyEditWidgetLevelListBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		TArray<ULevelOptionObjectWrapper*> LevelOptionObjects; // 0x5A0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetLevelListBase");
			return ret;
		}

		void UpdateCurrentLevelOptionName(FText& UpdatedLevelName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFF2958(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetInstancedLevelList
	// Inherited from UCreativePropertyEditWidgetLevelListBase -> UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x5E0 - 0x5B0)
	class UCreativePropertyEditWidgetInstancedLevelList : public UCreativePropertyEditWidgetLevelListBase	
	{
	public:
		TArray<ULevelOptionObjectWrapper*> OldLevelOptionObjects; // 0x5B0(0x10)
		bool bWaitingForNewLevel; // 0x5C0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x5C1(0x7) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnNewLevelResult; // 0x5C8(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x5D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetInstancedLevelList");
			return ret;
		}

		void HandleNewLevelButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEFB64(relative to base address)
		void ClientLevelListUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74FFEE108(relative to base address)
	};


	// Class FortniteUI.CreativePropertyEditWidgetStatListBase
	// Inherited from UCreativePropertyEditWidgetUserOptionBase -> UCreativePropertyEditWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x5B0 - 0x5A0)
	class UCreativePropertyEditWidgetStatListBase : public UCreativePropertyEditWidgetUserOptionBase	
	{
	public:
		TArray<FCreativeStatOption> StatOptions; // 0x5A0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CreativePropertyEditWidgetStatListBase");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativePublishOptions
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x4A0 - 0x3F0)
	class UFortCreativePublishOptions : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		EFortCreativePlotPermission CurrentPermissionsEnum; // 0x3F8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x3F9(0x7) UNKNOWN PROPERTY
		UPanelWidget* Panel_IslandBackup; // 0x400(0x8)
		UPanelWidget* Panel_IslandRestore; // 0x408(0x8)
		UPanelWidget* Panel_OptInForDeviceUpgrades; // 0x410(0x8)
		UPanelWidget* Panel_OptInForMemorySystemUpgrades; // 0x418(0x8)
		UCommonAnimatedSwitcher* Switcher_IslandPublish; // 0x420(0x8)
		UPanelWidget* Panel_IslandPublish; // 0x428(0x8)
		UPanelWidget* Panel_HowToPublish; // 0x430(0x8)
		UCommonTextBlock* Text_RestoreTime; // 0x438(0x8)
		UCommonTextBlock* Text_OnCooldown; // 0x440(0x8)
		UCommonButtonBase* Button_Publish; // 0x448(0x8)
		TWeakObjectPtr<UClass*> SoftPublishModalClass; // 0x450(0x20)
		TWeakObjectPtr<UClass*> SoftCreateBuildModalClass; // 0x470(0x20)
		unsigned char UnknownData02_7[0x10]; // 0x490(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativePublishOptions");
			return ret;
		}

		void UpdateTimeSinceLastBackup(FDateTime LastBackup); // Flags: Final|Native|Public|HasDefaults, Memory Exec: 0x7FF74FFF2BA4(relative to base address)
		void UpdatePermissions(EFortCreativePlotPermission Permissions); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FFF2A74(relative to base address)
		bool ShouldUseLegacyPublishUI(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF231C(relative to base address)
		void RestoreMyIslandFromBackup(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0FC0(relative to base address)
		void ResetMyCurrentCreativePlot(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF74FFF0F98(relative to base address)
		void OptInForMemorySystemUpgrades(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void OptInForDeviceUpgrades(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF07FC(relative to base address)
		void OnSaveStateChanged(bool bSuccess); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRestoreStateChanged(bool bReady); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRestoreMyIslandFromBackup(bool bSuccess); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDataInitialized(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBackupMyIsland(bool bSuccess); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeData(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
		void CheckpointSaveStateChanged(EBackupSaveState SaveState); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFEE060(relative to base address)
		void CheckpointRestoreStateChanged(EBackupSaveState SaveState); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFEDFE0(relative to base address)
		void BackupMyIsland(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEDF20(relative to base address)
	};


	// Class FortniteUI.FortCreativeQuestHUDWidget
	// Inherited from UMinigameWidgetBase -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x408 - 0x3D0)
	class UFortCreativeQuestHUDWidget : public UMinigameWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY
		UCreativeQuestComponent* LastKnownQuestComponent; // 0x3D8(0x8)
		UCommonTextBlock* Text_CurrentAmount; // 0x3E0(0x8)
		UCommonTextBlock* Text_TargetAmount; // 0x3E8(0x8)
		UCommonTextBlock* Text_QuestName; // 0x3F0(0x8)
		UCommonTextBlock* Text_QuestDetails; // 0x3F8(0x8)
		int32_t questIndex; // 0x400(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x404(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeQuestHUDWidget");
			return ret;
		}

		void SetToQuest(int32_t questIndex, bool bForceUpdate); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF2090(relative to base address)
		void SetQuestIndex(int32_t newQuestIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF1ED8(relative to base address)
		void OnQuestChanged(UCreativeQuestComponent* CurrentQuestComponent, bool bHasActiveQuest); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortErrorWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x608 - 0x560)
	class UFortErrorWindow : public UFortActivatablePanel	
	{
	public:
		UCommonTextBlock* CommonText_Title; // 0x560(0x8)
		UCommonTextBlock* CommonText_MainError; // 0x568(0x8)
		UScrollBox* ScrollBox_MainError; // 0x570(0x8)
		UTextBlock* TextBlock_MainErrorCode; // 0x578(0x8)
		UTextBlock* TextBlock_OverflowErrorCodes; // 0x580(0x8)
		UWidgetSwitcher* WidgetSwitcher_SeverityImage; // 0x588(0x8)
		UImage* Image_Mild; // 0x590(0x8)
		UImage* Image_Severe; // 0x598(0x8)
		UCommonButtonLegacy* CommonButton_Close; // 0x5A0(0x8)
		FDataTableRowHandle BackActionRowHandle; // 0x5A8(0x10)
		TArray<FText> MildTitles; // 0x5B8(0x10)
		TArray<FText> SevereTitles; // 0x5C8(0x10)
		uint32_t MaxOverflowErrorCodes; // 0x5D8(0x4)
		unsigned char UnknownData00_7[0x2C]; // 0x5DC(0x2C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortErrorWindow");
			return ret;
		}

		void OnOverrideCloseButtonText(FText& OverrideText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortResourceCountWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x338 - 0x318)
	class UFortResourceCountWidget : public UFortHUDElementWidget	
	{
	public:
		UCommonTextBlock* Text_ResourceCount; // 0x318(0x8)
		UFortResourceItemDefinition* ResourceItemDefinition; // 0x320(0x8)
		UCommonTextBlock* Text_ResourceName; // 0x328(0x8)
		UFortLazyImage* LazyImage_ResourceIcon; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResourceCountWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortGlobalCashWidget
	// Inherited from UFortResourceCountWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x338 - 0x338)
	class UFortGlobalCashWidget : public UFortResourceCountWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGlobalCashWidget");
			return ret;
		}

		void OnQueryStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQueryFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQueryCompletedSuccessfully(int32_t GlobalCashBalance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortGlobalSeasonResourceWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortGlobalSeasonResourceWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGlobalSeasonResourceWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortHoldableButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x1430 - 0x1390)
	class UFortHoldableButton : public UCommonButtonBase	
	{
	public:
		bool bIsHoldableButton; // 0x1390(0x1)
		bool bBindHoldToAction; // 0x1391(0x1)
		bool bIgnoreLongPress; // 0x1392(0x1)
		bool bKeybindingTriggersHoldEvents; // 0x1393(0x1)
		float HoldTime; // 0x1394(0x4)
		float StartingHoldPercentage; // 0x1398(0x4)
		float QualifyingHoldTime; // 0x139C(0x4)
		bool bHoldCancelledFromMovement; // 0x13A0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x13A1(0x7) UNKNOWN PROPERTY
		UClass* HoldPromptTextStyle; // 0x13A8(0x8)
		unsigned char UnknownData01_7[0x78]; // 0x13B0(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHoldableButton");
			return ret;
		}

		void SetEnableButtonHold(bool bInEnableButtonHold); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1454(relative to base address)
		void OnHoldRequiredChanged(bool bHoldRequired); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetIsHoldRequired(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEF24(relative to base address)
		UCommonTextStyle GetHoldPromptTextStyle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEE78(relative to base address)
		void BP_OnHoldStarted(float HoldPercentage, bool bInUseSecondaryHoldAnimation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHoldReset(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHoldIncreased(float HoldPercentage); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHoldEnded(float HoldPercentage, bool bInUseSecondaryHoldAnimation); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHoldDecreased(float HoldPercentage); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnHoldCompleted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnActionProgressIncreased(float HoldPercentage); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnActionProgressDecreased(float HoldPercentage); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDBuildingPossessionWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortHUDBuildingPossessionWidget : public UFortHUDElementWidget	
	{
	public:
		UImage* DotImage; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDBuildingPossessionWidget");
			return ret;
		}

		void UpdateOnBuildingFocused(ABuildingActor* FocusedBuilding); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFF29F4(relative to base address)
	};


	// Class FortniteUI.FortHUDCenterPopupMessageWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortHUDCenterPopupMessageWidget : public UFortHUDElementWidget	
	{
	public:
		TWeakObjectPtr<UClass*> CenterPopupModalWidgetClass; // 0x318(0x20)
		unsigned char UnknownData00_6[0x8]; // 0x338(0x8) UNKNOWN PROPERTY
		UCommonActivatablePanelLegacy* CenterPopupModalWidget; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDCenterPopupMessageWidget");
			return ret;
		}

		void UpdateState(); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF2B10(relative to base address)
		void OnModalDisplayed(ECenterPopupMessageStateEnum NewState, UCommonActivatablePanelLegacy* ModalPopup); // Flags: BlueprintCosmetic|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		ECenterPopupMessageStateEnum GetCenterPopupMessageState(); // Flags: Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E74BD58(relative to base address)
	};


	// Class FortniteUI.FortHudContextTutorialIndicatorBall
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortHudContextTutorialIndicatorBall : public UFortHUDElementWidget	
	{
	public:
		bool bCanArrowAnimationPlay; // 0x318(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x319(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHudContextTutorialIndicatorBall");
			return ret;
		}

		void SetArrowOrientation(float Angle); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIntroAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHudContextTutorialTipsBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x4F0 - 0x3F0)
	class UFortHudContextTutorialTipsBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x3F0(0x40) UNKNOWN PROPERTY
		TArray<FContextPosition> PositionPerPlatform; // 0x430(0x10)
		FFortPrioritizedWidgetData PrioritizationData; // 0x440(0x2)
		unsigned char UnknownData01_6[0x6]; // 0x442(0x6) UNKNOWN PROPERTY
		UCanvasPanel* CanvasPanel_Container; // 0x448(0x8)
		UCanvasPanel* CanvasPanel_Ball; // 0x450(0x8)
		UOverlay* Overlay_Container; // 0x458(0x8)
		UFortHudContextTutorialIndicatorBall* ContextTutorialBall; // 0x460(0x8)
		UFortHudContextTutorialIndicatorBall* ContextTutorialBallParented; // 0x468(0x8)
		UCommonActionWidget* TipActionWidget; // 0x470(0x8)
		UFortRichTextBlockKeybind* RichTextBlock_Message; // 0x478(0x8)
		float MaxLerpSpeedPercentPerSecond; // 0x480(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x484(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle CloseObjectInputAction; // 0x488(0x10)
		unsigned char UnknownData03_6[0x4C]; // 0x498(0x4C) UNKNOWN PROPERTY
		float UpdateWorldMarkersInterval; // 0x4E4(0x4)
		unsigned char UnknownData04_7[0x8]; // 0x4E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHudContextTutorialTipsBase");
			return ret;
		}

		void UnregisterCloseButtonInput(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF2930(relative to base address)
		void StopIntroAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartWorldMarkerOutroAnimation(int32_t InPlayerId, int32_t InInstanceID); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF74FFF2660(relative to base address)
		void StartWorldMarkerIntroAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartLerpContextTutorialBall(int32_t InPlayerId, int32_t InInstanceID, float TotalTime, float StartDelay); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF2524(relative to base address)
		void SetPosition(FVector2D Position, TEnumAsByte<EHorizontalAlignment> HorizontalAlignment, TEnumAsByte<EVerticalAlignment> VerticalAlignment); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF74FFF1BC8(relative to base address)
		void SetDefaultPlatformPosition(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF1440(relative to base address)
		void RegisterCloseButtonInput(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF0ADC(relative to base address)
		void OnButtonCloseProgressImplementation(float Progress); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnButtonCloseImplementation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDEquipProgressBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class UFortHUDEquipProgressBase : public UFortHUDElementWidget	
	{
	public:
		UImage* Image_ProgressBar; // 0x318(0x8)
		UCommonTextBlock* Text_TimeRemaining; // 0x320(0x8)
		FGameplayTagContainer RelevantGameplayCueTags; // 0x328(0x20)
		FName ProgressBarMaterialParamName; // 0x348(0x4)
		unsigned char UnknownData00_7[0x24]; // 0x34C(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDEquipProgressBase");
			return ret;
		}

		void OnTimeRemainingChanged(float TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressStarted(float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUIGameplayCueEvent(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF748CBAA94(relative to base address)
		void HandleReplayScrubComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEFF00(relative to base address)
		void HandleFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF7494904A8(relative to base address)
	};


	// Class FortniteUI.FortHUDObjectiveSizeInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortHUDObjectiveSizeInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDObjectiveSizeInterface");
			return ret;
		}

		float GetHeightEstimate(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF74F7D9FBC(relative to base address)
	};


	// Class FortniteUI.FortHUDQualityLevelSelectTimer
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortHUDQualityLevelSelectTimer : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		UImage* Image_ProgressBar; // 0x2F0(0x8)
		UCommonTextBlock* Text_TimeRemaining; // 0x2F8(0x8)
		float TimerDuration; // 0x300(0x4)
		FName ProgressBarMaterialParamName; // 0x304(0x4)
		unsigned char UnknownData01_7[0x10]; // 0x308(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDQualityLevelSelectTimer");
			return ret;
		}

		void UpdateTimeRemainingText(float TimeRemaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFF2B24(relative to base address)
		void OnTimeRemainingChanged(float TimeRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressStarted(float duration); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDTagPromptWidgetBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UFortHUDTagPromptWidgetBase : public UFortHUDElementWidget	
	{
	public:
		FMulticastInlineDelegate OnOpenedOrClosed; // 0x318(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDTagPromptWidgetBase");
			return ret;
		}

		void OpenWidget(FFortHUDTagPromptData& PrompData); // Flags: Native|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF74FFF075C(relative to base address)
		void CloseWidget(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7476407DC(relative to base address)
	};


	// Class FortniteUI.FortHUDTagPromptContainerWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF8 (0x410 - 0x318)
	class UFortHUDTagPromptContainerWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UFortHUDTagPromptTagMapping* TagMappingData; // 0x358(0x8)
		float CooldownTime; // 0x360(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x364(0x4) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnOpenedOrClosed; // 0x368(0x10)
		TMap<FGameplayTag, float> TagToTimeMap; // 0x378(0x50)
		FFortHUDTagPromptData PromptDataToShow; // 0x3C8(0x38)
		UOverlay* OverlayWidget; // 0x400(0x8)
		FFortPrioritizedWidgetData PrioritizationData; // 0x408(0x2)
		unsigned char UnknownData02_7[0x6]; // 0x40A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDTagPromptContainerWidget");
			return ret;
		}

		void RequestPromptDataActivation(FFortHUDTagPromptData& PromptData, FGameplayTag& Tag); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FFF0DD4(relative to base address)
		void OpenWidget(FFortHUDTagPromptData& PrompData); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FFF06C0(relative to base address)
		void OnWidgetBaseOpenedOrClosed(bool bNewlyOpened); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFF062C(relative to base address)
		void CloseWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE19C(relative to base address)
	};


	// Class FortniteUI.FortHUDTargetUnderReticleWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UFortHUDTargetUnderReticleWidget : public UCommonUserWidget	
	{
	public:
		TScriptInterface<Class> Target; // 0x2D8(0x10)
		bool bKeepTargetUntilNewValidTarget; // 0x2E8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E9(0x7) UNKNOWN PROPERTY
		FGameplayTagContainer TargetRequiredTags; // 0x2F0(0x20)
		unsigned char UnknownData01_7[0x10]; // 0x310(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDTargetUnderReticleWidget");
			return ret;
		}

		void Setup(bool bInKeepTargetUntilNewValidTarget, FGameplayTagContainer InTargetRequiredTags); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FFF2154(relative to base address)
		void OnTargetHealthChanged(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74F0F9DB4(relative to base address)
		void OnTargetDied(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7470D9EB4(relative to base address)
		void OnTargetDestroyed(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void OnTargetChanged(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7476407DC(relative to base address)
		void OnTargetActorDestroyed(AActor* DestroyedActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFF0538(relative to base address)
		void HandleOnHUDTargetUnderReticle(TScriptInterface<Class>& NewTarget); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF74FFEFD84(relative to base address)
		void ClearTarget(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF74FFEE0F4(relative to base address)
	};


	// Class FortniteUI.FortInfoWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortInfoWindow : public UFortActivatablePanel	
	{
	public:
		UCommonListView* InfoEntries; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInfoWindow");
			return ret;
		}

		UWidget GetListWidget(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEF0CC(relative to base address)
	};


	// Class FortniteUI.FortInputControllerData
	// Inherited from UCommonInputBaseControllerData -> UObject
	// Size: 0x0 (0xD0 - 0xD0)
	class UFortInputControllerData : public UCommonInputBaseControllerData	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInputControllerData");
			return ret;
		}
	};


	// Class FortniteUI.FortInteractionIndicatorWidget
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x470 - 0x3C0)
	class UFortInteractionIndicatorWidget : public UFortActorIndicatorWidget	
	{
	public:
		UCommonVisibilitySwitcher* Switcher_PrimaryContext; // 0x3C0(0x8)
		UCommonVisibilitySwitcher* Switcher_SecondaryContext; // 0x3C8(0x8)
		TMap<UClass*, UFortInteractContextInfoWidget*> PrimaryContextOverrideMap; // 0x3D0(0x50)
		TMap<UClass*, UFortInteractContextInfoWidget*> SecondaryContextOverrideMap; // 0x420(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInteractionIndicatorWidget");
			return ret;
		}

		void HandleValidInteractResponse(UFortInteractContextInfo* InteractContextInfo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleRemoveContextOverride(UClass* ContextOverrideWidget, bool bPrimary); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEFE14(relative to base address)
		void HandleImprovedDBNOStateChanged(bool bImprovedDBNOEnabled); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEF7EC(relative to base address)
		void HandleAddContextOverride(UClass* ContextOverrideWidget, bool bPrimary); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEF214(relative to base address)
		UFortInteractContextInfoWidget ActivateContextOverride(UClass* ContextOverrideWidget, UFortInteractContextInfo* ContextInfo, bool bPrimary); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FFEDABC(relative to base address)
	};


	// Class FortniteUI.FortItemCooldownWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x3C8 - 0x2D8)
	class UFortItemCooldownWidget : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnCooldownStartedEvent; // 0x2D8(0x10)
		FMulticastInlineDelegate OnCooldownStoppedEvent; // 0x2E8(0x10)
		FMulticastInlineDelegate OnCooldownUpdatedEvent; // 0x2F8(0x10)
		FMulticastInlineDelegate OnAmmoRegenerationUpdated_Delegate; // 0x308(0x10)
		UCommonTextBlock* CooldownText; // 0x318(0x8)
		UImage* CooldownImage; // 0x320(0x8)
		UImage* CooldownChargingImage; // 0x328(0x8)
		FName CooldownMaterialParameterName; // 0x330(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x334(0x4) UNKNOWN PROPERTY
		TArray<EFortItemCooldownType> CooldownTypesSupported; // 0x338(0x10)
		FEventMessageTag DirectProgressUpdateTag; // 0x348(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x34C(0x4) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* CooldownPercentageMID; // 0x350(0x8)
		bool bAmmoRegenAvailableState; // 0x358(0x1)
		bool bDirectUpdateState; // 0x359(0x1)
		unsigned char UnknownData02_7[0x6E]; // 0x35A(0x6E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCooldownWidget");
			return ret;
		}

		void TryStartUpdateCooldown_BP(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF291C(relative to base address)
		void SetItem(UFortWorldItem* InWorldItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1924(relative to base address)
		void OnWorldItemDestroyed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFF06AC(relative to base address)
		void OnCooldownUpdated(EFortItemCooldownType CooldownType, float CooldownDuration, float CooldownRemaining, float CooldownPercentage); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCooldownStopped(EFortItemCooldownType CooldownType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCooldownStarted(EFortItemCooldownType CooldownType, float CooldownDuration); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAmmoRegenerationUpdated(bool bOutAmmoRegenAvailableState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLocalPlayerSpawned(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEFB50(relative to base address)
		void HandleLocalPlayerRevived(); // Flags: Final|Native|Private, Memory Exec: 0x7FF74FFEFB50(relative to base address)
		void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FFEFA8C(relative to base address)
	};


	// Class FortniteUI.FortItemShopSubsystem
	// Inherited from UWorldSubsystem -> USubsystem -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UFortItemShopSubsystem : public UWorldSubsystem	
	{
	public:
		UFortCommunityVotingManager* VotingManager; // 0x30(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.FortItemWidget_NUI
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x28 (0x180 - 0x158)
	class UFortItemWidget_NUI : public UWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x158(0x8)
		TScriptInterface<Class> ItemViewContext; // 0x160(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x170(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemWidget_NUI");
			return ret;
		}

		void SetItemViewContext(TScriptInterface<Class> ItemViewContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1A24(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF19A4(relative to base address)
	};


	// Class FortniteUI.FortKeybindWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x838 (0xB10 - 0x2D8)
	class UFortKeybindWidget : public UCommonUserWidget	
	{
	public:
		FName BoundAction; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UInputAction* BoundInputAction; // 0x2E0(0x8)
		UInputMappingContext* InputContextOverride; // 0x2E8(0x8)
		TArray<FName> BoundActionFallbacks; // 0x2F0(0x10)
		float AxisScale; // 0x300(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x304(0x4) UNKNOWN PROPERTY
		FKey BoundKeyFallback; // 0x308(0x18)
		ECommonInputType InputTypeOverride; // 0x320(0x1)
		ECommonGamepadType GamepadTypeOverride; // 0x321(0x1)
		unsigned char UnknownData02_6[0x2]; // 0x322(0x2) UNKNOWN PROPERTY
		FName PresetNameOverride; // 0x324(0x4)
		bool bForcedHoldKeybind; // 0x328(0x1)
		EFortKeybindForcedHoldStatus ForcedHoldKeybindStatus; // 0x329(0x1)
		bool bIsHoldKeybind; // 0x32A(0x1)
		bool bShowKeybindBorder; // 0x32B(0x1)
		unsigned char UnknownData03_6[0x4]; // 0x32C(0x4) UNKNOWN PROPERTY
		FVector2D FrameSize; // 0x330(0x10)
		bool bShowTimeCountDown; // 0x340(0x1)
		unsigned char UnknownData04_6[0x7]; // 0x341(0x7) UNKNOWN PROPERTY
		FKey BoundKey; // 0x348(0x18)
		FSlateBrush HoldProgressBrush; // 0x360(0xB0)
		FSlateBrush KeyBindTextBorder; // 0x410(0xB0)
		bool bShowUnboundStatus; // 0x4C0(0x1)
		bool bShowUnboundStatusOnTouch; // 0x4C1(0x1)
		bool bUseKeyboardTextureForKeys; // 0x4C2(0x1)
		unsigned char UnknownData05_6[0x5]; // 0x4C3(0x5) UNKNOWN PROPERTY
		FSlateFontInfo KeyBindTextFont; // 0x4C8(0x58)
		FSlateFontInfo CountdownTextFont; // 0x520(0x58)
		FMeasuredText CountdownText; // 0x578(0x28)
		FMeasuredText KeybindText; // 0x5A0(0x28)
		FMargin KeybindTextPadding; // 0x5C8(0x10)
		FVector2D KeybindFrameMinimumSize; // 0x5D8(0x10)
		FName PercentageMaterialParameterName; // 0x5E8(0x4)
		unsigned char UnknownData06_6[0x4]; // 0x5EC(0x4) UNKNOWN PROPERTY
		UMaterialInstanceDynamic* ProgressPercentageMID; // 0x5F0(0x8)
		TEnumAsByte<EFortBrushSize> BrushSize; // 0x5F8(0x1)
		unsigned char UnknownData07_6[0x7]; // 0x5F9(0x7) UNKNOWN PROPERTY
		FFortMultiSizeBrush FrameMultiBrush; // 0x600(0x420)
		unsigned char UnknownData08_6[0x40]; // 0xA20(0x40) UNKNOWN PROPERTY
		FSlateBrush CachedKeyBrush; // 0xA60(0xB0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortKeybindWidget");
			return ret;
		}

		void UpdateKeybindWidget(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void StopHoldProgress(FName HoldActionName, bool bCompletedSuccessfully); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFF27BC(relative to base address)
		void StopEnhancedHoldProgress(FInputActionInstance& ActionData); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FFF2718(relative to base address)
		void StartHoldProgress(FName HoldActionName, float HoldDuration); // Flags: Final|Native|Public, Memory Exec: 0x7FF74FFF2460(relative to base address)
		void StartEnhancedHoldProgress(FInputActionInstance& ActionData); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF74FFF23BC(relative to base address)
		void SetShowProgressCountDown(bool bShow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1F54(relative to base address)
		void SetPresetNameOverride(FName NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1E5C(relative to base address)
		void SetInputContextOverride(UInputMappingContext* NewContextOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1698(relative to base address)
		void SetForcedHoldKeybindStatus(EFortKeybindForcedHoldStatus InForcedHoldKeybindStatus); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1618(relative to base address)
		void SetForcedHoldKeybind(bool InForcedHoldKeybind); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1598(relative to base address)
		void SetBrushSize(TEnumAsByte<EFortBrushSize> InBrushSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF12F4(relative to base address)
		void SetBoundKey(FKey NewBoundAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1148(relative to base address)
		void SetBoundInputAction(UInputAction* NewAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF10C8(relative to base address)
		void SetBoundAction(FName NewBoundAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74949BF48(relative to base address)
		void SetAxisScale(float NewValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF1048(relative to base address)
		bool IsHoldKeybind(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFF024C(relative to base address)
		bool IsHoldingKey(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFF0264(relative to base address)
		bool IsBoundKeyValid(); // Flags: Final|Native|Public|Const, Memory Exec: 0x7FF74FFF01F0(relative to base address)
		TEnumAsByte GetBrushSize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEEA50(relative to base address)
		bool GetBrushForKey(TEnumAsByte<EFortBrushSize> InBrushSize, FSlateBrush& Brush); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FFEE954(relative to base address)
		void EnableCustomProgress(float RequiredDuration, float InteractingMultiplier, float InteractDuration, float SecondsToInterpolateValues); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEE1D8(relative to base address)
		void DisableCustomProgress(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7494B05B8(relative to base address)
	};


	// Class FortniteUI.FortLegacySlateBridgeWidget
	// Inherited from UNativeWidgetHost -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x180 - 0x168)
	class UFortLegacySlateBridgeWidget : public UNativeWidgetHost	
	{
	public:
		EFortLegacySlateWidget ContainedWidgetType; // 0x168(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x169(0x3) UNKNOWN PROPERTY
		float DPIScaleFactor; // 0x16C(0x4)
		FDelegateProperty OnClose; // 0x170(0xC)
		unsigned char UnknownData01_7[0x4]; // 0x17C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLegacySlateBridgeWidget");
			return ret;
		}

		void UpdateSlateWidget(EFortLegacySlateWidget SlateWidgetType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500257C0(relative to base address)
		void SetOnCloseHandler(FDelegateProperty& OnCloseHandler); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750024C9C(relative to base address)
	};


	// Class FortniteUI.FortLoadingVideoPlayer
	// Inherited from UObject
	// Size: 0xE0 (0x108 - 0x28)
	class UFortLoadingVideoPlayer : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0xA8]; // 0x28(0xA8) UNKNOWN PROPERTY
		UMediaPlayer* VideoPlayer; // 0xD0(0x8)
		UMediaTexture* VideoTexture; // 0xD8(0x8)
		UMediaSoundComponent* SoundComponent; // 0xE0(0x8)
		UFortStreamMediaSource* MediaSource; // 0xE8(0x8)
		unsigned char UnknownData01_6[0x8]; // 0xF0(0x8) UNKNOWN PROPERTY
		UFileMediaSource* FileMediaSource; // 0xF8(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x100(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoadingVideoPlayer");
			return ret;
		}

		void RequestSuccess(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF750023C0C(relative to base address)
		void RequestFailure(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF750023AE0(relative to base address)
		UMediaTexture GetMediaTexture(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74D691680(relative to base address)
		UMediaPlayer GetMediaPlayer(); // Flags: Final|Native|Public, Memory Exec: 0x7FF74EFBA6E4(relative to base address)
	};


	// Class FortniteUI.FortUserPermissions
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortUserPermissions : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x28(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUserPermissions");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingKnobsSpinnerButton
	// Inherited from UCommonRotator -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x168 (0x1560 - 0x13F8)
	class UFortMatchmakingKnobsSpinnerButton : public UCommonRotator	
	{
	public:
		unsigned char UnknownData00_3[0x98]; // 0x13F8(0x98) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnKnobDataInitialized; // 0x1490(0x10)
		FMulticastInlineDelegate OnHandleOptionWidgetGenerated; // 0x14A0(0x10)
		UObject* OptionDataObj; // 0x14B0(0x8)
		APlayerState* AssociatedPlayerState; // 0x14B8(0x8)
		UFortUserPermissions* RepresentedPlayer; // 0x14C0(0x8)
		UFortCreativeOption* CreativeOption; // 0x14C8(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x14D0(0x28) UNKNOWN PROPERTY
		UMaterial* DisplayImageMaterial; // 0x14F8(0x8)
		USocialUser* SocialUser; // 0x1500(0x8)
		bool bCanDisableFromUserOption; // 0x1508(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x1509(0x7) UNKNOWN PROPERTY
		USizeBox* SizeBox_TextEntry; // 0x1510(0x8)
		UFortEditableFilteredCountedTextBox* FilteredTextEntry_Widget; // 0x1518(0x8)
		UCommonTextBlock* TextBlock_OptionDisplayName; // 0x1520(0x8)
		bool bIsUserOptionEnabled; // 0x1528(0x1)
		unsigned char UnknownData03_7[0x37]; // 0x1529(0x37) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingKnobsSpinnerButton");
			return ret;
		}

		void ShouldHandleNavigation(bool& bOutShouldHandleNavigation, EUINavigation NavigationType); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetSpinnerOptionsVisiblity(bool bVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSpinnerRotated(int32_t Value, bool bUserInitiated); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNavigatedRight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNavigatedLeft(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMinigameVolumeEntered(FEventMessageTag Channel, FPlayerEnterSpatialActorContextLegacyMinigame& PlayerEnteredVolumeContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF750022AF0(relative to base address)
		void OnLocalPlayerExperienceStateChanged(FEventMessageTag Channel, FSpatialGameplayActorLoadingStateUpdatedPlayerContext& StateContext); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF750022988(relative to base address)
		void OnLoadingStateChanged(bool bCurrentlyLoading); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsUserOptionEnabledChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasMatchingTags(FGameplayTagContainer Tags); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750021CFC(relative to base address)
		FText GetTitleText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020D48(relative to base address)
		UObject GetInitializingObject(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500205D4(relative to base address)
		FText GetDescription(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500204F0(relative to base address)
		void BP_InitButtonOption(UFortCreativeDeviceButtonComponent* ButtonComponent); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMicIndicatorWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortMicIndicatorWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x2D8(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMicIndicatorWidget");
			return ret;
		}

		void SetPlayerUniqueId(FUniqueNetIdRepl& InPlayerUniqueId); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750024E20(relative to base address)
		void OnPlayerTalkingChanged(bool bIsTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerMuted(bool bIsMuted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerMicAvailable(bool bIsTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortModalContainerWidget
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x58 (0x1B0 - 0x158)
	class UFortModalContainerWidget : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x158(0x8) UNKNOWN PROPERTY
		EModalContainerSize SizeConstraint; // 0x160(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x161(0x7) UNKNOWN PROPERTY
		TArray<FFortModalContainerSizeEntry> DefaultSizeEntries; // 0x168(0x10)
		UFortModalContainerData* OverrideSizeEntries; // 0x178(0x8)
		UWidget* TopContent; // 0x180(0x8)
		UWidget* MiddleContent; // 0x188(0x8)
		UWidget* BottomContent; // 0x190(0x8)
		UWidget* BackgroudContent; // 0x198(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x1A0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortModalContainerWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortMediaInfo
	// Inherited from UObject
	// Size: 0x18 (0x40 - 0x28)
	class UFortMediaInfo : public UObject	
	{
	public:
		UMediaPlayer* MediaPlayer; // 0x28(0x8)
		UMediaSource* MediaSource; // 0x30(0x8)
		bool bVideoStreamed; // 0x38(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x39(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMediaInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortMovieWidget
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x2F8 - 0x2C0)
	class UFortMovieWidget : public UFortUserWidget	
	{
	public:
		FMulticastInlineDelegate OnMediaOpened; // 0x2C0(0x10)
		UMediaPlayer* MediaPlayer; // 0x2D0(0x8)
		UMediaTexture* MediaTexture; // 0x2D8(0x8)
		bool bIncludeAudio; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		USoundClass* SoundClass; // 0x2E8(0x8)
		UMediaSoundComponent* SoundComponent; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMovieWidget");
			return ret;
		}

		bool SetMediaSource(UMediaPlayer* InMediaPlayer, UMediaSource* InMediaSource, FMediaPlayerOptions& PlayerOptions, bool bPlayOnOpen, bool bLooping); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750024854(relative to base address)
		void RequestStopMovie(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750023BF8(relative to base address)
		void RequestPlayMovie(bool bShouldRewind); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750023B7C(relative to base address)
		void MediaDimensionsUpdated(float NewWidth, float NewHeight); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasPlayerForSource(UMediaSource* InMediaSource); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750021EB8(relative to base address)
		UMediaTexture GetMediaTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C342234(relative to base address)
		UMediaSoundComponent GetMediaSoundComponent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020678(relative to base address)
		UMediaPlayer GetMediaPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B404A0(relative to base address)
		void CleanupMediaPlayer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500202EC(relative to base address)
	};


	// Class FortniteUI.FortNodeCanvasInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortNodeCanvasInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNodeCanvasInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortPickerData
	// Inherited from UDataAsset -> UObject
	// Size: 0xC0 (0xF0 - 0x30)
	class UFortPickerData : public UDataAsset	
	{
	public:
		TArray<FBuildingCategoryOptionData> BuildingCategories; // 0x30(0x10)
		TArray<FBuildingOptionData> WallOptions; // 0x40(0x10)
		TArray<FBuildingOptionData> FloorOptions; // 0x50(0x10)
		TArray<FBuildingOptionData> StairOptions; // 0x60(0x10)
		TArray<FBuildingOptionData> RoofOptions; // 0x70(0x10)
		TArray<FItemCategoryOptionData> TrapCategories; // 0x80(0x10)
		TArray<FItemCategoryOptionData> WeaponCategories; // 0x90(0x10)
		TArray<FRadialOptionData> SocialCategories; // 0xA0(0x10)
		TArray<FChatOptionData> ChatOptions; // 0xB0(0x10)
		TArray<UAthenaQuickChatBank*> SquadChatOptionBanks; // 0xC0(0x10)
		TArray<FMapNoteOptionData> MapNoteOptions; // 0xD0(0x10)
		TArray<FEmoteOptionData> EmoteOptions; // 0xE0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPickerData");
			return ret;
		}
	};


	// Class FortniteUI.FortPinGrantCodeInfoWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UFortPinGrantCodeInfoWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UCommonButtonBase* Button_GenerateCode; // 0x2E8(0x8)
		UCommonTextBlock* Text_PinCode; // 0x2F0(0x8)
		UCommonTextBlock* Text_ErrorMsg; // 0x2F8(0x8)
		UCommonTextBlock* Text_ActivationURL; // 0x300(0x8)
		UCommonTextBlock* Text_CodeExpiringTime; // 0x308(0x8)
		UCommonTextBlock* Text_Info; // 0x310(0x8)
		UCommonTextBlock* Text_PinPromptTypeTitle; // 0x318(0x8)
		UVerticalBox* Container_ActivationURL; // 0x320(0x8)
		UCircularThrobber* Throbber_GettingPinCode; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinGrantCodeInfoWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortPlaylistUIExtensionLoader
	// Inherited from UObject
	// Size: 0xA8 (0xD0 - 0x28)
	class UFortPlaylistUIExtensionLoader : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x28(0x10) UNKNOWN PROPERTY
		TMap<UObject*, UUserWidget*> ObjectBoundWidgets; // 0x38(0x50)
		TArray<UUserWidget*> OrphanWidgets; // 0x88(0x10)
		unsigned char UnknownData01_7[0x38]; // 0x98(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlaylistUIExtensionLoader");
			return ret;
		}

		void HandlePlaylistExtensionWidgetCreatedNotSupported(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500215C4(relative to base address)
		void HandleClearPlaylistExtensionWidgetNotSupported(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750020F88(relative to base address)
	};


	// Class FortniteUI.FortPlaylistUIExtensionPrioritizedWidgetSwitcher
	// Inherited from UFortPrioritizedWidgetSwitcher -> UCommonWidgetSwitcherLegacy -> UCommonAnimatedSwitcher -> UWidgetSwitcher -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x288 - 0x268)
	class UFortPlaylistUIExtensionPrioritizedWidgetSwitcher : public UFortPrioritizedWidgetSwitcher	
	{
	public:
		TEnumAsByte<EHorizontalAlignment> ContentHorizontalAlignment; // 0x268(0x1)
		TEnumAsByte<EVerticalAlignment> ContentVerticalAlignment; // 0x269(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x26A(0x6) UNKNOWN PROPERTY
		TArray<EUIExtensionSlot> ExtensionSlots; // 0x270(0x10)
		UFortPlaylistUIExtensionLoader* PlaylistUIExtensionLoader; // 0x280(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlaylistUIExtensionPrioritizedWidgetSwitcher");
			return ret;
		}
	};


	// Class FortniteUI.FortPlaylistUIExtensionSlot
	// Inherited from UDynamicEntryBox -> UDynamicEntryBoxBase -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x258 - 0x240)
	class UFortPlaylistUIExtensionSlot : public UDynamicEntryBox	
	{
	public:
		TArray<EUIExtensionSlot> ExtensionSlots; // 0x240(0x10)
		UFortPlaylistUIExtensionLoader* PlaylistUIExtensionLoader; // 0x250(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlaylistUIExtensionSlot");
			return ret;
		}
	};


	// Class FortniteUI.FortPlaysetInventoryPanelData
	// Inherited from UFortCreativeItemListPanelData -> UObject
	// Size: 0x0 (0x98 - 0x98)
	class UFortPlaysetInventoryPanelData : public UFortCreativeItemListPanelData	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlaysetInventoryPanelData");
			return ret;
		}
	};


	// Class FortniteUI.FortPopupMenu
	// Inherited from UCommonPopupMenuLegacy -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x548 - 0x540)
	class UFortPopupMenu : public UCommonPopupMenuLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x540(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPopupMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortPopupMenu_Legacy
	// Inherited from UCommonPopupMenuLegacy -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x548 - 0x540)
	class UFortPopupMenu_Legacy : public UCommonPopupMenuLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x540(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPopupMenu_Legacy");
			return ret;
		}
	};


	// Class FortniteUI.FortPortalHUDDetails
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x400 - 0x3C0)
	class UFortPortalHUDDetails : public UFortActorIndicatorWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3C0(0x8) UNKNOWN PROPERTY
		UAthenaMarkerPointer* MarkerPointer; // 0x3C8(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x3D0(0x28) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* MobileInfo_Matchmaking_Switcher; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPortalHUDDetails");
			return ret;
		}

		void SetCachedWorldPos(FVector InWorldPos); // Flags: Final|RequiredAPI|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7500243FC(relative to base address)
		void SetActiveMatchmakingTextIndex(int32_t NewIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75002437C(relative to base address)
		void SetActiveContextInfo(UFortInteractContextInfo* ActiveContextInfo); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500242FC(relative to base address)
		void QueryGameActivity(FOnlineLinkId& LinkId); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750023264(relative to base address)
		void HandleMatchmakingComplete(bool Success); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750021374(relative to base address)
		void HandleActivityQueryComplete(UFortGameActivity* QueriedActivity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortInteractContextInfo GetActiveContextInfo(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74E6FDCB0(relative to base address)
		void ClearCachedWorldPos(); // Flags: Final|RequiredAPI|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750020324(relative to base address)
	};


	// Class FortniteUI.FortQuestNotificationHandler
	// Inherited from UFortDialogNotificationHandler -> UFortNotificationHandler -> UObject
	// Size: 0x10 (0x1B0 - 0x1A0)
	class UFortQuestNotificationHandler : public UFortDialogNotificationHandler	
	{
	public:
		UFortQuestItem* Quest; // 0x1A0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestNotificationHandler");
			return ret;
		}
	};


	// Class FortniteUI.FortRebootCardsCollectedWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortRebootCardsCollectedWidget : public UCommonUserWidget	
	{
	public:
		int32_t NumCardsCollected; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRebootCardsCollectedWidget");
			return ret;
		}

		void OnRebootCardsCollectedChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortRedeemCodeBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortRedeemCodeBase : public UFortActivatablePanel	
	{
	public:
		UEditableText* EditableText_FriendCodeEntry; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRedeemCodeBase");
			return ret;
		}

		void RedeemFriendCode(FString FriendCode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500232FC(relative to base address)
		void OnRedeemFriendCodeComplete(bool bSuccess, ERedeemCodeFailureReason FailureReason); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortResultsSummaryScreenWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortResultsSummaryScreenWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResultsSummaryScreenWidget");
			return ret;
		}

		void GetTotalScoreSortedScoreIndices(UFortUIScoreReport* ScoreReport, TArray<int32_t>& OutSortedScoreIndices); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020DB0(relative to base address)
	};


	// Class FortniteUI.FortResultsTeleportScreenWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortResultsTeleportScreenWidget : public UCommonUserWidget	
	{
	public:
		float ExitTime; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x24]; // 0x2DC(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResultsTeleportScreenWidget");
			return ret;
		}

		void StartExitTimer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500252F0(relative to base address)
		void OnExitTimerFinished(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitTimeRemainingUpdated(int32_t TimeRemainingSeconds); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitTimePercentagePassedUpdated(float Percent); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortResultsWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x5D8 - 0x528)
	class UFortResultsWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x60]; // 0x528(0x60) UNKNOWN PROPERTY
		int32_t AdditionalGrantedMissionPoints; // 0x588(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x58C(0x4) UNKNOWN PROPERTY
		TArray<UFortItem*> RewardedBadges; // 0x590(0x10)
		TArray<UFortItem*> MissedBadges; // 0x5A0(0x10)
		TArray<UFortItem*> RewardedItems; // 0x5B0(0x10)
		TArray<UFortItem*> RewardedAccountItems; // 0x5C0(0x10)
		UCommonUserWidget* Radial_Picker; // 0x5D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResultsWidget");
			return ret;
		}

		void TriggerSetupTeleportCameraEvent(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500253EC(relative to base address)
		void ToggleChat(bool bShow); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750025304(relative to base address)
		void SendEndOfRoundUpVoteAnalytic(FUniqueNetIdRepl& TargetId, FString TargetPlayerName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750024194(relative to base address)
		void SendEndOfRoundScreenAnalytic(FString ScreenName, bool Skipped, float TimeSpent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750024060(relative to base address)
		void SendEndOfRoundFriendInviteAnalytic(FUniqueNetIdRepl& TargetId, FString TargetPlayerName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750023EF8(relative to base address)
		void RequestExitZone(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750023A78(relative to base address)
		void LogXPData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750022294(relative to base address)
		bool IsDataFinalized(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750022040(relative to base address)
		void HandlePickerCancel(bool& bPassThrough); // Flags: Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750021534(relative to base address)
		void HandleEmoteClicked(bool& bPassThrough); // Flags: Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750021154(relative to base address)
		FText GetZoneCompletionResultText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020F40(relative to base address)
		EFortCompletionResult GetZoneCompletionResult(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020F10(relative to base address)
		int32_t GetTotalMissionPointsEarned(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750020D8C(relative to base address)
		void GetRewardsByType(EFortRewardItemType Type, TArray<UFortItem*>& OutRewards); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500209E0(relative to base address)
	};


	// Class FortniteUI.FortRichTextBlockKeybind
	// Inherited from UCommonRichTextBlock -> URichTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x7F0 - 0x7D0)
	class UFortRichTextBlockKeybind : public UCommonRichTextBlock	
	{
	public:
		UClass* KeybindWidgetClass; // 0x7D0(0x8)
		FVector2D DesiredKeybindWidgetSize; // 0x7D8(0x10)
		bool bShowUnboundStatusOnTouch; // 0x7E8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x7E9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRichTextBlockKeybind");
			return ret;
		}
	};


	// Class FortniteUI.FortRichTextBlockLegacy
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0xD18 (0xE70 - 0x158)
	class UFortRichTextBlockLegacy : public UWidget	
	{
	public:
		FText Text; // 0x158(0x10)
		UDataTable* StyleSet; // 0x168(0x8)
		FMargin TextMargin; // 0x170(0x10)
		float WrapTextAt; // 0x180(0x4)
		bool AutoWrapText; // 0x184(0x1)
		TEnumAsByte<ETextJustify> Justification; // 0x185(0x1)
		unsigned char UnknownData00_6[0xA]; // 0x186(0xA) UNKNOWN PROPERTY
		FButtonStyle HyperlinkButtonStyle; // 0x190(0x370)
		FScrollBarStyle ScrollBarStyle; // 0x500(0x650)
		bool DisableTouchInput; // 0xB50(0x1)
		bool AllowContextMenu; // 0xB51(0x1)
		unsigned char UnknownData01_6[0x6]; // 0xB52(0x6) UNKNOWN PROPERTY
		UClass* KeybindWidgetClass; // 0xB58(0x8)
		unsigned char UnknownData02_6[0x30]; // 0xB60(0x30) UNKNOWN PROPERTY
		FTextBlockStyle DefaultTextStyle; // 0xB90(0x2E0)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRichTextBlockLegacy");
			return ret;
		}

		void SetText(FText InText); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500251A4(relative to base address)
		FString EscapeStringForRichText(FString InString); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750020438(relative to base address)
	};


	// Class FortniteUI.FortSignInWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x598 - 0x528)
	class UFortSignInWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		UClass* NormalBorderStyle; // 0x538(0x8)
		UClass* HighlightBorderStyle; // 0x540(0x8)
		FString ForgotPasswordURL; // 0x548(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x558(0x10) UNKNOWN PROPERTY
		UEditableText* EditText_Email; // 0x568(0x8)
		UEditableText* EditText_Password; // 0x570(0x8)
		UCommonBorder* Border_Email; // 0x578(0x8)
		UCommonBorder* Border_Password; // 0x580(0x8)
		UCommonButtonLegacy* Button_SignIn; // 0x588(0x8)
		UCommonButtonLegacy* Button_ForgotPassword; // 0x590(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSignInWidget");
			return ret;
		}

		void UpdateSignInButton(FText& Text); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF750025724(relative to base address)
		void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF750021918(relative to base address)
	};


	// Class FortniteUI.FortToastWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortToastWidget : public UCommonUserWidget	
	{
	public:
		UFortUINotification* CachedNotification; // 0x2D8(0x8)
		float DefaultDisplayTime; // 0x2E0(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x2E4(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortToastWidget");
			return ret;
		}

		void OnPlayOpenAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayCloseAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNotificationUpdated(UFortUINotification* Notification); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNotificationSet(UFortUINotification* Notification); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyCloseAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500223E0(relative to base address)
		float GetDisplayTime(bool& bOutDisplayTimeOverridden); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF750020534(relative to base address)
	};


	// Class FortniteUI.FortSocialNotificationWidget
	// Inherited from UFortToastWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x338 - 0x300)
	class UFortSocialNotificationWidget : public UFortToastWidget	
	{
	public:
		UFortSocialAvatarIcon* Avatar_MemberIcon; // 0x300(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x308(0x8)
		USidebarSocialTagListBase* SidebarSocialTagList; // 0x310(0x8)
		UFortKeybindWidget* Action_HoldKeybindWidget; // 0x318(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x320(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialNotificationWidget");
			return ret;
		}

		void OnUserStartedHoldActionNotification(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTakeActionNotification(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInputModeChanged(ECommonInputType NewInputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCursorModeChanged(bool bCursorModeEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCancelNotification(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HoldReleased(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75002202C(relative to base address)
		void HoldPressed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750022018(relative to base address)
		void HoldAction(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750022004(relative to base address)
		void HandleInputMethodChanged(ECommonInputType NewInputType); // Flags: Final|Native|Private, Memory Exec: 0x7FF750021274(relative to base address)
		void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF750021030(relative to base address)
		bool GetIsPlayerLeavingParty(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020638(relative to base address)
		bool GetIsPlayerJoiningParty(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500205F8(relative to base address)
		bool GetIsInGame(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749711278(relative to base address)
	};


	// Class FortniteUI.FortSpectatedPlayerSwitcher
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortSpectatedPlayerSwitcher : public UUserWidget	
	{
	public:
		int32_t MaxPlayersToShow; // 0x2B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2B4(0x4) UNKNOWN PROPERTY
		TArray<FPotentialSpectatorTarget> DisplayedTargets; // 0x2B8(0x10)
		TArray<FPotentialSpectatorTarget> AvailableTargets; // 0x2C8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatedPlayerSwitcher");
			return ret;
		}

		bool ShouldBeVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748CDD424(relative to base address)
		void OnDisplayedTargetsUpdated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FocusWidget(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSpectatorRebootWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UFortSpectatorRebootWidget : public UFortHUDElementWidget	
	{
	public:
		AFortPlayerStateAthena* PlayerState; // 0x318(0x8)
		AFortPlayerStateAthena* SpectatingTargetPlayerState; // 0x320(0x8)
		TWeakObjectPtr<ABuildingGameplayActorSpawnMachine*> CurrentInteractingRebootVan; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSpectatorRebootWidget");
			return ret;
		}

		void OnResurrectionStateChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOnSpectatingTargetChanged(AFortPlayerStateZone* PS); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500214B4(relative to base address)
	};


	// Class FortniteUI.FortSplashScreenWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x538 - 0x528)
	class UFortSplashScreenWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x528(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSplashScreenWidget");
			return ret;
		}

		bool ShouldHideLogo(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500252C4(relative to base address)
		void OnInputMethodChanged(ECommonInputType InputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSquadSelectionMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x470 - 0x3F0)
	class UFortSquadSelectionMenu : public UCommonActivatableWidget	
	{
	public:
		FDataTableRowHandle ExitInputAction; // 0x3F0(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x400(0x8) UNKNOWN PROPERTY
		UCommonButtonGroupLegacy* ButtonGroup; // 0x408(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x410(0x28) UNKNOWN PROPERTY
		UAthenaTeamSquadsEntryBox* TeamEntryBox_Squads; // 0x438(0x8)
		UCommonButtonLegacy* Button_ConfirmMove; // 0x440(0x8)
		UCommonButtonLegacy* Button_CancelMove; // 0x448(0x8)
		UCommonRichTextBlock* RichText_ActionPrompt; // 0x450(0x8)
		UCommonButtonLegacy* Button_ChangeParticipation; // 0x458(0x8)
		UWidgetSwitcher* Switcher_Buttons; // 0x460(0x8)
		UOverlay* Mobile_Overlay; // 0x468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSquadSelectionMenu");
			return ret;
		}

		void OnLocalPlayerParticipationChanged(bool bIsParticipating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMemberEntryClicked(UCommonButtonLegacy* MemberEntryButton, int32_t EntryIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500213F0(relative to base address)
		void HandleExitAction(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortStandaloneFrontend
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x4C8 - 0x3F0)
	class UFortStandaloneFrontend : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		bool bCosmeticRefreshOnClose; // 0x400(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x401(0x3) UNKNOWN PROPERTY
		float DelayCloseActionTimeSeconds; // 0x404(0x4)
		UFortPocketLevel* PocketLevel; // 0x408(0x8)
		UPocketLevelInstance* PocketLevelInstance; // 0x410(0x8)
		FVector CameraLevelLocation; // 0x418(0x18)
		FDataTableRowHandle BackActionRowHandle; // 0x430(0x10)
		UCommonWidgetSwitcherLegacy* Switcher_TabContent; // 0x440(0x8)
		UWidget* Content_LoadingIndicator; // 0x448(0x8)
		UAthenaCustomizationScreenBase* ActivatableContent_Locker; // 0x450(0x8)
		unsigned char UnknownData02_6[0x10]; // 0x458(0x10) UNKNOWN PROPERTY
		FCosmeticLoadout InitialLoadoutData; // 0x468(0x10)
		UCommonButtonBase* Button_CloseTouch; // 0x478(0x8)
		FMulticastInlineDelegate OnMenuClosed; // 0x480(0x10)
		unsigned char UnknownData03_6[0x10]; // 0x490(0x10) UNKNOWN PROPERTY
		FPrimaryContentSetup PrimaryContentSetup; // 0x4A0(0x3)
		unsigned char UnknownData04_7[0x25]; // 0x4A3(0x25) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandaloneFrontend");
			return ret;
		}

		void TriggerIncrementalGC(); // Flags: Final|Native|Static|Protected|BlueprintCallable, Memory Exec: 0x7FF7500253D8(relative to base address)
		void SetTouchCloseButtonVisibility(ESlateVisibility NewVisibility); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750025240(relative to base address)
		void OnLoadingIndicatorShown(bool bShown); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCameraLevelLoaded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeginLoadingCameraLevel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCloseRefreshComplete(AFortPlayerPawn* FortPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF750020FB0(relative to base address)
		void HandleCloseAction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750020F9C(relative to base address)
		void BindToBackToGameRequested(UAthenaCustomizationScreenBase* CustomizationScreen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500201D4(relative to base address)
	};


	// Class FortniteUI.FortStandaloneFrontendTabs
	// Inherited from UFortStandaloneFrontend -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x510 - 0x4C8)
	class UFortStandaloneFrontendTabs : public UFortStandaloneFrontend	
	{
	public:
		UDynamicEntryBox* EntryBox_TabButtons; // 0x4C8(0x8)
		FDataTableRowHandle NextTabInputAction; // 0x4D0(0x10)
		FDataTableRowHandle PreviousTabInputAction; // 0x4E0(0x10)
		UCommonButtonGroupBase* TabsGroup; // 0x4F0(0x8)
		TArray<FStandaloneItemShopTabInfo> TabInfos; // 0x4F8(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x508(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandaloneFrontendTabs");
			return ret;
		}

		void SelectButtonAtIndex(int32_t ButtonIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750023E78(relative to base address)
		void RegisterTab(FStandaloneItemShopTabInfo& TabInfo); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500239D4(relative to base address)
		void OnTabSelected(int32_t TabIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTabButtonCreated(FName& TabID, UCommonButtonBase* TabButton); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetTabsVisible(bool InTabsVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeTabs(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSelectedTabButtonChanged(UCommonButtonBase* SelectedButton, int32_t ButtonIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750021854(relative to base address)
		void CreateTabs(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75002033C(relative to base address)
	};


	// Class FortniteUI.FortStandaloneItemShop
	// Inherited from UFortStandaloneFrontendTabs -> UFortStandaloneFrontend -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x520 - 0x510)
	class UFortStandaloneItemShop : public UFortStandaloneFrontendTabs	
	{
	public:
		UFortMtxStoreRootBase* ActivatableContent_MtxStore; // 0x510(0x8)
		UFortMPItemShopScreen* ActivatableContent_MPItemShop; // 0x518(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandaloneItemShop");
			return ret;
		}
	};


	// Class FortniteUI.FortStandaloneModalPopup
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x5E8 - 0x560)
	class UFortStandaloneModalPopup : public UFortActivatablePanel	
	{
	public:
		FDataTableRowHandle buttonInputAction; // 0x560(0x10)
		unsigned char UnknownData00_6[0x58]; // 0x570(0x58) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Details; // 0x5C8(0x8)
		UCommonButtonLegacy* Button_Close; // 0x5D0(0x8)
		UCommonBorder* Border_TapToCloseZone; // 0x5D8(0x8)
		UFortStoreFrontOfferWidgetBase_Legacy* ItemShopStandaloneOfferPreview; // 0x5E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStandaloneModalPopup");
			return ret;
		}

		void HandleInputActionButton(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500211F8(relative to base address)
		void HandleDetailsButtonClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750021138(relative to base address)
		void Dismiss(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750020350(relative to base address)
	};


	// Class FortniteUI.FortStorefront
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2C0 - 0x2C0)
	class UFortStorefront : public UFortUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStorefront");
			return ret;
		}
	};


	// Class FortniteUI.FortTabButtonInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortTabButtonInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabButtonInterface");
			return ret;
		}

		void SetTabLabelInfo(FFortTabButtonLabelInfo& TabLabelInfo); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7495746E8(relative to base address)
	};


	// Class FortniteUI.FortTabListWidgetBase
	// Inherited from UCommonTabListWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x500 - 0x450)
	class UFortTabListWidgetBase : public UCommonTabListWidgetBase	
	{
	public:
		FMulticastInlineDelegate OnTabContentCreated; // 0x450(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x460(0x18) UNKNOWN PROPERTY
		TArray<FFortTabListRegistrationInfo> PreregisteredTabInfoArray; // 0x478(0x10)
		bool bHideSingleTab; // 0x488(0x1)
		ESlateVisibility HideSingleTabVisibility; // 0x489(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x48A(0x6) UNKNOWN PROPERTY
		TMap<FName, FFortTabButtonLabelInfo> RegisteredFortTabsById; // 0x490(0x50)
		bool bShowPreviousNextButtons; // 0x4E0(0x1)
		bool bShowPreviousNextWhenZeroButtons; // 0x4E1(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x4E2(0x6) UNKNOWN PROPERTY
		TArray<UCommonButtonBase*> PreviousNextButtons; // 0x4E8(0x10)
		UClass* PreviousNextButtonClass; // 0x4F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabListWidgetBase");
			return ret;
		}

		void SetTabHiddenState(FName TabNameID, bool bHidden); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750024FF0(relative to base address)
		void RemoveAllDividers(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool RegisterFortTab(FName TabNameID, UClass* TabButtonType, FFortTabButtonLabelInfo& LabelInfo, UWidget* ContentWidget); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750023574(relative to base address)
		void RegisterDivider(UClass* DividerWidgetType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500233B4(relative to base address)
		void RegisterAllPreregisteredTabInfos(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75002338C(relative to base address)
		void OnTabContentCreated__DelegateSignature(FName TabID, UCommonUserWidget* TabWidget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTabVisible(FName TabID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75002216C(relative to base address)
		bool IsLastTabActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500220D4(relative to base address)
		bool IsFirstTabActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750022064(relative to base address)
		void HandlePreviousNextButtonCreation(UUserWidget* PreviousNextButton, EPreviousNextButtonType ButtonType); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF75002178C(relative to base address)
		void HandleDividerCreation(UUserWidget* DividerWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetVisibleTabCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74826B7FC(relative to base address)
		bool GetPreregisteredTabInfo(FName TabNameID, FFortTabListRegistrationInfo& OutTabInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500207B0(relative to base address)
	};


	// Class FortniteUI.FortTabListWidgetBase_Legacy
	// Inherited from UCommonTabListWidgetLegacy -> UCommonTabListWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x500 - 0x470)
	class UFortTabListWidgetBase_Legacy : public UCommonTabListWidgetLegacy	
	{
	public:
		FMulticastInlineDelegate OnTabContentCreated; // 0x470(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x480(0x18) UNKNOWN PROPERTY
		TArray<FFortTabListRegistrationInfo> PreregisteredTabInfoArray; // 0x498(0x10)
		bool bHideSingleTab; // 0x4A8(0x1)
		ESlateVisibility HideSingleTabVisibility; // 0x4A9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x4AA(0x6) UNKNOWN PROPERTY
		TMap<FName, FFortTabButtonLabelInfo> PendingTabLabelInfoMap; // 0x4B0(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabListWidgetBase_Legacy");
			return ret;
		}

		void SetTabHiddenState(FName TabNameID, bool bHidden); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500250B4(relative to base address)
		void RemoveAllDividers(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool RegisterFortTab(FName TabNameID, UClass* TabButtonType, FFortTabButtonLabelInfo& LabelInfo, UWidget* ContentWidget); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500237A4(relative to base address)
		void RegisterDivider(UClass* DividerWidgetType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750023494(relative to base address)
		void RegisterAllPreregisteredTabInfos(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500233A0(relative to base address)
		void OnTabContentCreated_Legacy__DelegateSignature(FName TabID, UCommonUserWidget* TabWidget); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTabVisible(FName TabID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750022208(relative to base address)
		bool IsLastTabActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750022120(relative to base address)
		bool IsFirstTabActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75002209C(relative to base address)
		void HandleDividerCreation(UUserWidget* DividerWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetVisibleTabCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74826C4E4(relative to base address)
		bool GetPreregisteredTabInfo(FName TabNameID, FFortTabListRegistrationInfo& OutTabInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500208E4(relative to base address)
	};


	// Class FortniteUI.FortTextStyleList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortTextStyleList : public UCommonUserWidget	
	{
	public:
		FName TextStylesPath; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTextStyleList");
			return ret;
		}

		TArray GetTextStyles(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020CA4(relative to base address)
	};


	// Class FortniteUI.FortTouchControlRegion
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x648 (0x920 - 0x2D8)
	class UFortTouchControlRegion : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		FTimerHandle AutorunLockDelayHandle; // 0x2E8(0x8)
		UFortTouchMoveStick* RegisteredTouchMoveStick; // 0x2F0(0x8)
		UFortTouchLookStick* RegisteredTouchLookStick; // 0x2F8(0x8)
		UFortLookStickV2* RegisteredLookStickV2; // 0x300(0x8)
		UFortAutorunLockZone* RegisteredAutoRunLockTarget; // 0x308(0x8)
		FVector2D LastMovePlayerRegionTouchOrigin; // 0x310(0x10)
		FVector2D MovePlayerRegionTouchEndPos; // 0x320(0x10)
		FVector2D MoveVector; // 0x330(0x10)
		bool bLastLookTouchWasTap : 1; // 0x340:0(0x1)
		bool bIsLockedOn : 1; // 0x340:1(0x1)
		unsigned char UnknownData01_5[0x3]; // 0x341(0x3) UNKNOWN PROPERTY
		float MoveStickLastTouchTime; // 0x344(0x4)
		FVector2D MovePlayerRegionLastTouchPos; // 0x348(0x10)
		FVector2D RotateCameraRegionLastTouchPos; // 0x358(0x10)
		FVector2D RotateCameraPlayerRegionLastTouchDiff; // 0x368(0x10)
		float RotateCameraLastTouchTime; // 0x378(0x4)
		unsigned char UnknownData02_6[0x14]; // 0x37C(0x14) UNKNOWN PROPERTY
		UCurveFloat* RotateInertiaCurve; // 0x390(0x8)
		FVector2D RotateStickPosition; // 0x398(0x10)
		FVector2D LockOnStickOrigin; // 0x3A8(0x10)
		FVector2D LockOnStickCurrentPos; // 0x3B8(0x10)
		unsigned char UnknownData03_7[0x558]; // 0x3C8(0x558) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchControlRegion");
			return ret;
		}

		void UpdateLockOnStickPosition(FVector2D LocalPos); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF75002560C(relative to base address)
		void UpdateLockOnStickOrigin(FVector2D LocalPos, bool IsTouchStartEvent); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF75002542C(relative to base address)
		void SetMoveStickPos(FVector2D NewMoveStickPos); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF750024B84(relative to base address)
		void SetLockOnStickPosition(FVector2D LocalPos); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF75002473C(relative to base address)
		void SetFeedbackPosition(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF75002451C(relative to base address)
		void RotatePlayerRegionTick(FGeometry& InGeometry, float DeltaTime); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750023D40(relative to base address)
		void ResetTouchState(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750023CA8(relative to base address)
		void OnRotatePlayerRegionTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF75002313C(relative to base address)
		void OnRotatePlayerRegionTouchMoved(FGeometry& InGeometry, FPointerEvent& InGestureEvent, FVector2D& MoveDelta); // Flags: Native|Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022FD0(relative to base address)
		void OnRotatePlayerRegionTouchLost(int32_t PointerIndex); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74F49B320(relative to base address)
		void OnRotatePlayerRegionTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022EA8(relative to base address)
		void OnRegionTouchStarted(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRegionTouchMoved(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent, FVector2D& MoveDelta); // Flags: Event|Public|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRegionTouchEnded(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMovePlayerRegionTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022D80(relative to base address)
		void OnMovePlayerRegionTouchLost(int32_t PointerIndex); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74D0518C4(relative to base address)
		void OnMovePlayerRegionTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022C58(relative to base address)
		void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500227C8(relative to base address)
		void OnBuildModeChanged(bool bBuildModeEnabled); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74C079284(relative to base address)
		void OnAdditionalTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022620(relative to base address)
		void OnAdditionalTouchLost(int32_t PointerIndex); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF75002259C(relative to base address)
		void OnAdditionalTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750022474(relative to base address)
		void MovePlayerRegionTick(FGeometry& InGeometry, float DeltaTime); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7500222A8(relative to base address)
		float GetTouchStickRange(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750020EE8(relative to base address)
	};


	// Class FortniteUI.FortTouchLookStick
	// Inherited from UFortTouchStick -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x3C8 - 0x378)
	class UFortTouchLookStick : public UFortTouchStick	
	{
	public:
		USizeBox* MainSizeBox; // 0x378(0x8)
		TWeakObjectPtr<UImage*> FireImageRef; // 0x380(0x20)
		FVector2D FireImageAbsoluteOffset; // 0x3A0(0x10)
		UBacchusActionButton* Button_DBNOCarryThrow; // 0x3B0(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x3B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchLookStick");
			return ret;
		}

		void SetTouchStickPositionLocal(FVector2D TouchPosition); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF750055654(relative to base address)
		void SetTouchStickPositionAbsolute(FVector2D TouchPosition); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF75005553C(relative to base address)
		void SetSize(float NewSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500553A4(relative to base address)
		void SetFiringState(bool IsFiring); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750054D90(relative to base address)
		void OnFireFromIndexStopped(int32_t StopFireIndex); // Flags: Final|Native|Public, Memory Exec: 0x7FF7500527E4(relative to base address)
		bool IsFireButtonUnderTouch(FVector2D TouchPosition); // Flags: Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF750051FA8(relative to base address)
		float GetSize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750051714(relative to base address)
		bool GetShowAllTimeTime(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500516FC(relative to base address)
	};


	// Class FortniteUI.FortTouchMoveStick
	// Inherited from UFortTouchStick -> UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x458 - 0x378)
	class UFortTouchMoveStick : public UFortTouchStick	
	{
	public:
		unsigned char UnknownData00_3[0x9]; // 0x378(0x9) UNKNOWN PROPERTY
		bool bIsTouched; // 0x381(0x1)
		bool bMoveStickIsLocked : 1; // 0x382:0(0x1)
		bool bAlwaysShowWhenTouched; // 0x383(0x1)
		float TouchStartTime; // 0x384(0x4)
		float LastTouchTime; // 0x388(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x38C(0x4) UNKNOWN PROPERTY
		FVector2D TouchStartPos; // 0x390(0x10)
		FVector2D MoveStickPos; // 0x3A0(0x10)
		UImage* Image_Move_Thumb; // 0x3B0(0x8)
		FGameplayTag AlwaysShowPropertyTag; // 0x3B8(0x4)
		FGameplayTag AutorunLockZoneSizePropertyTag; // 0x3BC(0x4)
		FGameplayTag AutoRunPaddingPropertyTag; // 0x3C0(0x4)
		FGameplayTag DeadZonePropertyTag; // 0x3C4(0x4)
		FGameplayTag ResetStickPositionPropertyTag; // 0x3C8(0x4)
		FGameplayTag DynamicStickPropertyTag; // 0x3CC(0x4)
		FGameplayTag AnimateDynamicStickPropertyTag; // 0x3D0(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x3D4(0x4) UNKNOWN PROPERTY
		USizeBox* SizeBox_AutorunLockZoneHidden; // 0x3D8(0x8)
		USizeBox* SizeBox_AutorunDirectionArrowSpaceSize; // 0x3E0(0x8)
		USizeBox* SizeBox_AutorunLockZoneSize; // 0x3E8(0x8)
		UFortAutorunLockZone* AutorunLockZone; // 0x3F0(0x8)
		UImage* Image_AutorunDirectionArrow; // 0x3F8(0x8)
		UCanvasPanel* MoveStickCanvas; // 0x400(0x8)
		float DefaultAutorunLockZoneSize; // 0x408(0x4)
		float DefaultAutorunLockZoneTopPadding; // 0x40C(0x4)
		float ThumbstickMoveScale; // 0x410(0x4)
		unsigned char UnknownData03_6[0x30]; // 0x414(0x30) UNKNOWN PROPERTY
		float TouchStartOpacity; // 0x444(0x4)
		float TouchEndOpacity; // 0x448(0x4)
		unsigned char UnknownData04_6[0x7]; // 0x44C(0x7) UNKNOWN PROPERTY
		bool bShouldUseDynamicMoveStick; // 0x453(0x1)
		bool bAllowDoubleTapToAutorunEvenIfNotAlwaysVisible; // 0x454(0x1)
		unsigned char UnknownData05_7[0x3]; // 0x455(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTouchMoveStick");
			return ret;
		}

		void SetStickPosition(FVector2D NewPosition); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF750055424(relative to base address)
		void SetMovementLockStatus(bool MovementIsLocked); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7500552A0(relative to base address)
		void OnDisplayAutorunLockZone(bool bShouldShowArrow); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTouched(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500521FC(relative to base address)
		bool IsLocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500521E0(relative to base address)
		void HandleTouchStarted(FPointerEvent& PointerEvent); // Flags: Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF750051C84(relative to base address)
		void HandleTouchEnded(); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF74E2F35D0(relative to base address)
		FVector2D GetStickPosition(); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750051894(relative to base address)
		float GetHalfHeight(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750050870(relative to base address)
		void BP_OnSchemaUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool AllowMobileImprovedAutorun(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75004F6DC(relative to base address)
	};


	// Class FortniteUI.FortUIBlueprintFunctionLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortUIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIBlueprintFunctionLibrary");
			return ret;
		}

		void UnregisterActiveCinematic(UObject* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750056184(relative to base address)
		void TryPushWidgetAsModalPanelForPlayer(AFortPlayerController* LocalPlayerController, UUserWidget* PushWidget); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500560D0(relative to base address)
		void TryPushWidgetAsModalPanel(UUserWidget* Context, UUserWidget* PushWidget); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75005601C(relative to base address)
		void TryPushWidgetAsActivatablePanelForPlayer(APlayerController* OwningPlayer, UUserWidget* PushWidget, EActivatePanelOption Header, EActivatePanelOption Footer, EActivatePanelOption ChatWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750055EA0(relative to base address)
		void TryPushWidgetAsActivatablePanel(UUserWidget* Context, UUserWidget* PushWidget, EActivatePanelOption Header, EActivatePanelOption Footer, EActivatePanelOption ChatWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750055D24(relative to base address)
		void TryPopActivatablePanel(UUserWidget* Context, UCommonActivatablePanelLegacy* Panel); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750055C70(relative to base address)
		FText ToOrdinal(int32_t Number); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750055AFC(relative to base address)
		void SortActorArray(TArray<AActor*>& InActors, TArray<AActor*>& OutSortedActors); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500559D8(relative to base address)
		void ShowErrorDialog(UUserWidget* Context, FText DisplayMessage, FString ErrorCode, EFortErrorSeverity ErrorSeverity); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750055870(relative to base address)
		void SetWidgetCZonesAutomation(UUserWidget* Context, bool bEnabled); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75005576C(relative to base address)
		void SetScrollWidget(UUserWidget* Context, UWidget* ToScroll); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF748B4E7D0(relative to base address)
		void SetInputAllowedForPlayer(bool bEnabled, FName& Reason, AFortPlayerController* FortPC); // Flags: Final|RequiredAPI|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750054F18(relative to base address)
		void SetInputAllowedForAllLocalPlayers(UObject* WorldContextObject, bool bEnabled, FName& Reason); // Flags: Final|RequiredAPI|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750054E14(relative to base address)
		float RoundFloat(float Value, TEnumAsByte<ERoundingMode> RoundingMode); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750054C60(relative to base address)
		void ResetKeyboardMousePlayerBindingsToPreset(AFortPlayerController* LocalPlayerController, int32_t PresetToSet); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750054A1C(relative to base address)
		void RequestToOpenSpecificPlayerFeedbackModal(UUserWidget* Context, USocialUser* UserToReport, TMap<FString, FString>& InAnalyticsContext); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500548B8(relative to base address)
		void RequestToOpenPlayerFeedbackModalWithReportOrigin(UUserWidget* Context, FString ReportOrigin); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500547F0(relative to base address)
		void RequestToOpenPlayerFeedbackModal(UUserWidget* Context, USocialUser* UserToReport); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750054648(relative to base address)
		void RequestToOpenParentalControls(UUserWidget* Context); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500543E0(relative to base address)
		void RequestToOpenCreatorFeedbackModal(UUserWidget* Context, USocialUser* Creator, TMap<FString, FString>& InAnalyticsContext); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75005427C(relative to base address)
		void RegisterActiveCinematic(UObject* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75005420C(relative to base address)
		void PushItemManagementScreen(UUserWidget* Context, EFortFrontendInventoryFilter ItemManagementFilter, UFortItem* ItemToSelect, bool bShowAutoMulch); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750053D9C(relative to base address)
		void PushItemInspectionScreen(UUserWidget* Context, UFortItem* ItemToInspect, EFortItemInspectionMode Mode, UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500537E0(relative to base address)
		void PushHeroLoadoutScreen(UUserWidget* Context, UFortCampaignHeroLoadoutItem* HeroLoadout); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750053568(relative to base address)
		void PushContentWidgetForPlayer(AFortPlayerController* LocalPlayerController, UWidget* PushWidget); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500534B4(relative to base address)
		void PushContentWidgetAdvancedForPlayer(AFortPlayerController* LocalPlayerController, UWidget* PushWidget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750053324(relative to base address)
		void PushContentWidgetAdvanced(UUserWidget* Context, UWidget* PushWidget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750053194(relative to base address)
		void PushContentWidget(UUserWidget* Context, UWidget* PushWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500530E0(relative to base address)
		void PushActivatablePanel(UUserWidget* Context, UCommonActivatablePanelLegacy* Panel); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75005302C(relative to base address)
		bool ProjectToWidgetPosition(APlayerController* PlayerController, FVector WorldLocation, FVector2D& ScreenPosition, bool bPlayerViewportRelative); // Flags: Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750052D94(relative to base address)
		void PopCurrentModal(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052D0C(relative to base address)
		void PopContentWidgetForPlayer(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052C9C(relative to base address)
		void PopContentWidget(UUserWidget* Context); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052C2C(relative to base address)
		void PopAllContentWidgets(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052BBC(relative to base address)
		void PopActivatablePanelInModalLayer(UUserWidget* Context, UCommonActivatablePanelLegacy* Panel); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052B08(relative to base address)
		void PopActivatablePanel(UUserWidget* Context, UCommonActivatablePanelLegacy* Panel); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052A54(relative to base address)
		void OpenStandaloneLocker(APlayerController* InPlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500529E4(relative to base address)
		void OpenStandaloneItemShop(APlayerController* InPlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052974(relative to base address)
		void OpenStandaloneFrontend(APlayerController* InPlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500528E8(relative to base address)
		void OnTabChangedBP__DelegateSignature(EFortUIFeature LeavingFeature, EFortUIFeature EnteringFeature); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool NotEqual_FFortDialogWaitingForLatentActionHandle(FFortDialogExternalLatentActionHandle& A, FFortDialogExternalLatentActionHandle& B); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74D2E026C(relative to base address)
		void NavigateToQuestScreen(UWidget* Context, FGameplayTag& StartingCategoryTag); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750052680(relative to base address)
		void NavigateToFeature(UUserWidget* Context, EFortUIFeature Feature, bool bClearPrimaryContentStack); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052484(relative to base address)
		void NavigateForGift(UUserWidget* Context, UFortGiftBoxItem* Item); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500523D0(relative to base address)
		void KillConfirmation(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750052360(relative to base address)
		bool IsUIInputAllowed(APlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750052294(relative to base address)
		bool IsUIAddedToViewport(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750052214(relative to base address)
		void IsLegacyUISTW(EIsLegacyUIManagerResult& Result); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750052160(relative to base address)
		bool IsLatentActionHandleValid(FFortDialogExternalLatentActionHandle& Handle); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500520D4(relative to base address)
		bool IsContentOnStack(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750051EFC(relative to base address)
		bool IsCabinModeEnabled(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750051E34(relative to base address)
		void InvalidateLatentActionHandle(FFortDialogExternalLatentActionHandle& Handle); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750051DB8(relative to base address)
		UCommonActivatableWidget GetTopPanelForPlayer(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500519D8(relative to base address)
		FText GetTimespanAsSimpleString(FTimespan Timespan); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500518B0(relative to base address)
		FVector2D GetStandardBrushSize(TEnumAsByte<EFortBrushSize> BrushSize); // Flags: Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75005180C(relative to base address)
		UFortSocialUser GetSocialUserFromController(UUserWidget* Context, AFortPlayerController* FortPC); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750051748(relative to base address)
		FText GetShorthandQuantityWithLimitedDigits(int32_t Score, int32_t MaxDigits); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750051624(relative to base address)
		FText GetShorthandQuantity(int32_t Quantity, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits, bool bShouldRoundDown); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500514D4(relative to base address)
		UTexture2D GetOrLoadSynchronously(TWeakObjectPtr<UTexture2D*>& SoftTexture2D); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500513E4(relative to base address)
		FString GetMetaStringOnOffer(FCardPackOffer& Offer, FString Key); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500511F8(relative to base address)
		int32_t GetMetaIntOnOffer(FCardPackOffer& Offer, FString Key, int32_t DefaultValue); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750050F9C(relative to base address)
		bool GetMetaBoolOnOffer(FCardPackOffer& Offer, FString Key, bool bDefaultValue); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750050D34(relative to base address)
		FText GetLocalGMTOffset(FDateTime& InDateTime); // Flags: Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750050C90(relative to base address)
		FFortMultiSizeBrush GetItemSmallPreviewImageMultiSizeBrush(UFortItem* Item); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750050BA4(relative to base address)
		FSlateBrush GetItemSmallPreviewImageBrush(UFortItem* Item, TEnumAsByte<EFortBrushSize> BrushSize); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750050AAC(relative to base address)
		FFortMultiSizeBrush GetItemDefinitionSmallPreviewImageMultiSizeBrush(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500509C0(relative to base address)
		FSlateBrush GetItemDefinitionSmallPreviewImageBrush(UFortItemDefinition* ItemDefinition, TEnumAsByte<EFortBrushSize> BrushSize); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500508C8(relative to base address)
		FText GetInfinitySymbolText(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500508AC(relative to base address)
		UCommonActivatableWidget GetCurrentStateWidget(APlayerController* PlayerController); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF749AD20E0(relative to base address)
		UCommonActivatablePanelLegacy GetCurrentModal(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750050628(relative to base address)
		TArray GetContainedImages(UWidget* InWidget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750050534(relative to base address)
		UUserWidget GetCachedWidgetForPlayer(AFortPlayerController* LocalPlayerController, UClass* WidgetClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF750050470(relative to base address)
		UUserWidget GetCachedWidget(UUserWidget* Context, UClass* WidgetClass); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7500503AC(relative to base address)
		UObject GetAssetFromTemplateId(FString TemplateId); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500502EC(relative to base address)
		bool EqualEqual_FFortDialogWaitingForLatentActionHandle(FFortDialogExternalLatentActionHandle& A, FFortDialogExternalLatentActionHandle& B); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF74D2D71D4(relative to base address)
		void EndWaitForConfirmationDialog(UObject* WorldContextObject, FFortDialogExternalLatentActionHandle& Handle); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500501AC(relative to base address)
		void DrawWidgetToRenderTarget(UUserWidget* Widget, UTextureRenderTarget2D* RenderTarget); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7494E98D4(relative to base address)
		void CenterWidget(UUserWidget* Context, UWidget* ToCenter); // Flags: Final|RequiredAPI|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75004FFE0(relative to base address)
		bool CanNavigateToQuestObjective(UFortQuestItem* QuestItem); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75004FF60(relative to base address)
		void BindToTabChange(UWidget* Context, FDelegateProperty& EventToBind); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF749220418(relative to base address)
		FText AsShortTime(FDateTime& InDateTime); // Flags: Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75004F99C(relative to base address)
		FText AsShortDate(FDateTime& InDateTime); // Flags: Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75004F8C0(relative to base address)
		bool AreParentalControlsEnabled(UUserWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75004F7F8(relative to base address)
		bool AreModalsConfirmationsErrorsActive(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75004F778(relative to base address)
		bool AreModalsActive(AFortPlayerController* LocalPlayerController); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75004F6F8(relative to base address)
	};


	// Class FortniteUI.FortUIBlueprintFunctionLibraryHelper
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortUIBlueprintFunctionLibraryHelper : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIBlueprintFunctionLibraryHelper");
			return ret;
		}
	};


	// Class FortniteUI.FortUIDataConfiguration
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x42F0 (0x4320 - 0x30)
	class UFortUIDataConfiguration : public UPrimaryDataAsset	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x30(0x8) UNKNOWN PROPERTY
		FString DefaultUIDataConfigurationPath; // 0x38(0x10)
		FString DefaultBROnlyUIDataConfigurationPath; // 0x48(0x10)
		FString MobileBROnlyUIDataConfigurationPath; // 0x58(0x10)
		FStateWidgetEntry StateWidgetClasses; // 0x68(0x208)
		FStateWidgetEntry CampaignFrontEndWidget; // 0x270(0x28)
		TWeakObjectPtr<UClass*> StartupStateWidget_Login; // 0x298(0x20)
		TWeakObjectPtr<UClass*> StartupStateWidget_SubgameSelect; // 0x2B8(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_Frontend; // 0x2D8(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_MobileFrontend; // 0x2F8(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_NightNightMode; // 0x318(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_HUD; // 0x338(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_MobileHUD; // 0x358(0x20)
		TWeakObjectPtr<UClass*> HUDLayoutToolV2SoftClass; // 0x378(0x20)
		TWeakObjectPtr<UClass*> AthenaStateWidget_Replay; // 0x398(0x20)
		TWeakObjectPtr<UClass*> MFA_ModalClass; // 0x3B8(0x20)
		TWeakObjectPtr<UClass*> EulaClass; // 0x3D8(0x20)
		TWeakObjectPtr<UClass*> FactionScreenSoftClassRef; // 0x3F8(0x20)
		TWeakObjectPtr<UClass*> CreativeServerBrowserSoftClassRef; // 0x418(0x20)
		TWeakObjectPtr<UClass*> RegionLockMessageWidgetClass; // 0x438(0x20)
		TWeakObjectPtr<UClass*> ParentalControlsWidgetClass; // 0x458(0x20)
		TWeakObjectPtr<UClass*> QRCodeModalWidgetClass; // 0x478(0x20)
		TMap<TEnumAsByte, int32_t> StandardImageBrushSizes; // 0x498(0x50)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> PowerRatingIconMultiSizeBrush; // 0x4E8(0x20)
		FLinearColor PowerRatingEnchantedPositiveColorOverride; // 0x508(0x10)
		FLinearColor PowerRatingEnchantedNegativeColorOverride; // 0x518(0x10)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> FilledTierPipMultiSizeBrush; // 0x528(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> UnfilledTierPipMultiSizeBrush; // 0x548(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> PreviewingTierPipMultiSizeBrush; // 0x568(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> PromotedTierPipMultiSizeBrush; // 0x588(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> UpgradeArrowMultiSizeBrush; // 0x5A8(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> ComparisonUpArrowMultiSizeBrush; // 0x5C8(0x20)
		FLinearColor BetterComparisonResultColor; // 0x5E8(0x10)
		FLinearColor WorseComparisonResultColor; // 0x5F8(0x10)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> InventoryOverflowIndicatorMultiSizeBrush; // 0x608(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> TrackedSchematicIndicatorMultiSizeBrush; // 0x628(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> FavoritedItemIndicatorMultiSizeBrush; // 0x648(0x20)
		TMap<UClass*, TWeakObjectPtr> VariantToWidgetMaping; // 0x668(0x50)
		TWeakObjectPtr<UClass*> PlayerSurveyWidgetClass; // 0x6B8(0x20)
		bool bEnableSocialFeatures; // 0x6D8(0x1)
		bool bEnableChat; // 0x6D9(0x1)
		bool bEnablePartyFeatures; // 0x6DA(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x6DB(0x5) UNKNOWN PROPERTY
		TMap<ESocialChannelType, FSocialChatMessageEntryStyle> ChatChannelStyles; // 0x6E0(0x50)
		UClass* SocialPanelClass; // 0x730(0x8)
		UClass* TeamMemberManageClass; // 0x738(0x8)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> DefenderIconMultiSizeBrush; // 0x740(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> AssaultDefenderIconMultiSizeBrush; // 0x760(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> PistolDefenderIconMultiSizeBrush; // 0x780(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> MeleeDefenderIconMultiSizeBrush; // 0x7A0(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> SniperDefenderIconMultiSizeBrush; // 0x7C0(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> ShotgunDefenderIconMultiSizeBrush; // 0x7E0(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> LeadSurvivorIconMultiSizeBrush; // 0x800(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> SurvivorIconMultiSizeBrush; // 0x820(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> TrapIconMultiSizeBrush; // 0x840(0x20)
		TWeakObjectPtr<UClass*> KeybindWidgetClass; // 0x860(0x20)
		TWeakObjectPtr<UClass*> HiddenCursorWidget; // 0x880(0x20)
		TWeakObjectPtr<UClass*> VirtualCursorWidget; // 0x8A0(0x20)
		FRuntimeFloatCurve UIScaleCurve; // 0x8C0(0x88)
		FRuntimeFloatCurve FrontEndUIScaleCurve; // 0x948(0x88)
		TWeakObjectPtr<UDataTable*> EventsStyleDataTable; // 0x9D0(0x20)
		TWeakObjectPtr<UMaterialInterface*> DefaultDivisionRoundIcon; // 0x9F0(0x20)
		TMap<int32_t, TWeakObjectPtr> DivisionRoundToIcons; // 0xA10(0x50)
		TMap<int32_t, TWeakObjectPtr> DivisionRoundToFancyIcons; // 0xA60(0x50)
		TMap<TEnumAsByte, UClass*> ItemCardPowerRatingTextStylesByBrushSize; // 0xAB0(0x50)
		TMap<TEnumAsByte, UClass*> ItemCardStackCountTextStylesByBrushSize; // 0xB00(0x50)
		TWeakObjectPtr<UMaterialInterface*> ItemCardLevelMeterMaterial; // 0xB50(0x20)
		TWeakObjectPtr<UMaterialInterface*> ItemCardDurabilityMeterMaterial; // 0xB70(0x20)
		FSlateBrush ItemCardBackgroundPlateBrush; // 0xB90(0xB0)
		FSlateBrush ItemCardRarityGradientBrush; // 0xC40(0xB0)
		FSlateBrush ItemCardDefenderPortraitBackgroundBrush; // 0xCF0(0xB0)
		FSlateBrush ItemCardHeroPortraitBackgroundBrush; // 0xDA0(0xB0)
		FSlateBrush ItemCardLeadSurvivorPortraitBackgroundBrush; // 0xE50(0xB0)
		FSlateBrush ItemCardSchematicBackgroundBrush; // 0xF00(0xB0)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> ItemCardRewardTraitsBackgroundMultiSizeBrush; // 0xFB0(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> ItemCardSchematicTraitsBackgroundMultiSizeBrush; // 0xFD0(0x20)
		TWeakObjectPtr<UClass*> MatchReadyDesktopPopupWidgetType; // 0xFF0(0x20)
		TWeakObjectPtr<UClass*> PlayerFeedbackModalWidget; // 0x1010(0x20)
		bool bLimitedToES2Features; // 0x1030(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x1031(0x7) UNKNOWN PROPERTY
		FWeightedBlendables FrontEndFFPostProcessMaterials; // 0x1038(0x10)
		bool bUseSpecificPinataWeapon; // 0x1048(0x1)
		bool bQuestVOEnabled; // 0x1049(0x1)
		unsigned char UnknownData03_6[0x6]; // 0x104A(0x6) UNKNOWN PROPERTY
		TMap<EFortItemCardSize, FVector2D> PersonnelAndSchematicCardSizes; // 0x1050(0x50)
		TMap<EFortItemCardSize, FVector2D> OtherItemCardSizes; // 0x10A0(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> PersonnelAndSchematicItemCardMaterial; // 0x10F0(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> CardPackItemCardMaterial; // 0x1140(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> InstanceItemCardMaterial; // 0x1190(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> TransformKeyItemCardMaterial; // 0x11E0(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> CosmeticItemCardMaterial; // 0x1230(0x50)
		TArray<EFortItemType> ItemTypesWhoseImagesReplaceCardBackgrounds; // 0x1280(0x10)
		TSet<EFortItemType> ItemTypesToHideCountWhenCountEqualsOne; // 0x1290(0x50)
		TMap<EFortItemCardSize, TWeakObjectPtr> ItemCardDetailAreaMaterial; // 0x12E0(0x50)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> FavoriteBookmarkMultiSizeBrush; // 0x1330(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> PermanentTransformKeykMultiSizeBrush; // 0x1350(0x20)
		TWeakObjectPtr<UFortMultiSizeBrushAsset*> ConsumableTransformKeykMultiSizeBrush; // 0x1370(0x20)
		TMap<FGameplayTag, TWeakObjectPtr> DefenderSubtypeWeaponTextures; // 0x1390(0x50)
		TMap<EFortBuffState, TWeakObjectPtr> EnchantedCustomRatingBlockBackgroundMaterial; // 0x13E0(0x50)
		TMap<EFortBuffState, TWeakObjectPtr> NormalCustomRatingBlockBackgroundMaterial; // 0x1430(0x50)
		FMargin CustomRatingBlockBackgroundBrushMargin; // 0x1480(0x10)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardDurabilityMeterMaterial; // 0x1490(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardLevelMeterMaterial; // 0x14B0(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardTraitIconMaterial; // 0x14D0(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardUnearnedTierIconMaterial; // 0x14F0(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardAvailableTierIconMaterial; // 0x1510(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardEarnedTierIconMaterial; // 0x1530(0x20)
		TWeakObjectPtr<UMaterialInterface*> UniversalItemCardPromotedTierIconMaterial; // 0x1550(0x20)
		TWeakObjectPtr<UFortItemDefinition*> MysteryItemDefinition; // 0x1570(0x20)
		TWeakObjectPtr<UTexture2D*> LoadingCardTexture; // 0x1590(0x20)
		FFortItemCard_XL_PersonnelAndSchematics_Configuration ItemCardConfig_XXL_PersonnelAndSchematics; // 0x15B0(0x4D0)
		FFortItemCard_XL_ItemInstance_Configuration ItemCardConfig_XXL_ItemInstance; // 0x1A80(0x2D0)
		FFortItemCard_XL_TransformKey_Configuration ItemCardConfig_XXL_TransformKey; // 0x1D50(0x48)
		unsigned char UnknownData04_6[0x8]; // 0x1D98(0x8) UNKNOWN PROPERTY
		FFortItemCard_XL_PersonnelAndSchematics_Configuration ItemCardConfig_XL_PersonnelAndSchematics; // 0x1DA0(0x4D0)
		FFortItemCard_XL_ItemInstance_Configuration ItemCardConfig_XL_ItemInstance; // 0x2270(0x2D0)
		FFortItemCard_XL_TransformKey_Configuration ItemCardConfig_XL_TransformKey; // 0x2540(0x48)
		unsigned char UnknownData05_6[0x8]; // 0x2588(0x8) UNKNOWN PROPERTY
		FFortItemCard_L_PersonnelAndSchematics_Configuration ItemCardConfig_L_PersonnelAndSchematics; // 0x2590(0x450)
		FFortItemCard_L_ItemInstance_Configuration ItemCardConfig_L_ItemInstance; // 0x29E0(0x2D0)
		FFortItemCard_L_TransformKey_Configuration ItemCardConfig_L_TransformKey; // 0x2CB0(0x48)
		unsigned char UnknownData06_6[0x8]; // 0x2CF8(0x8) UNKNOWN PROPERTY
		FFortItemCard_M_PersonnelAndSchematics_Configuration ItemCardConfig_M_PersonnelAndSchematics; // 0x2D00(0x450)
		FFortItemCard_M_ItemInstance_Configuration ItemCardConfig_M_ItemInstance; // 0x3150(0x2D0)
		FFortItemCard_M_TransformKey_Configuration ItemCardConfig_M_TransformKey; // 0x3420(0x48)
		unsigned char UnknownData07_6[0x8]; // 0x3468(0x8) UNKNOWN PROPERTY
		FFortItemCard_S_PersonnelAndSchematics_Configuration ItemCardConfig_S_PersonnelAndSchematics; // 0x3470(0x450)
		FFortItemCard_S_ItemInstance_Configuration ItemCardConfig_S_ItemInstance; // 0x38C0(0x2C0)
		FFortItemCard_S_TransformKey_Configuration ItemCardConfig_S_TransformKey; // 0x3B80(0x48)
		FFortItemCard_XS_PersonnelAndSchematics_Configuration ItemCardConfig_XS_PersonnelAndSchematics; // 0x3BC8(0x48)
		FFortItemCard_XS_ItemInstance_Configuration ItemCardConfig_XS_ItemInstance; // 0x3C10(0x290)
		FFortItemCard_XS_TransformKey_Configuration ItemCardConfig_XS_TransformKey; // 0x3EA0(0x48)
		FFortItemCard_XS_PersonnelAndSchematics_Configuration ItemCardConfig_XXS_PersonnelAndSchematics; // 0x3EE8(0x48)
		FFortItemCard_XXS_ItemInstance_Configuration ItemCardConfig_XXS_ItemInstance; // 0x3F30(0x28)
		FFortItemCard_XS_TransformKey_Configuration ItemCardConfig_XXS_TransformKey; // 0x3F58(0x48)
		TWeakObjectPtr<UDataTable*> HealthyGamingDataTable; // 0x3FA0(0x20)
		TWeakObjectPtr<UDataTable*> TrapPickerGameplayTagSettings; // 0x3FC0(0x20)
		FFortUIPickerTrapSortScores TrapPickerSortScores; // 0x3FE0(0x14)
		unsigned char UnknownData08_6[0x4]; // 0x3FF4(0x4) UNKNOWN PROPERTY
		UFortTooltipDisplayStatsLookupTable* ObjClassToTooltipStatsMap; // 0x3FF8(0x8)
		TWeakObjectPtr<UClass*> LoadingScreenBacchusTutorialWidget; // 0x4000(0x20)
		TWeakObjectPtr<UClass*> LoadingScreenReturnToKairosWidget; // 0x4020(0x20)
		TWeakObjectPtr<USlateBrushAsset*> ActorCanvasArrowBrush; // 0x4040(0x20)
		TWeakObjectPtr<UDataTable*> UITutorialData; // 0x4060(0x20)
		TWeakObjectPtr<UObject*> PawnHealthBarPowerRatingBacking; // 0x4080(0x20)
		TArray<UFortUIDataProfileStats*> ProfileStatStyleSets; // 0x40A0(0x10)
		TMap<FName, TWeakObjectPtr> LegacyNativeUIBrushMap; // 0x40B0(0x50)
		TMap<FName, TWeakObjectPtr> LegacyNativeUIAssetMap; // 0x4100(0x50)
		TWeakObjectPtr<UClass*> ItemPairsInspectionScreen; // 0x4150(0x20)
		TWeakObjectPtr<UClass*> RealMoneyPurchaseSpecialInfoModal; // 0x4170(0x20)
		UAthenaItemShopConfiguration* ItemShopConfiguration; // 0x4190(0x8)
		float AnalogRotateSpeed; // 0x4198(0x4)
		float DragRotateSpeed; // 0x419C(0x4)
		float TouchSwipeRotateRate; // 0x41A0(0x4)
		float MouseWheelZoomSpeed; // 0x41A4(0x4)
		float DragZoomSpeed; // 0x41A8(0x4)
		float TriggerZoomSpeed; // 0x41AC(0x4)
		float TouchZoomPinchRate; // 0x41B0(0x4)
		float ItemViewCompetingAxisInputThreshold; // 0x41B4(0x4)
		TArray<EFortItemType> ItemTypesToUseVaultCamera; // 0x41B8(0x10)
		UClass* FrontendItemViewSettingsManager; // 0x41C8(0x8)
		TMap<FGameplayTag, TWeakObjectPtr> WidgetAliasesDefault; // 0x41D0(0x50)
		UFortVideoDisplayData* VideoDisplayData; // 0x4220(0x8)
		UFortSocialDisplayData* SocialDisplayData; // 0x4228(0x8)
		UAthenaChallengeDisplayData* ChallengeDisplayData; // 0x4230(0x8)
		UAthenaTeamDisplayData* SquadStyleData; // 0x4238(0x8)
		UFortStoreDisplayData* StoreDisplayData; // 0x4240(0x8)
		UFortItemPresentationDisplayData* ItemPresentationDisplayData; // 0x4248(0x8)
		unsigned char UnknownData09_6[0x8]; // 0x4250(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UPaperSprite*> ResourceSprites; // 0x4258(0xC0)
		unsigned char UnknownData10_7[0x8]; // 0x4318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIDataConfiguration");
			return ret;
		}

		UFortMultiSizeBrushAsset GetDefenderSubtypeIconMultiSizeBrushByTag(FGameplayTag DefenderSubtypeTag); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500506A8(relative to base address)
	};


	// Class FortniteUI.FortUIDataProfileStats
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UFortUIDataProfileStats : public UDataAsset	
	{
	public:
		TMap<FGameplayTag, FFortUIStatStyle> ProfileStatStyles; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIDataProfileStats");
			return ret;
		}
	};


	// Class FortniteUI.FortUIMessageItemWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortUIMessageItemWidget : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnMessageDisplayed; // 0x2D8(0x10)
		FMulticastInlineDelegate OnMessageRemoved; // 0x2E8(0x10)
		FName MessageId; // 0x2F8(0x4)
		int32_t StackSize; // 0x2FC(0x4)
		float DisplayDuration; // 0x300(0x4)
		float RemoveDuration; // 0x304(0x4)
		unsigned char UnknownData00_7[0x10]; // 0x308(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIMessageItemWidget");
			return ret;
		}

		void OnStackSizeChanged(int32_t OldStackSize); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReturnedToPool(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeginRemove(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortUIMessageManager
	// Inherited from UObject
	// Size: 0x80 (0xA8 - 0x28)
	class UFortUIMessageManager : public UObject	
	{
	public:
		FMulticastInlineDelegate OnMessageAvailable; // 0x28(0x10)
		TArray<UFortUIMessageItemWidget*> MessageQueue; // 0x38(0x10)
		TArray<TWeakObjectPtr> CurrentlyDisplayedMessages; // 0x48(0x10)
		unsigned char UnknownData00_7[0x50]; // 0x58(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIMessageManager");
			return ret;
		}

		void HandleMessageRemoved(UFortUIMessageItemWidget* MessageItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051AEC(relative to base address)
		void HandleMessageDisplayed(UFortUIMessageItemWidget* MessageItem); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051A6C(relative to base address)
		int32_t GetNumDisplayedItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748BA0724(relative to base address)
		UFortUIMessageItemWidget GetNextMessageInQueue(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500513A8(relative to base address)
		UFortUIMessageItemWidget AddMessageItem(UClass* MessageItemClass, APlayerController* OwningPlayer, FName MessageId, int32_t StackCount); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75004F26C(relative to base address)
	};


	// Class FortniteUI.UINavigationManager
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UUINavigationManager : public UObject	
	{
	public:
		FMulticastInlineDelegate OnNavigationEvent; // 0x28(0x10)
		TArray<FUINavigationEntry> NavigationStack; // 0x38(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UINavigationManager");
			return ret;
		}

		void PushNavigation(FText DisplayName, UObject* ObjectData, FName IdData, int32_t IntData, FDelegateProperty& OnNavigateTo, FDelegateProperty& OnNavigateFrom); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750053FD4(relative to base address)
		void PopNavigation(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750052D7C(relative to base address)
		void NavigationToIndex(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750052764(relative to base address)
		int32_t GetStackSize(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7496973C8(relative to base address)
		FText GetDisplayName(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500507B8(relative to base address)
		void ClearStack(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750050114(relative to base address)
	};


	// Class FortniteUI.FortUINavigationManager
	// Inherited from UUINavigationManager -> UObject
	// Size: 0x118 (0x160 - 0x48)
	class UFortUINavigationManager : public UUINavigationManager	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x48(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnFeatureNavigateOp; // 0x58(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x68(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSquadSlotNavigateRequest; // 0x78(0x10)
		unsigned char UnknownData02_6[0x40]; // 0x88(0x40) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnPopContentStackOp; // 0xC8(0x10)
		FMulticastInlineDelegate OnSquadNavigationOp; // 0xD8(0x10)
		unsigned char UnknownData03_6[0x50]; // 0xE8(0x50) UNKNOWN PROPERTY
		TArray<FFortUINavigationRequest> NavigationRequests; // 0x138(0x10)
		UUserWidget* HiddenCursorWidget; // 0x148(0x8)
		UUserWidget* VirtualCursorWidget; // 0x150(0x8)
		unsigned char UnknownData04_7[0x8]; // 0x158(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUINavigationManager");
			return ret;
		}

		bool TryGetPendingNavigationOp(FFortUINavigationOperation& NavigationOp); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750055BD0(relative to base address)
		void SetScrollWidget(UWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750055324(relative to base address)
		void PushItemManagementScreen(EFortFrontendInventoryFilter ItemManagementFilter, UFortItem* ItemToSelect, bool bShowAutoMulch); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750053ED8(relative to base address)
		void PushItemInspectionScreen(UFortItem* ItemToInspect, EFortItemInspectionMode Mode, UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750053B74(relative to base address)
		void PushHeroLoadoutScreen(UFortCampaignHeroLoadoutItem* HeroLoadout); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500536C4(relative to base address)
		void NavigateToItemManagementScreen(EFortFrontendInventoryFilter Filter); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750052600(relative to base address)
		void NavigateToFeature(EFortUIFeature Feature); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750052580(relative to base address)
		bool HasPendingNavigationOp(EFortUINavigationOp NavigationOp); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750051D2C(relative to base address)
		void CompletePendingNavigationOp(EFortUINavigationOp NavigationOp); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75005012C(relative to base address)
		void CenterWidget(UWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750050094(relative to base address)
		bool CanNavigateToQuestObjective(UFortQuestItem* QuestItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75004FF60(relative to base address)
		bool AttemptPlayQuest(UFortQuestItem* Quest); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75004FB48(relative to base address)
		bool AttemptMatchmakeForQuest(UFortQuestItem* Quest, bool& OutContentNotDownloaded); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75004FA78(relative to base address)
	};


	// Class FortniteUI.FortUINotificationManager
	// Inherited from UObject
	// Size: 0x70 (0x98 - 0x28)
	class UFortUINotificationManager : public UObject	
	{
	public:
		TArray<UFortUINotificationQueue*> UINotificationQueues; // 0x28(0x10)
		UFortLocalPlayer* LocalPlayer; // 0x38(0x8)
		unsigned char UnknownData00_7[0x58]; // 0x40(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUINotificationManager");
			return ret;
		}

		void HandlePurchaseBattlePassOfferComplete(bool bSuccess); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051C08(relative to base address)
		void HandleProfileUpdated(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051B80(relative to base address)
		void HandleBattlePassPageUnlockToast(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051A58(relative to base address)
	};


	// Class FortniteUI.FortUIStateWidget_ForcedIntro
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x4C0 - 0x408)
	class UFortUIStateWidget_ForcedIntro : public UFortUIStateWidgetBase	
	{
	public:
		FString PlaylistPluginName; // 0x408(0x10)
		FName PlaylistName; // 0x418(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x41C(0x4) UNKNOWN PROPERTY
		FDateTime MatchmakingStartTime; // 0x420(0x8)
		float MatchmakingStartTimeRandomness; // 0x428(0x4)
		bool bUseMCPTime; // 0x42C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x42D(0x3) UNKNOWN PROPERTY
		float MaxWaitTimeForMeshConfig; // 0x430(0x4)
		float InitialDelayBeforeMM; // 0x434(0x4)
		float MMTimeoutTime; // 0x438(0x4)
		int32_t MaxNumOfMMAttempts; // 0x43C(0x4)
		float TimeBetweenMMAttempts; // 0x440(0x4)
		float TimeBetweenMMAttemptsMultiplier; // 0x444(0x4)
		unsigned char UnknownData02_6[0x1]; // 0x448(0x1) UNKNOWN PROPERTY
		bool bLocalOnlyOnFail; // 0x449(0x1)
		bool bSetToDefaulPlaylistOnDeactivated; // 0x44A(0x1)
		bool bSetLocalHasSeenForcedIntroOnDeactivated; // 0x44B(0x1)
		unsigned char UnknownData03_6[0x4]; // 0x44C(0x4) UNKNOWN PROPERTY
		UAthenaLoadingScreenItemDefinition* LoadingScreenDefinition; // 0x450(0x8)
		UCommonTextBlock* Text_ForcedIntroState; // 0x458(0x8)
		unsigned char UnknownData04_7[0x60]; // 0x460(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_ForcedIntro");
			return ret;
		}

		void StartMatch(); // Flags: Final|Exec|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void OnNewForcedIntroTextDisplayState(EForcedIntroTextDisplayState NewState); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF750052864(relative to base address)
		TWeakObjectPtr GetPlaylistLoadingScreenWidget(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75005148C(relative to base address)
	};


	// Class FortniteUI.FortUIStateWidget_ForcedIntro_Valkyrie
	// Inherited from UFortUIStateWidget_ForcedIntro -> UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x4C0 - 0x4C0)
	class UFortUIStateWidget_ForcedIntro_Valkyrie : public UFortUIStateWidget_ForcedIntro	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_ForcedIntro_Valkyrie");
			return ret;
		}
	};


	// Class FortniteUI.FortUIStateWidget_ForcedPlaylist
	// Inherited from UFortUIStateWidget_ForcedIntro -> UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x4C0 - 0x4C0)
	class UFortUIStateWidget_ForcedPlaylist : public UFortUIStateWidget_ForcedIntro	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_ForcedPlaylist");
			return ret;
		}
	};


	// Class FortniteUI.FortUIStateWidget_NightNightBase
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x450 - 0x408)
	class UFortUIStateWidget_NightNightBase : public UFortUIStateWidgetBase	
	{
	public:
		bool bEnableNightNightPatchCheck; // 0x408(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x409(0x3) UNKNOWN PROPERTY
		float PatchCheckIntervalSeconds; // 0x40C(0x4)
		float PatchCheckIntervalJitterSeconds; // 0x410(0x4)
		unsigned char UnknownData01_6[0x14]; // 0x414(0x14) UNKNOWN PROPERTY
		FDateTime GameShutdownTime; // 0x428(0x8)
		float GameShutdownTimeJitterSeconds; // 0x430(0x4)
		unsigned char UnknownData02_7[0x1C]; // 0x434(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_NightNightBase");
			return ret;
		}

		void OnToggleUIChanged(bool bHideUI); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVehicleInfoIndicatorWidget
	// Inherited from UFortActorIndicatorWidget -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3E0 - 0x3C0)
	class UFortVehicleInfoIndicatorWidget : public UFortActorIndicatorWidget	
	{
	public:
		TWeakObjectPtr<AActor*> CurrentVehicle; // 0x3C0(0x8)
		float CachedDistanceToPlayerSq; // 0x3C8(0x4)
		float CachedVehicleHealth; // 0x3CC(0x4)
		float NewVehicleTime; // 0x3D0(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x3D4(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVehicleInfoIndicatorWidget");
			return ret;
		}

		void SetVehicle(AActor* NewVehicle); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748A27508(relative to base address)
		void OnVehicleHealthChanged(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF749483DBC(relative to base address)
		void OnVehicleChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnForceHideChanged(bool bForceHide); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetForceHidden(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748A2749C(relative to base address)
		APawn GetControlledPawn(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7484A1CC4(relative to base address)
	};


	// Class FortniteUI.EnableVOIPNotification
	// Inherited from UFortUINotification -> UObject
	// Size: 0x18 (0x108 - 0xF0)
	class UEnableVOIPNotification : public UFortUINotification	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0xF0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EnableVOIPNotification");
			return ret;
		}
	};


	// Class FortniteUI.FortVoiceChannelChangePopup
	// Inherited from UFortToastWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x3D8 - 0x300)
	class UFortVoiceChannelChangePopup : public UFortToastWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x300(0x8) UNKNOWN PROPERTY
		bool bEnableVoiceChatNotifyEverySession; // 0x308(0x1)
		bool bToastMode; // 0x309(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x30A(0x2) UNKNOWN PROPERTY
		float VisiblityInSeconds; // 0x30C(0x4)
		FText GameChannelText; // 0x310(0x10)
		FText PartyChannelText; // 0x320(0x10)
		FText JustJoinedChannelText; // 0x330(0x10)
		FText StayedInChannelText; // 0x340(0x10)
		unsigned char UnknownData02_6[0x38]; // 0x350(0x38) UNKNOWN PROPERTY
		TWeakObjectPtr<UInputComponent*> CachedGameChannelRecommendationInputComponent; // 0x388(0x8)
		UWidgetAnimation* Anim_SimplePopup; // 0x390(0x8)
		UCommonRichTextBlock* Text_TopLine; // 0x398(0x8)
		UCommonRichTextBlock* Text_MiddleLine; // 0x3A0(0x8)
		UCommonRichTextBlock* Text_BottomLine; // 0x3A8(0x8)
		UCommonButtonLegacy* ActionButton; // 0x3B0(0x8)
		UCommonButtonLegacy* Button_JoinGameChat; // 0x3B8(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_InputButtons; // 0x3C0(0x8)
		UFortKeybindWidget* HoldKeybindWidget_Keyboard; // 0x3C8(0x8)
		UFortKeybindWidget* HoldKeybindWidget_GamePad; // 0x3D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChannelChangePopup");
			return ret;
		}

		void OnInputModeChanged(ECommonInputType NewInputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOpenCloseAnimationFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750051B6C(relative to base address)
	};


	// Class FortniteUI.FortBuildWatermark
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UFortBuildWatermark : public UFortHUDElementWidget	
	{
	public:
		UTextBlock* Text_BuildWatermark; // 0x318(0x8)
		UTextBlock* Text_McpVersion; // 0x320(0x8)
		UTextBlock* Text_CalendarOffset; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBuildWatermark");
			return ret;
		}

		void UpdateWatermark(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF747A7B7D0(relative to base address)
	};


	// Class FortniteUI.FortColorPicker
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x508 - 0x3F0)
	class UFortColorPicker : public UCommonActivatableWidget	
	{
	public:
		UUniformGridPanel* GridPanel_Swatches; // 0x3F0(0x8)
		UClass* SwatchTileClass; // 0x3F8(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_Swatches; // 0x400(0x8)
		UCommonButtonLegacy* Button_CustomColor; // 0x408(0x8)
		UFortColorPickerSwatchTile* Swatch_CustomColor; // 0x410(0x8)
		UFortColorPickerComponent* ColorComponent_Component1; // 0x418(0x8)
		UFortColorPickerComponent* ColorComponent_Component2; // 0x420(0x8)
		UFortColorPickerComponent* ColorComponent_Component3; // 0x428(0x8)
		UCommonButtonLegacy* Button_SaveColor; // 0x430(0x8)
		UFortColorPickerSwatchTile* Swatch_CustomColorPreview; // 0x438(0x8)
		TArray<FLinearColor> Swatches; // 0x440(0x10)
		bool bNullOptionAvailable; // 0x450(0x1)
		bool bAutoSelectColorOnInitialize; // 0x451(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x452(0x2) UNKNOWN PROPERTY
		FLinearColor StartingCustomColor; // 0x454(0x20)
		int32_t SwatchRowCount; // 0x474(0x4)
		FLinearColor NullOptionColor; // 0x478(0x10)
		EColorPickerType ColorPickerType; // 0x488(0x1)
		bool bInitializeCustomColorFromSelectedSwatch; // 0x489(0x1)
		EColorPickerColorRepresentation CustomColorRepresentation; // 0x48A(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x48B(0x5) UNKNOWN PROPERTY
		UMaterialInterface* HueMaterial; // 0x490(0x8)
		FName HueMaterialParam; // 0x498(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x49C(0x4) UNKNOWN PROPERTY
		UMaterialInterface* SaturationMaterial; // 0x4A0(0x8)
		FName SaturationMaterialParam; // 0x4A8(0x4)
		unsigned char UnknownData03_6[0x4]; // 0x4AC(0x4) UNKNOWN PROPERTY
		UMaterialInterface* ValueMaterial; // 0x4B0(0x8)
		FName ValueMaterialParam; // 0x4B8(0x4)
		FLinearColor CurrentColor; // 0x4BC(0x10)
		unsigned char UnknownData04_7[0x3C]; // 0x4CC(0x3C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorPicker");
			return ret;
		}

		void OnSetupColorPicker(EColorPickerType InColorPickerType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSwatchColorSelected(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500776A8(relative to base address)
		void BP_OnSwapColorPickerType(bool bToSwatch); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortColorPickerComponent
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortColorPickerComponent : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ComponentName; // 0x2D8(0x8)
		UCommonTextBlock* Text_CurrentValue; // 0x2E0(0x8)
		UFortColorPickerSlider* ColorSlider_Component; // 0x2E8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorPickerComponent");
			return ret;
		}

		void HandleOnValueChanged(float NormalizedNewValue); // Flags: Final|Native|Private, Memory Exec: 0x7FF75007709C(relative to base address)
	};


	// Class FortniteUI.FortColorPickerSlider
	// Inherited from UAnalogSlider -> USlider -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x670 - 0x660)
	class UFortColorPickerSlider : public UAnalogSlider	
	{
	public:
		UMaterialInstanceDynamic* DynamicSliderMaterialInstance; // 0x660(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x668(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorPickerSlider");
			return ret;
		}
	};


	// Class FortniteUI.FortColorPickerSwatchTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortColorPickerSwatchTile : public UCommonButtonLegacy	
	{
	public:
		UImage* Image_Color; // 0x13E0(0x8)
		UImage* Image_Locked; // 0x13E8(0x8)
		UImage* Image_Selected; // 0x13F0(0x8)
		FName ImageColorParam; // 0x13F8(0x4)
		FLinearColor SwatchColor; // 0x13FC(0x10)
		unsigned char UnknownData00_7[0x4]; // 0x140C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorPickerSwatchTile");
			return ret;
		}

		void OnSwatchLockedStateChanged(bool bSwatchLocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSwatchColorSet(bool bInNullColor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMobileEditableText
	// Inherited from UEditableText -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x480 - 0x478)
	class UFortMobileEditableText : public UEditableText	
	{
	public:
		float MobileFontSizeMultiplier; // 0x478(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x47C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileEditableText");
			return ret;
		}

		void SetMobileFontSizeMultiplier(float InMobileFontSizeMultiplier); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078450(relative to base address)
		float GetMobileFontSizeMultiplier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75007672C(relative to base address)
	};


	// Class FortniteUI.FortMobileImage
	// Inherited from UImage -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2A0 - 0x280)
	class UFortMobileImage : public UImage	
	{
	public:
		float MobileSizeMultiplier; // 0x280(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x284(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileImage");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerBanner
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x108 (0x260 - 0x158)
	class UFortPlayerBanner : public UWidget	
	{
	public:
		bool bShowBorder; // 0x158(0x1)
		bool bUseLargeTexture; // 0x159(0x1)
		bool bSquareShape; // 0x15A(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x15B(0x5) UNKNOWN PROPERTY
		FVector2D DesiredSize; // 0x160(0x10)
		UMaterialInterface* DefaultBorderlessBannerMaterial; // 0x170(0x8)
		UMaterialInterface* DefaultBorderlessSquareBannerMaterial; // 0x178(0x8)
		FSlateBrush BannerBrush; // 0x180(0xB0)
		unsigned char UnknownData01_7[0x30]; // 0x230(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerBanner");
			return ret;
		}

		void SetIconId(FName IconId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500781B0(relative to base address)
		void SetColorId(FName ColorId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077F5C(relative to base address)
	};


	// Class FortniteUI.FortPlayerPowerRating
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortPlayerPowerRating : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnPowerRatingUpdated; // 0x2D8(0x10)
		EFortPlayerPowerRatingType PowerRatingType; // 0x2E8(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x2E9(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerPowerRating");
			return ret;
		}

		void RepresentLocalPlayer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077D34(relative to base address)
		void OnTeamPowerRatingUpdated(int32_t TeamPowerRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTeamMembershipChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPowerRatingUpdated__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPowerRatingProgressUpdated(float BaseRatingProgress, float TeamRatingProgress); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBasePowerRatingUpdated(int32_t BasePowerRating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasTeamMembers(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500777D4(relative to base address)
		int32_t GetTeamPowerRating(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076B80(relative to base address)
		int32_t GetBasePowerRating(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750075EC8(relative to base address)
	};


	// Class FortniteUI.FortPlayerPowerRatingToast
	// Inherited from UFortToastWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x330 - 0x300)
	class UFortPlayerPowerRatingToast : public UFortToastWidget	
	{
	public:
		UCommonTextBlock* Text_PowerDifference; // 0x300(0x8)
		UFortPlayerBanner* Banner_MemberBanner; // 0x308(0x8)
		UCommonTextBlock* Text_PowerRating; // 0x310(0x8)
		UCommonTextBlock* Text_Title; // 0x318(0x8)
		UCommonTextBlock* Text_Description; // 0x320(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x328(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerPowerRatingToast");
			return ret;
		}

		void ShowToast(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideToast(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75007780C(relative to base address)
	};


	// Class FortniteUI.FortProgressWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortProgressWidget : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x2D8(0x8)
		UCommonTextBlock* Text_Description; // 0x2E0(0x8)
		UImage* Image_MainIcon; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortProgressWidget");
			return ret;
		}

		void SetTitle(FText Title); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500785C4(relative to base address)
		void SetIcon(FSlateBrush IconBrush); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078078(relative to base address)
		void SetDescription(FText Description); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077FDC(relative to base address)
	};


	// Class FortniteUI.FortQuantitySelector
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x598 - 0x560)
	class UFortQuantitySelector : public UFortActivatablePanel	
	{
	public:
		UCommonButtonLegacy* Button_Confirm; // 0x560(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x568(0x8)
		UFortItem* Item; // 0x570(0x8)
		int32_t CurrentQuantity; // 0x578(0x4)
		unsigned char UnknownData00_7[0x1C]; // 0x57C(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuantitySelector");
			return ret;
		}

		void OnQuantitySelectorInitialized(UFortItem* InItem, FText& TitleText, FText& ConfirmButtonText, FText& AdditionalInfoText, int32_t InitialQuantity, int32_t MaximumQuantity); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeQuantitySelector(UFortItem* InItem, FText TitleText, FText ConfirmButtonText, FText AdditionalInfoText, int32_t InitialQuantity, int32_t MaximumQuantity); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077820(relative to base address)
		UFortItem GetItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076664(relative to base address)
	};


	// Class FortniteUI.FortEulaTab
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortEulaTab : public UCommonActivatableWidget	
	{
	public:
		FString EULAKeyToShow; // 0x3F0(0x10)
		unsigned char UnknownData00_6[0x10]; // 0x400(0x10) UNKNOWN PROPERTY
		UFortRichTextBlockLegacy* Text_EULA; // 0x410(0x8)
		UWidgetSwitcher* Switcher_TextSpinner; // 0x418(0x8)
		UScrollBox* ScrollBox_EULAText; // 0x420(0x8)
		UImage* Image_Spinner; // 0x428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEulaTab");
			return ret;
		}

		void HandleDownloadEULAComplete(bool bSuccessful, FText EULAText, FString Key); // Flags: Final|Native|Private, Memory Exec: 0x7FF750076D70(relative to base address)
	};


	// Class FortniteUI.FortLegalInfoWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x598 - 0x560)
	class UFortLegalInfoWidget : public UFortActivatablePanel	
	{
	public:
		UCommonWidgetSwitcherLegacy* WidgetSwitcher_Legal; // 0x560(0x8)
		UFortTabListWidgetBase_Legacy* TabList_LegalOptions; // 0x568(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x570(0x8)
		UCommonButtonBase* Button_Close; // 0x578(0x8)
		UCommonButtonBase* Button_PrivacyPolicy; // 0x580(0x8)
		UCommonButtonBase* Button_FanContentPolicy; // 0x588(0x8)
		UCommonButtonBase* Button_TermsOfService; // 0x590(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLegalInfoWidget");
			return ret;
		}

		void Close(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750075E4C(relative to base address)
		void AddJapaneseEULATabs(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortConsoleProfileWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UFortConsoleProfileWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2B0(0x8) UNKNOWN PROPERTY
		UTextBlock* Text_Prefix; // 0x2B8(0x8)
		UTextBlock* Text_DisplayName; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortConsoleProfileWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortChatModalWrapper
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortChatModalWrapper : public UCommonActivatableWidget	
	{
	public:
		UFortChatContainer* ChatContainer_Chat; // 0x3F0(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x3F8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChatModalWrapper");
			return ret;
		}
	};


	// Class FortniteUI.FortActivatableChatWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UFortActivatableChatWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		UFortChatModalWrapper* Activatable_ModalBindings; // 0x408(0x8)
		UCommonButtonBase* Button_HoldToOpen; // 0x410(0x8)
		UDataTable* InputActionDataTable; // 0x418(0x8)
		unsigned char UnknownData01_6[0x1]; // 0x420(0x1) UNKNOWN PROPERTY
		bool bActivationTriggeredManually; // 0x421(0x1)
		unsigned char UnknownData02_7[0x6]; // 0x422(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatableChatWidget");
			return ret;
		}

		void HandleRequestChatClose(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF750077694(relative to base address)
		void HandleHoldButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF750076FC4(relative to base address)
		void FocusChat(bool bFocus); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BacchusFrontendFocusChat(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750075DB8(relative to base address)
	};


	// Class FortniteUI.HudTalkingHead
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x318 - 0x318)
	class UHudTalkingHead : public UFortHUDElementWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HudTalkingHead");
			return ret;
		}

		void OnOpenTalkingHead(UTexture2D* Image, FText& Title, FText& Subtitle, EFortAnnouncementDisplayPreference DisplayPreference); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEndSpokenDialog(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseTalkingHead(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeginSpokenDialog(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TalkingHead
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UTalkingHead : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TalkingHead");
			return ret;
		}

		void OnShouldBlockSubtitlePortraitChanged(bool bShouldBlockSubtitlePortrait); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOpenTalkingHead(UTexture2D* Image, FText& Title, FText& Subtitle, EFortAnnouncementDisplayPreference DisplayPreference); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEndSpokenDialog(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseTalkingHead(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeginSpokenDialog(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.DynamicBackgroundDirector
	// Inherited from AActor -> UObject
	// Size: 0x1F0 (0x480 - 0x290)
	class ADynamicBackgroundDirector : public AActor	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x290(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate BP_OnDonutSequenceInitiated; // 0x2A8(0x10)
		FMulticastInlineDelegate BP_OnEnteredItemShop; // 0x2B8(0x10)
		FMulticastInlineDelegate BP_OnEnteredStore; // 0x2C8(0x10)
		FMulticastInlineDelegate BP_OnDonutSequencePlayDonutDrop; // 0x2D8(0x10)
		FMulticastInlineDelegate BP_OnEnvironmentChanged; // 0x2E8(0x10)
		FMulticastInlineDelegate BP_OnEnvironmentBackgroundTextureChanged; // 0x2F8(0x10)
		FMulticastInlineDelegate BP_OnLobbyDataChanged; // 0x308(0x10)
		FMulticastInlineDelegate BP_OnRequestShowBackground; // 0x318(0x10)
		FMulticastInlineDelegate BP_OnRequestHideBackground; // 0x328(0x10)
		EDynamicBackgroudKey DynamicBackgroundKey; // 0x338(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x339(0x7) UNKNOWN PROPERTY
		TMap<FString, UTexture2D*> TextureCache; // 0x340(0x50)
		unsigned char UnknownData02_7[0xF0]; // 0x390(0xF0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DynamicBackgroundDirector");
			return ret;
		}

		void TryForceSetupDonutStore(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078948(relative to base address)
		void SetIsInDonutSequence(bool bIsInSequence); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078230(relative to base address)
		void ResetDonutShopSeen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077F20(relative to base address)
		void RequestDonutUIPlayAnim(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077F04(relative to base address)
		void RequestDelegate__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLobbyDataChanged__DelegateSignature(FFrontendLobbyData LobbyData); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnvironmentChangedDynamic__DelegateSignature(FString PresetEnvironmentName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnvironmentBackgroundTextureChangedDynamic__DelegateSignature(UTexture* BackgroundImage); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnteredStore__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnteredItemShop__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDonutSetupLateStore__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDonutSequencePlayDonutDrop__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDonutSequenceInitiated__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDonutSequenceInitiated(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077AD4(relative to base address)
		void MarkDonutSequenceSeen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077AC0(relative to base address)
		TWeakObjectPtr GetLoadedTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75007667C(relative to base address)
		bool GetHasDonutShopSequenceBeenSeen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500762A0(relative to base address)
		EBackgroundSource GetBackgroundSource(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750075EA0(relative to base address)
	};


	// Class FortniteUI.FortAthenaReward
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x1440 - 0x13E0)
	class UFortAthenaReward : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortItemDefinition* SecondaryItemDefToRepresent; // 0x13E8(0x8)
		UFortItemDefinition* RepresentedItemDefinition; // 0x13F0(0x8)
		UFortCosmeticItemCard* ItemCard; // 0x13F8(0x8)
		UWidget* Widget_ClaimedImage; // 0x1400(0x8)
		UWidget* Widget_LockedImage; // 0x1408(0x8)
		UWidget* Widget_UnearnedTintOverlay; // 0x1410(0x8)
		UWidget* Widget_OwnedBorder; // 0x1418(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x1420(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaReward");
			return ret;
		}

		void UpdateRewardState(EFortAthenaRewardState StateToSetup, bool bEnabled); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078BC4(relative to base address)
		void SetViewOnHovered(bool bShouldViewOnHovered); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078660(relative to base address)
		void SetupRewardItem(UFortItemDefinition* ItemDefToRepresent, int32_t Quantity, UFortItemVM* ItemVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078708(relative to base address)
		void OnStateUpdated(bool bClaimed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRepresentedItemSet(UFortItem* RepresentedItem, bool IsEquipped); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCodeOfConductScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x528 - 0x528)
	class UFortCodeOfConductScreen : public UCommonActivatablePanelLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCodeOfConductScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortColorCalibrationScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortColorCalibrationScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x528(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortColorCalibrationScreen");
			return ret;
		}

		void SetupForFullRangeTest(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500786F4(relative to base address)
		void SetupForColorConfiguration(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500786E0(relative to base address)
	};


	// Class FortniteUI.FortCompatibilityTags
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x308 - 0x2B0)
	class UFortCompatibilityTags : public UUserWidget	
	{
	public:
		ESlateVisibility HasContentVisibility; // 0x2B0(0x1)
		ESlateVisibility NoContentVisibility; // 0x2B1(0x1)
		ESlateVisibility CompatibleTagVisibility; // 0x2B2(0x1)
		ESlateVisibility IncompatibleTagVisibility; // 0x2B3(0x1)
		unsigned char UnknownData00_7[0x54]; // 0x2B4(0x54) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCompatibilityTags");
			return ret;
		}

		void SetItemDefinition(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078330(relative to base address)
		void SetItem(UFortItemVM* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500782B0(relative to base address)
		void OnRefreshTags(TArray<FGameplayTag>& CompatibleModes); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		ESlateVisibility GetCompatibleModeVisibility(FGameplayTag Mode); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750075F90(relative to base address)
	};


	// Class FortniteUI.FortCreditsScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x540 - 0x528)
	class UFortCreditsScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		UCommonButtonBase* Button_CloseTouch; // 0x528(0x8)
		FDataTableRowHandle BackAction; // 0x530(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreditsScreen");
			return ret;
		}

		void NativeConstruct(); // Flags: Native|Protected, Memory Exec: 0x7FF74D8B9FD0(relative to base address)
		void HandleBackActionInput(bool& bBPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF750076B98(relative to base address)
	};


	// Class FortniteUI.FortGameEventNotifications
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x3C8 - 0x318)
	class UFortGameEventNotifications : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x318(0x48) UNKNOWN PROPERTY
		UClass* DefaultEntryClass; // 0x360(0x8)
		bool bHasPrioritizedWidgetFocus; // 0x368(0x1)
		bool bShowFeatQuests; // 0x369(0x1)
		bool bFeatShowNonVisibleObjectives; // 0x36A(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x36B(0x5) UNKNOWN PROPERTY
		UFortNotificationEntry* ActiveWidget; // 0x370(0x8)
		TArray<UFortNotificationEntry*> WidgetQueue; // 0x378(0x10)
		TArray<UFortQuestObjectiveInfo*> ObjectivesQueue; // 0x388(0x10)
		unsigned char UnknownData02_6[0x10]; // 0x398(0x10) UNKNOWN PROPERTY
		UVerticalBox* NotificationUpdatesBox; // 0x3A8(0x8)
		TArray<FNotificationWidgetClass> NotificationClassPoolData; // 0x3B0(0x10)
		FFortPrioritizedWidgetData PrioritizationData; // 0x3C0(0x2)
		unsigned char UnknownData03_7[0x6]; // 0x3C2(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameEventNotifications");
			return ret;
		}

		void HandleNotificationUpdateFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750145508(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750144EE4(relative to base address)
		void ActionFreedForNotifications(FName ActionName); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750143CE8(relative to base address)
	};


	// Class FortniteUI.FortFrontendEventNotifications
	// Inherited from UFortGameEventNotifications -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3D0 - 0x3C8)
	class UFortFrontendEventNotifications : public UFortGameEventNotifications	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x3C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendEventNotifications");
			return ret;
		}
	};


	// Class FortniteUI.FortFrontendLevelScriptActor
	// Inherited from AFortLevelScriptActor -> ALevelScriptActor -> AActor -> UObject
	// Size: 0x40 (0x2E8 - 0x2A8)
	class AFortFrontendLevelScriptActor : public AFortLevelScriptActor	
	{
	public:
		TWeakObjectPtr<AFortItemPreviewPedestal*> CommanderPreviewPedestalActor; // 0x2A8(0x20)
		TWeakObjectPtr<AFortItemPreviewPedestal*> HeroLoadoutPreviewPedestalActor; // 0x2C8(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFrontendLevelScriptActor");
			return ret;
		}

		TWeakObjectPtr GetHeroLoadoutPreviewPedestalActor(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500762E0(relative to base address)
		AFortFrontendLevelScriptActor GetFrontendLevelScript(UObject* WorldContextObject); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7500761F4(relative to base address)
		TWeakObjectPtr GetCommanderPreviewPedestalActor(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750075EE0(relative to base address)
	};


	// Class FortniteUI.FortItemPlacementActor
	// Inherited from AActor -> UObject
	// Size: 0x1D0 (0x460 - 0x290)
	class AFortItemPlacementActor : public AActor	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x290(0x20) UNKNOWN PROPERTY
		UWidgetComponent* WidgetComponent_LoadingIndicator; // 0x2B0(0x8)
		bool bIsActorHovered; // 0x2B8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2B9(0x7) UNKNOWN PROPERTY
		AFortPlayerPawn* CurrentPawn; // 0x2C0(0x8)
		unsigned char UnknownData02_7[0x198]; // 0x2C8(0x198) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPlacementActor");
			return ret;
		}

		void OnUnhovered(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRemovePreviewActor(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPreviewActorSpawned(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHovered(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHeroPawnSetupCompleted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePawnTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex, AActor* TouchedActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500775D0(relative to base address)
		void HandlePawnTouchBegin(TEnumAsByte<ETouchIndex> FingerIndex, AActor* TouchedActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF75007750C(relative to base address)
		void HandlePawnFinishedApplyingCharacterParts(AFortPlayerPawn* Pawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF75007748C(relative to base address)
		void HandlePawnEndCursorOver(AActor* TouchedActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF75007740C(relative to base address)
		void HandlePawnClicked(AActor* TouchedActor, FKey ButtonPressed); // Flags: Final|Native|Private, Memory Exec: 0x7FF750077220(relative to base address)
		void HandlePawnBeginCursorOver(AActor* TouchedActor); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500771A0(relative to base address)
		void HandleFinishedCharacterCustomization(AFortPlayerPawn* InPawn); // Flags: Final|Native|Private, Memory Exec: 0x7FF750076F44(relative to base address)
		void HandleBoneTransformsFinalized(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750076C18(relative to base address)
	};


	// Class FortniteUI.FortItemPreviewPedestal
	// Inherited from AFortItemPlacementActor -> AActor -> UObject
	// Size: 0x70 (0x4D0 - 0x460)
	class AFortItemPreviewPedestal : public AFortItemPlacementActor	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x460(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<APlayerController*> ContextualPlayerController; // 0x468(0x8)
		UFortHero* TemporaryHeroInstance; // 0x470(0x8)
		TArray<UCustomCharacterPart*> AdditionalCharacterParts; // 0x478(0x10)
		unsigned char UnknownData01_6[0x28]; // 0x488(0x28) UNKNOWN PROPERTY
		USceneComponent* WeaponPlacementComponent; // 0x4B0(0x8)
		UChildActorComponent* PreviewActorComponent; // 0x4B8(0x8)
		UStaticMeshComponent* PreviewStaticMeshComponent; // 0x4C0(0x8)
		USkeletalMeshComponent* PreviewSkelMeshComponent; // 0x4C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPreviewPedestal");
			return ret;
		}

		void PreviewItemBP(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077CA8(relative to base address)
		void ClearDisplay(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750075E38(relative to base address)
	};


	// Class FortniteUI.FortSeasonDataWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortSeasonDataWidget : public UUserWidget	
	{
	public:
		float CurrentProgress; // 0x2B0(0x4)
		int32_t CurrentXP; // 0x2B4(0x4)
		int32_t XpToNextLevel; // 0x2B8(0x4)
		int32_t CurrentLevel; // 0x2BC(0x4)
		UAthenaChallengeRewards* LevelRewards; // 0x2C0(0x8)
		UFortSocialAvatarIcon* SocialAvatarIcon; // 0x2C8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSeasonDataWidget");
			return ret;
		}

		void OnUpdatedRestedState(bool bIsRested); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSuperCharged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnProgressUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLevelChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattlePassOwned(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMobileShareButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortMobileShareButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x13E0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileShareButton");
			return ret;
		}

		void SetShareParams(FString URL, FText& Description); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF7500784D0(relative to base address)
		void OnOSImageEnumSet(EFortFortMobileShareButtonOS OSType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortFriendCodeEntryBase
	// Inherited from UFortMobileShareButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x1470 - 0x1408)
	class UFortFriendCodeEntryBase : public UFortMobileShareButton	
	{
	public:
		FFriendCode FriendCode; // 0x1408(0x20)
		UCommonTextBlock* LinkDataTextBox; // 0x1428(0x8)
		FString DebugName; // 0x1430(0x10)
		int32_t LengthOfCode; // 0x1440(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x1444(0x4) UNKNOWN PROPERTY
		FText SharedMessage; // 0x1448(0x10)
		FText SharedMessageNoInvite; // 0x1458(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x1468(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFriendCodeEntryBase");
			return ret;
		}
	};


	// Class FortniteUI.FortFriendCodeListBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UFortFriendCodeListBase : public UFortActivatablePanel	
	{
	public:
		TArray<FFriendCode> BacchusFriendCodes; // 0x560(0x10)
		UClass* FriendCodeEntryClass; // 0x570(0x8)
		UDynamicEntryBox* EntryBox_FriendCodes; // 0x578(0x8)
		URichTextBlock* WarningText; // 0x580(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFriendCodeListBase");
			return ret;
		}

		void JustDesc(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750077AAC(relative to base address)
		void DescAndURL(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750075E8C(relative to base address)
		void CloseAndPopDialog(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750075E64(relative to base address)
	};


	// Class FortniteUI.FriendCodeEntryBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13E0 - 0x13E0)
	class UFriendCodeEntryBase : public UCommonButtonLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FriendCodeEntryBase");
			return ret;
		}
	};


	// Class FortniteUI.FriendCodeListBase
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFriendCodeListBase : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FriendCodeListBase");
			return ret;
		}
	};


	// Class FortniteUI.FortMessageReceivedScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UFortMessageReceivedScreen : public UFortActivatablePanel	
	{
	public:
		FMulticastInlineDelegate OnMessageClosed; // 0x560(0x10)
		UFortGiftBoxItem* GiftBoxItem; // 0x570(0x8)
		UCommonLazyImage* GiftBoxImage; // 0x578(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMessageReceivedScreen");
			return ret;
		}

		void OnGiftBoxSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinalGiftingComplete__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetTournamentTitleFromCMS(FString& OutTitle); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF75017F558(relative to base address)
		FText GetHeaderAssetString(FString Param); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017F0FC(relative to base address)
		FText GetBodyAssetString(FString Param); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017EE38(relative to base address)
	};


	// Class FortniteUI.AthenaGrantChallengeModal
	// Inherited from UFortMessageReceivedScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x5A8 - 0x580)
	class UAthenaGrantChallengeModal : public UFortMessageReceivedScreen	
	{
	public:
		TArray<UFortChallengeBundleItemDefinition*> BundleDefs; // 0x580(0x10)
		UCommonTextBlock* Text_ChallengeName; // 0x590(0x8)
		UCommonTextBlock* Text_ChallengeContext; // 0x598(0x8)
		UCommonTextBlock* Text_BodyCopy; // 0x5A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGrantChallengeModal");
			return ret;
		}

		void ShowNextChallengePopup(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500788CC(relative to base address)
		void OnChallengeBundleSet(FFortChallengeSetStyle& DisplayStyle); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBonusInfoMiniTag
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UFortBonusInfoMiniTag : public UUserWidget	
	{
	public:
		FGameplayTag JunoTag; // 0x2B0(0x4)
		FGameplayTag DelMarTag; // 0x2B4(0x4)
		TArray<FPrimaryAssetType> SparksAssetTypes; // 0x2B8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBonusInfoMiniTag");
			return ret;
		}

		void SetItemList(FBonusInfoMiniTagData& BonusInfoData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500783B0(relative to base address)
		void OnSetBonusInfo(ECosmeticCompatibleMode& BonusInfoType, bool bClaimed, FText& Description, UTexture2D* PreviewTexture, bool bIsEmote); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCameraTargetPedestal
	// Inherited from AActor -> UObject
	// Size: 0x290 (0x520 - 0x290)
	class AFortCameraTargetPedestal : public AActor	
	{
	public:
		FGameplayTag CameraTargetTag; // 0x290(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x294(0x4) UNKNOWN PROPERTY
		UChildActorComponent* PedestalBaseComponent; // 0x298(0x8)
		UFortItem* CurrentPrimaryItem; // 0x2A0(0x8)
		AFortItemPreviewActor* ItemPreviewActor; // 0x2A8(0x8)
		unsigned char UnknownData01_7[0x270]; // 0x2B0(0x270) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCameraTargetPedestal");
			return ret;
		}

		void OnItemsPendingTransitionOut(FStateTransitionControllerHandle& TransitionController); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemPreviewCleared(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemDisplaySettingsBuilt(FCharacterDisplaySettings& DisplaySettingsIn, FCharacterDisplaySettings& DisplaySettingsOut); // Flags: Native|Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF750077B04(relative to base address)
		void OnItemDisplayed(EFortItemType ItemType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetSpecialPreviewActions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750076B40(relative to base address)
		AFortItemPreviewActor GetDisplayedActor(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74DA0BD78(relative to base address)
	};


	// Class FortniteUI.FortPreviewSceneStateTransitionsListener
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPreviewSceneStateTransitionsListener : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPreviewSceneStateTransitionsListener");
			return ret;
		}

		void OnItemsPendingTransitionOut(FStateTransitionControllerHandle& TransitionController); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ItemPreviewScene
	// Inherited from AActor -> UObject
	// Size: 0xE8 (0x378 - 0x290)
	class AItemPreviewScene : public AActor	
	{
	public:
		UChildActorComponent* FocusCameraTargetComponent; // 0x290(0x8)
		AFortCameraTargetPedestal* FocusCameraTargetPedestal; // 0x298(0x8)
		TArray<AFortCameraTargetPedestal*> BackgroundCameraTargetPedestals; // 0x2A0(0x10)
		unsigned char UnknownData00_6[0x20]; // 0x2B0(0x20) UNKNOWN PROPERTY
		FFortItemViewSettings ItemViewSettings; // 0x2D0(0x50)
		TArray<TWeakObjectPtr> PedestalsLoading; // 0x320(0x10)
		unsigned char UnknownData01_7[0x48]; // 0x330(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemPreviewScene");
			return ret;
		}

		void HandleItemShown(UFortAccountItemDefinition* ItemViewed, AFortCameraTargetPedestal* Pedestal); // Flags: Final|Native|Private, Memory Exec: 0x7FF750076FD8(relative to base address)
		AFortCameraTargetPedestal GetFocusCameraTarget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C34224C(relative to base address)
	};


	// Class FortniteUI.FortItemPreviewSceneChanger
	// Inherited from AActor -> UObject
	// Size: 0x160 (0x3F0 - 0x290)
	class AFortItemPreviewSceneChanger : public AActor	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x290(0x10) UNKNOWN PROPERTY
		UCameraComponent* TransitionCameraComponent; // 0x2A0(0x8)
		UChildActorComponent* PrimarySceneComponent; // 0x2A8(0x8)
		UChildActorComponent* SecondarySceneComponent; // 0x2B0(0x8)
		FGameplayTag SceneChangerTag; // 0x2B8(0x4)
		bool bHasEtherealBackground; // 0x2BC(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2BD(0x3) UNKNOWN PROPERTY
		USceneComponent* SceneChangeRootComponent; // 0x2C0(0x8)
		AItemPreviewScene* PrimaryScene; // 0x2C8(0x8)
		AItemPreviewScene* SecondaryScene; // 0x2D0(0x8)
		AItemPreviewScene* SceneTransitioningTo; // 0x2D8(0x8)
		AItemPreviewScene* ActiveScene; // 0x2E0(0x8)
		unsigned char UnknownData02_6[0x58]; // 0x2E8(0x58) UNKNOWN PROPERTY
		float ZoomLevel; // 0x340(0x4)
		unsigned char UnknownData03_6[0x4]; // 0x344(0x4) UNKNOWN PROPERTY
		FRotator PedestalRotationOffset; // 0x348(0x18)
		unsigned char UnknownData04_7[0x90]; // 0x360(0x90) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPreviewSceneChanger");
			return ret;
		}

		void TickZoomLevel(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750078934(relative to base address)
		void TickPedestalRotationOffset(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750078920(relative to base address)
		void OnUpdateBackgroundColor(bool bEnableAutotestBackground); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetZoomLevelSet(float TargetZoomLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetZoomLevelCanceled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetRotationOffsetSet(FRotator& TargetRotationOffset); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTargetRotationOffsetCanceled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetBackgroundMessageText(FText& BackgroundMessageText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewSceneRequested(UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& TransitionOptions); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSoundEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750077A6C(relative to base address)
		AItemPreviewScene GetSceneTransitioningTo(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74C342234(relative to base address)
		AItemPreviewScene GetPrimaryScene(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748B49DF4(relative to base address)
		AFortCameraTargetPedestal GetFocusCameraTarget(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500761D4(relative to base address)
		AItemPreviewScene GetActiveScene(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D789374(relative to base address)
	};


	// Class FortniteUI.FortItemPreviewWorld
	// Inherited from AActor -> UObject
	// Size: 0xB0 (0x340 - 0x290)
	class AFortItemPreviewWorld : public AActor	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x290(0x8) UNKNOWN PROPERTY
		FGameplayTag PreviewSceneChangerTag; // 0x298(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x29C(0x4) UNKNOWN PROPERTY
		UMaterialInstance* BackgroundMaterial; // 0x2A0(0x8)
		UMaterialInstanceDynamic* BackgroundMaterialDynamic; // 0x2A8(0x8)
		UMaterialInstance* FloorMaterial; // 0x2B0(0x8)
		UMaterialInstanceDynamic* FloorMaterialDynamic; // 0x2B8(0x8)
		UChildActorComponent* SceneBackgroundComponent; // 0x2C0(0x8)
		AFortStaticMeshActor* SceneBackground; // 0x2C8(0x8)
		UChildActorComponent* SceneChangerComponent; // 0x2D0(0x8)
		AFortItemPreviewSceneChanger* PreviewSceneChanger; // 0x2D8(0x8)
		FVaultWorldBackgroundData CachedBackgroundData; // 0x2E0(0x58)
		unsigned char UnknownData02_7[0x8]; // 0x338(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPreviewWorld");
			return ret;
		}

		void SetFloorMaterialDynamic(UMaterialInstanceDynamic* InFloorMaterialDynamic); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7493A862C(relative to base address)
		void SetBackgroundMaterialDynamic(UMaterialInstanceDynamic* InBackgroundMaterialDynamic); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7493CD210(relative to base address)
		void OnUpdateMaterialIndex(int32_t MaterialIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateDisplay(bool bShowFloor, bool bShowEffects); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionItemDetails(bool bShowItemDetails); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTransitionBackground(bool bPlayForward, EBackgroundIntensityLevel IntensityTransition); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetupTextureBackground(UTexture2D* LoadedBackgroundTexture, FVaultWorldBackgroundData& BackgroundInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetupMaterialBackground(UMaterialInterface* LoadedBackgroundMaterial, FVaultWorldBackgroundData& BackgroundInfo); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResetIntensityChange(bool bFromLowIntensity); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewSceneBackgroundChildActor(AFortStaticMeshActor* NewActor); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIntensityChange(bool bToLowIntensity); // Flags: RequiredAPI|Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitialBackgroundTransition(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ItemPreviewRotator
	// Inherited from AFortItemPreviewSceneChanger -> AActor -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class AItemPreviewRotator : public AFortItemPreviewSceneChanger	
	{
	public:
		float CameraTransitionLerpDuration; // 0x3F0(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemPreviewRotator");
			return ret;
		}

		void OnCameraTransitionReady(bool bPrimaryToSecondary, UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& Options); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FInterpolatedTransitionCamera GetInterpolatedTransitionCameraPosition(FTransform& TransitionCameraTransform, float TransitionCameraFieldOfView, float ProgressThroughTransitionSecs, float TransitionDurationSecs); // Flags: Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750076390(relative to base address)
		void CameraTransitionComplete(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750075DF8(relative to base address)
	};


	// Class FortniteUI.ItemPreviewSwapper
	// Inherited from AFortItemPreviewSceneChanger -> AActor -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class AItemPreviewSwapper : public AFortItemPreviewSceneChanger	
	{
	public:
		UCurveFloat* CameraTransitionCurve; // 0x3F0(0x8)
		float CameraTransitionLerpDuration; // 0x3F8(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x3FC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemPreviewSwapper");
			return ret;
		}

		void UpdatePreviousSceneTransform(FTransform& RelativeTransform); // Flags: Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF750078A90(relative to base address)
		void UpdateNewSceneTransform(FTransform& RelativeTransform); // Flags: Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF750078964(relative to base address)
		void SwapComplete(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500788E0(relative to base address)
		void OnReadyToSwap(UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& Options); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.LobbyActorDirector
	// Inherited from AActor -> UObject
	// Size: 0x10 (0x2A0 - 0x290)
	class ALobbyActorDirector : public AActor	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x290(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LobbyActorDirector");
			return ret;
		}
	};


	// Class FortniteUI.FortLobbyPlayerPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x5D0 - 0x560)
	class UFortLobbyPlayerPanel : public UFortActivatablePanel	
	{
	public:
		UClass* ManageModalClass; // 0x560(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x568(0x10) UNKNOWN PROPERTY
		UCommonButtonBase* Button_AddFriend; // 0x578(0x8)
		UCommonButtonBase* Button_InviteParty; // 0x580(0x8)
		UCommonButtonBase* Button_Manage; // 0x588(0x8)
		UCommonButtonBase* Button_Close; // 0x590(0x8)
		UFortPlayerBanner* Banner_Player; // 0x598(0x8)
		URichTextBlock* RichText_PlayerName; // 0x5A0(0x8)
		UTextBlock* Text_InviteSent; // 0x5A8(0x8)
		UImage* Image_PlatformIcon; // 0x5B0(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x5B8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLobbyPlayerPanel");
			return ret;
		}

		void OnFriendStatusUpdated(EFortFriendRequestStatus FriendRequestStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClosePanel(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750075E78(relative to base address)
	};


	// Class FortniteUI.AthenaLobbyPlayerPanel
	// Inherited from UFortLobbyPlayerPanel -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x5F8 - 0x5D0)
	class UAthenaLobbyPlayerPanel : public UFortLobbyPlayerPanel	
	{
	public:
		UCommonButtonBase* Button_Mute; // 0x5D0(0x8)
		UCommonButtonBase* Button_ViewProfile; // 0x5D8(0x8)
		UTextBlock* Text_BattlePassTier; // 0x5E0(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x5E8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLobbyPlayerPanel");
			return ret;
		}

		void OnIsMutedUpdated(bool bIsMuted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHasBattlePassUpdated(bool bHasBattlePass); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSquadPedestalGroup
	// Inherited from AActor -> UObject
	// Size: 0x38 (0x2C8 - 0x290)
	class AAthenaSquadPedestalGroup : public AActor	
	{
	public:
		ESubGame UsedSubgame; // 0x290(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x291(0x3) UNKNOWN PROPERTY
		int32_t MonitoredSquadIdx; // 0x294(0x4)
		TArray<AFortTeamMemberPedestal*> MemberPedestals; // 0x298(0x10)
		USceneComponent* PedestalChildrenRoot; // 0x2A8(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x2B0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSquadPedestalGroup");
			return ret;
		}
	};


	// Class FortniteUI.CampaignLobbyPlayerPanel
	// Inherited from UFortLobbyPlayerPanel -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x5E8 - 0x5D0)
	class UCampaignLobbyPlayerPanel : public UFortLobbyPlayerPanel	
	{
	public:
		UCommonButtonLegacy* Button_ShowHeadAccessory; // 0x5D0(0x8)
		UCommonButtonLegacy* Button_ShowBackpack; // 0x5D8(0x8)
		UCommonNumericTextBlock* Number_PowerLevel; // 0x5E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CampaignLobbyPlayerPanel");
			return ret;
		}

		void OnShowHeadAccessoryChanged(bool bShowHeadAccessory); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowBackbackChanged(bool bShowBackpack); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLobbyAddPlayer
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x1430 - 0x1408)
	class UFortLobbyAddPlayer : public UFortTeamMemberEntryBase	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x1408(0x18) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_EmptySlot; // 0x1420(0x8)
		UFortPartySuggestionButton* PartySuggestion; // 0x1428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLobbyAddPlayer");
			return ret;
		}

		void HandleOwningPedestalIsHoveredChanged(bool bIsSelected); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF75007711C(relative to base address)
	};


	// Class FortniteUI.FortPartySuggestionButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortPartySuggestionButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x13E0(0x18) UNKNOWN PROPERTY
		UFortSocialNameTextBlock* Text_SocialName; // 0x13F8(0x8)
		UCommonTextBlock* Text_Description; // 0x1400(0x8)
		UCommonTextBlock* Text_ActionText; // 0x1408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPartySuggestionButton");
			return ret;
		}

		void UpdateDisplayInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009F54C(relative to base address)
		void OnSuggestionChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSuggestionAccepted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewSuggestionAdded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayInfoUpdated(bool bIsInvited, bool bIsPlaying); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDismissSuggestion(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSuggestionAccepted(int32_t PlayerId); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009F140(relative to base address)
		void HandleLobbyStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EB00(relative to base address)
	};


	// Class FortniteUI.FortRadialPicker
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortRadialPicker : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x3F0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRadialPicker");
			return ret;
		}

		void NotifyInitializePicker(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF749BC767C(relative to base address)
		void InitializePicker(EFortPickerMode PickerMode, int32_t InitalOption); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BroadcastPanelClosed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009E698(relative to base address)
	};


	// Class FortniteUI.FortTeamMemberXPBoostInfo
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1420 - 0x1408)
	class UFortTeamMemberXPBoostInfo : public UFortTeamMemberEntryBase	
	{
	public:
		UPanelWidget* Panel_BattlePassOwnerInfo; // 0x1408(0x8)
		UTextBlock* Text_BattlePassSelfXPBoost; // 0x1410(0x8)
		UTextBlock* Text_EventXPBoost; // 0x1418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberXPBoostInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortTeamMemberPedestal
	// Inherited from AFortItemPlacementActor -> AActor -> UObject
	// Size: 0x118 (0x578 - 0x460)
	class AFortTeamMemberPedestal : public AFortItemPlacementActor	
	{
	public:
		TArray<FCachedComponentMaterials> CachedComponentMaterials; // 0x460(0x10)
		AAthenaSquadPedestalGroup* OwningPedestalGroup; // 0x470(0x8)
		int32_t AssignedMemberIndex; // 0x478(0x4)
		int32_t VisualOrderIndex; // 0x47C(0x4)
		UWidgetComponent* WidgetComponent_MemberInfo; // 0x480(0x8)
		UWidgetComponent* WidgetComponent_FillOpenSlot; // 0x488(0x8)
		UWidgetComponent* WidgetComponent_BattlePassInfo; // 0x490(0x8)
		UWidgetComponent* WidgetComponent_CompletedFeatInfo; // 0x498(0x8)
		UStaticMeshComponent* PlaceholderMesh; // 0x4A0(0x8)
		TArray<UFortTeamMemberEntryBase*> MemberWidgetEntries; // 0x4A8(0x10)
		unsigned char UnknownData00_6[0x10]; // 0x4B8(0x10) UNKNOWN PROPERTY
		UFortHero* MemberHeroItem; // 0x4C8(0x8)
		unsigned char UnknownData01_6[0x18]; // 0x4D0(0x18) UNKNOWN PROPERTY
		float LocalLoadoutFailureTimeout; // 0x4E8(0x4)
		bool bTimeToPawnLoadedEnabled; // 0x4EC(0x1)
		unsigned char UnknownData02_7[0x8B]; // 0x4ED(0x8B) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberPedestal");
			return ret;
		}

		bool SetNameplateMatchmakingStatus(EPedestalNameplateMatchmakingStatus InNameplateMatchmakingStatus); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009F39C(relative to base address)
		void OnTeamMemberSet(bool bHasValidTeamMember); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetSuggestionHeight(float Height); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetNameplateHeight(float Height); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPedestalIsPopulatedChanged(bool bIsPopulated, bool bOwningSquadContainsLocalPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPartySuggestionChanged(FUniqueNetIdRepl SuggestedSocialUserId); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOwningPedestalGroupEstablished(int32_t SquadIdx, bool bSquadHasLocalPlayer, bool bIsPopulated); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewSquadEstablished(bool bMultipleSquadsPopulated, bool bOwningSquadContainsLocalPlayer, FAthenaTeamDisplayInfo& OwningSquadStyle); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsCurrentlyInMatchChanged(bool bIsInMatch); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameReadinessChanged(EGameReadiness GameReadiness); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisconnectedToCampaignLobby(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnConnectedToCampaignLobby(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAvatarChanged(UTexture2D* AvatarImage, FColor AvatarBackground, FColor HighlightColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsValidTeamMember(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749478208(relative to base address)
		bool IsInLocalSquadGroup(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF748B4CE28(relative to base address)
		bool IsInFrontEnd(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009F2C8(relative to base address)
		bool IsCurrentMemberLocal(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7496B4744(relative to base address)
		void InitializePlaceholderMesh(UStaticMeshComponent* PlaceholderMesh); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74F0ABB50(relative to base address)
		void HandleReturnFromNameplateContextMenu(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF75009F090(relative to base address)
		void HandlePlaceholderMeshInputTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex, UPrimitiveComponent* TouchedComponent); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EF40(relative to base address)
		void HandlePlaceholderMeshEndCursorOver(UPrimitiveComponent* TouchedComponent); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EEC0(relative to base address)
		void HandlePlaceholderMeshClicked(UPrimitiveComponent* TouchedComponent, FKey ButtonPressed); // Flags: Final|Native|Private, Memory Exec: 0x7FF750077220(relative to base address)
		void HandlePlaceholderMeshBeginCursorOver(UPrimitiveComponent* TouchedComponent); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EE40(relative to base address)
		void HandleOnAnimInstanceEventReceived(UFortAnimInputEvent* AnimInputEvent); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009EDAC(relative to base address)
		bool HandleNavigationUp(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HandleNavigationDown(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FString GetTeamMemberDisplayName(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009E888(relative to base address)
		FUniqueNetIdRepl GetSuggestedSocialUserId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009E830(relative to base address)
		int32_t GetCurrentTeamSize(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7472A8BD4(relative to base address)
		FUniqueNetIdRepl GetCurrentTeamMemberUniqueId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009E744(relative to base address)
		void ClearOverrideMaterial(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009E6D8(relative to base address)
		void ApplyUniformOverrideMaterial(UMaterialInterface* OverrideMaterial); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009E5AC(relative to base address)
	};


	// Class FortniteUI.FortCollectionDataEntrySocialTag
	// Inherited from UFortCollectionDataEntry -> UObject
	// Size: 0x28 (0x58 - 0x30)
	class UFortCollectionDataEntrySocialTag : public UFortCollectionDataEntry	
	{
	public:
		FText EntryName; // 0x30(0x10)
		ESocialTagCategory TagCategory; // 0x40(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x41(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCollectionDataEntrySocialTag");
			return ret;
		}
	};


	// Class FortniteUI.FortCollectionDataSocialTag
	// Inherited from UFortCollectionData -> UDataAsset -> UObject
	// Size: 0x0 (0x90 - 0x90)
	class UFortCollectionDataSocialTag : public UFortCollectionData	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCollectionDataSocialTag");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialListUserEntryBase
	// Inherited from USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1450 - 0x1430)
	class UFortSocialListUserEntryBase : public USocialListUserEntryBase	
	{
	public:
		UImage* Image_EncourageEpicFriend; // 0x1430(0x8)
		UCommonRichTextBlock* Text_LastInteraction; // 0x1438(0x8)
		UCommonRichTextBlock* Text_LastInteraction_Hover; // 0x1440(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1448(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialListUserEntryBase");
			return ret;
		}
	};


	// Class FortniteUI.FortConnectionsUserListEntry
	// Inherited from UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1480 - 0x1450)
	class UFortConnectionsUserListEntry : public UFortSocialListUserEntryBase	
	{
	public:
		UCommonRichTextBlock* Text_MutualFriends; // 0x1450(0x8)
		UCommonRichTextBlock* Text_MutualFriends_Hover; // 0x1458(0x8)
		UFortSocialAvatarIcon* Avatar_MemberIcon; // 0x1460(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x1468(0x8)
		URebootRallyIcon* WBP_RebootRallyIcon; // 0x1470(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1478(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortConnectionsUserListEntry");
			return ret;
		}

		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortFriendLinkPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortFriendLinkPanel : public UFortActivatablePanel	
	{
	public:
		UCommonButtonLegacy* Button_ShareButton; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFriendLinkPanel");
			return ret;
		}

		void OnShareButtonTypeSet(EShareButtonType Type); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCopiedToClipboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortJoinablePartyActionMenu
	// Inherited from USocialInteractionMenu -> USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x4F0 - 0x498)
	class UFortJoinablePartyActionMenu : public USocialInteractionMenu	
	{
	public:
		FColor SecondNameColor; // 0x498(0x4)
		uint32_t SecondNameFontSize; // 0x49C(0x4)
		char MaxNamesToDisplay; // 0x4A0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x4A1(0x3) UNKNOWN PROPERTY
		FColor InviteTextColor; // 0x4A4(0x4)
		FColor DimmerInviteColor; // 0x4A8(0x4)
		FColor DimmerDefaultColor; // 0x4AC(0x4)
		FText OtherMemberNamesFormat; // 0x4B0(0x10)
		UCommonRichTextBlock* RichText_DisplayNames; // 0x4C0(0x8)
		UFortJoinablePartyPortraitsDisplay* PartyPortraits; // 0x4C8(0x8)
		UCommonRichTextBlock* Text_PartyPresence; // 0x4D0(0x8)
		UDynamicEntryBox* EntryBox_PartyMembers; // 0x4D8(0x8)
		UScrollBox* ScrollBox_PartyMembers; // 0x4E0(0x8)
		UCommonButtonBase* SidebarBackButton; // 0x4E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortJoinablePartyActionMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortJoinablePartyListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x14A0 - 0x1408)
	class UFortJoinablePartyListEntry : public USocialListInteractableEntryBase	
	{
	public:
		FColor InviteTextColor; // 0x1408(0x4)
		FColor DimmerInviteColor; // 0x140C(0x4)
		FColor DimmerDefaultColor; // 0x1410(0x4)
		uint32_t SecondNameFontSize; // 0x1414(0x4)
		char MaxNamesToDisplay; // 0x1418(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x1419(0x3) UNKNOWN PROPERTY
		FColor SidebarPartyPresenceTextColorDefault; // 0x141C(0x4)
		FColor SidebarJoinablePartyTextColorDefault; // 0x1420(0x4)
		FColor SidebarFriendNameTextColorDefault; // 0x1424(0x4)
		FColor SidebarOtherMembersTextColorDefault; // 0x1428(0x4)
		FColor SidebarPartyPresenceTextColorHover; // 0x142C(0x4)
		FColor SidebarJoinablePartyTextColorHover; // 0x1430(0x4)
		FColor SidebarFriendNameTextColorHover; // 0x1434(0x4)
		FColor SidebarOtherMembersTextColorHover; // 0x1438(0x4)
		uint32_t SidebarOtherMembersFontSize; // 0x143C(0x4)
		int32_t DisplayNameMaxChars; // 0x1440(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x1444(0x4) UNKNOWN PROPERTY
		UCommonRichTextBlock* Text_DisplayNames; // 0x1448(0x8)
		UCommonRichTextBlock* Text_PartyPresence; // 0x1450(0x8)
		UCommonRichTextBlock* Text_JoinableParty; // 0x1458(0x8)
		UFortJoinablePartyPortraitsDisplay* PartyPortraitsDisplay; // 0x1460(0x8)
		URebootRallyIcon* WBP_RebootRallyIcon; // 0x1468(0x8)
		UCommonRichTextBlock* Text_DisplayNames_Hover; // 0x1470(0x8)
		UCommonRichTextBlock* Text_PartyPresence_Hover; // 0x1478(0x8)
		UCommonRichTextBlock* Text_JoinableParty_Hover; // 0x1480(0x8)
		USidebarSocialTagListBase* SocialTagList; // 0x1488(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_PartyPresenceText; // 0x1490(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x1498(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortJoinablePartyListEntry");
			return ret;
		}

		void OnPartyPresenceTextUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInviteStatusUpdated(bool bIsInvited); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ForcePartyItemUpdate(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009E730(relative to base address)
	};


	// Class FortniteUI.FortJoinablePartyPortrait
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x2F0 - 0x2B0)
	class UFortJoinablePartyPortrait : public UUserWidget	
	{
	public:
		UCommonVisibilitySwitcher* CommonSwitcher_PortraitState; // 0x2B0(0x8)
		UFortSocialAvatarIcon* Avatar_MemberIcon; // 0x2B8(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x2C0(0x8)
		UOverlay* Overlay_Portrait; // 0x2C8(0x8)
		UOverlay* Overlay_RemainingPlayersValue; // 0x2D0(0x8)
		UCommonRichTextBlock* Text_RemainingPlayers; // 0x2D8(0x8)
		FText RemainingPlayersFormat; // 0x2E0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortJoinablePartyPortrait");
			return ret;
		}

		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortJoinablePartyPortraitsDisplay
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortJoinablePartyPortraitsDisplay : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2B0(0x10) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_PartyPortraits; // 0x2C0(0x8)
		UFortJoinablePartyPortrait* PartyPortrait_PartyLeader; // 0x2C8(0x8)
		int32_t MaxDisplayedUsers; // 0x2D0(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x2D4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortJoinablePartyPortraitsDisplay");
			return ret;
		}
	};


	// Class FortniteUI.FortLeavePartyListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortLeavePartyListEntry : public USocialListInteractableEntryBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeavePartyListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortLeavePartyMenu
	// Inherited from USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x440 - 0x430)
	class UFortLeavePartyMenu : public USocialActionMenu	
	{
	public:
		UCommonButtonLegacy* Button_Confirm; // 0x430(0x8)
		UCommonButtonLegacy* Button_Decline; // 0x438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeavePartyMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortLFGFilterCheckboxEntryWidget
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1420 - 0x1408)
	class UFortLFGFilterCheckboxEntryWidget : public USocialListInteractableEntryBase	
	{
	public:
		USocialTagWidget* SocialTagWidget; // 0x1408(0x8)
		UFortSidebarCheckboxWidget* CheckBox; // 0x1410(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLFGFilterCheckboxEntryWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortLocalUserEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UFortLocalUserEntry : public UCommonButtonLegacy	
	{
	public:
		UClass* LocalUserSettingsMenuClass; // 0x13E0(0x8)
		UFortLocalUserSettingsMenu* LocalUserSettingsMenu; // 0x13E8(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x13F0(0x18) UNKNOWN PROPERTY
		UFortSocialAvatarIcon* SocialAvatarIcon; // 0x1408(0x8)
		UImage* Image_Crown; // 0x1410(0x8)
		UTextBlock* Text_UserName; // 0x1418(0x8)
		UTextBlock* Text_VoiceChannel; // 0x1420(0x8)
		UMenuAnchor* MenuAnchor_LocalUserSettingMenu; // 0x1428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalUserEntry");
			return ret;
		}

		void OnOnlineStatusChanged(ELocalUserOnlineStatus OnlineStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMenuOpenChanged(bool bIsOpen); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EB90(relative to base address)
		UUserWidget HandleGetMenuContent(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74D8BAA18(relative to base address)
	};


	// Class FortniteUI.FortLocalUserSettingButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortLocalUserSettingButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UCommonRichTextBlock* RichText_DisplayName; // 0x13E8(0x8)
		UImage* Image_CurrentSelectedArrow; // 0x13F0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalUserSettingButton");
			return ret;
		}
	};


	// Class FortniteUI.FortLocalUserSettingTitleButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortLocalUserSettingTitleButton : public UCommonButtonLegacy	
	{
	public:
		UCommonRichTextBlock* RichText_Title; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalUserSettingTitleButton");
			return ret;
		}

		void OnExpansionChanged(bool bIsExpanded); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLocalUserSettingsSection
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x330 - 0x2B0)
	class UFortLocalUserSettingsSection : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x70]; // 0x2B0(0x70) UNKNOWN PROPERTY
		UFortLocalUserSettingTitleButton* TitleButton; // 0x320(0x8)
		UDynamicEntryBox* EntryBox_Options; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalUserSettingsSection");
			return ret;
		}
	};


	// Class FortniteUI.FortLocalUserSettingsMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UFortLocalUserSettingsMenu : public UCommonActivatableWidget	
	{
	public:
		FColor SettingTextColor; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		UMenuAnchor* OwningMenuAnchor; // 0x3F8(0x8)
		UFortLocalUserSettingsSection* Section_OnlineStatus; // 0x400(0x8)
		UFortLocalUserSettingsSection* Section_Privacy; // 0x408(0x8)
		UFortLocalUserSettingsSection* Section_Participation; // 0x410(0x8)
		UFortLocalUserSettingsSection* Section_VoiceChannel; // 0x418(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x420(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalUserSettingsMenu");
			return ret;
		}

		void OnFocused(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMenuAnchorOpenChanged(bool bIsOpen); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EB14(relative to base address)
	};


	// Class FortniteUI.FortMissedInvitesActionMenu
	// Inherited from USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x438 - 0x430)
	class UFortMissedInvitesActionMenu : public USocialActionMenu	
	{
	public:
		UCommonButtonLegacy* Button_NeverShowAgain; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissedInvitesActionMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortMissedInvitesListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortMissedInvitesListEntry : public USocialListInteractableEntryBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissedInvitesListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortMultiFriendActionListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortMultiFriendActionListEntry : public USocialListInteractableEntryBase	
	{
	public:
		EMultiFriendAction Action; // 0x1408(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x1409(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultiFriendActionListEntry");
			return ret;
		}

		void OnActionUpdated(EMultiFriendAction InAction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMultiFriendActionMenu
	// Inherited from USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x448 - 0x430)
	class UFortMultiFriendActionMenu : public USocialActionMenu	
	{
	public:
		UCommonButtonBase* Button_Confirm; // 0x430(0x8)
		UCommonButtonBase* Button_Decline; // 0x438(0x8)
		EMultiFriendAction Action; // 0x440(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x441(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultiFriendActionMenu");
			return ret;
		}

		void OnActionUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMutualFriendSocialUserListEntry
	// Inherited from UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1470 - 0x1450)
	class UFortMutualFriendSocialUserListEntry : public UFortSocialListUserEntryBase	
	{
	public:
		UFortSocialAvatarIcon* Avatar_MemberIcon; // 0x1450(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x1458(0x8)
		URebootRallyIcon* WBP_RebootRallyIcon; // 0x1460(0x8)
		UBorder* Border_Background; // 0x1468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMutualFriendSocialUserListEntry");
			return ret;
		}

		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortOwningPlayerSocialNameTextBlock
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortOwningPlayerSocialNameTextBlock : public UUserWidget	
	{
	public:
		USocialNameTextBlock* Text_SocialName; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOwningPlayerSocialNameTextBlock");
			return ret;
		}
	};


	// Class FortniteUI.FortPresenceUserListEntry
	// Inherited from UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1490 - 0x1450)
	class UFortPresenceUserListEntry : public UFortSocialListUserEntryBase	
	{
	public:
		UFortSocialAvatarIcon* Avatar_MemberIcon; // 0x1450(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x1458(0x8)
		URebootRallyIcon* WBP_RebootRallyIcon; // 0x1460(0x8)
		UFortSocialEventRSVPWidget* BuffetInfo; // 0x1468(0x8)
		UBorder* Border_OnlineStatusIndicator; // 0x1470(0x8)
		UBorder* Border_Background; // 0x1478(0x8)
		UBorder* Border_Highlight; // 0x1480(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_RichPresence; // 0x1488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPresenceUserListEntry");
			return ret;
		}

		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPartyMemberListEntry
	// Inherited from UFortPresenceUserListEntry -> UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x14B0 - 0x1490)
	class UFortPartyMemberListEntry : public UFortPresenceUserListEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1490(0x8) UNKNOWN PROPERTY
		UImage* Image_Crown; // 0x1498(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x14A0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x14A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPartyMemberListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortReferFriendActionMenu
	// Inherited from USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x438 - 0x430)
	class UFortReferFriendActionMenu : public USocialActionMenu	
	{
	public:
		UCommonButtonBase* Button_Hide; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReferFriendActionMenu");
			return ret;
		}

		void OnRequestOriginChanged(EReferFriendOrigin RequestOrigin); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortReferFriendListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortReferFriendListEntry : public USocialListInteractableEntryBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReferFriendListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialSidebarButtonBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UFortSocialSidebarButtonBase : public UCommonButtonLegacy	
	{
	public:
		EFortSidebarButtonType ButtonType; // 0x13E0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x13E1(0x3) UNKNOWN PROPERTY
		FLinearColor Color_SkewBox_Selected; // 0x13E4(0x10)
		FLinearColor Color_SkewBox_Hover; // 0x13F4(0x10)
		unsigned char UnknownData01_6[0x4]; // 0x1404(0x4) UNKNOWN PROPERTY
		UBorder* Border_SkewBox; // 0x1408(0x8)
		int32_t NumberToShow; // 0x1410(0x4)
		bool bShowBang; // 0x1414(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x1415(0x3) UNKNOWN PROPERTY
		UFortBangWrapper_NUI* BangWrapper; // 0x1418(0x8)
		unsigned char UnknownData03_7[0x8]; // 0x1420(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialSidebarButtonBase");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialSidebarButton
	// Inherited from UFortSocialSidebarButtonBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x14B0 - 0x1428)
	class UFortSocialSidebarButton : public UFortSocialSidebarButtonBase	
	{
	public:
		FLinearColor Color_ContentSelected; // 0x1428(0x10)
		FLinearColor Color_ContentUnselected; // 0x1438(0x10)
		FLinearColor Color_ContentHovered; // 0x1448(0x10)
		UImage* Image_TabIcon; // 0x1458(0x8)
		UImage* Image_TabIcon_Selected; // 0x1460(0x8)
		UCommonTextBlock* Text_Number; // 0x1468(0x8)
		UCommonTextBlock* Text_Number_Selected; // 0x1470(0x8)
		UScaleBox* ScaleBox_Number; // 0x1478(0x8)
		UTexture2D* Icon; // 0x1480(0x8)
		UTexture2D* Icon_FeatureDisabled; // 0x1488(0x8)
		UMaterialInstance* Material_Icon; // 0x1490(0x8)
		UMaterialInstance* Material_Icon_FeatureDisabled; // 0x1498(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x14A0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialSidebarButton");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarButtons
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x128 (0x400 - 0x2D8)
	class UFortSidebarButtons : public UCommonUserWidget	
	{
	public:
		UFortSocialSidebarButton* Button_PartyUp; // 0x2D8(0x8)
		UFortSocialSidebarButton* Button_FindFriends; // 0x2E0(0x8)
		UFortSocialSidebarButton* Button_VoiceChat; // 0x2E8(0x8)
		UFortSocialSidebarButton* Button_Settings; // 0x2F0(0x8)
		UFortSocialSidebarButton* Button_More; // 0x2F8(0x8)
		UFortSocialSidebarButton* Button_Exit; // 0x300(0x8)
		UFortSocialSidebarLocalUserButton* Button_UserProfile; // 0x308(0x8)
		UFortSocialSidebarButton* Button_Tags; // 0x310(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_SocialButtons; // 0x318(0x8)
		UCommonButtonLegacy* Button_CurrentlyHovered; // 0x320(0x8)
		UWidget* Button_CurrentlyFocused; // 0x328(0x8)
		unsigned char UnknownData00_6[0x48]; // 0x330(0x48) UNKNOWN PROPERTY
		FDataTableRowHandle NextTabInputAction; // 0x378(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x388(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle PreviousTabInputAction; // 0x390(0x10)
		unsigned char UnknownData02_7[0x60]; // 0x3A0(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarButtons");
			return ret;
		}

		void HandleSettingsSavedTabChanged(bool IsTabSaved); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009F0AC(relative to base address)
		void HandlePrevTabAction_STW(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75009F000(relative to base address)
		void HandleNextTabAction_STW(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75009ED30(relative to base address)
		void HandleButtonGroupOnHoveredChanged(UCommonButtonLegacy* HoveredButton, int32_t ButtonIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009E9D0(relative to base address)
		UWidget GetSelectedSidebarButton(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009E804(relative to base address)
		UWidget GetHoveredSidebarButton(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E66C4A8(relative to base address)
		UWidget GetFocusedSidebarButton(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F16D900(relative to base address)
	};


	// Class FortniteUI.FortSidebarCheckboxWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortSidebarCheckboxWidget : public UCommonUserWidget	
	{
	public:
		UButton* CheckButton; // 0x2D8(0x8)
		UWidgetSwitcher* Switcher_CheckBox; // 0x2E0(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2E8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCheckboxWidget");
			return ret;
		}

		void HandleCheckboxClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009EA94(relative to base address)
		void BP_ToggleCheckbox(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarCollectionListEntryEditTags
	// Inherited from UAthenaCollectionListEntry -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1480 - 0x1470)
	class UFortSidebarCollectionListEntryEditTags : public UAthenaCollectionListEntry	
	{
	public:
		UImage* Image_CheckMark; // 0x1470(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1478(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionListEntryEditTags");
			return ret;
		}

		bool GetIsCheckmarkVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75009E7E0(relative to base address)
		void BP_OnCollectionListItemSet(FText& TagName, ESocialTagCategory& TagCategory); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCollectionListItemCheckmarkChanged(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarCollectionListGroupEntry
	// Inherited from UAthenaCollectionListGroupEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x368 - 0x360)
	class UFortSidebarCollectionListGroupEntry : public UAthenaCollectionListGroupEntry	
	{
	public:
		int32_t MaxNumberOfElements; // 0x360(0x4)
		int32_t MaxNumberOfElements_Mobile; // 0x364(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionListGroupEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarCollectionListView
	// Inherited from UAthenaCollectionListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x450 - 0x438)
	class UFortSidebarCollectionListView : public UAthenaCollectionListView	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x438(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionListView");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarCollectionScreenContainerEditTags
	// Inherited from UAthenaCollectionScreenContainer -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x588 - 0x528)
	class UFortSidebarCollectionScreenContainerEditTags : public UAthenaCollectionScreenContainer	
	{
	public:
		USidebarTagsEditorHeaderWidget* HeaderWidget; // 0x528(0x8)
		UCommonActivatableWidget* TagsInfoTooltip; // 0x530(0x8)
		UHorizontalBox* HBox_AddTag; // 0x538(0x8)
		UHorizontalBox* HBox_ReplaceTag; // 0x540(0x8)
		UHorizontalBox* HBox_RemoveTag; // 0x548(0x8)
		UCommonButtonBase* RemoveTagButton; // 0x550(0x8)
		UCommonButtonBase* Button_Back; // 0x558(0x8)
		UCommonButtonBase* Button_TouchBack; // 0x560(0x8)
		bool bPurgeSystemTagsCacheOnCheckForReady; // 0x568(0x1)
		unsigned char UnknownData00_7[0x1F]; // 0x569(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionScreenContainerEditTags");
			return ret;
		}

		void UpdateInputActionVisibility(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF75009F560(relative to base address)
		void ToggleTagsInfoTooltip(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCollectionTabTitleChange(ESocialTagCategory& TagCategory); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarCollectionScreenContainerTabButton
	// Inherited from UAthenaCollectionScreenContainerTabButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1440 - 0x1438)
	class UFortSidebarCollectionScreenContainerTabButton : public UAthenaCollectionScreenContainerTabButton	
	{
	public:
		URichTextBlock* Text_TabTitle; // 0x1438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionScreenContainerTabButton");
			return ret;
		}

		void BP_OnTagCategoryChange(ESocialTagCategory InTagCategory); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarCollectionScreenEditTags
	// Inherited from UAthenaCollectionScreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x6A8 - 0x638)
	class UFortSidebarCollectionScreenEditTags : public UAthenaCollectionScreenBase	
	{
	public:
		UFortCollectionDataSocialTag* SocialTagCollectionData; // 0x638(0x8)
		ESocialTagCategory SocialTagCategory; // 0x640(0x1)
		unsigned char UnknownData00_7[0x67]; // 0x641(0x67) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarCollectionScreenEditTags");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarExitPopup
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x4C8 - 0x3F0)
	class UFortSidebarExitPopup : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		bool bIsHidden; // 0x400(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x401(0x7) UNKNOWN PROPERTY
		UPanelWidget* PanelWidget_MainMenuButtons; // 0x408(0x8)
		UPanelWidget* PanelWidget_ExpressYourSupportButtons; // 0x410(0x8)
		UFortExpressYourSupportThumbsUpButton* Button_SupportCreator; // 0x418(0x8)
		UFortExpressYourSupportFavoriteButton* Button_Favorite; // 0x420(0x8)
		UPanelWidget* ConfirmationButtons; // 0x428(0x8)
		UCommonButtonBase* Button_LeaveExperience; // 0x430(0x8)
		UFortMainMenuLeaveButtonWrapper* Button_AthenaMainMenuLeave; // 0x438(0x8)
		UCommonButtonBase* Button_Logout; // 0x440(0x8)
		UCommonButtonBase* Button_ExitGame; // 0x448(0x8)
		UCommonButtonBase* Button_Yes; // 0x450(0x8)
		UCommonButtonBase* Button_No; // 0x458(0x8)
		UCommonTextBlock* Text_ActivityName; // 0x460(0x8)
		UCommonRichTextBlock* Text_NoEnabledButtons; // 0x468(0x8)
		UCommonActivatableWidgetSwitcher* WidgetSwitcher; // 0x470(0x8)
		UCommonButtonLegacy* Button_BackBoard; // 0x478(0x8)
		UWidgetAnimation* ShowPopupAnim; // 0x480(0x8)
		UWidgetAnimation* HidePopupAnim; // 0x488(0x8)
		ESidebarExitActions SelectedAction; // 0x490(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x491(0x7) UNKNOWN PROPERTY
		FText AthenaConfirmationMessageText; // 0x498(0x10)
		unsigned char UnknownData03_6[0x18]; // 0x4A8(0x18) UNKNOWN PROPERTY
		ESidebarExitConfirmationNavBehavior ConfirmationBtnsSelection; // 0x4C0(0x1)
		unsigned char UnknownData04_7[0x7]; // 0x4C1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarExitPopup");
			return ret;
		}

		void UpdateNoEnabledButtonsText(bool bAllowLogout, bool bAllowQuit); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowConfirmationView(ESidebarExitActions ActionToConfirm); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009F4B8(relative to base address)
		void Show(bool bTakeFocus); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009F438(relative to base address)
		void Hide(bool bDoImmediately); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009F248(relative to base address)
		void HandleTransitioningChanged(bool bTransitioning); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75009F1C8(relative to base address)
		void HandleShowPopupAnimFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75009F12C(relative to base address)
		void HandleHidePopupAnimFinished(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75009EAD8(relative to base address)
		void HandleActiveWidgetIndexChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75009E90C(relative to base address)
		void ConfirmSelectedAction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009E6EC(relative to base address)
		void CancelConfirmationView(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009E6C4(relative to base address)
	};


	// Class FortniteUI.FortSidebarLfgFilterHeaderEntry
	// Inherited from USocialUserListHeaderEntry -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1420 - 0x1408)
	class UFortSidebarLfgFilterHeaderEntry : public USocialUserListHeaderEntry	
	{
	public:
		UCommonActionWidget* FocusedInputActionWidget; // 0x1408(0x8)
		UCommonActionWidget* UnfocusedInputActionWidget; // 0x1410(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarLfgFilterHeaderEntry");
			return ret;
		}

		void SetFocusedInputDisplay(bool bIsShown); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75009F31C(relative to base address)
	};


	// Class FortniteUI.FortSidebarLfgState2ListEntry
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortSidebarLfgState2ListEntry : public USocialListInteractableEntryBase	
	{
	public:
		UCommonTextBlock* ButtonText; // 0x1408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarLfgState2ListEntry");
			return ret;
		}

		void OnStateChanged(ELfgState NewLfgState, ESlateVisibility BodyVisibility, FText& StateText, FText& StateButton); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarLfgState2Widget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortSidebarLfgState2Widget : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button; // 0x3F0(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x3F8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarLfgState2Widget");
			return ret;
		}

		void OnStateChanged(ELfgState NewLfgState, ESlateVisibility BodyVisibility, FText& StateText, FText& StateButton); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarOnboardTooltipWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x450 - 0x3F0)
	class UFortSidebarOnboardTooltipWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UCommonButtonLegacy* Dismiss_Button; // 0x3F8(0x8)
		UCommonButtonLegacy* OtherAction_Button; // 0x400(0x8)
		int32_t SecondsBeforeClosing; // 0x408(0x4)
		ESocialTutorialType SocialTutorial; // 0x40C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x40D(0x3) UNKNOWN PROPERTY
		FGameplayTag OnboardingSeenId; // 0x410(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x414(0x4) UNKNOWN PROPERTY
		FVector2D PositionController; // 0x418(0x10)
		FVector2D PositionKeyboardMouse; // 0x428(0x10)
		unsigned char UnknownData03_7[0x18]; // 0x438(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarOnboardTooltipWidget");
			return ret;
		}

		bool ShouldShowOnboarding(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749656138(relative to base address)
		void OnShowTooltip(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEndTooltip(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyCloseAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009F2EC(relative to base address)
		void HandleOtherActionClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF75009EE2C(relative to base address)
		void HandleDismissClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF75009EAC4(relative to base address)
	};


	// Class FortniteUI.FortSidebarPanelEditProfile
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UFortSidebarPanelEditProfile : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelEditProfile");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelExit
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x430 - 0x3F0)
	class UFortSidebarPanelExit : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UPanelWidget* PanelWidget_MainMenuButtons; // 0x400(0x8)
		UFortMainMenuButton* Button_LeaveExperience; // 0x408(0x8)
		UFortMainMenuLeaveButtonWrapper* Button_AthenaMainMenuLeave; // 0x410(0x8)
		UFortMainMenuButton* Button_Logout; // 0x418(0x8)
		UFortMainMenuButton* Button_ExitGame; // 0x420(0x8)
		UCommonRichTextBlock* Text_NoEnabledButtons; // 0x428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelExit");
			return ret;
		}

		void UpdateNoEnabledButtonsText(bool bAllowLogout, bool bAllowQuit); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLeaveExperienceClicked(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75009EAEC(relative to base address)
	};


	// Class FortniteUI.FortSidebarPanelWithTree
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortSidebarPanelWithTree : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		TArray<FFortUserListHeaderInfo> ListHeaderInfos; // 0x400(0x10)
		TArray<UFortSocialUserTreeView*> OwningTreeViews; // 0x410(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelWithTree");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelFindFriends
	// Inherited from UFortSidebarPanelWithTree -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x490 - 0x420)
	class UFortSidebarPanelFindFriends : public UFortSidebarPanelWithTree	
	{
	public:
		UFortSocialUserTreeView* UserTree_FindFriends; // 0x420(0x8)
		UFortFriendSearchButton* Button_Search_FindFriends; // 0x428(0x8)
		UCommonVisibilitySwitcher* Switcher_FindFriends; // 0x430(0x8)
		UFortSocialUserTreeView* UserTree_FindFriends_SearchResults; // 0x438(0x8)
		UCommonTextBlock* Text_SearchingForUsers; // 0x440(0x8)
		UCommonTextBlock* Text_SearchFailed; // 0x448(0x8)
		unsigned char UnknownData00_7[0x40]; // 0x450(0x40) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelFindFriends");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelPartyUp
	// Inherited from UFortSidebarPanelWithTree -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x440 - 0x420)
	class UFortSidebarPanelPartyUp : public UFortSidebarPanelWithTree	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x420(0x10) UNKNOWN PROPERTY
		UFortSidebarSpecialNavWidgetBase* SpecialNavWidget; // 0x430(0x8)
		UFortSocialUserTreeView* UserTree_PartyUp; // 0x438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelPartyUp");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelReboot
	// Inherited from UFortSidebarPanelWithTree -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x488 - 0x420)
	class UFortSidebarPanelReboot : public UFortSidebarPanelWithTree	
	{
	public:
		TWeakObjectPtr<UClass*> SoftMissingFriendsModalClass; // 0x420(0x20)
		UCommonButtonBase* SidebarBackButton; // 0x440(0x8)
		UFortSidebarPanelRebootHeader* Header; // 0x448(0x8)
		URebootRallyTimerBase* WBP_RebootRallyTimer; // 0x450(0x8)
		UFortSocialUserTreeView* UserTree_RebootRally; // 0x458(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x460(0x10) UNKNOWN PROPERTY
		UFortSidebarOnboardTooltipWidget* RebootRallyTooltip; // 0x470(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x478(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelReboot");
			return ret;
		}

		void ShowMissingFriendsModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009F538(relative to base address)
		void OnRebootRallyEligibilityUpdated(bool bEligible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarPanelRebootHeader
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x2F0 - 0x2B0)
	class UFortSidebarPanelRebootHeader : public UUserWidget	
	{
	public:
		TWeakObjectPtr<URebootRallyQuestDataAsset*> RebootRallyQuestDataPtr; // 0x2B0(0x20)
		FGameplayTagContainer RebootButtonDisabledProducts; // 0x2D0(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelRebootHeader");
			return ret;
		}

		void OnUpdateQuestsButtonVisibility(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRebootRallyEligibilityUpdated(bool bEligible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UCommonButtonBase OnGetQuestsButton(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleQuestsButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75009F07C(relative to base address)
	};


	// Class FortniteUI.FortSidebarPanelSettings
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortSidebarPanelSettings : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UFortBladeMenu_MainMenu* BladeMenu_MainMenu; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelSettings");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelTags
	// Inherited from UFortSidebarPanelWithTree -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x4D8 - 0x420)
	class UFortSidebarPanelTags : public UFortSidebarPanelWithTree	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x420(0x20) UNKNOWN PROPERTY
		UFortSocialUserTreeView* UserTree_Friends; // 0x440(0x8)
		UFortSidebarLfgState2Widget* LfgStateWidget; // 0x448(0x8)
		float QueryLfgTimeSeconds; // 0x450(0x4)
		float DebounceLfgTimeSeconds; // 0x454(0x4)
		float RateLimitTickSeconds; // 0x458(0x4)
		bool bLfgExactMatch; // 0x45C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x45D(0x3) UNKNOWN PROPERTY
		int32_t MaxNumberOfPlayersToShow; // 0x460(0x4)
		unsigned char UnknownData02_7[0x74]; // 0x464(0x74) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelTags");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarPanelVoiceChat
	// Inherited from UFortSidebarPanelWithTree -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x4A8 - 0x420)
	class UFortSidebarPanelVoiceChat : public UFortSidebarPanelWithTree	
	{
	public:
		UFortSocialUserTreeView* UserTree_VoiceChat; // 0x420(0x8)
		UCommonVisibilitySwitcher* VoiceChannelPanelSwitcher; // 0x428(0x8)
		USocialListEntryEmptyPanelBase* VoiceChatDisabledPanel; // 0x430(0x8)
		UPanelWidget* VerticalBoxPanelUI; // 0x438(0x8)
		UWidget* VoiceChatEnabledPanel; // 0x440(0x8)
		UFortVoiceSettingsDisplay* SidebarVoiceChannelSettingsPanel; // 0x448(0x8)
		UTexture2D* VoiceChatDisabledIcon; // 0x450(0x8)
		UMaterialInstance* VoiceChatDisabledMaterial; // 0x458(0x8)
		UFortSidebarOnboardTooltipWidget* SidebarVoiceChatPanelSupervisedSettingsTooltip; // 0x460(0x8)
		TWeakObjectPtr<UDataAsset*> LoadingVoiceRecordingPluginAssetObject; // 0x468(0x20)
		USocialListEntryEmptyPanelBase* SidebarVRRVoiceChatDeactivated; // 0x488(0x8)
		UNamedSlot* VoiceTooltipSlot; // 0x490(0x8)
		UFortSidebarOnboardTooltipWidget* VoiceTooltipWidget; // 0x498(0x8)
		UClass* VRROnboardingWidgetClass; // 0x4A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelVoiceChat");
			return ret;
		}

		void OpenParentalControls(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget HandleNavigateUpFromSettings(EUINavigation InNavigation); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009ECA0(relative to base address)
		UWidget HandleNavigateFromUserTree(EUINavigation InNavigation); // Flags: Final|Native|Private, Memory Exec: 0x7FF75009EC10(relative to base address)
	};


	// Class FortniteUI.FortSocialProfilePanel
	// Inherited from USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x4C0 - 0x430)
	class UFortSocialProfilePanel : public USocialActionMenu	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x430(0x10) UNKNOWN PROPERTY
		UFortSocialProfileSubPanel* SubPanelIdentity; // 0x440(0x8)
		UFortSocialProfileSubPanel* SubPanelRegion; // 0x448(0x8)
		UFortSocialProfileSubPanel* SubPanelTags; // 0x450(0x8)
		UFortSocialProfileSubPanel* SubPanelPresence; // 0x458(0x8)
		UFortSocialProfileSubPanel* SubPanelActions; // 0x460(0x8)
		UFortSocialProfileSubPanel* SubPanelMutualFriends; // 0x468(0x8)
		UFortSocialProfileSubPanel* SubPanelMutualFriendsCount; // 0x470(0x8)
		UFortSocialProfileSubPanel* SubPanelRebootRallyText; // 0x478(0x8)
		UCommonButtonBase* SidebarBackButton; // 0x480(0x8)
		UScrollBox* ScrollBox_ScrollablePanels; // 0x488(0x8)
		unsigned char UnknownData01_7[0x30]; // 0x490(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfilePanel");
			return ret;
		}

		void OnStartProfileLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinishedProfileLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSidebarPanelYourProfile
	// Inherited from UFortSocialProfilePanel -> USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x530 - 0x4C0)
	class UFortSidebarPanelYourProfile : public UFortSocialProfilePanel	
	{
	public:
		UFortSocialProfileSettingRegistry* Registry; // 0x4C0(0x8)
		UFortSettingsListView* ListView_Settings; // 0x4C8(0x8)
		unsigned char UnknownData00_7[0x60]; // 0x4D0(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarPanelYourProfile");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarSocialInteractionButton
	// Inherited from USocialInteractionButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x14A0 - 0x1490)
	class UFortSidebarSocialInteractionButton : public USocialInteractionButton	
	{
	public:
		EFortSidebarSocialInteractionArrow ArrowDirection; // 0x1490(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x1491(0x7) UNKNOWN PROPERTY
		UCommonActionWidget* AlternateInputActionWidget; // 0x1498(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarSocialInteractionButton");
			return ret;
		}

		void ShowAlternateInputAction(bool bShow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500C0274(relative to base address)
	};


	// Class FortniteUI.FortSocialInteractionMenu
	// Inherited from USocialInteractionMenu -> USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x4E8 - 0x498)
	class UFortSocialInteractionMenu : public USocialInteractionMenu	
	{
	public:
		UFortSocialNameTextBlock* Text_SocialName; // 0x498(0x8)
		UCommonRichTextBlock* RichText_PlatformNames; // 0x4A0(0x8)
		UCommonRichTextBlock* Text_Presence; // 0x4A8(0x8)
		UFortEditNicknameButton* Button_EditNickname; // 0x4B0(0x8)
		UCommonTextBlock* Text_ErrorMessage; // 0x4B8(0x8)
		UCommonButtonLegacy* Button_CancelEdit; // 0x4C0(0x8)
		UCommonButtonLegacy* Button_DoneEdit; // 0x4C8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x4D0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialInteractionMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarSocialInteractionMenu
	// Inherited from UFortSocialInteractionMenu -> USocialInteractionMenu -> USocialActionMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x538 - 0x4E8)
	class UFortSidebarSocialInteractionMenu : public UFortSocialInteractionMenu	
	{
	public:
		int32_t MaxContractedMenuInteractionsToDisplay; // 0x4E8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x4EC(0x4) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_ExpandedInteractions; // 0x4F0(0x8)
		USpacer* Spacer_ExpandedMenuSeparator; // 0x4F8(0x8)
		unsigned char UnknownData01_7[0x38]; // 0x500(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarSocialInteractionMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarSpecialNavButtonBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x1390 - 0x1390)
	class UFortSidebarSpecialNavButtonBase : public UCommonButtonBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarSpecialNavButtonBase");
			return ret;
		}
	};


	// Class FortniteUI.FortSidebarSpecialNavWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortSidebarSpecialNavWidgetBase : public UCommonActivatableWidget	
	{
	public:
		EFortSidebarSpecialNavType NavType; // 0x3F0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3F1(0x7) UNKNOWN PROPERTY
		UFortSidebarSpecialNavButtonBase* Button; // 0x3F8(0x8)
		UFortSidebarOnboardTooltipWidget* AvailableTooltip; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarSpecialNavWidgetBase");
			return ret;
		}

		EFortSidebarSpecialNavType GetNavType(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500BF858(relative to base address)
	};


	// Class FortniteUI.FortSidebarTagsNoFriendsEntry
	// Inherited from USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1400 - 0x13F8)
	class UFortSidebarTagsNoFriendsEntry : public USocialListEntryBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSidebarTagsNoFriendsEntry");
			return ret;
		}

		void OpenFindFriendsPanel(); // Flags: Final|Native|Private|BlueprintCallable|Const, Memory Exec: 0x7FF7500C01C4(relative to base address)
	};


	// Class FortniteUI.FortSocialAvatarIcon
	// Inherited from UFortLazyImage -> UCommonLazyImage -> UImage -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x3C0 - 0x398)
	class UFortSocialAvatarIcon : public UFortLazyImage	
	{
	public:
		UMaterialInterface* AvatarMaterial; // 0x398(0x8)
		TWeakObjectPtr<UFortSocialUser*> SocialUser; // 0x3A0(0x8)
		UTexture2D* AvatarTexture; // 0x3A8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x3B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialAvatarIcon");
			return ret;
		}

		void RepresentLocalPlayer(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749F9E358(relative to base address)
	};


	// Class FortniteUI.FortSocialDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x288 (0x2B8 - 0x30)
	class UFortSocialDisplayData : public UDataAsset	
	{
	public:
		TWeakObjectPtr<UClass*> LoadingActiveChannelSpeakContainerClass; // 0x30(0x20)
		TWeakObjectPtr<UClass*> LoadingOverrideSpeakerClass; // 0x50(0x20)
		TWeakObjectPtr<UClass*> LoadingVoiceRecordingPluginAssetClass; // 0x70(0x20)
		FLinearColor OnlineIndicatorOnline; // 0x90(0x10)
		FLinearColor OnlineIndicatorAway; // 0xA0(0x10)
		FLinearColor OnlineIndicatorOffline; // 0xB0(0x10)
		FLinearColor OnlineIndicatorBlocked; // 0xC0(0x10)
		FLinearColor UserNameOnline; // 0xD0(0x10)
		FLinearColor UserNameOfflineAway; // 0xE0(0x10)
		FLinearColor UserNameBlocked; // 0xF0(0x10)
		FLinearColor RichPresenceOnline; // 0x100(0x10)
		FLinearColor RichPresenceOfflineAway; // 0x110(0x10)
		FLinearColor RichPresenceBlocked; // 0x120(0x10)
		FLinearColor FocusHighlightOnline; // 0x130(0x10)
		FLinearColor FocusHighlightOfflineAway; // 0x140(0x10)
		FLinearColor PortraitBackgroundColorNormal; // 0x150(0x10)
		FLinearColor PortraitBackgroundColorAttendingEvent; // 0x160(0x10)
		FLinearColor PortraitEmptyFillColorNormal; // 0x170(0x10)
		FLinearColor PortraitEmptyFillColorAttendingEvent; // 0x180(0x10)
		FLinearColor PortraitEmptyHighlightColorNormal; // 0x190(0x10)
		FLinearColor PortraitEmptyHighlightColorAttendingEvent; // 0x1A0(0x10)
		FLinearColor StatusIndicatorBackgroundOn; // 0x1B0(0x10)
		FLinearColor StatusIndicatorBackgroundOff; // 0x1C0(0x10)
		UMaterialInstance* BackgroundOnline; // 0x1D0(0x8)
		UMaterialInstance* BackgroundOfflineAway; // 0x1D8(0x8)
		UMaterialInstance* BackgroundSidebarCell; // 0x1E0(0x8)
		TMap<FString, FSoftObjectPath> SidekickReactionPathMap; // 0x1E8(0x50)
		TMap<FString, FPlatformPrefixIconList> PlatformPrefixIconMap; // 0x238(0x50)
		UTexture2D* GenericPlatformIcon; // 0x288(0x8)
		UClass* SocialBanModalClass; // 0x290(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x298(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialDisplayLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortSocialDisplayLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialDisplayLibrary");
			return ret;
		}

		void SetPlatformPrefixIcon(UImage* Image, FString OtherPlayerPlatform); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7484008C8(relative to base address)
	};


	// Class FortniteUI.FortSocialEventRSVPLocalUserEntry
	// Inherited from UFortLocalUserEntry -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1440 - 0x1430)
	class UFortSocialEventRSVPLocalUserEntry : public UFortLocalUserEntry	
	{
	public:
		UFortSocialEventRSVPWidget* BuffetInfo; // 0x1430(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1438(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialEventRSVPLocalUserEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialEventRSVPWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortSocialEventRSVPWidget : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialEventRSVPWidget");
			return ret;
		}

		void OnRefreshDisplay(FText& EventName, FText& Date, FText& AdditionalEvents); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialImportPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x5D0 - 0x560)
	class UFortSocialImportPanel : public UFortActivatablePanel	
	{
	public:
		FMulticastInlineDelegate OnSocialImportPanelClosed; // 0x560(0x10)
		unsigned char UnknownData00_6[0x28]; // 0x570(0x28) UNKNOWN PROPERTY
		UWidgetSwitcher* Switcher_AddFriends; // 0x598(0x8)
		UCommonButtonLegacy* Button_Import; // 0x5A0(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_Add; // 0x5B0(0x8)
		UCommonButtonLegacy* Button_NotNow; // 0x5B8(0x8)
		UCommonButtonLegacy* Button_OptOut; // 0x5C0(0x8)
		UBorder* Border_OuterBorder; // 0x5C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialImportPanel");
			return ret;
		}

		void ShowPanel(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500C02F8(relative to base address)
		void OnWaitingViewRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPanelTypeSet(ESocialImportPanelType NewType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLauncherImportOpened(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIncentivizedSet(bool bIncentivized); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnImportViewRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClaimViewRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetSocialPlatform(ESocialImportPanelPlatform& OutPlatform); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500BF87C(relative to base address)
	};


	// Class FortniteUI.FortEditNicknameButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UFortEditNicknameButton : public UCommonButtonLegacy	
	{
	public:
		FColor CharacterLimitWarningColor; // 0x13E0(0x4)
		unsigned char UnknownData00_6[0x24]; // 0x13E4(0x24) UNKNOWN PROPERTY
		UEditableText* EditableText_EditNickname; // 0x1408(0x8)
		UCommonRichTextBlock* RichText_CharacterCounter; // 0x1410(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEditNicknameButton");
			return ret;
		}

		void SetKeyboardFocusOnEditableText(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500C01EC(relative to base address)
		void HandleNicknameTextCommited(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500BFD74(relative to base address)
		void HandleNicknameTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500BFCD8(relative to base address)
	};


	// Class FortniteUI.FortSocialMenuSlateWrapperWidget
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x20 (0x178 - 0x158)
	class UFortSocialMenuSlateWrapperWidget : public UWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x158(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialMenuSlateWrapperWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialNameTextBlock
	// Inherited from USocialNameTextBlock -> UCommonRichTextBlock -> URichTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x7F0 - 0x7F0)
	class UFortSocialNameTextBlock : public USocialNameTextBlock	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialNameTextBlock");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x570 - 0x560)
	class UFortSocialPanel : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		UFortSocialPanelView_UserLists* PanelView_UserLists; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanel");
			return ret;
		}

		bool IsAnySlideOutMenuOpen(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500C0170(relative to base address)
		void HandleSocialPanelClose(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500C0124(relative to base address)
		void ClosePanel(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialPanelView_FriendLinkButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortSocialPanelView_FriendLinkButton : public UCommonButtonLegacy	
	{
	public:
		UCommonBorder* Border_ScreenTarget; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanelView_FriendLinkButton");
			return ret;
		}

		void OnShareButtonTypeSet(EFriendLinkShareButtonType Type); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCopiedToClipboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialPanelView_Groups
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortSocialPanelView_Groups : public UUserWidget	
	{
	public:
		USocialGroupTreeView* TreeView_Groups; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanelView_Groups");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialPanelView_Sidebar
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x2F0 (0x6E0 - 0x3F0)
	class UFortSocialPanelView_Sidebar : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x3F0(0x178) UNKNOWN PROPERTY
		UFortSidebarButtons* Panel_SidebarButtons; // 0x568(0x8)
		UCommonVisibilitySwitcher* Switcher_UserLists; // 0x570(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x578(0x28) UNKNOWN PROPERTY
		UCommonActivatableWidget* Panel_PartyUp; // 0x5A0(0x8)
		UFortSidebarPanelFindFriends* Panel_FindFriends; // 0x5A8(0x8)
		UCommonActivatableWidget* Panel_VoiceChat; // 0x5B0(0x8)
		UFortSidebarPanelSettings* Panel_More; // 0x5B8(0x8)
		UCommonActivatableWidget* Panel_YourProfile; // 0x5C0(0x8)
		UCommonActivatableWidget* Panel_Tags; // 0x5C8(0x8)
		UCommonActivatableWidget* Panel_RebootRally; // 0x5D0(0x8)
		UCommonActivatableWidget* Panel_Exit; // 0x5D8(0x8)
		UFortSidebarExitPopup* Popup_Exit; // 0x5E0(0x8)
		UFortPluginWidgetInjectionSlot* Panel_CilantroInjection; // 0x5E8(0x8)
		UCommonActivatableWidget* Panel_EditProfile; // 0x5F0(0x8)
		TArray<UCommonActivatableWidget*> ExtensionPanels; // 0x5F8(0x10)
		UFortSidebarOnboardTooltipWidget* SidebarOnboardingTagsEditTooltip; // 0x608(0x8)
		UFortSidebarOnboardTooltipWidget* SidebarOnboardingLookingForParty; // 0x610(0x8)
		UFortSidebarOnboardTooltipWidget* SidebarOnboardingLikeIsland; // 0x618(0x8)
		UFortSidebarOnboardTooltipWidget* SiderbarSupervisedSettingsTooltip; // 0x620(0x8)
		UWidget* OnboardingTooltip_InputBlocker; // 0x628(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x630(0x8) UNKNOWN PROPERTY
		USocialActionMenu* ActiveActionMenu; // 0x638(0x8)
		TMap<UClass*, USocialActionMenu*> MapCachedActionMenuPool; // 0x640(0x50)
		unsigned char UnknownData03_6[0x8]; // 0x690(0x8) UNKNOWN PROPERTY
		UClass* CollectionScreenEditTagsClass; // 0x698(0x8)
		unsigned char UnknownData04_6[0x8]; // 0x6A0(0x8) UNKNOWN PROPERTY
		UClass* RebootRallyQRModalClass; // 0x6A8(0x8)
		unsigned char UnknownData05_7[0x30]; // 0x6B0(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanelView_Sidebar");
			return ret;
		}

		UWidget TryNavigateToNewPanel(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500C03EC(relative to base address)
		UWidget HandleSidebarUserListPanelNavigateLeft(EUINavigation InNavigation); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500C0094(relative to base address)
		UWidget HandleSidebarTabButtonNavigateRight(EUINavigation InNavigation); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500C0004(relative to base address)
	};


	// Class FortniteUI.FortSocialTab
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1430 - 0x13E0)
	class UFortSocialTab : public UCommonButtonLegacy	
	{
	public:
		UTexture2D* TabIcon; // 0x13E0(0x8)
		FText TabName; // 0x13E8(0x10)
		FSlateColor InviteTintColor; // 0x13F8(0x14)
		unsigned char UnknownData00_6[0x4]; // 0x140C(0x4) UNKNOWN PROPERTY
		UImage* Image_TabIcon; // 0x1410(0x8)
		UCommonTextBlock* Text_TabName; // 0x1418(0x8)
		UCommonTextBlock* Text_Number; // 0x1420(0x8)
		UCommonTextBlock* Text_Bang; // 0x1428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialTab");
			return ret;
		}
	};


	// Class FortniteUI.FortFriendSearchButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x1480 - 0x13E0)
	class UFortFriendSearchButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x60]; // 0x13E0(0x60) UNKNOWN PROPERTY
		UEditableText* EditableText_AddFriend; // 0x1440(0x8)
		UCommonRichTextBlock* RichText_SocialBanTimerText; // 0x1448(0x8)
		UCommonButtonLegacy* Button_ClearQuery; // 0x1450(0x8)
		UCommonButtonLegacy* Button_SubmitQuery; // 0x1458(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_SocialBan; // 0x1460(0x8)
		char MaxFriendSearchNameLength; // 0x1468(0x1)
		unsigned char UnknownData01_7[0x17]; // 0x1469(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFriendSearchButton");
			return ret;
		}

		void SetKeyboardFocusOnAddFriendText(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500C01D8(relative to base address)
		void HandleAddFriendTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500BFA74(relative to base address)
		void HandleAddFriendTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500BF9D8(relative to base address)
	};


	// Class FortniteUI.FortJoinVoiceChannelButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13E0 - 0x13E0)
	class UFortJoinVoiceChannelButton : public UCommonButtonLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortJoinVoiceChannelButton");
			return ret;
		}
	};


	// Class FortniteUI.FortVoiceChannelHeaderButton
	// Inherited from USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x1460 - 0x13F8)
	class UFortVoiceChannelHeaderButton : public USocialListEntryBase	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x13F8(0x20) UNKNOWN PROPERTY
		UClass* VoiceRepReportModalClass; // 0x1418(0x8)
		UFortMainMenuButton* JoinLeaveButton; // 0x1420(0x8)
		UFortMainMenuButton* ReportButton; // 0x1428(0x8)
		UCommonRichTextBlock* Text_ChannelTitle; // 0x1430(0x8)
		UCommonRichTextBlock* Text_ChannelTitle_Hover; // 0x1438(0x8)
		UCommonTextBlock* Text_ChannelInfo; // 0x1440(0x8)
		UCommonTextBlock* Text_ChannelInfo_Hover; // 0x1448(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x1450(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChannelHeaderButton");
			return ret;
		}

		void ShowVoiceRepModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500BFFF0(relative to base address)
		void SetExpansionState(bool bIsExpanded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetChannelRecordingState(bool bIsRecording); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateVisuals(bool bIsActiveAndListening, bool bIsActiveOrAvailable, bool bIsAvailableAndNotActive, bool bIsListening, bool bShowingRestriction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateOptionsVisuals(ESocialCommsPermission VoicePermission, bool bVoiceReportingIsAvailable, bool bIsRecording, bool bCanJoinOrLeave, bool bMightBeAbleToReport); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsActiveChannel(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500C0138(relative to base address)
		void HandleReportButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500BFFF0(relative to base address)
		void HandleHeaderClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleActionButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500BF9C4(relative to base address)
		bool CanJoinChannel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500BF6D4(relative to base address)
	};


	// Class FortniteUI.FortSocialPanelView_UserLists
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F8 (0x5E8 - 0x3F0)
	class UFortSocialPanelView_UserLists : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonGroupLegacy* ButtonGroup_SocialTabs; // 0x3F0(0x8)
		FText PartyVoiceMessage_PSN; // 0x3F8(0x10)
		FText PlatformPartyChatMessageHeader_PSN; // 0x408(0x10)
		FText LeavePlatformPartyInstructions_PSN; // 0x418(0x10)
		FText PartyVoiceMessage_XBL; // 0x428(0x10)
		FText PlatformPartyChatMessageHeader_XBL; // 0x438(0x10)
		FText LeavePlatformPartyInstructions_XBL; // 0x448(0x10)
		unsigned char UnknownData00_6[0x48]; // 0x458(0x48) UNKNOWN PROPERTY
		TArray<FFortUserListHeaderInfo> ListHeaderInfos; // 0x4A0(0x10)
		FDataTableRowHandle NextTabInputAction; // 0x4B0(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x4C0(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle PreviousTabInputAction; // 0x4C8(0x10)
		unsigned char UnknownData02_6[0x20]; // 0x4D8(0x20) UNKNOWN PROPERTY
		FDataTableRowHandle CloseInputAction; // 0x4F8(0x10)
		unsigned char UnknownData03_6[0x8]; // 0x508(0x8) UNKNOWN PROPERTY
		UFortLocalUserEntry* UserEntry_LocalPlayer; // 0x510(0x8)
		UFortFriendSearchButton* Button_FriendSearch; // 0x518(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_UserLists; // 0x520(0x8)
		UFortSocialTab* SocialTab_AddFriends; // 0x528(0x8)
		UFortSocialTab* SocialTab_Friends; // 0x530(0x8)
		UFortSocialTab* SocialTab_VoiceChat; // 0x538(0x8)
		UFortSocialUserTreeView* UserTree_FriendsLists; // 0x540(0x8)
		UFortSocialUserTreeView* UserTree_VoiceChat; // 0x548(0x8)
		UFortVoiceSettingsDisplay* VoiceChannelSettings; // 0x550(0x8)
		UFortSocialUserTreeView* UserTree_AddFriends; // 0x558(0x8)
		UCommonButtonLegacy* Button_AddWeGameFriends; // 0x560(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_VoiceChatState; // 0x568(0x8)
		UVerticalBox* VBox_VoicePlatformPartyWithSwitchButton; // 0x570(0x8)
		UVerticalBox* VBox_VoicePlatformPartyInstructions; // 0x578(0x8)
		UVerticalBox* VBox_VoiceAcceptAudioMod; // 0x580(0x8)
		UFortJoinVoiceChannelButton* Button_JoinVoiceChat; // 0x588(0x8)
		UCommonButtonLegacy* Button_LeavePlatformVoiceChat; // 0x590(0x8)
		UCommonButtonLegacy* Button_EnableVoiceChat; // 0x598(0x8)
		UCommonTextBlock* Text_PartyVoiceMessage; // 0x5A0(0x8)
		UCommonRichTextBlock* RichText_SocialBanDescription; // 0x5A8(0x8)
		UCommonRichTextBlock* RichText_SocialBanRemainingTime_VoiceTab; // 0x5B0(0x8)
		UCommonRichTextBlock* RichText_PlatformPartyChatMessageHeader; // 0x5B8(0x8)
		UCommonRichTextBlock* RichText_LeavePlatformPartyInstructions; // 0x5C0(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_AddFriends; // 0x5C8(0x8)
		UFortSocialUserTreeView* UserTree_SearchResults; // 0x5D0(0x8)
		UCommonTextBlock* Text_SearchingForUsers; // 0x5D8(0x8)
		UCommonTextBlock* Text_SearchFailed; // 0x5E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialPanelView_UserLists");
			return ret;
		}

		void UpdateAudioModerationAcceptPanelText(FText& Title, FText& Description); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetVoiceChannelButtonText(FText& ButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePrevTabAction_STW(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7500BFF70(relative to base address)
		void HandleNextTabAction_STW(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7500BFC58(relative to base address)
		void HandleLearnMoreAudioModerationFromTutorial(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500BFBC4(relative to base address)
		void HandleAcceptAudioModerationFromTutorial(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500BF93C(relative to base address)
		void FocusSearchResultsAfterQueryEnd(UWidget* ActiveWidget, int32_t ActiveWidgetIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500BF794(relative to base address)
		void CloseAction_STW(bool& bPassThrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7500BF714(relative to base address)
		void CloseAction(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500BF6F8(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileSubPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x328 - 0x2D8)
	class UFortSocialProfileSubPanel : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		UFortSocialProfileSubPanel_Loading* SubPanel_Loading; // 0x2F0(0x8)
		unsigned char UnknownData01_7[0x30]; // 0x2F8(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileSubPanel");
			return ret;
		}

		void OnStartProfileLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinishedProfileLoading(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget GetDesiredFocusTarget(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileActions
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x378 - 0x328)
	class UFortSocialProfileActions : public UFortSocialProfileSubPanel	
	{
	public:
		UFortSidebarSocialInteractionMenu* FortSocialInteractionMenu; // 0x328(0x8)
		unsigned char UnknownData00_7[0x48]; // 0x330(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileActions");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialProfileIdentity
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x378 - 0x328)
	class UFortSocialProfileIdentity : public UFortSocialProfileSubPanel	
	{
	public:
		UFortSocialAvatarIcon* Avatar_SocialAvatarIcon; // 0x328(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x330(0x8)
		UBorder* Border_OnlineStatusIndicator; // 0x338(0x8)
		UBorder* Border_OnlineStatusOutline; // 0x340(0x8)
		URebootRallyIcon* WBP_RebootRallyIcon; // 0x348(0x8)
		UOverlay* Overlay_FortniteCrew; // 0x350(0x8)
		UOverlay* Overlay_BattlePass; // 0x358(0x8)
		USocialNameTextBlock* Text_SocialName; // 0x360(0x8)
		UCommonRichTextBlock* RichText_PlatformNames; // 0x368(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x370(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileIdentity");
			return ret;
		}

		void SetSeasonLevel(int32_t Level); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetFortniteCrewVisiblity(bool bIsVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetBattlePassVisiblity(bool bIsVisible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileMutualCount
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x330 - 0x328)
	class UFortSocialProfileMutualCount : public UFortSocialProfileSubPanel	
	{
	public:
		UCommonTextBlock* Text_MutualCount; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileMutualCount");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialProfileMutualFriends
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x360 - 0x328)
	class UFortSocialProfileMutualFriends : public UFortSocialProfileSubPanel	
	{
	public:
		int32_t MaxNumberOfDisplayedMutualFriends; // 0x328(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x32C(0x4) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_MutualFriends; // 0x330(0x8)
		UWidget* SizeBox_Root; // 0x338(0x8)
		TArray<USocialUser*> MutualFriendSocialUsers; // 0x340(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x350(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileMutualFriends");
			return ret;
		}

		void HandleOnQueryMutualFriendsComplete(TArray<FUniqueNetIdRepl> MutualFriendIds); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500BFEA0(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileSubPanel_Loading
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortSocialProfileSubPanel_Loading : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileSubPanel_Loading");
			return ret;
		}

		void OnLoadingStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadingFinished(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialProfilePresence
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x330 - 0x328)
	class UFortSocialProfilePresence : public UFortSocialProfileSubPanel	
	{
	public:
		UCommonTextBlock* Text_RichPresence; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfilePresence");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialProfileRebootRallyText
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x328 - 0x328)
	class UFortSocialProfileRebootRallyText : public UFortSocialProfileSubPanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileRebootRallyText");
			return ret;
		}

		bool IsLocalUser(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500C01A0(relative to base address)
		void DisplayText(bool bRallied); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileRegion
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x340 - 0x328)
	class UFortSocialProfileRegion : public UFortSocialProfileSubPanel	
	{
	public:
		UCommonTextBlock* Text_Region; // 0x328(0x8)
		USizeBox* SizeBox_Separator; // 0x330(0x8)
		UCommonTextBlock* Text_Language; // 0x338(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileRegion");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialProfileTags
	// Inherited from UFortSocialProfileSubPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x338 - 0x328)
	class UFortSocialProfileTags : public UFortSocialProfileSubPanel	
	{
	public:
		bool bAllowEditing; // 0x328(0x1)
		bool bShowAddingWidgetInSocialTagWhenSelected; // 0x329(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x32A(0x6) UNKNOWN PROPERTY
		USidebarSocialTagListEditable* SidebarSocialTagList; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileTags");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialSidebarLocalUserButton
	// Inherited from UFortSocialSidebarButtonBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1440 - 0x1428)
	class UFortSocialSidebarLocalUserButton : public UFortSocialSidebarButtonBase	
	{
	public:
		UFortSocialAvatarIcon* SocialAvatarIcon; // 0x1428(0x8)
		UFortPlayerAvatar* PlayerAvatar; // 0x1430(0x8)
		UImage* Image_Crown; // 0x1438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialSidebarLocalUserButton");
			return ret;
		}

		void OnOnlineStatusChanged(ELocalUserOnlineStatus OnlineStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSocialUserEntryWidget
	// Inherited from USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1410 - 0x13F8)
	class UFortSocialUserEntryWidget : public USocialListEntryBase	
	{
	public:
		UMenuAnchor* AssignedMenuAnchor; // 0x13F8(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x1400(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserEntryWidget");
			return ret;
		}

		void SpawnSocialActionMenu(UMenuAnchor* MenuAnchor, UClass* ActionMenuClass); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500C0310(relative to base address)
		void SetSocialUserFromOwningPlayer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500C0208(relative to base address)
		void OnSetUserEntryType(EFortSocialUserEntryType EntryType); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetSocialUser(UFortSocialUser* InSocialUser); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMenuOpenChanged(bool bIsMenuOpen); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500BFBD8(relative to base address)
		UUserWidget HandleGetMenuContext(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500BFBA0(relative to base address)
		UFortSocialUser GetSocialUser(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500BF914(relative to base address)
	};


	// Class FortniteUI.FortSocialUserListEntry
	// Inherited from UFortPresenceUserListEntry -> UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x14A0 - 0x1490)
	class UFortSocialUserListEntry : public UFortPresenceUserListEntry	
	{
	public:
		UImage* Image_Lock; // 0x1490(0x8)
		USidebarSocialTagListBase* SocialTagList; // 0x1498(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialUserTreeView
	// Inherited from USocialUserTreeView -> USocialUserListView -> USocialUserListViewBase -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x5A8 - 0x4D0)
	class UFortSocialUserTreeView : public USocialUserTreeView	
	{
	public:
		UClass* PartyMemberEntryWidgetClass; // 0x4D0(0x8)
		UClass* TeamMemberEntryWidgetClass; // 0x4D8(0x8)
		UClass* VoiceChatMemberEntryWidgetClass; // 0x4E0(0x8)
		UClass* JoinablePartyEntryWidgetClass; // 0x4E8(0x8)
		UClass* JoinablePartyEntryWidgetClass; // 0x4F0(0x8)
		UClass* MissedInviteEntryWidgetClass; // 0x4F8(0x8)
		UClass* ReferFriendEntryWidgetClass; // 0x500(0x8)
		UClass* UserSearchResultEntryWidgetClass; // 0x508(0x8)
		UClass* LeavePartyEntryWidgetClass; // 0x510(0x8)
		UClass* ShuffleLfgEntryWidgetClass; // 0x518(0x8)
		UClass* SuggestedFriendEntryWidgetClass; // 0x520(0x8)
		UClass* JoinRequestEntryWidgetClass; // 0x528(0x8)
		UClass* VoiceChannelHeaderEntryWidgetClass; // 0x530(0x8)
		UClass* VoiceChannelHeaderOptionEntryWidgetClass; // 0x538(0x8)
		UClass* RecentPlayerEntryWidgetClass; // 0x540(0x8)
		UClass* TagsNoFriendsEntryWidgetClass; // 0x548(0x8)
		UClass* LfgToggleEntryWidgetClass; // 0x550(0x8)
		UClass* LfgTagCheckboxEntryWidgetClass; // 0x558(0x8)
		UClass* LfgFilterButtonEntryWidgetClass; // 0x560(0x8)
		UClass* LfgInviteEntryWidgetClass; // 0x568(0x8)
		UClass* LfgState2EntryWidgetClass; // 0x570(0x8)
		UClass* MultiFriendActionEntryWidgetClass; // 0x578(0x8)
		UClass* LfgFilterHeaderEntryWidgetClass; // 0x580(0x8)
		UClass* RebootPlayersHeaderEntryWidgetClass; // 0x588(0x8)
		UClass* ViewModelDrivenEntryWidgetClass; // 0x590(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x598(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserTreeView");
			return ret;
		}
	};


	// Class FortniteUI.FortTeamMemberListEntry
	// Inherited from UFortPresenceUserListEntry -> UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x14B0 - 0x1490)
	class UFortTeamMemberListEntry : public UFortPresenceUserListEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1490(0x8) UNKNOWN PROPERTY
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x1498(0x8)
		UFortPartyStatusIcon* PartyIcon_Status; // 0x14A0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x14A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortUserSearchResultListEntry
	// Inherited from UFortPresenceUserListEntry -> UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x14B0 - 0x1490)
	class UFortUserSearchResultListEntry : public UFortPresenceUserListEntry	
	{
	public:
		UCommonRichTextBlock* Text_NameMatchesAndMutuals; // 0x1490(0x8)
		UCommonRichTextBlock* Text_MutualFriends; // 0x1498(0x8)
		UCommonRichTextBlock* Text_MutualFriends_Hover; // 0x14A0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x14A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUserSearchResultListEntry");
			return ret;
		}

		void SetNamePlatformAndMutuals(FText& DisplayName, FText& Platform, int32_t MutualCount); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVoiceChatMemberListEntry
	// Inherited from UFortPresenceUserListEntry -> UFortSocialListUserEntryBase -> USocialListUserEntryBase -> USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x14B0 - 0x1490)
	class UFortVoiceChatMemberListEntry : public UFortPresenceUserListEntry	
	{
	public:
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x1490(0x8)
		UFortPartyStatusIcon* PartyIcon_Status; // 0x1498(0x8)
		UImage* Image_Crown; // 0x14A0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x14A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChatMemberListEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortVoiceSettingsDisplay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x3C8 - 0x2D8)
	class UFortVoiceSettingsDisplay : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnVoiceSettingsButtonClicked; // 0x2D8(0x10)
		TWeakObjectPtr<UClass*> SettingsClass; // 0x2E8(0x20)
		TWeakObjectPtr<UClass*> SettingScreenClass; // 0x308(0x20)
		unsigned char UnknownData00_6[0x38]; // 0x328(0x38) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortGameSettingRegistry*> SettingRegistry; // 0x360(0x8)
		UCommonRichTextBlock* Text_PTTOnOff; // 0x368(0x8)
		UCommonRichTextBlock* Text_InputDeviceName; // 0x370(0x8)
		UCommonRichTextBlock* Text_OutputDeviceName; // 0x378(0x8)
		UCommonWidgetSwitcherLegacy* Switcher_VoiceEnabledView; // 0x380(0x8)
		UWidget* VoiceEnabledView; // 0x388(0x8)
		UWidget* VoiceDisabledView; // 0x390(0x8)
		UWidget* ParentalControlsNotification_VisOff; // 0x398(0x8)
		UCommonTextBlock* ParentalText; // 0x3A0(0x8)
		UHorizontalBox* HBox_PTTKeybind; // 0x3A8(0x8)
		UCommonButtonLegacy* Button_OpenSettings; // 0x3B0(0x8)
		UCommonButtonLegacy* Button_EnableVoiceChat; // 0x3B8(0x8)
		UFortSettingsListView* ListView_VoiceSettings; // 0x3C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceSettingsDisplay");
			return ret;
		}

		void ShowVoiceSettingsButton(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVoiceSettingsButtonClicked__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSettingsButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E95A8(relative to base address)
	};


	// Class FortniteUI.RebootRallyIcon
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2C8 - 0x2C0)
	class URebootRallyIcon : public UFortUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2C0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallyIcon");
			return ret;
		}
	};


	// Class FortniteUI.RebootRallyQRModalWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class URebootRallyQRModalWidget : public UCommonActivatableWidget	
	{
	public:
		UFortPopupModal* WBP_PopupModal; // 0x3F0(0x8)
		UCommonButtonBase* BackgroundCloseButton; // 0x3F8(0x8)
		URebootRallyQRCode* WBP_RebootRallyPopupModal_QRCode; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallyQRModalWidget");
			return ret;
		}

		void OnSetIsInvite(bool bIsInvited); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRebootRallyEligibilityUpdated(bool bEligible); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.RebootRallyQuestDataAsset
	// Inherited from UDataAsset -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class URebootRallyQuestDataAsset : public UDataAsset	
	{
	public:
		FGameplayTag QuestCategoryTag; // 0x30(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x34(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallyQuestDataAsset");
			return ret;
		}
	};


	// Class FortniteUI.RebootRallySelectionHeaderBase
	// Inherited from UFortSidebarSpecialNavButtonBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class URebootRallySelectionHeaderBase : public UFortSidebarSpecialNavButtonBase	
	{
	public:
		URebootRallyTimerBase* WBP_RebootRallyTimer; // 0x1390(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1398(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallySelectionHeaderBase");
			return ret;
		}
	};


	// Class FortniteUI.RebootRallyTimerBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x2E0 - 0x2B0)
	class URebootRallyTimerBase : public UUserWidget	
	{
	public:
		TWeakObjectPtr<URebootRallyQuestDataAsset*> RebootRallyQuestDataPtr; // 0x2B0(0x20)
		FText RemainingTimeForRebootRallyEnd; // 0x2D0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RebootRallyTimerBase");
			return ret;
		}

		void UpdateRemainingTime(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetRemainingTimeForRebootRallyEnd(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E9200(relative to base address)
	};


	// Class FortniteUI.SidebarLFGToggleListEntryWidget
	// Inherited from USocialListInteractableEntryBase -> USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class USidebarLFGToggleListEntryWidget : public USocialListInteractableEntryBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SidebarLFGToggleListEntryWidget");
			return ret;
		}

		void OnLfgSettingChanged(bool bIsLfgEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SidebarSocialTagListBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB8 (0x4A8 - 0x3F0)
	class USidebarSocialTagListBase : public UCommonActivatableWidget	
	{
	public:
		bool bAreTagsSelectable; // 0x3F0(0x1)
		unsigned char UnknownData00_6[0x17]; // 0x3F1(0x17) UNKNOWN PROPERTY
		bool bTagsSupportMultiSelection; // 0x408(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x409(0x7) UNKNOWN PROPERTY
		USocialTagWidget* SidebarSocialTagWidget; // 0x410(0x8)
		USocialTagWidget* SidebarSocialTagWidget; // 0x418(0x8)
		USocialTagWidget* SidebarSocialTagWidget; // 0x420(0x8)
		bool bShowCategoryCustomization; // 0x428(0x1)
		unsigned char UnknownData02_7[0x7F]; // 0x429(0x7F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SidebarSocialTagListBase");
			return ret;
		}

		void SetSocialUser(UFortSocialUser* SocialUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA6CC(relative to base address)
	};


	// Class FortniteUI.SidebarSocialTagListEditable
	// Inherited from USidebarSocialTagListBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x4B8 - 0x4A8)
	class USidebarSocialTagListEditable : public USidebarSocialTagListBase	
	{
	public:
		bool bShowAddButton; // 0x4A8(0x1)
		bool bShowAddingWidgetInSocialTagWhenSelected; // 0x4A9(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x4AA(0x6) UNKNOWN PROPERTY
		UCommonButtonBase* AddButton; // 0x4B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SidebarSocialTagListEditable");
			return ret;
		}
	};


	// Class FortniteUI.SidebarTagsEditorHeaderWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x108 (0x4F8 - 0x3F0)
	class USidebarTagsEditorHeaderWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY
		UFortSocialAvatarIcon* Avatar_SocialAvatarIcon; // 0x410(0x8)
		USocialNameTextBlock* Text_SocialName; // 0x418(0x8)
		UCommonRichTextBlock* RichText_PlatformNames; // 0x420(0x8)
		USidebarSocialTagListBase* SidebarSocialTagList; // 0x428(0x8)
		UCommonButtonBase* AddButton; // 0x430(0x8)
		UCommonButtonBase* AddButton; // 0x438(0x8)
		UCommonButtonBase* AddButton; // 0x440(0x8)
		UBorder* Border_OnlineStatusIndicator; // 0x448(0x8)
		UBorder* Border_OnlineStatusOutline; // 0x450(0x8)
		unsigned char UnknownData01_6[0x98]; // 0x458(0x98) UNKNOWN PROPERTY
		double DebounceSetTagsDurationSeconds; // 0x4F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SidebarTagsEditorHeaderWidget");
			return ret;
		}
	};


	// Class FortniteUI.SocialListEntryEmptyPanelBase
	// Inherited from USocialListEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x1460 - 0x13F8)
	class USocialListEntryEmptyPanelBase : public USocialListEntryBase	
	{
	public:
		UImage* EmptyListImage; // 0x13F8(0x8)
		UCommonRichTextBlock* EmptyListDescription; // 0x1400(0x8)
		UCommonRichTextBlock* EmptyListTitle; // 0x1408(0x8)
		USidebarListEmptyPanelButton* ButtonWidget; // 0x1410(0x8)
		USidebarListEmptyPanelButton* ButtonWidgetSec; // 0x1418(0x8)
		UFortCTAButton* WBP_UIKit_Button_Regular; // 0x1420(0x8)
		unsigned char UnknownData00_7[0x38]; // 0x1428(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SocialListEntryEmptyPanelBase");
			return ret;
		}

		void UpdateText(FText& Title, FText& Description, FText& ButtonText, FText& ButtonSecText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ButtonSecClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500E889C(relative to base address)
		void ButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500E8880(relative to base address)
	};


	// Class FortniteUI.SocialTagWidget
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x13F0 - 0x1390)
	class USocialTagWidget : public UCommonButtonBase	
	{
	public:
		UImage* Image_CheckMark; // 0x1390(0x8)
		ESocialTagCategory TagCategory; // 0x1398(0x1)
		bool bIsSystemTag; // 0x1399(0x1)
		bool bShowCategoryCustomization; // 0x139A(0x1)
		bool bIsSelectable; // 0x139B(0x1)
		bool bEnableMultiSelection; // 0x139C(0x1)
		bool bShowAddingWhenSelected; // 0x139D(0x1)
		unsigned char UnknownData00_6[0x12]; // 0x139E(0x12) UNKNOWN PROPERTY
		bool bIsCheckmarkEnabled; // 0x13B0(0x1)
		unsigned char UnknownData01_7[0x3F]; // 0x13B1(0x3F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SocialTagWidget");
			return ret;
		}

		void SetTag(FText& InTagName, ESocialTagCategory InTagCategory, bool bInIsSystemTag); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetHighlightState(bool bHighlighted); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetFullColor(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetCategoryCustomizationVisibility(ESlateVisibility CategoryCustomizationVisibility); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.EnableMultiFactorModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x5C8 - 0x560)
	class UEnableMultiFactorModal : public UFortActivatablePanel	
	{
	public:
		bool bHasEnableMFABeenClicked; // 0x560(0x1)
		bool bShouldShowConsoleVersion; // 0x561(0x1)
		unsigned char UnknownData00_6[0x26]; // 0x562(0x26) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_EnableMFA; // 0x588(0x8)
		UCommonButtonLegacy* Button_RemindLater; // 0x590(0x8)
		UCommonButtonLegacy* Button_OptOut; // 0x598(0x8)
		UCommonButtonLegacy* Button_ConsoleMFAEnabled; // 0x5A0(0x8)
		UCommonTextBlock* CT_MFA_Description; // 0x5A8(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x5B0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EnableMultiFactorModal");
			return ret;
		}

		bool QueueModal(bool bAllowPermanentOptOut, bool bTournamentQueue); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA0C4(relative to base address)
		void OnSetScreenConfiguration(bool bIsConsole); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetExitButtonText(FText& NewButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnConsoleDisplayURLProvided(FText& UniquePlayerURLText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AnimationsComplete(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E8640(relative to base address)
	};


	// Class FortniteUI.FortAccountNotFound
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x550 - 0x528)
	class UFortAccountNotFound : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		URichTextBlock* Text_Desc; // 0x538(0x8)
		UCommonButtonLegacy* Button_Back; // 0x540(0x8)
		UCommonButtonLegacy* Button_Web; // 0x548(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAccountNotFound");
			return ret;
		}
	};


	// Class FortniteUI.FortCorrectiveActionFlow
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x440 - 0x3F0)
	class UFortCorrectiveActionFlow : public UCommonActivatableWidget	
	{
	public:
		UFortRichTextBlockLegacy* LinkText; // 0x3F0(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x3F8(0x20) UNKNOWN PROPERTY
		UCommonActivatableWidgetSwitcher* CorrectiveActionScreenSwitcher; // 0x418(0x8)
		UFortCorrectiveActionGuardianEmailScreen* GuardianEmailScreen; // 0x420(0x8)
		UFortCorrectiveActionDisplayNameScreen* DisplayNameScreen; // 0x428(0x8)
		UFortCorrectiveActionDateOfBirthScreen* DateOfBirthScreen; // 0x430(0x8)
		UFortCorrectiveActionUnsupportedActionScreen* UnsupportedActionScreen; // 0x438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionFlow");
			return ret;
		}
	};


	// Class FortniteUI.FortCorrectiveActionScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortCorrectiveActionScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Continue; // 0x400(0x8)
		UCommonButtonBase* Button_PrivacyPolicy; // 0x408(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x410(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionScreen");
			return ret;
		}

		void OnShowFailureReason(FText& FailureReason); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowCorrectiveActionProcessing(bool bShowProcessing); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCorrectiveActionGuardianEmailScreen
	// Inherited from UFortCorrectiveActionScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UFortCorrectiveActionGuardianEmailScreen : public UFortCorrectiveActionScreen	
	{
	public:
		UFortInputField* InputField_GuardianEmailEntry; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionGuardianEmailScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortCorrectiveActionDisplayNameScreen
	// Inherited from UFortCorrectiveActionScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UFortCorrectiveActionDisplayNameScreen : public UFortCorrectiveActionScreen	
	{
	public:
		UCommonTextBlock* Text_DisplayName; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionDisplayNameScreen");
			return ret;
		}

		void OnShowDisplayNameDownloading(bool bShowDownloading); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCorrectiveActionDateOfBirthScreen
	// Inherited from UFortCorrectiveActionScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x440 - 0x418)
	class UFortCorrectiveActionDateOfBirthScreen : public UFortCorrectiveActionScreen	
	{
	public:
		UFortInputField* InputField_Year; // 0x418(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x420(0x10) UNKNOWN PROPERTY
		UFortComboBox* ComboBox_Month; // 0x430(0x8)
		UFortComboBox* ComboBox_Day; // 0x438(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionDateOfBirthScreen");
			return ret;
		}

		void HandleYearChanged(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E988C(relative to base address)
		void HandleMonthChanged(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E9498(relative to base address)
	};


	// Class FortniteUI.FortCorrectiveActionUnsupportedActionScreen
	// Inherited from UFortCorrectiveActionScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x428 - 0x418)
	class UFortCorrectiveActionUnsupportedActionScreen : public UFortCorrectiveActionScreen	
	{
	public:
		UFortPinGrantCodeInfoWidget* PinGrantCodeInfoWidget; // 0x418(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x420(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCorrectiveActionUnsupportedActionScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortDisplayNameWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x590 - 0x528)
	class UFortDisplayNameWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		FText ButtonDisableReason; // 0x538(0x10)
		FText NameTakenText; // 0x548(0x10)
		FText NameInvalidFormatText; // 0x558(0x10)
		FText NameTooShortText; // 0x568(0x10)
		UCommonButtonLegacy* Button_Enter; // 0x578(0x8)
		UCommonTextBlock* Text_Error; // 0x580(0x8)
		UEditableText* EditText_DisplayName; // 0x588(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDisplayNameWidget");
			return ret;
		}

		void HandleTextChanged(FText& Text); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7500E963C(relative to base address)
	};


	// Class FortniteUI.FortEnterCabinModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortEnterCabinModal : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UWidgetSwitcher* WidgetSwitcher_CabinScreens; // 0x3F8(0x8)
		UWidget* VerticalBox_CrewCancelled; // 0x400(0x8)
		UWidget* VerticalBox_EnterCabin; // 0x408(0x8)
		UFortRichTextBlockLegacy* LinkText; // 0x410(0x8)
		UCommonButtonBase* Button_Continue; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEnterCabinModal");
			return ret;
		}

		void SwapPanel(UWidget* PanelToSwapTo); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortEulaWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x590 - 0x528)
	class UFortEulaWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x528(0x18) UNKNOWN PROPERTY
		UClass* ConfirmButtonControllerStyle; // 0x540(0x8)
		UClass* ConfirmButtonMouseStyle; // 0x548(0x8)
		UClass* DeclineButtonControllerStyle; // 0x550(0x8)
		UClass* DeclineButtonMouseStyle; // 0x558(0x8)
		UCommonTextBlock* Text_Title; // 0x560(0x8)
		UFortRichTextBlockLegacy* Text_Description; // 0x568(0x8)
		UFortRichTextBlockLegacy* Text_LegalBottom; // 0x570(0x8)
		UScrollBox* ScrollBox_License; // 0x578(0x8)
		UCommonButtonBase* Button_Confirm; // 0x580(0x8)
		UCommonButtonBase* Button_Decline; // 0x588(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEulaWidget");
			return ret;
		}

		void HandleUserScrolled(float ScrollAmount); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E980C(relative to base address)
	};


	// Class FortniteUI.FortHaveInviteSelect
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x548 - 0x528)
	class UFortHaveInviteSelect : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Yes; // 0x538(0x8)
		UCommonButtonLegacy* Button_No; // 0x540(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHaveInviteSelect");
			return ret;
		}
	};


	// Class FortniteUI.FortLoginCredentialSelect
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x448 - 0x3F0)
	class UFortLoginCredentialSelect : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Epic; // 0x410(0x8)
		UCommonButtonLegacy* Button_Facebook; // 0x418(0x8)
		UCommonButtonLegacy* Button_Google; // 0x420(0x8)
		UCommonButtonLegacy* Button_PS; // 0x428(0x8)
		UCommonButtonLegacy* Button_XB; // 0x430(0x8)
		UCommonButtonLegacy* Button_Erebus; // 0x438(0x8)
		UCommonButtonLegacy* Button_CreateAccount; // 0x440(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoginCredentialSelect");
			return ret;
		}
	};


	// Class FortniteUI.FortLoginInteractions
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x168 (0x558 - 0x3F0)
	class UFortLoginInteractions : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x88]; // 0x3F0(0x88) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Back; // 0x478(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_Input; // 0x480(0x8)
		USpacer* Spacer_Default; // 0x488(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x490(0x8) UNKNOWN PROPERTY
		UFortStartLoginContainer* Container_StartLogin; // 0x498(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x4A0(0x8) UNKNOWN PROPERTY
		UFortLoginCredentialSelect* Credential_Select; // 0x4A8(0x8)
		unsigned char UnknownData03_6[0x8]; // 0x4B0(0x8) UNKNOWN PROPERTY
		UFortSignInWidget* SignIn_Credentials; // 0x4B8(0x8)
		unsigned char UnknownData04_6[0x8]; // 0x4C0(0x8) UNKNOWN PROPERTY
		UFortAccountNotFound* Account_NotFound; // 0x4C8(0x8)
		unsigned char UnknownData05_6[0x8]; // 0x4D0(0x8) UNKNOWN PROPERTY
		UFortDisplayNameWidget* DisplayName_Create; // 0x4D8(0x8)
		unsigned char UnknownData06_6[0x8]; // 0x4E0(0x8) UNKNOWN PROPERTY
		UFortMultiFactorAuthWidget* MFA_Auth; // 0x4E8(0x8)
		unsigned char UnknownData07_6[0x8]; // 0x4F0(0x8) UNKNOWN PROPERTY
		UFortEulaWidgetsContainer* Container_EulaWidgets; // 0x4F8(0x8)
		unsigned char UnknownData08_6[0x8]; // 0x500(0x8) UNKNOWN PROPERTY
		UFortAccountLinkingWindow* Account_Link; // 0x508(0x8)
		unsigned char UnknownData09_6[0x8]; // 0x510(0x8) UNKNOWN PROPERTY
		UFortAccountPinLinkingWindow* Account_PinLink; // 0x518(0x8)
		unsigned char UnknownData10_6[0x8]; // 0x520(0x8) UNKNOWN PROPERTY
		UFortWebLoginWidget* Web_Login; // 0x528(0x8)
		unsigned char UnknownData11_6[0x8]; // 0x530(0x8) UNKNOWN PROPERTY
		UFortCorrectiveActionDateOfBirthScreen* AgeGateScreen; // 0x538(0x8)
		unsigned char UnknownData12_6[0x8]; // 0x540(0x8) UNKNOWN PROPERTY
		UFortCorrectiveActionFlow* CorrectiveActionFlow; // 0x548(0x8)
		unsigned char UnknownData13_7[0x8]; // 0x550(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoginInteractions");
			return ret;
		}

		void HandleDisplayWebLogin(UWidget* WebWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E9418(relative to base address)
		void HandleDisplayWebAccountCreation(UWidget* WebWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E9398(relative to base address)
		void HandleDismissWebLogin(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E9384(relative to base address)
		void HandleDismissWebAccountCreation(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7500E9384(relative to base address)
	};


	// Class FortniteUI.FortLoginStatus
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x5E0 - 0x560)
	class UFortLoginStatus : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x560(0x48) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Continue; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_Quit; // 0x5B0(0x8)
		UCommonTextBlock* Text_Title; // 0x5B8(0x8)
		UCommonTextBlock* Text_Status; // 0x5C0(0x8)
		UCommonButtonLegacy* Button_Status; // 0x5C8(0x8)
		UCommonButtonBase* Button_Continue_Redesign; // 0x5D0(0x8)
		UCommonButtonBase* Button_Quit_Redesign; // 0x5D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoginStatus");
			return ret;
		}

		bool ShouldUseBootUpRedesign(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500EA74C(relative to base address)
		void SetQuitButtonText(FText& QuitText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetContinueButtonText(FText& ContinueText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMOTDWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x558 - 0x528)
	class UFortMOTDWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Header; // 0x538(0x8)
		UCommonTextBlock* Text_Body; // 0x540(0x8)
		UCommonButtonLegacy* Button_Close; // 0x548(0x8)
		UScrollBox* ScrollBox; // 0x550(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMOTDWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortMultiFactorAuthWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x570 - 0x528)
	class UFortMultiFactorAuthWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		UCommonButtonLegacy* Button_Continue; // 0x528(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x530(0x8)
		UCommonTextBlock* Text_Error; // 0x538(0x8)
		UEditableText* EditText_MultiFactorCode; // 0x540(0x8)
		UCommonTextBlock* Text_Prompt; // 0x548(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x550(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultiFactorAuthWidget");
			return ret;
		}

		void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7500E96D8(relative to base address)
	};


	// Class FortniteUI.FortNewAccountWarning
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x558 - 0x528)
	class UFortNewAccountWarning : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x528(0x20) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_NewAccount; // 0x548(0x8)
		UCommonButtonLegacy* Button_Back; // 0x550(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNewAccountWarning");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayedBeforeSelect
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortPlayedBeforeSelect : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Yes; // 0x408(0x8)
		UCommonButtonLegacy* Button_No; // 0x410(0x8)
		UBackgroundBlur* BackgroundBlur_PendingSpinner; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayedBeforeSelect");
			return ret;
		}
	};


	// Class FortniteUI.FortQualityLevelSelectScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x5C8 - 0x528)
	class UFortQualityLevelSelectScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x528(0x20) UNKNOWN PROPERTY
		TSet<EFortGameFeature> GameFeaturesToVerify; // 0x548(0x50)
		UFortQualityModeTile* Button_SelectMediumQuality; // 0x598(0x8)
		UFortQualityModeTile* Button_SelectHighQuality; // 0x5A0(0x8)
		UCommonButtonLegacy* Button_Confirm; // 0x5A8(0x8)
		UFortHUDQualityLevelSelectTimer* QualityLevelSelectTimer; // 0x5B0(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x5B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQualityLevelSelectScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortWebLoginWidget
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortWebLoginWidget : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x528(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWebLoginWidget");
			return ret;
		}

		void DisplayWidget(UWidget* WebWidget); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DismissWidget(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.HealthWarningScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x560 - 0x528)
	class UHealthWarningScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		float ShowTimeLength; // 0x530(0x4)
		unsigned char UnknownData01_6[0x1C]; // 0x534(0x1C) UNKNOWN PROPERTY
		UCommonTextBlock* Text_HealthWarning; // 0x550(0x8)
		URestrictedCountryRatingIcons* RatingIcons_RatingIcons; // 0x558(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.HealthWarningScreen");
			return ret;
		}
	};


	// Class FortniteUI.RestrictedCountryRatingIcons
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class URestrictedCountryRatingIcons : public UCommonUserWidget	
	{
	public:
		float IconSize; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UHorizontalBox* HBox_RatingIcons; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RestrictedCountryRatingIcons");
			return ret;
		}
	};


	// Class FortniteUI.FortContentControlSettingRegistry
	// Inherited from UFortSettingRegistry -> UObject
	// Size: 0x28 (0x140 - 0x118)
	class UFortContentControlSettingRegistry : public UFortSettingRegistry	
	{
	public:
		UFortSettingCollection* ContentControlSettings; // 0x118(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x120(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortContentControlSettingRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeOptionsDisplay
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortCreativeOptionsDisplay : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeOptionsDisplay");
			return ret;
		}
	};


	// Class FortniteUI.FortCreativeSpawnDisplay
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UFortCreativeSpawnDisplay : public UFortActivatablePanel	
	{
	public:
		TArray<FRarityArray> ItemArray; // 0x560(0x10)
		TArray<UFortItemDefinition*> AllItems; // 0x570(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCreativeSpawnDisplay");
			return ret;
		}

		void OnLoadedItems(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void LoadItems(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500E9AF0(relative to base address)
	};


	// Class FortniteUI.FortGamePadCustomActionSelectorPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortGamePadCustomActionSelectorPanel : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGamePadCustomActionSelectorPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortGamePadInfoSelectorPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortGamePadInfoSelectorPanel : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGamePadInfoSelectorPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortOptionsTab
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UFortOptionsTab : public UCommonActivatableWidget	
	{
	public:
		FMulticastInlineDelegate OnTabSettingChanged; // 0x3F0(0x10)
		FMulticastInlineDelegate OnTabActivated; // 0x400(0x10)
		FMulticastInlineDelegate OnTabDeactivated; // 0x410(0x10)
		ESettingTab TabType; // 0x420(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x421(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsTab");
			return ret;
		}

		void UpdateOptionsTab(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TempNew_UpdateOptionsTab(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748178B90(relative to base address)
		void ResetOptionsToDefault(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BBAE4(relative to base address)
		bool IsControllerDefaultInputType(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E9A1C(relative to base address)
		bool IsAthena(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E99BC(relative to base address)
		void DeactivateTab(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7E0(relative to base address)
		void CenterOnTab(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool AreParentalControlsEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E87F0(relative to base address)
		void ActivateTab(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
	};


	// Class FortniteUI.FortInputOptions
	// Inherited from UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x458 - 0x428)
	class UFortInputOptions : public UFortOptionsTab	
	{
	public:
		TArray<UFortOptionsMenuInputData*> InputData; // 0x428(0x10)
		UCommonListView* InputCommonListView; // 0x438(0x8)
		UCommonTextBlock* TooltipDisplay; // 0x440(0x8)
		UClass* InputCategoryWidgetClass; // 0x448(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x450(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInputOptions");
			return ret;
		}

		void HandleUsingGamepadChanged(ECommonInputType NewInputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget GetListWidget(UObject* Item); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E9160(relative to base address)
		FText GetInputDisplayTextBP(int32_t RowIndex); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E9098(relative to base address)
		int32_t GetInputDataIndexForActionName(FName ActionName); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E8FD8(relative to base address)
		FText GetBoundKeyNameBP(int32_t RowIndex, bool IsPrimary); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E8E8C(relative to base address)
		TArray GetActionItemsInGroup(EFortInputActionGroup InputActionGroup); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E8DC8(relative to base address)
		FFortActionBeingUnbound GetActionBeingUnbound(bool bIsPrimarySlot, int32_t Input, FKey NewKey); // Flags: Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E8B8C(relative to base address)
		void ConstructKeyBindList(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74F49E694(relative to base address)
		void ChangeBinding(bool bIsPrimarySlot, int32_t Input, FKey NewKey); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E8934(relative to base address)
	};


	// Class FortniteUI.FortGamepadInputOptions
	// Inherited from UFortInputOptions -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x470 - 0x458)
	class UFortGamepadInputOptions : public UFortInputOptions	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x458(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGamepadInputOptions");
			return ret;
		}

		void SetControllerPlatformEnum(ECommonGamepadType InControllerPlatform); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA580(relative to base address)
		void SetControllerPlatform(FString InControllerPlatform); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA4A8(relative to base address)
		void ResetCustomGamepadToDefault(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA314(relative to base address)
		bool IsCustomGamepadConfig(FString ConfigName); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E9A54(relative to base address)
		bool HasCustomGamepadBindingChanges(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E9998(relative to base address)
		void HandleGamePadToggleMode(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FString GetControllerPlatform(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500E8F98(relative to base address)
		void BroadcastModalClosed(); // Flags: Final|Native|Private|BlueprintCallable|Const, Memory Exec: 0x7FF7500E8864(relative to base address)
		bool AreAllImportantActionsBound(TArray<FText>& OutUnboundScreenLabels, bool bRichText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500E866C(relative to base address)
	};


	// Class FortniteUI.FortGamepadMappingInfo
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortGamepadMappingInfo : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGamepadMappingInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortOptionsMenu
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA98 (0xFC0 - 0x528)
	class UFortOptionsMenu : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x528(0x20) UNKNOWN PROPERTY
		FPrimaryContentSetup PrimaryContentSetup; // 0x548(0x3)
		unsigned char UnknownData01_6[0x5]; // 0x54B(0x5) UNKNOWN PROPERTY
		FDataTableRowHandle ApplyInputAction; // 0x550(0x10)
		FDataTableRowHandle ApplyAndTestInputAction; // 0x560(0x10)
		FDataTableRowHandle TestInputAction; // 0x570(0x10)
		FDataTableRowHandle ToggleModeInputAction; // 0x580(0x10)
		FDataTableRowHandle ResetToDefaultInputAction; // 0x590(0x10)
		FDataTableRowHandle InputsResetToDefaulInputAction; // 0x5A0(0x10)
		FDataTableRowHandle BackAction; // 0x5B0(0x10)
		UClass* VideoTabClass; // 0x5C0(0x8)
		TWeakObjectPtr<UClass*> TabVideoOptions; // 0x5C8(0x20)
		UClass* GameplayTabClass; // 0x5E8(0x8)
		UClass* HUDTabClass; // 0x5F0(0x8)
		UClass* TouchOptionsClass; // 0x5F8(0x8)
		UClass* TouchWeaponOptionsClass; // 0x600(0x8)
		UClass* KeyboardMouseClass; // 0x608(0x8)
		UClass* ControllerSensitivityTabClass; // 0x610(0x8)
		TWeakObjectPtr<UClass*> ControllerSettingsOptions; // 0x618(0x20)
		UClass* AudioOptionsClass; // 0x638(0x8)
		UClass* InputTabClass; // 0x640(0x8)
		TWeakObjectPtr<UClass*> TabInputOptions; // 0x648(0x20)
		UClass* GamepadTabClass; // 0x668(0x8)
		UClass* GamepadTabClassV2; // 0x670(0x8)
		TWeakObjectPtr<UClass*> TabGamepadOptions; // 0x678(0x20)
		TWeakObjectPtr<UClass*> TabGamepadOptionsV2; // 0x698(0x20)
		UClass* AccountTabClass; // 0x6B8(0x8)
		TWeakObjectPtr<UClass*> TabAccountOptions; // 0x6C0(0x20)
		UClass* BorderBackgroundStyle; // 0x6E0(0x8)
		UClass* ProgressModalClass; // 0x6E8(0x8)
		UClass* IconTabButtonClass; // 0x6F0(0x8)
		UFortProgressModal* SavingModalInstance; // 0x6F8(0x8)
		TArray<FName> TabIds; // 0x700(0x10)
		TArray<FFortTabButtonLabelInfo> TabLabels; // 0x710(0x10)
		TArray<UFortOptionsTab*> TabWidgets; // 0x720(0x10)
		FTimerHandle ResetVideoOptionsTimer; // 0x730(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x738(0x8) UNKNOWN PROPERTY
		FSlateBrush VideoBrush; // 0x740(0xB0)
		FSlateBrush GameplayBrush; // 0x7F0(0xB0)
		FSlateBrush GameUIBrush; // 0x8A0(0xB0)
		FSlateBrush TouchOptionsBrush; // 0x950(0xB0)
		FSlateBrush TouchWeaponOptionsBrush; // 0xA00(0xB0)
		FSlateBrush KeyboardMouseBrush; // 0xAB0(0xB0)
		FSlateBrush ControllerSensitivityBrush; // 0xB60(0xB0)
		FSlateBrush AudioBrush; // 0xC10(0xB0)
		FSlateBrush InputBrush; // 0xCC0(0xB0)
		FSlateBrush GamepadOptionsBrush; // 0xD70(0xB0)
		FSlateBrush AccountPrivacyBrush; // 0xE20(0xB0)
		FGameplayTagContainer HUDHideOnMenuTags; // 0xED0(0x20)
		bool bVideoTabSelected; // 0xEF0(0x1)
		bool bApplyVisible; // 0xEF1(0x1)
		bool bIsLanguageConfirmationVisible; // 0xEF2(0x1)
		bool bIsLeavingOptionsMenu; // 0xEF3(0x1)
		unsigned char UnknownData03_6[0x4]; // 0xEF4(0x4) UNKNOWN PROPERTY
		UFortTabListWidgetBase_Legacy* TabList_Categories; // 0xEF8(0x8)
		UCommonWidgetSwitcherLegacy* SettingTabSwitcher; // 0xF00(0x8)
		UCommonTextBlock* Text_Title; // 0xF08(0x8)
		UNamedSlot* SavingLayer; // 0xF10(0x8)
		UCommonBorder* Message; // 0xF18(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0xF20(0x8)
		UCommonButtonBase* VideoSettingsAccept; // 0xF28(0x8)
		UCommonButtonBase* VideoSettingsCancel; // 0xF30(0x8)
		UCommonBorder* Border_Background; // 0xF38(0x8)
		unsigned char UnknownData04_7[0x80]; // 0xF40(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsMenu");
			return ret;
		}

		void UpdateHeaderTextByTabId(FName TabID); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E95BC(relative to base address)
		void UpdateBasedOnActiveWidget(UWidget* ActiveWidget, bool bShouldCenterOnTab); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA8FC(relative to base address)
		void UpdateAllOptionTabs(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EA8E8(relative to base address)
		bool ShowVideoOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA8C4(relative to base address)
		void ShowUnsavedConfirmation(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA8B0(relative to base address)
		bool ShowTouchWeaponOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA88C(relative to base address)
		bool ShowTouchAndMotionOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA868(relative to base address)
		bool ShowNewControllerSenseOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA844(relative to base address)
		bool ShowInputOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA820(relative to base address)
		bool ShowInputMappingOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA7FC(relative to base address)
		bool ShowGameUIOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA7E4(relative to base address)
		bool ShowGameplayOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA7A8(relative to base address)
		bool ShowControllerOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA7C0(relative to base address)
		bool ShowAudioOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA7A8(relative to base address)
		bool ShowAccountOptions(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA784(relative to base address)
		bool ShouldUseNewControllerSettings(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7500EA764(relative to base address)
		void SetOverrideResetToDefaultModal(bool bOverride); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EA64C(relative to base address)
		void SetBackground(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EA494(relative to base address)
		void SetApplyOrTest(bool bShowApply); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA414(relative to base address)
		void ResetGameOptionsToDefault(UFortOptionsTab* OptionsTab); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EA394(relative to base address)
		void ResetClientHUDSettings(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA300(relative to base address)
		void ResetActionHandlerStates(bool bIsBackButtonDisabled); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA280(relative to base address)
		bool RequestTab(FName TabID, FString SettingDevName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500EA19C(relative to base address)
		void OnVideoCancel(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA0B0(relative to base address)
		void OnVideoAccept(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EA09C(relative to base address)
		void OnToggleModeInternal(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500EA010(relative to base address)
		void OnTest(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9F84(relative to base address)
		void OnTabSettingChanged(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9F70(relative to base address)
		void OnSplitscreenUpdateSizing(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowResetToDefaultModal(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSettingsTabListPopulated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRestoreToInitial(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9F54(relative to base address)
		void OnResetToDefaults(int32_t PresetToSet); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9E80(relative to base address)
		void OnResetToDefaultInternal(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9E04(relative to base address)
		void OnReset(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9DF0(relative to base address)
		void OnInputsResetToDefault(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInputResetToDefaultInternal(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9D64(relative to base address)
		void OnBackInternal(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9CE8(relative to base address)
		void OnBack(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnApplySettingsInternal(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9C6C(relative to base address)
		void OnApplyAndTest(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7500E9BE0(relative to base address)
		void NotifyTabsOfActivationState(UFortOptionsTab* ActivatedTab); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E9B60(relative to base address)
		bool NeedsVideoChangeConfirmation(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9B3C(relative to base address)
		bool NeedsLanguageChangeConfirmation(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9B18(relative to base address)
		void MenuInitialize(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E9B04(relative to base address)
		void HandleTabSelected(FName TabID); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500E95BC(relative to base address)
		void HandleTabGamepadConfigActionHandlerStates(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleResetAvailableActionHandlerStates(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E9594(relative to base address)
		void HandleReset(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E9580(relative to base address)
		void HandleApply(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E935C(relative to base address)
		void HandleActiveWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500E921C(relative to base address)
		void ExitIfTabSaved(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E8B78(relative to base address)
		void ClearCachedEula(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E8B64(relative to base address)
		void CenterOnActiveTab(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E88B8(relative to base address)
		void ApplySettingss(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500E8658(relative to base address)
		void AddTabs(UClass* WidgetClass, FText& DisplayName, FName NameId, FSlateBrush& Icon, ESettingTab TabType); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7500E83BC(relative to base address)
	};


	// Class FortniteUI.FortOptionsMenuSetting
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x348 - 0x2D8)
	class UFortOptionsMenuSetting : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate SettingValueChanged; // 0x2D8(0x10)
		ESettingType SettingType; // 0x2E8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E9(0x7) UNKNOWN PROPERTY
		FText NameText; // 0x2F0(0x10)
		UCommonTextBlock* TabTooltipText; // 0x300(0x8)
		FText HoverText; // 0x308(0x10)
		FTimerHandle TooltipTimer; // 0x318(0x8)
		int32_t MinIntegralDigits; // 0x320(0x4)
		int32_t MaxIntegralDigits; // 0x324(0x4)
		int32_t MinFractionalDigits; // 0x328(0x4)
		int32_t MaxFractionalDigits; // 0x32C(0x4)
		float MinSensitivityValue; // 0x330(0x4)
		float MaxSensitivityValue; // 0x334(0x4)
		float PreviousSettingValue; // 0x338(0x4)
		bool bDisplayRenderScale; // 0x33C(0x1)
		bool HideLabelText; // 0x33D(0x1)
		bool HideSpaceRight; // 0x33E(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x33F(0x1) UNKNOWN PROPERTY
		UAnalogSlider* Slider_Menu; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsMenuSetting");
			return ret;
		}

		void UpdateVisuals(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateSetting(UCommonTextBlock* TooltipTextBlock); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EAA80(relative to base address)
		void HandleCaptureEnd(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500E9370(relative to base address)
		void HandleAnalogCaptureEnd(float Value); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7500E92E0(relative to base address)
		void CenterOnWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500E88FC(relative to base address)
	};


	// Class FortniteUI.FortSettingInfo
	// Inherited from UObject
	// Size: 0x50 (0x78 - 0x28)
	class UFortSettingInfo : public UObject	
	{
	public:
		ESettingType SettingType; // 0x28(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x29(0x7) UNKNOWN PROPERTY
		UClass* SettingWidgetType; // 0x30(0x8)
		FText OptionDisplayText; // 0x38(0x10)
		FText OptionHoverText; // 0x48(0x10)
		int32_t MinIntegralDigits; // 0x58(0x4)
		int32_t MaxIntegralDigits; // 0x5C(0x4)
		int32_t MinFractionalDigits; // 0x60(0x4)
		int32_t MaxFractionalDigits; // 0x64(0x4)
		float StepSize; // 0x68(0x4)
		float MinSensitivityValue; // 0x6C(0x4)
		float MaxSensitivityValue; // 0x70(0x4)
		TEnumAsByte<ERoundingMode> RoundingMode; // 0x74(0x1)
		unsigned char UnknownData01_7[0x3]; // 0x75(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortOptionsTab_NewSystemShim
	// Inherited from UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x438 - 0x428)
	class UFortOptionsTab_NewSystemShim : public UFortOptionsTab	
	{
	public:
		UFortSettingsPanel* Settings_Panel; // 0x428(0x8)
		TWeakObjectPtr<UFortGameSettingRegistry*> SettingRegistry; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionsTab_NewSystemShim");
			return ret;
		}

		bool AttemptToPopNavigation(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7500E8840(relative to base address)
	};


	// Class FortniteUI.FortTabVideoOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabVideoOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabVideoOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabAudioOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabAudioOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabAudioOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabGameplayOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabGameplayOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabGameplayOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabHUDOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabHUDOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabHUDOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabMouseAndKeyboardOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabMouseAndKeyboardOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabMouseAndKeyboardOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabMouseAndKeyboardBindingsOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabMouseAndKeyboardBindingsOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabMouseAndKeyboardBindingsOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabGamepadOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabGamepadOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabGamepadOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabGamepadButtonMappingOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabGamepadButtonMappingOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabGamepadButtonMappingOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabTouchOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabTouchOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabTouchOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabTouchWeaponOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabTouchWeaponOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabTouchWeaponOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortTabAccountOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabAccountOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabAccountOptions_TempNew");
			return ret;
		}

		void ViewPurchaseHistory(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7500EAB00(relative to base address)
	};


	// Class FortniteUI.FortTabControllerBindingsOptions_TempNew
	// Inherited from UFortOptionsTab_NewSystemShim -> UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x438 - 0x438)
	class UFortTabControllerBindingsOptions_TempNew : public UFortOptionsTab_NewSystemShim	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabControllerBindingsOptions_TempNew");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x630 - 0x560)
	class UFortParentalControls : public UFortActivatablePanel	
	{
	public:
		UCommonButtonLegacy* Button_CloseScreen; // 0x560(0x8)
		UCommonButtonLegacy* Button_CloseTouch; // 0x568(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_SubViews; // 0x570(0x8)
		UFortParentalControls_EnterPin* SubView_EnterPin; // 0x578(0x8)
		UFortParentalControls_SetupPin* SubView_SetupPin; // 0x580(0x8)
		UFortParentalControls_AskToEnableControls* SubView_AskToEnableControls; // 0x588(0x8)
		UFortParentalControls_VerifyEmail* SubView_VerifyEmail; // 0x590(0x8)
		UFortParentalControls_SetupEmail* SubView_SetupEmail; // 0x598(0x8)
		UFortParentalControls_DisplaySettings* SubView_DisplaySettings; // 0x5A0(0x8)
		UFortParentalControls_DisableParentalControls* SubView_DisableParentalControls; // 0x5A8(0x8)
		UFortParentalControls_AskToReEnable* SubView_AskToReEnable; // 0x5B0(0x8)
		UFortParentalControls_Renabling* SubView_Renabling; // 0x5B8(0x8)
		UFortParentalControls_CabinModeEmailSubScreen* SubView_CabinModeEmailChange; // 0x5C0(0x8)
		UFortSettingDetailView* Details_Settings; // 0x5C8(0x8)
		UOverlay* Overlay_SavingSettings; // 0x5D0(0x8)
		UFortParentalControlsUpdatedBase* UpdateNotice; // 0x5D8(0x8)
		UFortSidebarOnboardTooltipWidget* ContentRatingTooltip; // 0x5E0(0x8)
		UFortSidebarOnboardTooltipWidget* UnlockedContentTooltip; // 0x5E8(0x8)
		UFortSidebarOnboardTooltipWidget* CreativeUnlockTooltip; // 0x5F0(0x8)
		unsigned char UnknownData00_7[0x38]; // 0x5F8(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls");
			return ret;
		}

		void OnNewSubScreenSet(EParentalControlsViewState ScreenState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitActionChange(bool bIsExitAction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortParentalControlsSubScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortParentalControlsSubScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x3F0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControlsSubScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_CabinModeEmailSubScreen
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UFortParentalControls_CabinModeEmailSubScreen : public UFortParentalControlsSubScreen	
	{
	public:
		UFortCabinEmailManagementWidget* CabinEmailManagementWidget; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_CabinModeEmailSubScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_PinSubScreen
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x488 - 0x418)
	class UFortParentalControls_PinSubScreen : public UFortParentalControlsSubScreen	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x418(0x18) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_SubmitPin; // 0x430(0x8)
		UCommonTextBlock* Text_Pin_FailReason; // 0x438(0x8)
		UEditableText* EditableText_Pin_Entry; // 0x440(0x8)
		UEditableText* EditableText_Pin_SecondEntry; // 0x448(0x8)
		unsigned char UnknownData01_7[0x38]; // 0x450(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_PinSubScreen");
			return ret;
		}

		void HandleEnterPinTextChanged(FText& InText); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75010C3AC(relative to base address)
	};


	// Class FortniteUI.FortParentalControls_SettingModifyingSubScreen
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x468 - 0x418)
	class UFortParentalControls_SettingModifyingSubScreen : public UFortParentalControlsSubScreen	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x418(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_SettingModifyingSubScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_EnterPin
	// Inherited from UFortParentalControls_PinSubScreen -> UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x490 - 0x488)
	class UFortParentalControls_EnterPin : public UFortParentalControls_PinSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_ForgotPin; // 0x488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_EnterPin");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_SetupPin
	// Inherited from UFortParentalControls_PinSubScreen -> UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x488 - 0x488)
	class UFortParentalControls_SetupPin : public UFortParentalControls_PinSubScreen	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_SetupPin");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_AskToEnableControls
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UFortParentalControls_AskToEnableControls : public UFortParentalControlsSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_AskToEnableControls; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_AskToEnableControls");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_VerifyEmail
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x428 - 0x418)
	class UFortParentalControls_VerifyEmail : public UFortParentalControlsSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_VerifyEmail_Next; // 0x418(0x8)
		UCommonButtonLegacy* Button_ChangeEmail; // 0x420(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_VerifyEmail");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_SetupEmail
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x428 - 0x418)
	class UFortParentalControls_SetupEmail : public UFortParentalControlsSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_SetupEmail_Next; // 0x418(0x8)
		UCommonButtonLegacy* Button_SetupEmail; // 0x420(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_SetupEmail");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_DisplaySettings
	// Inherited from UFortParentalControls_SettingModifyingSubScreen -> UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x120 (0x588 - 0x468)
	class UFortParentalControls_DisplaySettings : public UFortParentalControls_SettingModifyingSubScreen	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x468(0x18) UNKNOWN PROPERTY
		UCommonTextBlock* Text_SaveFail; // 0x480(0x8)
		UCommonButtonLegacy* Button_SaveSettings; // 0x488(0x8)
		UCommonButtonLegacy* Button_MoreSettings; // 0x490(0x8)
		UCommonButtonLegacy* Button_DisableParentalControls; // 0x498(0x8)
		UFortSettingsPanel* Panel_Settings; // 0x4A0(0x8)
		unsigned char UnknownData01_7[0xE0]; // 0x4A8(0xE0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_DisplaySettings");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_DisableParentalControls
	// Inherited from UFortParentalControls_SettingModifyingSubScreen -> UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x480 - 0x468)
	class UFortParentalControls_DisableParentalControls : public UFortParentalControls_SettingModifyingSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_DisableParentalControlsConfirm; // 0x468(0x8)
		UCommonButtonLegacy* Button_DisableParentalControlsCancel; // 0x470(0x8)
		UCommonTextBlock* Text_DisablingParentalControlsStatus; // 0x478(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_DisableParentalControls");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_AskToReEnable
	// Inherited from UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x420 - 0x418)
	class UFortParentalControls_AskToReEnable : public UFortParentalControlsSubScreen	
	{
	public:
		UCommonButtonLegacy* Button_AskToReEnable; // 0x418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_AskToReEnable");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControls_Renabling
	// Inherited from UFortParentalControls_SettingModifyingSubScreen -> UFortParentalControlsSubScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x470 - 0x468)
	class UFortParentalControls_Renabling : public UFortParentalControls_SettingModifyingSubScreen	
	{
	public:
		UCommonTextBlock* Text_ReEnableFail; // 0x468(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControls_Renabling");
			return ret;
		}
	};


	// Class FortniteUI.FortTabGamepadOptions
	// Inherited from UFortOptionsTab -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x450 - 0x428)
	class UFortTabGamepadOptions : public UFortOptionsTab	
	{
	public:
		UCommonListView* InputCommonListView; // 0x428(0x8)
		UCommonTextBlock* TooltipDisplay; // 0x430(0x8)
		UClass* InputCategoryWidgetClass; // 0x438(0x8)
		UCommonButtonLegacy* Button_AdvancedSettingsToggle; // 0x440(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x448(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabGamepadOptions");
			return ret;
		}

		void ToggleAdvancedSettingsDisplay(bool bShowAdvancedSettings); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010CBF0(relative to base address)
		void ResetSettingsToDefault(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75010C97C(relative to base address)
		bool IsAdvancedSettingsEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75010C704(relative to base address)
		UWidget GetListWidget(UObject* Item); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C27C(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialCustomizationSubscreenBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UAthenaSpatialCustomizationSubscreenBase : public UCommonActivatableWidget	
	{
	public:
		UAthenaSpatialCustomizationRoomData* CustomizationRoomData; // 0x3F0(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x3F8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationSubscreenBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialCustomizationCategories
	// Inherited from UAthenaSpatialCustomizationSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x4A8 - 0x410)
	class UAthenaSpatialCustomizationCategories : public UAthenaSpatialCustomizationSubscreenBase	
	{
	public:
		UWidgetAnimation* IntroCategories; // 0x410(0x8)
		TMap<FName, FAthenaSpatialCustomizationCategoryGroup> CategoryGroups; // 0x418(0x50)
		UAthenaSpatialCustomizationCategoryEntry* LastSelectedCategory; // 0x468(0x8)
		unsigned char UnknownData00_7[0x38]; // 0x470(0x38) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationCategories");
			return ret;
		}

		void OnSetCaptureMode(bool bCaptureMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCategoryGroupProgress(FName CategoryGroup, int32_t NumCategoriesFinalized); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnCategoriesSetup(int32_t TotalNumCategoriesFinalized); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddCategoryGroup(FName CategoryGroup, TArray<UAthenaSpatialCustomizationCategoryEntry*>& CategoryEntries); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75010BFEC(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialNavigationButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UAthenaSpatialNavigationButton : public UCommonButtonLegacy	
	{
	public:
		FGameplayTag CameraTagToNavigateTo; // 0x13E0(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x13E4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialNavigationButton");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialCustomizationCategoryEntry
	// Inherited from UAthenaSpatialNavigationButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x1460 - 0x13E8)
	class UAthenaSpatialCustomizationCategoryEntry : public UAthenaSpatialNavigationButton	
	{
	public:
		UAthenaSpatialCustomizationChoice* Choice_SelectedChoice; // 0x13E8(0x8)
		UCommonTextBlock* Text_EntryName; // 0x13F0(0x8)
		UCommonTextBlock* Text_EntryName_Big; // 0x13F8(0x8)
		UCommonRichTextBlock* RichText_StateDescription; // 0x1400(0x8)
		UFortTokenType* CategoryKey; // 0x1408(0x8)
		bool bUseColorPicker; // 0x1410(0x1)
		bool bCategoryDefaultColorIsNull; // 0x1411(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x1412(0x2) UNKNOWN PROPERTY
		float LowerClampingColorBound; // 0x1414(0x4)
		unsigned char UnknownData01_7[0x48]; // 0x1418(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationCategoryEntry");
			return ret;
		}

		void OnCategoryStateSet(ESpatialCustomizationCategoryState State, FLinearColor StateColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialCustomizationChoice
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UAthenaSpatialCustomizationChoice : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UFortLazyImage* Image_ItemIcon; // 0x2E0(0x8)
		UImage* Image_Locked; // 0x2E8(0x8)
		UImage* Image_Owned; // 0x2F0(0x8)
		FName ColorChoiceDivetParam; // 0x2F8(0x4)
		FName NullColorDivetParam; // 0x2FC(0x4)
		FVector2D Size; // 0x300(0x10)
		FGameplayTag ChoiceTag; // 0x310(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x314(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationChoice");
			return ret;
		}

		void OnSetupChoice(ESpatialCustomizationCategoryState State, FLinearColor Color); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialCustomizationChoiceButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UAthenaSpatialCustomizationChoiceButton : public UCommonButtonLegacy	
	{
	public:
		UAthenaSpatialCustomizationChoice* Choice; // 0x13E0(0x8)
		UFortLazyImage* Image_Selected; // 0x13E8(0x8)
		TWeakObjectPtr<UObject*> SelectedImage; // 0x13F0(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationChoiceButton");
			return ret;
		}

		void OnSetupChoice(ESpatialCustomizationCategoryState CategoryState, FLinearColor& CategoryStateColor); // Flags: Event|Protected|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialCustomizationChoiceSelectButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13E0 - 0x13E0)
	class UAthenaSpatialCustomizationChoiceSelectButton : public UCommonButtonLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationChoiceSelectButton");
			return ret;
		}

		void SetupChoiceSelectButton(FLinearColor& CategoryStateColor); // Flags: Event|Public|HasOutParms|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x480 - 0x3F0)
	class UAthenaSpatialScreen : public UCommonActivatableWidget	
	{
	public:
		bool bEnableSpatialInputPreprocessing; // 0x3F0(0x1)
		bool bEnableAnalytics; // 0x3F1(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x3F2(0x2) UNKNOWN PROPERTY
		FGameplayTag OverrideScreenTag; // 0x3F4(0x4)
		UCommonButtonLegacy* Button_Back; // 0x3F8(0x8)
		FGameplayTag ScreenTag; // 0x400(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x404(0x4) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_TouchBack; // 0x408(0x8)
		bool bNeedsBottomBar; // 0x410(0x1)
		unsigned char UnknownData02_7[0x6F]; // 0x411(0x6F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialScreen");
			return ret;
		}

		void OnInputSuspensionChanged(); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
		void FireSpatialScreenAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C1E0(relative to base address)
		void AddSpatialScreenSessionCounter(FString Entry, int32_t Count); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C0D0(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialItemPreviewScreen
	// Inherited from UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x4C8 - 0x480)
	class UAthenaSpatialItemPreviewScreen : public UAthenaSpatialScreen	
	{
	public:
		UFortItemView* ItemViewObject; // 0x480(0x8)
		FName ItemPreviewActorTag; // 0x488(0x4)
		unsigned char UnknownData00_6[0x14]; // 0x48C(0x14) UNKNOWN PROPERTY
		FDataTableRowHandle ItemPreviewRotateInputAction; // 0x4A0(0x10)
		bool bEnableItemPreviewRotation; // 0x4B0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x4B1(0x7) UNKNOWN PROPERTY
		UAnimationAsset* IdleAnimation; // 0x4B8(0x8)
		bool bLooping; // 0x4C0(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x4C1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialItemPreviewScreen");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialCustomizationRoom
	// Inherited from UAthenaSpatialItemPreviewScreen -> UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x520 - 0x4C8)
	class UAthenaSpatialCustomizationRoom : public UAthenaSpatialItemPreviewScreen	
	{
	public:
		UAthenaSpatialCustomizationCategories* Categories; // 0x4C8(0x8)
		UAthenaSpatialCustomizationSelection* Selection; // 0x4D0(0x8)
		UCommonButtonLegacy* Button_About; // 0x4D8(0x8)
		UAthenaSpatialCustomizationRoomData* CustomizationRoomData; // 0x4E0(0x8)
		UFortGameStateComponent_EventLevel* EventGameStateComponent; // 0x4E8(0x8)
		TArray<FMcpVariantChannelInfo> CurrentVariantChannelStates; // 0x4F0(0x10)
		TArray<UAthenaSpatialCustomizationSubscreenBase*> SubScreens; // 0x500(0x10)
		ESpatialCustomizationRoomState RoomState; // 0x510(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x511(0x7) UNKNOWN PROPERTY
		FTimerHandle DelayedApplyColorHandle; // 0x518(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationRoom");
			return ret;
		}

		void OnShowFirstTimeInfo(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRoomStateChanged(ESpatialCustomizationRoomState CurrentRoomState, ESpatialCustomizationRoomState PreviousRoomState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialCustomizationRoomData
	// Inherited from UDataAsset -> UObject
	// Size: 0xE0 (0x110 - 0x30)
	class UAthenaSpatialCustomizationRoomData : public UDataAsset	
	{
	public:
		UAthenaCosmeticItemDefinition* CustomizationCosmetic; // 0x30(0x8)
		UAthenaRewardEventGraph* CustomizationRoomGraph; // 0x38(0x8)
		UFortChallengeBundleItemDefinition* CustomizationChallengeBundle; // 0x40(0x8)
		UClass* ConfirmationWindowClass; // 0x48(0x8)
		TArray<FSpatialCustomizationCategoryStateData> CategoryStates; // 0x50(0x10)
		FText FinalizeConfirmationTitle; // 0x60(0x10)
		FText FinalizeConfirmationDescription; // 0x70(0x10)
		FText UnlockAvailableText; // 0x80(0x10)
		FText UnlockUsedText; // 0x90(0x10)
		FText LockedByBattlePassText; // 0xA0(0x10)
		FText LockedByChallengeFormat; // 0xB0(0x10)
		FText LockedByChallengeCompletionText; // 0xC0(0x10)
		FText LockedByChallengeBundleCompletionFormat; // 0xD0(0x10)
		bool bUseNullColorOption; // 0xE0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0xE1(0x3) UNKNOWN PROPERTY
		FLinearColor NullColor; // 0xE4(0x10)
		unsigned char UnknownData01_6[0x4]; // 0xF4(0x4) UNKNOWN PROPERTY
		TArray<FLinearColor> Swatches; // 0xF8(0x10)
		bool bShowSelectedChoiceName; // 0x108(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x109(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationRoomData");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialCustomizationSelection
	// Inherited from UAthenaSpatialCustomizationSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x500 - 0x410)
	class UAthenaSpatialCustomizationSelection : public UAthenaSpatialCustomizationSubscreenBase	
	{
	public:
		UWidgetAnimation* IntroChoice; // 0x410(0x8)
		UCommonTextBlock* Text_CategoryTitle; // 0x418(0x8)
		UCommonTextBlock* Text_CategoryDescription; // 0x420(0x8)
		UCommonTextBlock* Text_SelectedChoiceName; // 0x428(0x8)
		UCommonRichTextBlock* RichText_LockedReason; // 0x430(0x8)
		UAthenaQuestProgression* QuestProgress_ChallengeProgression; // 0x438(0x8)
		UCommonButtonLegacy* Button_PurchaseBattlepass; // 0x440(0x8)
		UFortColorPicker* ColorPicker; // 0x448(0x8)
		UCommonButtonLegacy* Button_FinalizeChoice; // 0x450(0x8)
		UCommonButtonLegacy* Button_PreviousCategory; // 0x458(0x8)
		UCommonButtonLegacy* Button_NextCategory; // 0x460(0x8)
		UCommonButtonLegacy* Button_PreviousChoice; // 0x468(0x8)
		UCommonButtonLegacy* Button_NextChoice; // 0x470(0x8)
		UAthenaSpatialCustomizationChoice* Choice_SelectedChoice; // 0x478(0x8)
		UAthenaSpatialCustomizationChoice* Choice_CustomizationChoicePrevious; // 0x480(0x8)
		UAthenaSpatialCustomizationChoice* Choice_CustomizationChoiceNext; // 0x488(0x8)
		UAthenaSpatialCustomizationChoice* Choice_UnlockUsed; // 0x490(0x8)
		TArray<UAthenaSpatialCustomizationCategoryEntry*> Categories; // 0x498(0x10)
		UFortGameStateComponent_EventLevel* EventGameStateComponent; // 0x4A8(0x8)
		unsigned char UnknownData00_7[0x50]; // 0x4B0(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialCustomizationSelection");
			return ret;
		}

		void OnUpdateFinalizedText(FText& InFinalizedChoiceText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinalizeChoiceStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinalizeChoiceFinished(bool bSucceeded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChoiceCountUpdated(int32_t ChoiceNum, int32_t TotalCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCategoryUpdated(ESpatialCustomizationCategoryState CategoryState, FLinearColor Color, bool bUseColorPicker); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.DonutChallengeScreen
	// Inherited from UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x510 - 0x480)
	class UDonutChallengeScreen : public UAthenaSpatialScreen	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x480(0x18) UNKNOWN PROPERTY
		UFortGameStateComponent_EventLevel* EventGameStateComponent; // 0x498(0x8)
		UAthenaSeasonItemDefinition* SeasonData; // 0x4A0(0x8)
		TWeakObjectPtr<UClass*> CustomMouseCursorWidget; // 0x4A8(0x20)
		UClass* HeaderEntryClass; // 0x4C8(0x8)
		UClass* EntryClass; // 0x4D0(0x8)
		TArray<UFortChallengeBundleItemDefinition*> DonutBundles; // 0x4D8(0x10)
		UFortChallengeBundleItemDefinition* SkinUnlockBundle; // 0x4E8(0x8)
		UCommonTextBlock* Text_AttractChallengeDescription; // 0x4F0(0x8)
		UCommonButtonLegacy* Button_BattlepassUpsell; // 0x4F8(0x8)
		UCommonHierarchicalScrollBox* ScrollBox_Challenges; // 0x500(0x8)
		UDynamicEntryBox* EntryBox_Challenges; // 0x508(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DonutChallengeScreen");
			return ret;
		}

		void UpdateBPOwnedStateVisuals(bool bInOwnsBattlePass); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowSkinUnlockMessage(bool bShowMessage, int32_t InChallengeNum); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetStyledCursorEnabled(bool bEnableStyledCursor); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C9D8(relative to base address)
		void SetEntryFocus(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C9C4(relative to base address)
		void ScrollToEndOfChallenges(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C990(relative to base address)
	};


	// Class FortniteUI.DonutChallengeEntryHeader
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UDonutChallengeEntryHeader : public UCommonButtonLegacy	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x13E0(0x8)
		UAthenaChallengeCountdownDisplay* Timer_UnlockTimer; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DonutChallengeEntryHeader");
			return ret;
		}

		void BPUpdateTitle(int32_t InWeek); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.DonutChallengeEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UDonutChallengeEntry : public UCommonButtonLegacy	
	{
	public:
		UCommonTextBlock* Text_Title; // 0x13E0(0x8)
		UFortLazyImage* Image_Reward; // 0x13E8(0x8)
		UImage* Image_Completed; // 0x13F0(0x8)
		UAthenaChallengeProgressBar* ProgressBar_Challenge; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.DonutChallengeEntry");
			return ret;
		}

		void BPIsCompleted(bool InCompletion); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPHasRewardTexture(bool InHasReward); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialChallengePunchCard
	// Inherited from UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x4C8 - 0x480)
	class USpatialChallengePunchCard : public UAthenaSpatialScreen	
	{
	public:
		TWeakObjectPtr<UAthenaChallengePunchCard*> FocusedPunchCard; // 0x480(0x8)
		FDataTableRowHandle NextPunchCardInputAction; // 0x488(0x10)
		UDynamicEntryBox* EntryBox_PunchCards; // 0x498(0x8)
		UScrollBox* Scroll_Box; // 0x4A0(0x8)
		TArray<TWeakObjectPtr> PunchCards; // 0x4A8(0x10)
		float LastStickInputTime; // 0x4B8(0x4)
		float InputDelayTime; // 0x4BC(0x4)
		unsigned char UnknownData00_7[0x8]; // 0x4C0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialChallengePunchCard");
			return ret;
		}

		void SetDiscoveredCount(int32_t KnownCount, int32_t CompletedCount, int32_t TotalCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowFirstTimeInfo(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialChallengePunchCardEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class USpatialChallengePunchCardEntry : public UCommonUserWidget	
	{
	public:
		UAthenaChallengePunchCard* PunchCard_Top; // 0x2D8(0x8)
		UAthenaChallengePunchCard* PunchCard_Bottom; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialChallengePunchCardEntry");
			return ret;
		}
	};


	// Class FortniteUI.SpatialFactionChoiceScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class USpatialFactionChoiceScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate BP_OnFactionChosen; // 0x408(0x10)
		UCommonButtonLegacy* Button_FactionChoice1; // 0x418(0x8)
		UCommonButtonLegacy* Button_FactionChoice2; // 0x420(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionChoiceScreen");
			return ret;
		}

		void OnFactionChosenDynamic__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialFactionPerkProgress
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class USpatialFactionPerkProgress : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionPerkProgress");
			return ret;
		}

		void OnInitializePerkProgress(int32_t FactionNumber, int32_t PerkLevel, float PercentProgress, bool bIsRevealed, bool bIsCurrentFaction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFactionSet(bool bIsCurrentFaction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialFactionPerkReward
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class USpatialFactionPerkReward : public UCommonButtonLegacy	
	{
	public:
		bool bIsTopRow; // 0x13E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x13E1(0x7) UNKNOWN PROPERTY
		UFortPlayerPerksItemDefinition* Faction1PerksItemDef; // 0x13E8(0x8)
		UFortPlayerPerksItemDefinition* Faction2PerksItemDef; // 0x13F0(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x13F8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionPerkReward");
			return ret;
		}

		void OnInitializePerkReward(int32_t FactionNumber, int32_t PerkLevel, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsRevealed, bool bIsEarned, bool bIsCurrentFaction, bool bShowBang); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFactionSet(bool bIsCurrentFaction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialFactionPerkTier
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class USpatialFactionPerkTier : public UUserWidget	
	{
	public:
		USpatialFactionPerkReward* Reward_Faction1; // 0x2B0(0x8)
		USpatialFactionPerkProgress* Progress_Faction1; // 0x2B8(0x8)
		USpatialFactionPerkReward* Reward_Faction2; // 0x2C0(0x8)
		USpatialFactionPerkProgress* Progress_Faction2; // 0x2C8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionPerkTier");
			return ret;
		}

		void OnInitializePerkTier(int32_t PerkLevel, bool bIsRevealed, int32_t PerkIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFactionSet(bool bIsCurrentFactionEarned, bool bIsRevealed, int32_t FactionNumber); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialFactionProgressScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x478 - 0x3F0)
	class USpatialFactionProgressScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x3F0(0x30) UNKNOWN PROPERTY
		UFortPlayerPerksItemDefinition* Faction1PerksItemDef; // 0x420(0x8)
		UFortPlayerPerksItemDefinition* Faction2PerksItemDef; // 0x428(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_FactionPerks; // 0x430(0x8)
		UCommonButtonLegacy* Button_SwapFaction; // 0x438(0x8)
		UCommonButtonLegacy* SpatialFaction_ShadowButton; // 0x440(0x8)
		UCommonButtonLegacy* SpatialFaction_GhostButton; // 0x448(0x8)
		UDynamicEntryBox* EntryBox_FactionPerkTiers; // 0x450(0x8)
		UScrollBox* ScrollBox_PerkItems; // 0x458(0x8)
		UFortSocialAvatarIcon* Icon_PlayerImage; // 0x460(0x8)
		UTextBlock* Text_PlayerName; // 0x468(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x470(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionProgressScreen");
			return ret;
		}

		void OnPerkSelected(UFortSpyTechItemDefinition* PerkItemDef, int32_t PerkLevel, int32_t PerkFaction, bool bIsRevealed, bool bIsEarned, bool bIsCurrentFaction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFactionSet(int32_t PlayerFaction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePerkSelected(UCommonButtonLegacy* AssociatedButton, int32_t Index); // Flags: Final|Native|Private, Memory Exec: 0x7FF75010C624(relative to base address)
	};


	// Class FortniteUI.SpatialFactionScreen
	// Inherited from UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x4B0 - 0x480)
	class USpatialFactionScreen : public UAthenaSpatialScreen	
	{
	public:
		USpatialFactionChoiceScreen* Screen_FactionChoice; // 0x480(0x8)
		USpatialFactionProgressScreen* Screen_FactionProgress; // 0x488(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x490(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionScreen");
			return ret;
		}

		void SetAboutScreenVisited(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C9AC(relative to base address)
		void OnFactionChoiceRequired(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FactionUnlockedPerkData
	// Inherited from UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFactionUnlockedPerkData : public UObject	
	{
	public:
		UFortItem* PerkItem; // 0x28(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FactionUnlockedPerkData");
			return ret;
		}
	};


	// Class FortniteUI.FactionUnlockedPerkListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFactionUnlockedPerkListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UFactionUnlockedPerkData* Perk; // 0x2E0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FactionUnlockedPerkListEntry");
			return ret;
		}

		void OnStaggerTimeStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStaggerTimeElapsed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPSetup(UFactionUnlockedPerkData* InPerk); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialFactionUnlockedPerksScreen
	// Inherited from UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x710 - 0x6A8)
	class USpatialFactionUnlockedPerksScreen : public UFortActivatablePanelWithItemPreview	
	{
	public:
		FMulticastInlineDelegate BP_OnUnlockedPerksScreenClosed; // 0x6A8(0x10)
		float StaggerTime; // 0x6B8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x6BC(0x4) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Back; // 0x6C0(0x8)
		UTileView* TileView_Perks; // 0x6C8(0x8)
		UCommonButtonLegacy* Button_TouchBack; // 0x6D0(0x8)
		unsigned char UnknownData01_6[0x18]; // 0x6D8(0x18) UNKNOWN PROPERTY
		UFortItem* LastViewedItem; // 0x6F0(0x8)
		TArray<UFactionUnlockedPerkData*> AllPerkItems; // 0x6F8(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x708(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialFactionUnlockedPerksScreen");
			return ret;
		}

		void OnUnlockedPerksScreenClosedDynamic__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemViewed(UFactionUnlockedPerkData* ItemDisplayed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SpatialMapPreviewScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x718 - 0x718)
	class USpatialMapPreviewScreen : public UFortItemPreviewScreen	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SpatialMapPreviewScreen");
			return ret;
		}
	};


	// Class FortniteUI.AthenaSpatialStyleCard
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UAthenaSpatialStyleCard : public UCommonButtonLegacy	
	{
	public:
		UFortCosmeticItemCard* ItemCard_Style; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialStyleCard");
			return ret;
		}

		void OnStyleImageSet(bool bUnlocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialStyleChallengeDetails
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x380 - 0x2D8)
	class UAthenaSpatialStyleChallengeDetails : public UCommonUserWidget	
	{
	public:
		UWidgetAnimation* PageRefresh; // 0x2D8(0x8)
		UWidgetAnimation* StyleRefresh; // 0x2E0(0x8)
		UWidgetAnimation* Intro; // 0x2E8(0x8)
		UDynamicEntryBox* EntryBox_Styles; // 0x2F0(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_Styles; // 0x2F8(0x8)
		UVerticalBox* VBox_Prerequisities; // 0x300(0x8)
		UDynamicEntryBox* EntryBox_Prerequisites; // 0x308(0x8)
		UVerticalBox* VBox_MainMission; // 0x310(0x8)
		UAthenaSpatialStyleChallengeUnlockReason* QuestProgression_MainMission; // 0x318(0x8)
		UCommonButtonLegacy* Button_PurchaseBattlepass; // 0x320(0x8)
		UFortGameStateComponent_EventLevel* EventGameStateComponent; // 0x328(0x8)
		FAthenaSpatialStyleCharacterData CharacterData; // 0x330(0x30)
		unsigned char UnknownData00_7[0x20]; // 0x360(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialStyleChallengeDetails");
			return ret;
		}

		void OnStyleUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPrerequisitesAndMissionUpdated(bool bLocked, FText& CharacterName, FText& StyleName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCharacterUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialStyleChallengeScreen
	// Inherited from UAthenaSpatialItemPreviewScreen -> UAthenaSpatialScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x508 - 0x4C8)
	class UAthenaSpatialStyleChallengeScreen : public UAthenaSpatialItemPreviewScreen	
	{
	public:
		UCommonButtonLegacy* Button_Previous; // 0x4C8(0x8)
		UCommonButtonLegacy* Button_Next; // 0x4D0(0x8)
		UCommonTextBlock* Text_Title; // 0x4D8(0x8)
		UCommonTextBlock* Text_Description; // 0x4E0(0x8)
		UDynamicEntryBox* EntryBox_CharacterChoices; // 0x4E8(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_CharacterChoices; // 0x4F0(0x8)
		UAthenaSpatialStyleChallengeDetails* ChallengeDetails_CharacterDetails; // 0x4F8(0x8)
		UAthenaSpatialStyleChallengeScreenData* StyleChallengeData; // 0x500(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialStyleChallengeScreen");
			return ret;
		}

		void OnShowFirstTimeInfo(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpatialStyleChallengeUnlockReason
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaSpatialStyleChallengeUnlockReason : public UCommonUserWidget	
	{
	public:
		UCommonRichTextBlock* RichText_Description; // 0x2D8(0x8)
		UHorizontalBox* HBox_MissionProgress; // 0x2E0(0x8)
		UProgressBar* ProgressBar_PercentComplete_Front; // 0x2E8(0x8)
		UProgressBar* ProgressBar_PercentComplete_Back; // 0x2F0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason");
			return ret;
		}

		void UpdateMissionProgressCount(int32_t CompletedCount, int32_t RequiredCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowBattlepassPurchaseReason(FText& InSeason); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowBattlepassLevelReason(int32_t InLevel); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUnlockReasonUpdated(bool bInUnlocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortStoreSkinDetailsPopup
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UFortStoreSkinDetailsPopup : public UCommonActivatableWidget	
	{
	public:
		UDataTable* OfferTagTable; // 0x3F0(0x8)
		UCommonRichTextBlock* RichText_ItemPrompt; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreSkinDetailsPopup");
			return ret;
		}

		void RequuestFadeOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestFadeIn(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaTopBar
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x4F0 - 0x3F0)
	class UAthenaTopBar : public UCommonActivatableWidget	
	{
	public:
		TArray<FFortTopBarTabButtonInfo> TabsInfo; // 0x3F0(0x10)
		TArray<FName> TabsToUnlockOnDownload; // 0x400(0x10)
		unsigned char UnknownData00_6[0x90]; // 0x410(0x90) UNKNOWN PROPERTY
		TSet<EFortBangType> TabButtonBangsToRestore; // 0x4A0(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaTopBar");
			return ret;
		}

		void OnSetSelectedTab(EFortUIFeature SelectedTab); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMobileTabLabelChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivityRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleTopNavSelectionChanged(EFortUIFeature Feature); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7499D3D5C(relative to base address)
		void HandleSocialButtonClicked(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF75010C6E8(relative to base address)
		EFortUIFeature BP_GetActiveTabForwardOnRemoval(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		EFortUIFeature BP_GetActiveTab(); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void AddIconToScreen(UCommonLazyImage* Image); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPhoenixSeasonDisplayInfo
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x38 (0x68 - 0x30)
	class UFortPhoenixSeasonDisplayInfo : public UPrimaryDataAsset	
	{
	public:
		UMaterialInterface* CenterBackgroundImage; // 0x30(0x8)
		UMaterialInterface* LeftBackgroundImage; // 0x38(0x8)
		UMaterialInterface* RightBackgroundImage; // 0x40(0x8)
		FLinearColor PowerBackgroundColor; // 0x48(0x10)
		FLinearColor LevelTextColor; // 0x58(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPhoenixSeasonDisplayInfo");
			return ret;
		}
	};


	// Class FortniteUI.CampaignTopBar
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x588 - 0x560)
	class UCampaignTopBar : public UFortActivatablePanel	
	{
	public:
		UDataTable* PhoenixSeasonDisplayInfoMap; // 0x560(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x568(0x18) UNKNOWN PROPERTY
		URestrictedCountryRatingIcons* RatingIcons_RatingIcons; // 0x580(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CampaignTopBar");
			return ret;
		}

		UFortPhoenixSeasonDisplayInfo TryGetCurrentPhoenixSeasonDisplayInfo(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010CC70(relative to base address)
		void SetOnlineFriendsCount(int32_t NewOnlineFriendsCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetActiveInvitesCount(int32_t NewActiveInvitesCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBladeMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortBladeMenu : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x3F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBladeMenu");
			return ret;
		}

		void OnRefreshOptions(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOpened(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClosed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBladeMenu_MainMenu
	// Inherited from UFortBladeMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x278 (0x688 - 0x410)
	class UFortBladeMenu_MainMenu : public UFortBladeMenu	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x410(0x178) UNKNOWN PROPERTY
		UCommonButtonBase* SidebarBackButton; // 0x588(0x8)
		unsigned char UnknownData01_6[0x30]; // 0x590(0x30) UNKNOWN PROPERTY
		UFortMainMenuButton* Button_ManageUnlockedContent; // 0x5C0(0x8)
		UCommonButtonBase* Button_Cilantro; // 0x5C8(0x8)
		UCommonButtonLegacy* Button_BackToHub; // 0x5D0(0x8)
		UCommonButtonLegacy* Button_Settings; // 0x5D8(0x8)
		UCommonButtonLegacy* Button_Subscription; // 0x5E0(0x8)
		UCommonButtonLegacy* Button_MobileBack; // 0x5E8(0x8)
		UCommonButtonLegacy* Button_SubgameSelection; // 0x5F0(0x8)
		UCommonButtonLegacy* Button_LeaveExperience; // 0x5F8(0x8)
		UCommonTextBlock* Text_BackToHubDisabledReason; // 0x600(0x8)
		UCommonButtonBase* Button_Store; // 0x608(0x8)
		UCommonButtonBase* Button_Locker; // 0x610(0x8)
		UCommonButtonLegacy* Button_CodeOfConduct; // 0x618(0x8)
		UCommonButtonLegacy* Button_Support; // 0x620(0x8)
		UFortMinigameButtons* MinigameButtons; // 0x628(0x8)
		URestrictedCountryRatingIcons* RatingIcons_RatingIcons; // 0x630(0x8)
		UVerticalBox* VerticalBox_ExtensionContainer; // 0x638(0x8)
		UWidgetSwitcher* Switcher_Menus; // 0x640(0x8)
		TWeakObjectPtr<UClass*> OptionsMenuClass; // 0x648(0x20)
		TWeakObjectPtr<UClass*> SettingScreenClass; // 0x668(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBladeMenu_MainMenu");
			return ret;
		}

		void ViewPurchaseHistory(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7500EAB00(relative to base address)
		void TryPushWidgetAsModalPanel(UUserWidget* InWidget); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010CDE4(relative to base address)
		void TryPushWidgetAsActivatablePanel(UUserWidget* InWidget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010CC94(relative to base address)
		void ShowConsoleWindow(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74921B8F8(relative to base address)
		bool ShouldForceHUDLayoutToolButtonVisible(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010CB9C(relative to base address)
		void ReleaseSavedMenuPosition(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C8D8(relative to base address)
		void RefreshFocus(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF749AAEBDC(relative to base address)
		bool IsInCreative(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C7AC(relative to base address)
		void HandleMatchmakingFlowChanged(bool bFlowActive); // Flags: Final|Native|Private, Memory Exec: 0x7FF75010C5A4(relative to base address)
		void FakeSidebarBackButtonClick(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBladeMenu_SocialPanel
	// Inherited from UFortBladeMenu -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x418 - 0x410)
	class UFortBladeMenu_SocialPanel : public UFortBladeMenu	
	{
	public:
		UFortSocialPanelView_UserLists* SocialPanel_UserLists; // 0x410(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBladeMenu_SocialPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortDualBladeMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x450 - 0x3F0)
	class UFortDualBladeMenu : public UCommonActivatableWidget	
	{
	public:
		FUIActionTag OpenSocialPanelActionTag; // 0x3F0(0x4)
		FUIActionTag OpenMainMenuActionTag; // 0x3F4(0x4)
		FUIActionTag SwitchProfileActionTag; // 0x3F8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3FC(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle TriggeringSocialPanelInputAction; // 0x400(0x10)
		FDataTableRowHandle TriggeringMainMenuInputAction; // 0x410(0x10)
		FDataTableRowHandle SwitchProfileInputAction; // 0x420(0x10)
		UFortSocialPanelView_Sidebar* Sidebar; // 0x430(0x8)
		UFortBladeMenu* TopRightWindowControlsWidget; // 0x438(0x8)
		UCommonButtonBase* Button_BackBoard; // 0x440(0x8)
		UFortSeasonDataWidget* BladesMenu_XpBar; // 0x448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDualBladeMenu");
			return ret;
		}

		void OnFullScreenWidgetCreated(UWidget* NewWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleBladeMenuRequestedClose(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortMainMenu
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x348 - 0x2D8)
	class UFortMainMenu : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnMainMenuRequestCloseDynamic; // 0x2D8(0x10)
		FText DefaultHelpText; // 0x2E8(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x2F8(0x18) UNKNOWN PROPERTY
		UCommonTextBlock* Text_CountDownTimer; // 0x310(0x8)
		UCommonButtonLegacy* Button_LeaveExperience; // 0x318(0x8)
		UCommonUserWidget* LeaveButton; // 0x320(0x8)
		UCommonTextBlock* ContextualHelpText; // 0x328(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x330(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMainMenu");
			return ret;
		}

		bool ShouldShowLeaveExperienceButton(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010CBCC(relative to base address)
		void RequestCloseMainMenu(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C944(relative to base address)
		void OnOpenSettings(FName TabNameID, FString SettingToSelect); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMainMenuRequestCloseDynamic__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget OnGetMainMenuFocusWidget(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool NeedsCenterWidget(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010C8A4(relative to base address)
	};


	// Class FortniteUI.FortMainMenuButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x110 (0x14F0 - 0x13E0)
	class UFortMainMenuButton : public UCommonButtonLegacy	
	{
	public:
		FText DefaultText; // 0x13E0(0x10)
		FSlateBrush DefaultBrush; // 0x13F0(0xB0)
		int32_t NormalButtonHeight; // 0x14A0(0x4)
		int32_t MobileButtonHeight; // 0x14A4(0x4)
		FMargin TextPadding; // 0x14A8(0x10)
		FMargin ContentPadding; // 0x14B8(0x10)
		UClass* MobileStyle; // 0x14C8(0x8)
		UCommonTextBlock* Text_Content; // 0x14D0(0x8)
		UImage* Image_Icon; // 0x14D8(0x8)
		UBorder* ContentBorder; // 0x14E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMainMenuButton");
			return ret;
		}

		void SetText(FText& InText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75010CB00(relative to base address)
	};


	// Class FortniteUI.FortMainMenuButtonExtension
	// Inherited from UFortMainMenuButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x14F0 - 0x14E8)
	class UFortMainMenuButtonExtension : public UFortMainMenuButton	
	{
	public:
		UClass* SidebarPanelToActivate; // 0x14E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMainMenuButtonExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortMainMenuLeaveButtonWrapper
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortMainMenuLeaveButtonWrapper : public UCommonUserWidget	
	{
	public:
		UCommonButtonBase* ButtonInternal; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x2E0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMainMenuLeaveButtonWrapper");
			return ret;
		}

		void OnTimerVisibilityChanged(ESlateVisibility InVisibility); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTimerTextChanged(FText& Text); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTextChanged(FText& Text); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLobbyStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75010C448(relative to base address)
		void HandleLobbyDisconnected(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75010C448(relative to base address)
	};


	// Class FortniteUI.FortMinigameButtons
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortMinigameButtons : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMinigameButtons");
			return ret;
		}

		UWidget OnGetDesiredFocusTarget(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsSpatialGameplayInterfaceReadyAndPawnValid(AActor* SpatialAsActor); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010C7D0(relative to base address)
	};


	// Class FortniteUI.FortMTXButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortMTXButton : public UCommonButtonLegacy	
	{
	public:
		UCommonNumericTextBlock* Text_Amount; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMTXButton");
			return ret;
		}

		void HandleLocalAccountInfoChanged(FFortPrivateAccountInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF75010C45C(relative to base address)
		void CancelInterpolation(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75010C1B4(relative to base address)
	};


	// Class FortniteUI.FortPhoenixLevelProgressionWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortPhoenixLevelProgressionWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPhoenixLevelProgressionWidget");
			return ret;
		}

		FFortPhoenixLevelProgressionRewards GetNextPhoenixLevelUpRewards(int32_t StartingLevel); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75010C31C(relative to base address)
	};


	// Class FortniteUI.FortSocialButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortSocialButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_NumFriends; // 0x13F0(0x8)
		UImage* Image_ActiveInviteBang; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialButton");
			return ret;
		}

		void OnNumFriendsTextUpdated(int32_t FriendsOnline); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTopBarTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UFortTopBarTabButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x9]; // 0x13E0(0x9) UNKNOWN PROPERTY
		bool bUseAlternateLabelStyle; // 0x13E9(0x1)
		bool bAlwaysShowTextLabel; // 0x13EA(0x1)
		unsigned char UnknownData01_7[0x2D]; // 0x13EB(0x2D) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTopBarTabButton");
			return ret;
		}

		void SetTabLabelInfo_Implementation(FFortTabButtonLabelInfo& TabLabelInfo); // Flags: Final|RequiredAPI|Native|Public|HasOutParms, Memory Exec: 0x7FF75010CA58(relative to base address)
		bool IsAlternateLabelStyleUsed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75010C794(relative to base address)
	};


	// Class FortniteUI.FortTopBarTabTextIconButton
	// Inherited from UFortTopBarTabButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1430 - 0x1418)
	class UFortTopBarTabTextIconButton : public UFortTopBarTabButton	
	{
	public:
		UFortBangWrapper_NUI* BangWrapper; // 0x1418(0x8)
		UImage* Image_MobileIcon; // 0x1420(0x8)
		UCommonTextBlock* Text_DisplayName; // 0x1428(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTopBarTabTextIconButton");
			return ret;
		}
	};


	// Class FortniteUI.InZoneTitleBarBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UInZoneTitleBarBase : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_MainMenu; // 0x3F0(0x8)
		UCommonButtonBase* Button_Close; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.InZoneTitleBarBase");
			return ret;
		}
	};


	// Class FortniteUI.FortGameFeatureAction_FlushFontCache
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFortGameFeatureAction_FlushFontCache : public UFortUIGameFeatureAction	
	{
	public:
		bool bFlushOnActivation; // 0x28(0x1)
		bool bFlushOnUnloading; // 0x29(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x2A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameFeatureAction_FlushFontCache");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddFrontendTab
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x218 (0x240 - 0x28)
	class UFortUIGameFeatureAction_AddFrontendTab : public UFortUIGameFeatureAction	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FExternalDynamicTabParams TabParameters; // 0x30(0x200)
		unsigned char UnknownData01_7[0x10]; // 0x230(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddFrontendTab");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddMapLegendEntries
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIGameFeatureAction_AddMapLegendEntries : public UFortUIGameFeatureAction	
	{
	public:
		TArray<FAthenaMapLegendEntryData> MapLegendEntries; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddMapLegendEntries");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddPlacementOverlayOverride
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIGameFeatureAction_AddPlacementOverlayOverride : public UFortUIGameFeatureAction	
	{
	public:
		TArray<FPlacementOverlayOverrideData> PlacementOverlayOverrideDatas; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddPlacementOverlayOverride");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddProductWidgetAlias
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x58 (0x80 - 0x28)
	class UFortUIGameFeatureAction_AddProductWidgetAlias : public UFortUIGameFeatureAction	
	{
	public:
		TMap<FProductWidgetKey, TWeakObjectPtr> ProductWidgetAliases; // 0x28(0x50)
		bool bIsMobileOnly; // 0x78(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x79(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddProductWidgetAlias");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddRichTextDecorators
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIGameFeatureAction_AddRichTextDecorators : public UFortUIGameFeatureAction	
	{
	public:
		TArray<FFortRichTextDecoratorExtension> AdditionalRichTextDecorators; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddRichTextDecorators");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddStandaloneFrontendTab
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x138 (0x160 - 0x28)
	class UFortUIGameFeatureAction_AddStandaloneFrontendTab : public UFortUIGameFeatureAction	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FStandaloneItemShopTabInfo TabInfo; // 0x30(0x120)
		unsigned char UnknownData01_7[0x10]; // 0x150(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddStandaloneFrontendTab");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddVariantToWidgetMapping
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x50 (0x78 - 0x28)
	class UFortUIGameFeatureAction_AddVariantToWidgetMapping : public UFortUIGameFeatureAction	
	{
	public:
		TMap<UClass*, TWeakObjectPtr> AddVariantToWidgetMapping; // 0x28(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddVariantToWidgetMapping");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AddWidgetAlias
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x58 (0x80 - 0x28)
	class UFortUIGameFeatureAction_AddWidgetAlias : public UFortUIGameFeatureAction	
	{
	public:
		TMap<FGameplayTag, TWeakObjectPtr> WidgetAliases; // 0x28(0x50)
		bool bIsMobileOnly; // 0x78(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x79(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AddWidgetAlias");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_AssociateFrontendPlugin
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x30 (0x58 - 0x28)
	class UFortUIGameFeatureAction_AssociateFrontendPlugin : public UFortUIGameFeatureAction	
	{
	public:
		FString PluginName; // 0x28(0x10)
		TArray<FString> AssociatedMnemonics; // 0x38(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x48(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_AssociateFrontendPlugin");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_DisableFrontendTabs
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortUIGameFeatureAction_DisableFrontendTabs : public UFortUIGameFeatureAction	
	{
	public:
		FFrontendDisabledTabs TabOptions; // 0x28(0x20)
		unsigned char UnknownData00_7[0x8]; // 0x48(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_DisableFrontendTabs");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_ModifyUIStateWidgets
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0xA0 (0xC8 - 0x28)
	class UFortUIGameFeatureAction_ModifyUIStateWidgets : public UFortUIGameFeatureAction	
	{
	public:
		TMap<EFortUIState, FStateWidgetEntry> StateWidgetClassOverrides; // 0x28(0x50)
		TMap<FGameplayTag, FTagStateWidgetEntry> StateWidgetClassesByTag; // 0x78(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_ModifyUIStateWidgets");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_OverrideMotdWidgets
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x40 (0x68 - 0x28)
	class UFortUIGameFeatureAction_OverrideMotdWidgets : public UFortUIGameFeatureAction	
	{
	public:
		TWeakObjectPtr<UClass*> MotdTeaserWidget; // 0x28(0x20)
		TWeakObjectPtr<UClass*> MotdFullScreenWidgetClass; // 0x48(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_OverrideMotdWidgets");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_OverridePostGameUIInfo
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x20 (0x48 - 0x28)
	class UFortUIGameFeatureAction_OverridePostGameUIInfo : public UFortUIGameFeatureAction	
	{
	public:
		TWeakObjectPtr<UFortPlaylistUIInfo*> PostGameUIData; // 0x28(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_OverridePostGameUIInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_PostFrontendFlowActions
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFortUIGameFeatureAction_PostFrontendFlowActions : public UFortUIGameFeatureAction	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x28(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_PostFrontendFlowActions");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_RegisterCustomInGameState
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x68 (0x90 - 0x28)
	class UFortUIGameFeatureAction_RegisterCustomInGameState : public UFortUIGameFeatureAction	
	{
	public:
		TWeakObjectPtr<UFortPlaylist*> Playlist; // 0x28(0x20)
		TArray<TWeakObjectPtr> PlaylistArray; // 0x48(0x10)
		bool bUsePlaylistArray; // 0x58(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x59(0x7) UNKNOWN PROPERTY
		TArray<UFortPlaylist*> CachedPlaylists; // 0x60(0x10)
		TWeakObjectPtr<UClass*> CustomInGameStateWidget; // 0x70(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_RegisterCustomInGameState");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_RegisterFrontendExperienceFlow
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x38 (0x60 - 0x28)
	class UFortUIGameFeatureAction_RegisterFrontendExperienceFlow : public UFortUIGameFeatureAction	
	{
	public:
		FFrontendExperienceFlowParams FlowParameters; // 0x28(0x30)
		unsigned char UnknownData00_7[0x8]; // 0x58(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_RegisterFrontendExperienceFlow");
			return ret;
		}
	};


	// Class FortniteUI.FortGamepadCustomListItem
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortGamepadCustomListItem : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGamepadCustomListItem");
			return ret;
		}
	};


	// Class FortniteUI.FortGFNExternalLinkWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortGFNExternalLinkWidgetBase : public UCommonActivatableWidget	
	{
	public:
		UCommonVisibilitySwitcher* Switcher_LinkType; // 0x3F0(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x3F8(0x8)
		UCommonButtonBase* Button_Back; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGFNExternalLinkWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.FortGridWidgetBase
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x170 (0x2E0 - 0x170)
	class UFortGridWidgetBase : public UContentWidget	
	{
	public:
		UClass* ClearWidgetType; // 0x170(0x8)
		float TileWidth; // 0x178(0x4)
		float TileHeight; // 0x17C(0x4)
		int32_t TilesAcross; // 0x180(0x4)
		int32_t TilesDown; // 0x184(0x4)
		bool bShrinkToFit; // 0x188(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x189(0x3) UNKNOWN PROPERTY
		float PeekOverflowTilePercentage; // 0x18C(0x4)
		FMargin TilePadding; // 0x190(0x10)
		FSlateBrush GridBackground; // 0x1A0(0xB0)
		FMargin GridBackgroundPadding; // 0x250(0x10)
		TArray<UObject*> DataProvider; // 0x260(0x10)
		FMulticastInlineDelegate OnTileGenerated; // 0x270(0x10)
		FMulticastInlineDelegate OnTileClicked; // 0x280(0x10)
		FMulticastInlineDelegate OnMouseEnterTile; // 0x290(0x10)
		FMulticastInlineDelegate OnMouseLeaveTile; // 0x2A0(0x10)
		UClass* TileWidgetType; // 0x2B0(0x8)
		EGridSortKind SortKind; // 0x2B8(0x1)
		bool bReversed; // 0x2B9(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x2BA(0x2) UNKNOWN PROPERTY
		FDelegateProperty GetSortKeyFor; // 0x2BC(0xC)
		unsigned char UnknownData02_7[0x10]; // 0x2C8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGridWidgetBase");
			return ret;
		}

		void SetTileWidth(float Width); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501467C4(relative to base address)
		void SetTilesDown(int32_t Down); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501468C8(relative to base address)
		void SetTilesAcross(int32_t Across); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146848(relative to base address)
		void SetTilePadding(FMargin Padding); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501466AC(relative to base address)
		void SetTileHeight(float Height); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146628(relative to base address)
		void SetPeekOverflowTilePercentage(float Percent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146490(relative to base address)
		void SetDataProvider(TArray<UObject*>& Data); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75014612C(relative to base address)
		void SetClearWidgetType(UClass* InClearWidgetType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146004(relative to base address)
		TArray GetTiles(); // Flags: Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750144C98(relative to base address)
		UFortGridPickerTile GetTileForObject(UObject* Object); // Flags: Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF750144C04(relative to base address)
	};


	// Class FortniteUI.FortGridPickerButton
	// Inherited from UFortGridWidgetBase -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UFortGridPickerButton : public UFortGridWidgetBase	
	{
	public:
		TEnumAsByte<EMenuPlacement> GridPlacement; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY
		UFortGridPickerGrid* GridWidget; // 0x2E0(0x8)
		bool bCloseOnTileClicked; // 0x2E8(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2E9(0x3) UNKNOWN PROPERTY
		FDelegateProperty GridWidgetDelegate; // 0x2EC(0xC)
		FMulticastInlineDelegate OnGridPickerOpenChanged; // 0x2F8(0x10)
		unsigned char UnknownData02_7[0x18]; // 0x308(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGridPickerButton");
			return ret;
		}

		void SetIsOpen(bool ShouldBeOpen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146404(relative to base address)
		void OnIsGridPickerOpenChanged__DelegateSignature(bool IsOpen); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145D94(relative to base address)
		UFortGridPickerGrid CreateGridWidget__DelegateSignature(); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortGridPickerGrid
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2C0 - 0x2C0)
	class UFortGridPickerGrid : public UFortUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGridPickerGrid");
			return ret;
		}
	};


	// Class FortniteUI.FortGridPickerTile
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2D0 - 0x2C0)
	class UFortGridPickerTile : public UFortUserWidget	
	{
	public:
		UObject* Data; // 0x2C0(0x8)
		UFortGridWidgetBase* Owner; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGridPickerTile");
			return ret;
		}

		void SetData(UObject* InData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ForwardClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501447B4(relative to base address)
	};


	// Class FortniteUI.FortGridWidget
	// Inherited from UFortGridWidgetBase -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortGridWidget : public UFortGridWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGridWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortHelpTreeItemBase
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortHelpTreeItemBase : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortHelpItem* HelpItem; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHelpTreeItemBase");
			return ret;
		}
	};


	// Class FortniteUI.FortNotificationEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortNotificationEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate FinishedDisplayingNotification; // 0x2E0(0x10)
		float DisplayTime; // 0x2F0(0x4)
		float MinDisplayTime; // 0x2F4(0x4)
		bool bRushDisplay; // 0x2F8(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2F9(0x3) UNKNOWN PROPERTY
		int32_t RushWidgetThreshold; // 0x2FC(0x4)
		TArray<UFortNotificationEntry*> LinkedNotifications; // 0x300(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x310(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry");
			return ret;
		}

		void StartNotificationOutro(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartNotificationIntro(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeStartNotificationOutro(); // Flags: Final|Native|Public, Memory Exec: 0x7FF750145D48(relative to base address)
		void FinishNotificationOutro(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7476407DC(relative to base address)
		void FinishNotificationIntro(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74F0F9DB4(relative to base address)
		void AddNotificationBackIntoPool(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortNotificationEntry_AssistedPlayer
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UFortNotificationEntry_AssistedPlayer : public UFortNotificationEntry	
	{
	public:
		UCommonTextBlock* Text_Header; // 0x318(0x8)
		UCommonTextBlock* Text_Description; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_AssistedPlayer");
			return ret;
		}
	};


	// Class FortniteUI.FortNotificationEntry_LevelUp
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortNotificationEntry_LevelUp : public UFortNotificationEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		UCommonRichTextBlock* Text_Header; // 0x320(0x8)
		UCommonTextBlock* Text_Description; // 0x328(0x8)
		UCommonTextBlock* Text_RewardType; // 0x330(0x8)
		UFortLazyImage* Reward_Preview; // 0x338(0x8)
		UFortLazyImage* Reward_Preview_Shadow; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_LevelUp");
			return ret;
		}

		void UpdateQuestRewardVisuals(UItemDefinitionBase* RewardItem, EFortRarity QuestRarity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateLevelUpVisuals(UFortItemDefinition* RewardItem); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortNotificationEntry_MiniChallenge
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UFortNotificationEntry_MiniChallenge : public UFortNotificationEntry	
	{
	public:
		TWeakObjectPtr<UFortQuestItem*> CompletedQuest; // 0x318(0x8)
		UAthenaMiniChallengeEntry* MiniChallenge; // 0x320(0x8)
		UXpEarnedSubNotification* XpSubNotification; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_MiniChallenge");
			return ret;
		}

		void TryToUpdateXpCompWithQuestReward(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146BD8(relative to base address)
	};


	// Class FortniteUI.FortMultipleReceivedItemWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortMultipleReceivedItemWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UFortLazyImage* Reward_Preview; // 0x2E0(0x8)
		UFortLazyImage* Reward_Preview_Shadow; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultipleReceivedItemWidget");
			return ret;
		}

		void UpdateVisuals(UItemDefinitionBase* RewardItem, int32_t ItemQuantity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortNotificationEntry_MultipleReceivedItem
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortNotificationEntry_MultipleReceivedItem : public UFortNotificationEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		bool bWillReceiveBonus; // 0x320(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x321(0x7) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Header; // 0x328(0x8)
		UFortMultipleReceivedItemWidget* DisplayItem; // 0x330(0x8)
		UFortMultipleReceivedItemWidget* DisplayItem; // 0x338(0x8)
		UFortMultipleReceivedItemWidget* DisplayItem; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_MultipleReceivedItem");
			return ret;
		}
	};


	// Class FortniteUI.FortNotificationEntry_PunchCard
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x330 - 0x318)
	class UFortNotificationEntry_PunchCard : public UFortNotificationEntry	
	{
	public:
		TWeakObjectPtr<UFortQuestItem*> CompletedQuest; // 0x318(0x8)
		UAthenaChallengePunchCard* PunchCard; // 0x320(0x8)
		UXpEarnedSubNotification* XpSubNotification; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_PunchCard");
			return ret;
		}
	};


	// Class FortniteUI.FortNotificationEntry_Quest
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x3B8 - 0x318)
	class UFortNotificationEntry_Quest : public UFortNotificationEntry	
	{
	public:
		FGameplayTagContainer TrackQuestDisabledProducts; // 0x318(0x20)
		TArray<FName> BoundActions; // 0x338(0x10)
		int32_t GoalCount; // 0x348(0x4)
		int32_t CurrentCount; // 0x34C(0x4)
		int32_t PreviousCount; // 0x350(0x4)
		bool bNeedsStagedNotification; // 0x354(0x1)
		bool bPreferRewardIcon; // 0x355(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x356(0x2) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Header; // 0x358(0x8)
		UAthenaChallengeDateTimeTextBlock* DateTimeText_TimeRemaining; // 0x360(0x8)
		UCommonTextBlock* Text_Description; // 0x368(0x8)
		UCommonTextBlock* Text_CategoryDisplay; // 0x370(0x8)
		URichTextBlock* RichText_ObjectivesCompleted; // 0x378(0x8)
		UCommonTextBlock* Text_FlavorText; // 0x380(0x8)
		UPanelWidget* Panel_AssistedBy; // 0x388(0x8)
		UXpEarnedSubNotification* XpSubNotification; // 0x390(0x8)
		UButton* Button_MobileClickCatcher; // 0x398(0x8)
		TWeakObjectPtr<UFortQuestItem*> WeakQuest; // 0x3A0(0x8)
		FName ObjectiveName; // 0x3A8(0x4)
		unsigned char UnknownData01_7[0xC]; // 0x3AC(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_Quest");
			return ret;
		}

		void UpdateQuestVisuals(FFortChallengeSetStyle& DisplayStyle); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateDefaultObjectiveVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void TrackCurrentQuest(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146B20(relative to base address)
		void ShowNextStagedObjectiveInformation(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750146978(relative to base address)
		void SetAssistData(bool bWasAssisted, FString OtherPlayersName); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateNotificationBackground(TWeakObjectPtr<UObject*>& AssetToDisplay, bool bUseRarityContainer, bool bIsDailyPunchcardQuest); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayRushedNotificationIntro(float Rate); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnableCompleteFlavorText(bool IsEnabled); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsQuestTrackingEnabled(); // Flags: Final|Native|Private|BlueprintCallable|Const, Memory Exec: 0x7FF750145AE8(relative to base address)
		void BP_OnTimerSet(EAthenaChallengeTimerState TimerState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnRaritySet(EFortRarity Rarity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInitializeQuestNotificationFinished(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortNotificationEntry_ReceivedItem
	// Inherited from UFortNotificationEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortNotificationEntry_ReceivedItem : public UFortNotificationEntry	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_RewardType; // 0x320(0x8)
		UCommonTextBlock* Text_Header; // 0x328(0x8)
		UCommonTextBlock* Text_Description; // 0x330(0x8)
		UFortLazyImage* Reward_Preview; // 0x338(0x8)
		UFortLazyImage* Reward_Preview_Shadow; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNotificationEntry_ReceivedItem");
			return ret;
		}

		void UpdateVisuals(UItemDefinitionBase* RewardItem, int32_t ItemQuantity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPickupManagerWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x380 - 0x318)
	class UFortPickupManagerWidget : public UFortHUDElementWidget	
	{
	public:
		UPanelWidget* Panel_AllResources; // 0x318(0x8)
		TArray<UFortResourceWidget*> AdditionalResourceWidgetsToTrack; // 0x320(0x10)
		TWeakObjectPtr<UFortResourceWidget*> CurrentSpendableVisibleWidget; // 0x330(0x8)
		FGameplayTagContainer GoldSpendablesActorTags; // 0x338(0x20)
		float OverlapGoldSpendableSphereRadius; // 0x358(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x35C(0x4) UNKNOWN PROPERTY
		TArray<UFortResourceWidget*> ResourceWidgets; // 0x360(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x370(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPickupManagerWidget");
			return ret;
		}

		void OnResourceWidgetVisibilityChanged(UFortResourceWidget* ResourceWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResourceItemPickedUp(UFortWorldItem* Item, int32_t Count); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRefreshCounts(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRefreshActiveResource(TEnumAsByte<EFortResourceType> CurrentResourceType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOutOfBuildingResources(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLowOnBuildingResources(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleWorldItemsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750145890(relative to base address)
		void HandleWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501457A4(relative to base address)
		void HandleSetWorldResourceWidgetVisibility(TEnumAsByte<EFortResourceType> ResourceType, bool bVisible); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501455DC(relative to base address)
		void HandleHUDElementVisibilityRefreshed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750145144(relative to base address)
		void CheckForGoldSpendables(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750144074(relative to base address)
	};


	// Class FortniteUI.FortPopUpCenterMessageModalPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortPopUpCenterMessageModalPanel : public UFortActivatablePanel	
	{
	public:
		UCommonUserWidget* Button_Leave; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPopUpCenterMessageModalPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortResourceWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x328 - 0x2D8)
	class UFortResourceWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		bool bPickUpVisible; // 0x2E0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UFortLazyImage* LazyImage_ResourceIcon; // 0x2E8(0x8)
		UCommonNumericTextBlock* NumericText_ResourceCount; // 0x2F0(0x8)
		UCommonNumericTextBlock* NumericText_ResourceCost; // 0x2F8(0x8)
		UFortResourceItemDefinition* ItemDefinition; // 0x300(0x8)
		TEnumAsByte<EFortResourceType> ResourceType; // 0x308(0x1)
		bool bCanUseShorthandCount; // 0x309(0x1)
		unsigned char UnknownData02_7[0x1E]; // 0x30A(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResourceWidget");
			return ret;
		}

		void SetResourceCost(int32_t ResourceCost); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146514(relative to base address)
		void OnResourceVisibilityUpdated(bool bVisible, float duration); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResourceCountUpdated(int32_t CurrentCount, int32_t MaxCount, bool bHasInfiniteResources); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResourceCostSet(int32_t ResourceCount, int32_t ResourceCost, bool bHasInfiniteResources); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsActiveResourceChanged(bool bIsActiveResource); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortWeaponAttachmentPointWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortWeaponAttachmentPointWidget : public UCommonUserWidget	
	{
	public:
		bool bBindToCustomActor; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2D9(0x3) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortWeaponComponent_TargetState*> TargetStateComponentWeakPtr; // 0x2DC(0x8)
		unsigned char UnknownData01_7[0x4]; // 0x2E4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponAttachmentPointWidget");
			return ret;
		}

		void OnIsValidTargetChanged(bool bInIsValidTarget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleViewTargetChanged(AFortPlayerController* PlayerController, AActor* OldViewTarget, AActor* NewViewTarget); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501456A4(relative to base address)
		void HandleIsValidTargetChanged(bool bInIsValidTarget); // Flags: Final|Native|Private, Memory Exec: 0x7FF75014516C(relative to base address)
		AActor GetCustomActorToBindTo(AActor* ViewTarget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortServerMessageWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortServerMessageWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x318(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortServerMessageWidget");
			return ret;
		}

		void SetServerMigrationDelegate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750146594(relative to base address)
		void OnAlertBegin(int32_t SecondsRemainingStart, int32_t SecondsRemainingEnd, FText& AlertText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleServerAlert(int32_t TimeRemainingStart, int32_t TimeRemainingEnd); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75014551C(relative to base address)
	};


	// Class FortniteUI.PapayaPostGameOptions
	// Inherited from UFortPostGameScreen -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x488 - 0x480)
	class UPapayaPostGameOptions : public UFortPostGameScreen	
	{
	public:
		UFortPostGameMenuListView* ListView_PostGameMenu; // 0x480(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PapayaPostGameOptions");
			return ret;
		}
	};


	// Class FortniteUI.PickupStream
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x358 - 0x318)
	class UPickupStream : public UFortHUDElementWidget	
	{
	public:
		TArray<FPickupStreamEntry> PickupDisplayEntries; // 0x318(0x10)
		unsigned char UnknownData00_6[0x10]; // 0x328(0x10) UNKNOWN PROPERTY
		int32_t MaxDisplayedItems; // 0x338(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x33C(0x4) UNKNOWN PROPERTY
		UClass* PickupEntryWidgetClass; // 0x340(0x8)
		float ExpirationTime; // 0x348(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x34C(0x4) UNKNOWN PROPERTY
		UVerticalBox* VerticalBox_PickupMessages; // 0x350(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PickupStream");
			return ret;
		}

		void RefreshPickupEntry(UUserWidget* EntryWidget, TWeakObjectPtr<UTexture2D*>& Icon, int32_t Count); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemPickedUp(UFortWorldItem* WorldItem, int32_t Count); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75014526C(relative to base address)
	};


	// Class FortniteUI.XpEarnedSubNotification
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UXpEarnedSubNotification : public UCommonUserWidget	
	{
	public:
		UFortQuestItem* QuestItem; // 0x2D8(0x8)
		bool bHasDisplayedXp; // 0x2E0(0x1)
		bool bHasDisplayedBars; // 0x2E1(0x1)
		unsigned char UnknownData00_7[0x1E]; // 0x2E2(0x1E) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.XpEarnedSubNotification");
			return ret;
		}

		void StartNotificationIntro(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetRewardValue(int32_t RewardValue, EFortEarnedSubRewardType RewardType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FinishedDisplayAnim(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501447A0(relative to base address)
	};


	// Class FortniteUI.FortSwipePanel
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x160 (0x2D0 - 0x170)
	class UFortSwipePanel : public UContentWidget	
	{
	public:
		FVector2D SwipeThreshold; // 0x170(0x10)
		ESwipeLenghtUnit ThresholdUnit; // 0x180(0x1)
		bool bBeginSwipeOnPointerEnter; // 0x181(0x1)
		bool bConsumePointerInput; // 0x182(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x183(0x5) UNKNOWN PROPERTY
		FMulticastInlineDelegate BP_OnSwipeLeft; // 0x188(0x10)
		FMulticastInlineDelegate BP_OnSwipeRight; // 0x198(0x10)
		FMulticastInlineDelegate BP_OnSwipeUp; // 0x1A8(0x10)
		FMulticastInlineDelegate BP_OnSwipeDown; // 0x1B8(0x10)
		FFortSwipeDetector SwipeDetector; // 0x1C8(0x98)
		unsigned char UnknownData01_7[0x70]; // 0x260(0x70) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSwipePanel");
			return ret;
		}

		void GetSwipeInfo(int32_t& OutIndex, FVector2D& OutSwipePercentage); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144AEC(relative to base address)
	};


	// Class FortniteUI.FortSwipePanelSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x10 (0x48 - 0x38)
	class UFortSwipePanelSlot : public UPanelSlot	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x38(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSwipePanelSlot");
			return ret;
		}
	};


	// Class FortniteUI.FortItemManagementCustomFilterModalWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x5C8 - 0x560)
	class UFortItemManagementCustomFilterModalWidget : public UFortActivatablePanel	
	{
	public:
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x560(0x8)
		TArray<EFortInventoryCustomFilter> AvailableFilters; // 0x568(0x10)
		TSet<EFortInventoryCustomFilter> LocalCustomFilterSet; // 0x578(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementCustomFilterModalWidget");
			return ret;
		}

		void ToggleFilter(EFortInventoryCustomFilter Filter); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501469B4(relative to base address)
		void OnEndCommitCustomFilter(bool bWasSuccessful); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCustomFilterSetUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBeginCommitCustomFilter(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsCustomFilterEnabled(EFortInventoryCustomFilter Filter); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145A54(relative to base address)
		void EnableAllFilters(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75014443C(relative to base address)
		void DisableAllFilters(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75014436C(relative to base address)
		void CommitCustomFilters(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750144088(relative to base address)
	};


	// Class FortniteUI.FortItemManagementEquipSlot
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2D0 - 0x2C0)
	class UFortItemManagementEquipSlot : public UFortUserWidget	
	{
	public:
		int32_t SlotIndex; // 0x2C0(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x2C4(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementEquipSlot");
			return ret;
		}

		bool WillAcceptItem(UFortItem* InItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146CC8(relative to base address)
		void UpdateInventoryChangedDelegate(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750146CA0(relative to base address)
	};


	// Class FortniteUI.FortItemManagementEquipSlotOverlayBox
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2C8 - 0x2C0)
	class UFortItemManagementEquipSlotOverlayBox : public UFortUserWidget	
	{
	public:
		UImage* Box_Fill; // 0x2C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementEquipSlotOverlayBox");
			return ret;
		}
	};


	// Class FortniteUI.FortItemManagementInventoryPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1D8 (0x4B0 - 0x2D8)
	class UFortItemManagementInventoryPanel : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x50]; // 0x2D8(0x50) UNKNOWN PROPERTY
		FName CurrentFilterName; // 0x328(0x4)
		EInventoryContentSortType CurrentSortType; // 0x32C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x32D(0x3) UNKNOWN PROPERTY
		UClass* FilterTabButtonType; // 0x330(0x8)
		UClass* FilterTabButtonStyle; // 0x338(0x8)
		TArray<FFortItemManagementInventoryFilterTabLabelInfo> FilterTabLabelInfoArray; // 0x340(0x10)
		UFortTabListWidgetBase_Legacy* FilterTabList; // 0x350(0x8)
		UCommonLoadGuard* TileViewLoadGuard; // 0x358(0x8)
		UFortItemTileView* TileView; // 0x360(0x8)
		UPanelWidget* CraftingPanel; // 0x368(0x8)
		UCommonLoadGuard* CraftingTileViewLoadGuard; // 0x370(0x8)
		UFortItemTileView* CraftingTileView; // 0x378(0x8)
		UPanelWidget* StoragePanel; // 0x380(0x8)
		UCommonLoadGuard* StorageTileViewLoadGuard; // 0x388(0x8)
		UFortItemTileView* StorageTileView; // 0x390(0x8)
		UCommonTextBlock* MulchRestrictionReasonText; // 0x398(0x8)
		EFortItemCardSize SmallTileSize; // 0x3A0(0x1)
		EFortItemCardSize LargeTileSize; // 0x3A1(0x1)
		unsigned char UnknownData02_6[0x2]; // 0x3A2(0x2) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x3A4(0x8)
		bool bCanDragItems; // 0x3AC(0x1)
		unsigned char UnknownData03_6[0x3]; // 0x3AD(0x3) UNKNOWN PROPERTY
		TArray<FQuickbarEquipSlotIndicesConfig> DefaultQuickbarEquipSlotIndicesConfigs; // 0x3B0(0x10)
		TMap<FName, int32_t> QuickbarEquipSlotIndices; // 0x3C0(0x50)
		unsigned char UnknownData04_6[0x90]; // 0x410(0x90) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x4A0(0x8)
		UWidget* WidgetToCenter; // 0x4A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementInventoryPanel");
			return ret;
		}

		void UpdateSchematicTiles(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146CB4(relative to base address)
		void ToggleTileSize(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146B0C(relative to base address)
		void TogglePrioritizeFavorites(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146A64(relative to base address)
		void SwitchPanelFocus(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501469A0(relative to base address)
		void SetSortType(EInventoryContentSortType SortType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501465A8(relative to base address)
		void SetFilter(FName FilterName); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501461E0(relative to base address)
		void RequestFocusEquipSlots(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145FA4(relative to base address)
		void RefreshCraftingSort(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145F90(relative to base address)
		void OnMulchRestrictionTextShown(bool bShown); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void MarkAllItemsAsSeen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145CF8(relative to base address)
		bool IsSwitchPanelAvailable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145BE4(relative to base address)
		bool IsSelectedItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145B30(relative to base address)
		bool HasUnlockedStorageSlots(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501458D0(relative to base address)
		void HandleSetOfItemsToMulchChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleQuickBarChangedBP(EFortQuickBars QuickBarType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemBeginDrag(UObject* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501451EC(relative to base address)
		void HandleInventoryUpdatedEvent(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750145158(relative to base address)
		void HandleFocusEquipSlotsBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleFilterTabSelected(FName TabNameID); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501450C4(relative to base address)
		void HandleFilterTabButtonCreated(FName TabNameID, UCommonButtonBase* TabButton); // Flags: Final|Native|Private, Memory Exec: 0x7FF750144FF0(relative to base address)
		void HandleDifferentSortTypeSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemManagementModeSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentFrontendInventoryFilterSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentFilterSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCustomInventoryFilterChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750144ED0(relative to base address)
		void HandleCursorModeChangedBP(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF750144DC8(relative to base address)
		void HandleCraftItemStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750144DB4(relative to base address)
		TArray GetUpgradeItemDefinitionsForCurrentInventory(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144D08(relative to base address)
		TArray GetSupportedSortTypesForCurrentInventory(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144AB0(relative to base address)
		bool GetShouldPrioritizeFavorites(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144A64(relative to base address)
		FText GetQualifiedFilterDisplayName(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144A28(relative to base address)
		void CycleSortType(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75014433C(relative to base address)
		bool CanDragItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750143EC8(relative to base address)
		void AdvanceSelection(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750143EB4(relative to base address)
		void AddItemStackToMulch(UFortItem* Item, int32_t Count); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750143D68(relative to base address)
	};


	// Class FortniteUI.FortItemManagementItemPopupMenu
	// Inherited from UFortPopupMenu_Legacy -> UCommonPopupMenuLegacy -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x550 - 0x548)
	class UFortItemManagementItemPopupMenu : public UFortPopupMenu_Legacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x548(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementItemPopupMenu");
			return ret;
		}

		void MulchItem(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750145D34(relative to base address)
		void HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCompareAction(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750144D6C(relative to base address)
		UFortItemManagementItemTileButton GetHostButton(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75014489C(relative to base address)
	};


	// Class FortniteUI.FortItemTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UFortItemTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UFortMultiSizeItemCard* ItemWidget; // 0x13F0(0x8)
		TWeakObjectPtr<UFortItem*> Item; // 0x13F8(0x8)
		EFortItemCardSize ItemCardSize; // 0x1400(0x1)
		bool IsRewardCard; // 0x1401(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x1402(0x6) UNKNOWN PROPERTY
		TScriptInterface<Class> ItemViewContext; // 0x1408(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemTileButton");
			return ret;
		}

		void OnTileSizeOverrideCheck(EFortItemCardSize SizeIn, EFortItemCardSize& SizeOut); // Flags: Event|Protected|HasOutParms|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemManagementItemTileButton
	// Inherited from UFortItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x14A0 - 0x1418)
	class UFortItemManagementItemTileButton : public UFortItemTileButton	
	{
	public:
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x1418(0x8)
		bool HasTheItemToDetail; // 0x1420(0x1)
		bool HasTheItemToCompareDetailsWith; // 0x1421(0x1)
		bool HasAnItemMarkedForMulching; // 0x1422(0x1)
		unsigned char UnknownData00_6[0x1]; // 0x1423(0x1) UNKNOWN PROPERTY
		int32_t MulchCount; // 0x1424(0x4)
		UOverlay* NotCraftableOverlay; // 0x1428(0x8)
		UFortDynamicEntryBox* EquipSlotOverlay; // 0x1430(0x8)
		UMenuAnchor* PopupMenuAnchor; // 0x1438(0x8)
		bool ShowCollectionBookIndicator; // 0x1440(0x1)
		bool ShowRefundIndicator; // 0x1441(0x1)
		unsigned char UnknownData01_6[0x46]; // 0x1442(0x46) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x1488(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x1490(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementItemTileButton");
			return ret;
		}

		void UpdateEquipSlotOverlay(int32_t CurrentSlotIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146C20(relative to base address)
		void PopulateEquipSlotOverlay(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145F7C(relative to base address)
		void OnSlotItemComplete(UFortAccountItem* SlottedItem, FName SlotId); // Flags: Final|Native|Private, Memory Exec: 0x7FF750145DBC(relative to base address)
		bool IsValidEquipSlotOverlayIndex(int32_t SlotIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145C64(relative to base address)
		void HandleShowRefundIndicatorChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShowCollectionBookIndicatorChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemMulchStateChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHasItemToDetailChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHasItemToCompareDetailsWithChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEquipSlotChanged(int32_t EquipSlot); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemManagementModeSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UUserWidget GetPopupMenu(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750144A04(relative to base address)
		EFortItemManagementMode GetItemManagementMode(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144928(relative to base address)
		FHomebaseSquadSlotId GetHomebaseSquadSlotForItem(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144804(relative to base address)
	};


	// Class FortniteUI.FortItemManagementItemDetailsPanel
	// Inherited from UFortItemDetailsHostPanel -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3D8 - 0x3B8)
	class UFortItemManagementItemDetailsPanel : public UFortItemDetailsHostPanel	
	{
	public:
		bool HasItemMarkedForMulching; // 0x3B8(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x3B9(0x3) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x3BC(0x8)
		unsigned char UnknownData01_6[0xC]; // 0x3C4(0xC) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x3D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementItemDetailsPanel");
			return ret;
		}

		void HandleHostSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHasItemMarkedForMulchingChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetAmmoTypeItemDefinitions(); // Flags: Final|Native|Static|Protected|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7501447C8(relative to base address)
	};


	// Class FortniteUI.FortItemManagementMulchDetailsPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortItemManagementMulchDetailsPanel : public UCommonUserWidget	
	{
	public:
		UFortItemQuantityListBase* ResourceList; // 0x2D8(0x8)
		TScriptInterface<Class> HostItemManagementMulchPanel; // 0x2E0(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x2F0(0x8) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x2F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementMulchDetailsPanel");
			return ret;
		}

		void SetHost(TScriptInterface<Class> Host); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501462E0(relative to base address)
		bool IsSpaceAvailableForMulch(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145BC0(relative to base address)
		void HandleSetOfItemsToMulchChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHostSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetItemsToMulch(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501449C4(relative to base address)
		TArray GetItemCountsToMulch(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501448C0(relative to base address)
		void CommitMulch(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75014409C(relative to base address)
	};


	// Class FortniteUI.FortItemManagementModeDetailsPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortItemManagementModeDetailsPanel : public UCommonUserWidget	
	{
	public:
		UCommonWidgetSwitcherLegacy* ModeWidgetSwitcher; // 0x2D8(0x8)
		UFortItemDetailsActivatablePanel* DetailsModeItemDetailsPanel; // 0x2E0(0x8)
		UFortItemDetailsActivatablePanel* ComparisonModeItemDetailsPanel; // 0x2E8(0x8)
		UFortItemDetailsActivatablePanel* MulchModeItemDetailsPanel; // 0x2F0(0x8)
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x2F8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x300(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementModeDetailsPanel");
			return ret;
		}

		void HandleHostSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemManagementModeSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		EFortItemManagementMode GetItemManagementMode(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75014494C(relative to base address)
	};


	// Class FortniteUI.FortItemManagementScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x168 (0x6C8 - 0x560)
	class UFortItemManagementScreen : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnItemViewRefreshed; // 0x568(0x10)
		unsigned char UnknownData01_6[0xC0]; // 0x578(0xC0) UNKNOWN PROPERTY
		EFortItemManagementMode Mode; // 0x638(0x1)
		EFortFrontendInventoryFilter FrontendInventoryFilter; // 0x639(0x1)
		bool bReadOnlyModeWIFE; // 0x63A(0x1)
		bool ConsumeItemRequestInProgress; // 0x63B(0x1)
		unsigned char UnknownData02_6[0x4]; // 0x63C(0x4) UNKNOWN PROPERTY
		FText RecycleText; // 0x640(0x10)
		UFortItemManagementInventoryPanel* InventoryPanel; // 0x650(0x8)
		UFortItemManagementModeDetailsPanel* ModeDetailsPanel; // 0x658(0x8)
		TWeakObjectPtr<UFortItem*> ItemToDetail; // 0x660(0x8)
		unsigned char UnknownData03_6[0x8]; // 0x668(0x8) UNKNOWN PROPERTY
		UClass* MulchConfirmationModalClass; // 0x670(0x8)
		UClass* CustomFilterModalClass; // 0x678(0x8)
		unsigned char UnknownData04_6[0x18]; // 0x680(0x18) UNKNOWN PROPERTY
		UFortMulchConfirmationModalWidget* MulchConfirmationModal; // 0x698(0x8)
		UFortItemManagementCustomFilterModalWidget* CustomFilterModal; // 0x6A0(0x8)
		unsigned char UnknownData05_6[0x8]; // 0x6A8(0x8) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x6B0(0x8)
		unsigned char UnknownData06_7[0x10]; // 0x6B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemManagementScreen");
			return ret;
		}

		void TransferItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146B58(relative to base address)
		void ToggleShowRefundIndicator(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146AE0(relative to base address)
		void ToggleShowCollectionBookIndicator(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146AB4(relative to base address)
		void ShowWarningReadOnlyWIFE(bool Force); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowRecycleProgressModal(); // Flags: Final|Native|Public, Memory Exec: 0x7FF75014698C(relative to base address)
		void ShowMulchConfirmationModal(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF75014695C(relative to base address)
		void ShowCustomFilterModal(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146948(relative to base address)
		void SetFrontendInventoryFilter(EFortFrontendInventoryFilter FrontendInventoryFilter); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146260(relative to base address)
		void SetConsumeItemRequestInProgress(bool InProgress); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750146098(relative to base address)
		void RequestPopupMenuForSelectedItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145FE8(relative to base address)
		void OpenCraftingOptions(UFortSchematicItem* SchematicItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145EDC(relative to base address)
		void OpenAutoMulchOptions(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145EC8(relative to base address)
		void NotifyPanelDeactivated(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750145D78(relative to base address)
		void NotifyPanelActivated(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750145D5C(relative to base address)
		void MarkAllItemsAsSeen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145D0C(relative to base address)
		bool IsScreenWIFE(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750145B0C(relative to base address)
		void InspectItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501459D4(relative to base address)
		void HideRecycleProgressModal(); // Flags: Final|Native|Public, Memory Exec: 0x7FF7501459C0(relative to base address)
		void HideMulchConfirmationModal(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501459A4(relative to base address)
		void HideCustomFilterModal(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750145964(relative to base address)
		bool HasItemBeenSeen(UFortAccountItem* AccountItem); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F624E94(relative to base address)
		bool HasDefaultItemsToMulch(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501458A4(relative to base address)
		void HandleTransferItemBP(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOpenCraftingOptionsBP(UFortSchematicItem* SchematicItem); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOpenAutoMulchOptionsBP(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMulchQuantitySelection(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF75014541C(relative to base address)
		void HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF750145330(relative to base address)
		void HandleInspectItemBP(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEquipItemBP(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDropItemBP(UFortItem* Item); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemManagementModeSetBP(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCraftItemBP(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCraftAndSlotItemBP(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleConsumeItemBP(UFortConsumableAccountItem* ConsumableItem); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GuardActionForReadOnlyWIFE(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144D48(relative to base address)
		bool GetShouldShowRefundIndicator(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144A98(relative to base address)
		bool GetShouldShowCollectionBookIndicator(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750144A80(relative to base address)
		UFortItem GetItemToDetail(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501449A0(relative to base address)
		UFortItem GetItemToCompareDetailsWith(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75014497C(relative to base address)
		void EquipItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144720(relative to base address)
		void EnterMulchModeForAutoMulch(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75014470C(relative to base address)
		void EnterMulchMode(UFortItem* ItemToMulch); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501445A4(relative to base address)
		void EnterDetailsMode(UFortItem* ItemToDetail); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144524(relative to base address)
		void EnterComparisonMode(UFortItem* ItemToCompareDetailsWith); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501444A4(relative to base address)
		void DropItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75014439C(relative to base address)
		void CycleSortType(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144350(relative to base address)
		void CraftItem(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750144244(relative to base address)
		void CraftAndSlotItem(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75014414C(relative to base address)
		void ConsumeItem(UFortConsumableAccountItem* ConsumableItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501440CC(relative to base address)
		bool CanRequestPopupMenuForSelectedItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750143FF0(relative to base address)
		bool CanEquipItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750143EE0(relative to base address)
		void CancelInventoryPanelTileViewRefresh(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750144010(relative to base address)
	};


	// Class FortniteUI.FortMulchItemTileButton
	// Inherited from UFortItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1420 - 0x1418)
	class UFortMulchItemTileButton : public UFortItemTileButton	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMulchItemTileButton");
			return ret;
		}

		void HandleItemChanged_BP(UFortItem* NewItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMulchConfirmationModalWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x5A8 - 0x560)
	class UFortMulchConfirmationModalWidget : public UFortActivatablePanel	
	{
	public:
		TScriptInterface<Class> HostItemManagementMulchPanel; // 0x560(0x10)
		UCommonTileView* RecycleItemTileView; // 0x570(0x8)
		UCommonLoadGuard* CommonLoadGuard_LatentSpinner; // 0x578(0x8)
		UHorizontalBox* HorizontalBox_Buttons; // 0x580(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x588(0x10) UNKNOWN PROPERTY
		UFortInventoryContext* InventoryContext; // 0x598(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMulchConfirmationModalWidget");
			return ret;
		}

		void UpdateConfirmationModal_BP(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateConfirmationModal(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75018144C(relative to base address)
		void OnHostSet_BP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TMap GetMulchWarnings(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017F32C(relative to base address)
		void CommitMulch(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EC70(relative to base address)
	};


	// Class FortniteUI.FortItemPickerBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x138 (0x410 - 0x2D8)
	class UFortItemPickerBase : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate OnSelectionChangedEvent; // 0x2D8(0x10)
		unsigned char UnknownData00_6[0x18]; // 0x2E8(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSelectionCommittedEvent; // 0x300(0x10)
		unsigned char UnknownData01_6[0x48]; // 0x310(0x48) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnItemHoveredEvent; // 0x358(0x10)
		unsigned char UnknownData02_6[0x18]; // 0x368(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnItemUnhovered; // 0x380(0x10)
		unsigned char UnknownData03_6[0x18]; // 0x390(0x18) UNKNOWN PROPERTY
		UFortItemTileView* PickerTileView; // 0x3A8(0x8)
		UListView* ItemListViewWidget; // 0x3B0(0x8)
		unsigned char UnknownData04_6[0x10]; // 0x3B8(0x10) UNKNOWN PROPERTY
		bool bConfirmSelectionIfAlreadySelectedAfterOneClick; // 0x3C8(0x1)
		unsigned char UnknownData05_6[0x7]; // 0x3C9(0x7) UNKNOWN PROPERTY
		TScriptInterface<Class> ItemViewContext; // 0x3D0(0x10)
		unsigned char UnknownData06_7[0x30]; // 0x3E0(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPickerBase");
			return ret;
		}

		bool TryCommitSelectedItem(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750181428(relative to base address)
		void SetSelectedItem(UFortItem* ItemToSelect); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750181204(relative to base address)
		bool SetSelectedIndex(int32_t Index); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750181178(relative to base address)
		void OnItemSelectionScriptDelegate__DelegateSignature(UFortItem* SelectedItem); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsNullItemExplicitlySelected(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017FD00(relative to base address)
		UFortItem GetSelectedItem(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F444(relative to base address)
		TScriptInterface GetListViewInterface(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017F264(relative to base address)
		int32_t GetIndexForItem(UFortItem* Item); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F1A4(relative to base address)
		FText GetCurrentSortTypeDisplayName(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FFEED3C(relative to base address)
		void CycleSortType(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void ClearSelection(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EBF8(relative to base address)
		void CenterSelectedItemTileWidget(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EBD0(relative to base address)
		bool CanItemBeComitted(UFortItem* ItemToCommit); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EB40(relative to base address)
	};


	// Class FortniteUI.AthenaBattlePassItemTracker
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaBattlePassItemTracker : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Category; // 0x2D8(0x8)
		UCommonNumericTextBlock* Text_Counter; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBattlePassItemTracker");
			return ret;
		}

		void OnInterpStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInterpEnded(UCommonNumericTextBlock* NumericTextBlock, bool HadCompleted); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaBattlePassTracker
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC8 (0x3A0 - 0x2D8)
	class UAthenaBattlePassTracker : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FText OutfitsText; // 0x2E0(0x10)
		FText VBucksText; // 0x2F0(0x10)
		FText EmotesText; // 0x300(0x10)
		FText MoreRewardsText; // 0x310(0x10)
		FText BuyBattlePassTextFormat; // 0x320(0x10)
		unsigned char UnknownData01_6[0x40]; // 0x330(0x40) UNKNOWN PROPERTY
		UCommonRichTextBlock* RichText_PaidItemsCollected; // 0x370(0x8)
		UAthenaBattlePassItemTracker* BattlePassItemTracker_01; // 0x378(0x8)
		UAthenaBattlePassItemTracker* BattlePassItemTracker_02; // 0x380(0x8)
		UAthenaBattlePassItemTracker* BattlePassItemTracker_03; // 0x388(0x8)
		UAthenaBattlePassItemTracker* BattlePassItemTracker_04; // 0x390(0x8)
		UBattlePassScreenPurchaseButton* Button_PurchaseBattlepass; // 0x398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBattlePassTracker");
			return ret;
		}

		void HandlePassPurchaseFlowStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75017FCBC(relative to base address)
	};


	// Class FortniteUI.AthenaGiftReceivedPrompt
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x468 - 0x3F0)
	class UAthenaGiftReceivedPrompt : public UCommonActivatableWidget	
	{
	public:
		UClass* ItemPresentationScreenClass; // 0x3F0(0x8)
		TWeakObjectPtr<UMaterialInterface*> GiftMaterial; // 0x3F8(0x20)
		UFortGiftBoxItem* GiftBoxItem; // 0x418(0x8)
		UFortItemReceivedHeaderBase* Widget_HeaderInfo; // 0x420(0x8)
		UCommonButtonLegacy* Button_Open; // 0x428(0x8)
		UCommonLazyImage* Image_GiftBox; // 0x430(0x8)
		unsigned char UnknownData00_7[0x30]; // 0x438(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaGiftReceivedPrompt");
			return ret;
		}

		void OnGiftInfoPopulated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseButtonClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMessageTextFiltered(bool bSuccess, FString SanitizedMessage); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75017FBC8(relative to base address)
		void DismissPrompt(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017ED48(relative to base address)
	};


	// Class FortniteUI.AthenaItemReceivedPreMessageBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UAthenaItemReceivedPreMessageBase : public UCommonActivatableWidget	
	{
	public:
		TArray<UFortGiftBoxItem*> GiftBoxItems; // 0x3F0(0x10)
		unsigned char UnknownData00_7[0x18]; // 0x400(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemReceivedPreMessageBase");
			return ret;
		}
	};


	// Class FortniteUI.AthenaUpgradedPreMessage
	// Inherited from UAthenaItemReceivedPreMessageBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x418 - 0x418)
	class UAthenaUpgradedPreMessage : public UAthenaItemReceivedPreMessageBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaUpgradedPreMessage");
			return ret;
		}

		void OnPresentationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017FDF8(relative to base address)
	};


	// Class FortniteUI.FortItemNotification
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UFortItemNotification : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x560(0x18) UNKNOWN PROPERTY
		TArray<FFortReceivedItemLootInfo> ItemDefs; // 0x578(0x10)
		float BodyTextWrapWidth; // 0x588(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x58C(0x4) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Close; // 0x590(0x8)
		UFortItemReceivedHeaderBase* ItemPresentationGenericRewardHeader; // 0x598(0x8)
		UFortItemPresentationEntry* ItemPresentationEntry; // 0x5A0(0x8)
		UFortItemInfoPresentationWidget* ItemInfoPresentationWidget; // 0x5A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemNotification");
			return ret;
		}

		void OnUpdateScreenInformation(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017FE0C(relative to base address)
		void OnSetButtonText(bool bCanCloseWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNextItemDisplay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseScreen(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CloseScreen(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EC0C(relative to base address)
	};


	// Class FortniteUI.FortItemPresentationDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x290 (0x2C0 - 0x30)
	class UFortItemPresentationDisplayData : public UDataAsset	
	{
	public:
		TMap<FString, FText> HeaderOverrideStrings; // 0x30(0x50)
		TMap<FString, FText> BodyOverrideStrings; // 0x80(0x50)
		TMap<FString, FText> ViolatorOverrideStrings; // 0xD0(0x50)
		TMap<FString, FText> SubheaderOverrideStrings; // 0x120(0x50)
		TWeakObjectPtr<UObject*> BattlePassUnownedIcon; // 0x170(0x20)
		TWeakObjectPtr<UObject*> BattlePassOwnedIcon; // 0x190(0x20)
		FText DefaultBackgroundMessageText; // 0x1B0(0x10)
		TMap<FGameplayTag, FItemPresentationRestrictionData> TagRestrictionData; // 0x1C0(0x50)
		TMap<FString, EItemContextAction> ItemTemplateIdToContextActionMap; // 0x210(0x50)
		TWeakObjectPtr<UClass*> ItemPresentationScreenClass; // 0x260(0x20)
		TWeakObjectPtr<UClass*> GiftReceivedPromptClass; // 0x280(0x20)
		TWeakObjectPtr<UClass*> ItemNotificationPromptClass; // 0x2A0(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPresentationDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.FortItemPresentationEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x150 (0x1530 - 0x13E0)
	class UFortItemPresentationEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortCosmeticItemCard* ItemCard; // 0x13E8(0x8)
		UCommonTextBlock* Text_Count; // 0x13F0(0x8)
		UFortItem* FortItem; // 0x13F8(0x8)
		unsigned char UnknownData01_6[0x108]; // 0x1400(0x108) UNKNOWN PROPERTY
		TWeakObjectPtr<UTexture2D*> RewardTexture; // 0x1508(0x20)
		unsigned char UnknownData02_7[0x8]; // 0x1528(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPresentationEntry");
			return ret;
		}

		void OnIsPaidBattlePassRewardSet(bool bIsPaidBattlePassReward); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitialIconAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemPresentationScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x238 (0x950 - 0x718)
	class UFortItemPresentationScreen : public UFortItemPreviewScreen	
	{
	public:
		UClass* ItemCardClass; // 0x718(0x8)
		TArray<FFortReceivedItemLootInfo> ItemDefs; // 0x720(0x10)
		TArray<FFortReceivedItemLootInfo> PaidBattlePassItemDefs; // 0x730(0x10)
		UFortItem* CurrentItemSelected; // 0x740(0x8)
		UCommonButtonGroupLegacy* EntryBoxButtonGroup; // 0x748(0x8)
		TArray<FText> BackgroundMessageTexts; // 0x750(0x10)
		TArray<UClass*> GiftboxCustomLeftsideContentWidgetClasses; // 0x760(0x10)
		int32_t MaxItemsInView; // 0x770(0x4)
		float HotItemDisplayTime; // 0x774(0x4)
		UImage* FakeHackGradient; // 0x778(0x8)
		FString SpecialCollectionTabID; // 0x780(0x10)
		unsigned char UnknownData00_6[0x20]; // 0x790(0x20) UNKNOWN PROPERTY
		FText MultipleItemPurchaseHeaderTitle; // 0x7B0(0x10)
		FText SingleItemPurchaseHeaderTitle; // 0x7C0(0x10)
		FText PurchaseHeaderBody; // 0x7D0(0x10)
		TWeakObjectPtr<UClass*> LockerConfirmationModalClass; // 0x7E0(0x20)
		unsigned char UnknownData01_6[0x8]; // 0x800(0x8) UNKNOWN PROPERTY
		bool bShowingBattlePassItems; // 0x808(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x809(0x7) UNKNOWN PROPERTY
		FDataTableRowHandle HoldToCloseAction; // 0x810(0x10)
		unsigned char UnknownData03_6[0x8]; // 0x820(0x8) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Equip; // 0x828(0x8)
		UCommonButtonBase* Button_Next; // 0x830(0x8)
		UCommonButtonBase* Button_BattlePassRewards; // 0x838(0x8)
		UCommonButtonBase* Button_BattlePassCustomization; // 0x840(0x8)
		UCommonButtonBase* Button_SpecialCollection; // 0x848(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x850(0x8)
		UTextBlock* Text_ItemsCollected; // 0x858(0x8)
		UFortItemInfoPresentationWidget* ItemInfoPresentationWidget; // 0x860(0x8)
		UFortItemReceivedHeaderBase* ItemHeaderWidget; // 0x868(0x8)
		UAthenaBattlePassTracker* BattlePassTracker; // 0x870(0x8)
		UCommonRichTextBlock* Text_UnownedBaseItemMessage; // 0x878(0x8)
		UImage* Image_Lock; // 0x880(0x8)
		UDynamicEntryBox* DynamicEntryBox_Items; // 0x888(0x8)
		UCommonListView* ListView_Items; // 0x890(0x8)
		UCommonListView* ListView_PaidItems; // 0x898(0x8)
		UCommonBorder* Border_InputBlocker; // 0x8A0(0x8)
		UCommonButtonBase* Button_LeftScrollArrow; // 0x8A8(0x8)
		UCommonButtonBase* Button_RightScrollArrow; // 0x8B0(0x8)
		UAthenaExclusiveRewardBanner* Banner_TokenDescription; // 0x8B8(0x8)
		UNamedSlot* CustomContent; // 0x8C0(0x8)
		unsigned char UnknownData04_7[0x88]; // 0x8C8(0x88) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPresentationScreen");
			return ret;
		}

		void SetPurchasedItems(TArray<FPurchasedItemInfo>& InPurchasedItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501810DC(relative to base address)
		void SetGiftBoxItem(UFortGiftBoxItem* GiftBoxItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501807B8(relative to base address)
		void SendNextButtonEvent(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SendButtonEventText(UWidget* Button, FString Text); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF75017FF10(relative to base address)
		void OnUpdateOwnedItemText(bool bShowText); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateNextButtonText(bool bShowNext); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemInformation(UFortItem* FortItem, UFortItemVM* ItemVM); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemEquipped(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemContextAction(EItemContextAction ItemContextAction); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateHeaderInformation(FFortItemHeaderInformation& HeaderInformation); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSwitchToPaidItems(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSwitchLeftsideContent(bool bInDefaultContent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLeftsideContentUpdated(UWidget* LeftSideWidget, FCurrencyDataWithGiftBox& OutDataWithGiftBox); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitialIconAnimation(bool bUsingListView); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandlePreviewItem(bool bUseWidePreview); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFinishDisplayingHotItems(bool bShowOtherRewards); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayItemsCollectedText(bool bCloseScreen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDisplayEquipButton(bool bCanEquip); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseScreenWithoutAnimations(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCloseScreen(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHoldToClose(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75017F62C(relative to base address)
		void HandleExitBattlePassPurchaseFlow(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75017F618(relative to base address)
		void HandleBack(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017F604(relative to base address)
		void FinishSwitchingToPaidItems(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017EDAC(relative to base address)
		void EnableUserControlOnPaidItems(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017ED5C(relative to base address)
		void ClearItemPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017EBE4(relative to base address)
	};


	// Class FortniteUI.FortItemReceivedHeaderBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class UFortItemReceivedHeaderBase : public UCommonUserWidget	
	{
	public:
		UCommonLazyImage* Image_Icon; // 0x2D8(0x8)
		UCommonLazyImage* Image_Header; // 0x2E0(0x8)
		UCommonTextBlock* Text_Violator; // 0x2E8(0x8)
		UCommonTextBlock* Text_Title; // 0x2F0(0x8)
		UCommonTextBlock* Text_Subtitle; // 0x2F8(0x8)
		UCommonTextBlock* Text_Body; // 0x300(0x8)
		unsigned char UnknownData00_7[0x68]; // 0x308(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemReceivedHeaderBase");
			return ret;
		}

		void SetHeaderInformation(FFortItemHeaderInformation& HeaderInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501808F0(relative to base address)
		void OnHeaderInformationSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemReceivedWidgetBase
	// Inherited from UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x6E8 - 0x6A8)
	class UFortItemReceivedWidgetBase : public UFortActivatablePanelWithItemPreview	
	{
	public:
		TArray<FFortReceivedItemLootInfo> ItemDefs; // 0x6A8(0x10)
		UFortGiftBoxItem* GiftBoxItem; // 0x6B8(0x8)
		FString FromUsername; // 0x6C0(0x10)
		UHorizontalBox* HeaderContainer; // 0x6D0(0x8)
		UScrollBox* GiftScrollBox; // 0x6D8(0x8)
		UClass* ItemCardClass; // 0x6E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemReceivedWidgetBase");
			return ret;
		}

		void ShowGiftBox(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetGiftBoxItem(UFortGiftBoxItem* GiftBoxItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180870(relative to base address)
		void SetAlignmentOnSlots(UScrollBox* Widget); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750180160(relative to base address)
		void SetAlignmentOnSlot(UScrollBox* Widget, int32_t Index); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750180070(relative to base address)
		void OnGiftBoxItemSetInternal(bool bFromSelf); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75017FD78(relative to base address)
		void OnGiftBoxItemSet(bool bFromSelf); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortItem GetTemporaryInstance(FFortReceivedItemLootInfo& ItemReference); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75017F494(relative to base address)
		void ClosingGiftbox(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017EC5C(relative to base address)
	};


	// Class FortniteUI.FortItemReceivedScreen
	// Inherited from UFortItemReceivedWidgetBase -> UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x6F8 - 0x6E8)
	class UFortItemReceivedScreen : public UFortItemReceivedWidgetBase	
	{
	public:
		FMulticastInlineDelegate OnFinalGiftingComplete; // 0x6E8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemReceivedScreen");
			return ret;
		}

		void OnFinalGiftingComplete__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemReceivedPrePrompt
	// Inherited from UFortItemReceivedWidgetBase -> UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x700 - 0x6E8)
	class UFortItemReceivedPrePrompt : public UFortItemReceivedWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x6E8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnPrePromptClosed; // 0x6F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemReceivedPrePrompt");
			return ret;
		}

		void OnPrePromptClosed__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortGiftInfo
	// Inherited from UObject
	// Size: 0x50 (0x78 - 0x28)
	class UFortGiftInfo : public UObject	
	{
	public:
		FGiftBoxInfo GiftBoxInfo; // 0x28(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGiftInfo");
			return ret;
		}
	};


	// Class FortniteUI.ItemCardWidgetBase
	// Inherited from UButton -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x580 - 0x568)
	class UItemCardWidgetBase : public UButton	
	{
	public:
		UFortGiftInfo* LootInfo; // 0x568(0x8)
		UFortMultiSizeItemCard* FortMultiSizeItemCard_Widget; // 0x570(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x578(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ItemCardWidgetBase");
			return ret;
		}

		void SetLootInfo(UFortGiftInfo* LootInfo); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180F20(relative to base address)
		void OnLootInfoSet(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCosmeticItemTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortCosmeticItemTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UFortCosmeticItemCard* ItemWidget; // 0x13E8(0x8)
		TWeakObjectPtr<UFortItem*> Item; // 0x13F0(0x8)
		float ItemCardWidth; // 0x13F8(0x4)
		float MobileScalingFactor; // 0x13FC(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCosmeticItemTileButton");
			return ret;
		}
	};


	// Class FortniteUI.FortItemListEntryButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UFortItemListEntryButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UFortMultiSizeItemCard* ItemWidget; // 0x13F0(0x8)
		TWeakObjectPtr<UFortItem*> Item; // 0x13F8(0x8)
		EFortItemCardSize ItemCardSize; // 0x1400(0x1)
		bool IsRewardCard; // 0x1401(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x1402(0x6) UNKNOWN PROPERTY
		TScriptInterface<Class> ItemViewContext; // 0x1408(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListEntryButton");
			return ret;
		}
	};


	// Class FortniteUI.FortNullItem
	// Inherited from UFortItem -> UObject
	// Size: 0x0 (0xA0 - 0xA0)
	class UFortNullItem : public UFortItem	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNullItem");
			return ret;
		}
	};


	// Class FortniteUI.FortItemListView
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0xCB0 - 0xB30)
	class UFortItemListView : public UCommonListView	
	{
	public:
		unsigned char UnknownData00_3[0x118]; // 0xB30(0x118) UNKNOWN PROPERTY
		bool bShouldShowNullItemListEntry; // 0xC48(0x1)
		bool bAutomaticallyLoadItemDetails; // 0xC49(0x1)
		EItemListViewDisplayType DisplayType; // 0xC4A(0x1)
		unsigned char UnknownData01_6[0x5]; // 0xC4B(0x5) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnInventoryUpdatedEvent; // 0xC50(0x10)
		FMulticastInlineDelegate OnLoadItemsBegin; // 0xC60(0x10)
		FMulticastInlineDelegate OnLoadItemsEnd; // 0xC70(0x10)
		TArray<TWeakObjectPtr> CustomItemList; // 0xC80(0x10)
		TArray<TWeakObjectPtr> ItemsForListView; // 0xC90(0x10)
		TScriptInterface<Class> ItemViewContext; // 0xCA0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListView");
			return ret;
		}

		void OnLoadItemsEnd__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadItemsBegin__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInventoryUpdated__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemListViewInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemListViewInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListViewInterface");
			return ret;
		}

		void ShowNullItemListEntry(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501813EC(relative to base address)
		void SetSorter(FFortItemSorterDefinition& Sorter); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750181284(relative to base address)
		void SetItemViewContext(TScriptInterface<Class> ItemViewContext); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180DF4(relative to base address)
		void SetFilterAndSorter(FFortItemFilterDefinition& Filter, FFortItemSorterDefinition& Sorter); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75018066C(relative to base address)
		void SetFilter(FFortItemFilterDefinition& Filter); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750180590(relative to base address)
		void SetCustomItemList(TArray<UFortItem*>& ItemList); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501804F0(relative to base address)
		void SetConfig(FFortItemListViewConfig& Config); // Flags: Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501803F0(relative to base address)
		void RefreshSort(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C68EFE4(relative to base address)
		void RefreshFilterAndSort(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF748D7CED0(relative to base address)
		void HideNullItemListEntry(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FCEC(relative to base address)
		void HandleItemRefundCompleted(bool bWasSuccessful, FString OriginalItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemQuantities); // Flags: Native|Public|HasOutParms, Memory Exec: 0x7FF75017FA84(relative to base address)
		void HandleItemRefundBegun(FString OriginalItemInstanceId); // Flags: Native|Public, Memory Exec: 0x7FF75017F9F0(relative to base address)
		void HandleItemRarityUpgradeCompleted(bool bWasSuccessful, FString OriginalItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemQuantities); // Flags: Native|Public|HasOutParms, Memory Exec: 0x7FF75017F8AC(relative to base address)
		void HandleItemRarityUpgradeBegun(FString OriginalItemInstanceId); // Flags: Native|Public, Memory Exec: 0x7FF75017F818(relative to base address)
		void HandleItemEvolutionCompleted(bool bWasSuccessful, FString OriginalItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemQuantities); // Flags: Native|Public|HasOutParms, Memory Exec: 0x7FF75017F6D4(relative to base address)
		void HandleItemEvolutionBegun(FString OriginalItemInstanceId); // Flags: Native|Public, Memory Exec: 0x7FF75017F640(relative to base address)
		FFortItemSorterDefinition GetSorter(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F468(relative to base address)
		FFortItemFilterDefinition GetFilter(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F08C(relative to base address)
		FFortItemListViewConfig GetConfig(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F028(relative to base address)
		bool ContainsItem(UFortItem* Item); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017ECB4(relative to base address)
		void ClearCustomItemList(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF748EABA54(relative to base address)
		void CenterSelectedItemListEntryWidget(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF748D7CC28(relative to base address)
	};


	// Class FortniteUI.FortItemListEntryWidgetInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemListEntryWidgetInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListEntryWidgetInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortItemTileView
	// Inherited from UCommonTileView -> UTileView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0xCD0 - 0xB58)
	class UFortItemTileView : public UCommonTileView	
	{
	public:
		unsigned char UnknownData00_3[0x110]; // 0xB58(0x110) UNKNOWN PROPERTY
		bool bShouldShowNullItemListEntry; // 0xC68(0x1)
		bool bAutomaticallyLoadItemDetails; // 0xC69(0x1)
		EItemListViewDisplayType DisplayType; // 0xC6A(0x1)
		bool bShouldOverrideChildItemWidgetCardSize; // 0xC6B(0x1)
		EFortItemCardSize ChildItemWidgetCardSizeOverride; // 0xC6C(0x1)
		unsigned char UnknownData01_6[0x3]; // 0xC6D(0x3) UNKNOWN PROPERTY
		float ChildCosmeticItemCardWidthOverride; // 0xC70(0x4)
		unsigned char UnknownData02_6[0x4]; // 0xC74(0x4) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnInventoryUpdatedEvent; // 0xC78(0x10)
		unsigned char UnknownData03_6[0x8]; // 0xC88(0x8) UNKNOWN PROPERTY
		TArray<TWeakObjectPtr> CustomItemList; // 0xC90(0x10)
		TArray<TWeakObjectPtr> ItemsForListView; // 0xCA0(0x10)
		TScriptInterface<Class> ItemViewContext; // 0xCB0(0x10)
		unsigned char UnknownData04_7[0x8]; // 0xCC0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemTileView");
			return ret;
		}

		void OnInventoryUpdated__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortRotatingItemTileButton
	// Inherited from UFortItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x1440 - 0x1418)
	class UFortRotatingItemTileButton : public UFortItemTileButton	
	{
	public:
		float TimeBetweenRotations; // 0x1418(0x4)
		bool bNeedsItemRotateAnimation; // 0x141C(0x1)
		unsigned char UnknownData00_6[0xB]; // 0x141D(0xB) UNKNOWN PROPERTY
		TArray<UFortItem*> ItemsToRotate; // 0x1428(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x1438(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRotatingItemTileButton");
			return ret;
		}

		void StopRotating(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750181414(relative to base address)
		void StopPlayingRotateItemAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartRotating(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750181400(relative to base address)
		void StartPlayingRotateItemAnimation(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetTimeBeweenRotations(float InTimeBetweenRotations); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75018134C(relative to base address)
		void SetNeedsItemRotateAnimation(bool InNeedsItemRotationAnimation); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75018105C(relative to base address)
		void RotateToNextItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FEC0(relative to base address)
	};


	// Class FortniteUI.FortItemCardMaterialPooler
	// Inherited from UObject
	// Size: 0x100 (0x128 - 0x28)
	class UFortItemCardMaterialPooler : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x100]; // 0x28(0x100) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCardMaterialPooler");
			return ret;
		}
	};


	// Class FortniteUI.FortComparisonResultIndicator
	// Inherited from UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5B0 - 0x5A8)
	class UFortComparisonResultIndicator : public UFortMultiSizeImage	
	{
	public:
		bool bShouldCollapseWhenNotShown; // 0x5A8(0x1)
		EFortBuffState ComparisonResult; // 0x5A9(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x5AA(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortComparisonResultIndicator");
			return ret;
		}

		void SetComparisonResult(EFortBuffState ComparisonResult); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75018034C(relative to base address)
	};


	// Class FortniteUI.FortCosmeticItemCard
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x388 - 0x2D8)
	class UFortCosmeticItemCard : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x9]; // 0x2D8(0x9) UNKNOWN PROPERTY
		bool bIsReward; // 0x2E1(0x1)
		bool bIsItemIconEnabled; // 0x2E2(0x1)
		bool bIsDetailIconEnabled; // 0x2E3(0x1)
		bool bIsQuantityEnabled; // 0x2E4(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2E5(0x3) UNKNOWN PROPERTY
		float WidthToHeightRatio; // 0x2E8(0x4)
		float RewardWidthToHeightRatio; // 0x2EC(0x4)
		float CardWidth; // 0x2F0(0x4)
		float RewardCardWidth; // 0x2F4(0x4)
		UMaterialInterface* DefaultItemCardMaterial; // 0x2F8(0x8)
		float MinWidgetWidthForLargeAsset; // 0x300(0x4)
		float MinWidgetWidthForLargeAssetMobile; // 0x304(0x4)
		USizeBox* SizeBox_NewItemCard; // 0x308(0x8)
		UImage* Image_NewItemCard; // 0x310(0x8)
		UCommonLoadGuard* LoadGuard; // 0x318(0x8)
		UFortItem* ItemToRepresent; // 0x320(0x8)
		UFortItemVM* ItemVM; // 0x328(0x8)
		UItemDefinitionBase* ItemDefinition; // 0x330(0x8)
		TMap<FGameplayTag, float> ItemCardImageScales; // 0x338(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCosmeticItemCard");
			return ret;
		}

		void UpdateItemCardIconWithTexture2D(TWeakObjectPtr<UTexture2D*> Icon); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750181460(relative to base address)
		bool ShouldDisplayLargePreviewImage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501813CC(relative to base address)
		void SetMarked(bool bInIsMarked); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180FCC(relative to base address)
		void SetItemToRepresent(UFortItem* InItemToRepresent, UFortItemVM* InItemVM); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180D30(relative to base address)
		void SetItemDefinitionToRepresent(UItemDefinitionBase* InItemToRepresent); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501809B4(relative to base address)
		void SetCardWidth(float NewWidth); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501802CC(relative to base address)
		void OnUpdateVisuals(bool bIsItem, bool bIsBorderAnimated, bool bIsHero, bool bReward, bool bIsShuffleItem, bool bShowAsArchived, bool bUseAnimations); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateSeriesOrRarityVisibility(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateSeriesOrRarityColors(FFortColorPalette& ColorPalette); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemCardMaterial(UMaterialInterface* Material); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemCardIcon(UTexture2D* Icon, float IconScale); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateEnhanced(bool bEnhanced); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUnhover(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSizeChanged(float InCardWidth); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemIconVisibilityChanged(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHover(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCardTypeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeUnhover(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FD64(relative to base address)
		void NativeHover(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FD50(relative to base address)
		bool HasItemToRepresent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017FCD0(relative to base address)
	};


	// Class FortniteUI.FortSimpleItemConditionIconIndicator
	// Inherited from UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5B0 - 0x5A8)
	class UFortSimpleItemConditionIconIndicator : public UFortMultiSizeImage	
	{
	public:
		bool bShouldCollapseWhenConditionIsFalse; // 0x5A8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x5A9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleItemConditionIconIndicator");
			return ret;
		}

		void ShouldCollapseWhenConditionIsFalse(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD2F8(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB6D0(relative to base address)
		UFortItem GetItemToRepresent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8E08(relative to base address)
	};


	// Class FortniteUI.FortEvolveIndicator
	// Inherited from UFortSimpleItemConditionIconIndicator -> UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x5B0 - 0x5B0)
	class UFortEvolveIndicator : public UFortSimpleItemConditionIconIndicator	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEvolveIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortFavoriteIndicator
	// Inherited from UFortSimpleItemConditionIconIndicator -> UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x5B0 - 0x5B0)
	class UFortFavoriteIndicator : public UFortSimpleItemConditionIconIndicator	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFavoriteIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortIconWithLabel
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x20 (0x178 - 0x158)
	class UFortIconWithLabel : public UWidget	
	{
	public:
		bool ShouldShowIcon; // 0x158(0x1)
		bool ShouldCollapseIconWhenNotShown; // 0x159(0x1)
		TEnumAsByte<EFortBrushSize> IconBrushSize; // 0x15A(0x1)
		bool ShouldShowLabel; // 0x15B(0x1)
		unsigned char UnknownData00_6[0x4]; // 0x15C(0x4) UNKNOWN PROPERTY
		UClass* LabelTextStyle; // 0x160(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x168(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortIconWithLabel");
			return ret;
		}
	};


	// Class FortniteUI.FortInventoryOverflowIndicator
	// Inherited from UFortSimpleItemConditionIconIndicator -> UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x5B0 - 0x5B0)
	class UFortInventoryOverflowIndicator : public UFortSimpleItemConditionIconIndicator	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInventoryOverflowIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortItemAutoMulchActivatablePanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x5B8 - 0x560)
	class UFortItemAutoMulchActivatablePanel : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_1[0x58]; // 0x560(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemAutoMulchActivatablePanel");
			return ret;
		}

		void SetItemManagementScreen(UFortItemManagementScreen* InItemManagementScreen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750180AF8(relative to base address)
		void SaveSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017FED4(relative to base address)
		void RestoreAutoMulchSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017FEAC(relative to base address)
		TArray GetMulchCategoriesForInventoryFilter(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F2F0(relative to base address)
		EFortFrontendInventoryFilter GetFrontendInventoryFilter(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017F0B8(relative to base address)
		void EnterMulchModeForAutoMulch(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017ED70(relative to base address)
		void CacheAutoMulchSettings(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75017EB2C(relative to base address)
	};


	// Class FortniteUI.FortItemAutoMulchSettingRow
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortItemAutoMulchSettingRow : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemAutoMulchSettingRow");
			return ret;
		}

		void SetAutoMulchCategory(EFortAutoMulchCategory NewCategory); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75018021C(relative to base address)
		void SelectPreviousAutoMulchMode(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FEFC(relative to base address)
		void SelectNextAutoMulchMode(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75017FEE8(relative to base address)
		void HandleAutoMulchModeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleAutoMulchCategoryChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetAutoMulchModeText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017EDFC(relative to base address)
		FText GetAutoMulchCategoryText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75017EDC0(relative to base address)
	};


	// Class FortniteUI.FortItemCardBase
	// Inherited from UFortItemWidget_NUI -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x180 - 0x180)
	class UFortItemCardBase : public UFortItemWidget_NUI	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCardBase");
			return ret;
		}

		EFortItemCardSize PortBrushSize(TEnumAsByte<EFortBrushSize>& BrushSize); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75017FE20(relative to base address)
	};


	// Class FortniteUI.FortItemCardUtilities
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemCardUtilities : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCardUtilities");
			return ret;
		}

		FVector2D GetCardDimensions(EFortItemType ItemType, EFortItemCardSize CardSize, bool IsReward, bool UseNewItemCardSizes); // Flags: Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF75017EEE0(relative to base address)
	};


	// Class FortniteUI.FortItemCategoryIndicator
	// Inherited from UFortIconWithLabel -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x198 - 0x178)
	class UFortItemCategoryIndicator : public UFortIconWithLabel	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x178(0x8)
		EFortItemCategoryOrdinal OrdinalOfCategoryToRepresent; // 0x180(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x181(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCategoryIndicator");
			return ret;
		}

		void SetOrdinalOfCategoryToRepresent(EFortItemCategoryOrdinal ItemCategoryOrdinal); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBE18(relative to base address)
		void SetLabelColorOverride(FLinearColor InLabelColorOverride); // Flags: Final|Native|Public|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7501BB99C(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB380(relative to base address)
		void ClearLabelColorOverride(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8538(relative to base address)
	};


	// Class FortniteUI.FortItemCountTextBlock
	// Inherited from UCommonNumericTextBlock -> UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x400 - 0x3C8)
	class UFortItemCountTextBlock : public UCommonNumericTextBlock	
	{
	public:
		UFortItemDefinition* ItemDefinition; // 0x3C8(0x8)
		EFortItemCountStyle CountStyle; // 0x3D0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x3D1(0x3) UNKNOWN PROPERTY
		float ItemCountMaxInterpolateDuration; // 0x3D4(0x4)
		float ItemCountMinInterpolateRate; // 0x3D8(0x4)
		unsigned char UnknownData01_7[0x24]; // 0x3DC(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCountTextBlock");
			return ret;
		}

		void SetOverrideValue(int32_t InOverrideValue); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBEC0(relative to base address)
		void SetItemDefinition(UFortItemDefinition* InItemDefinition); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA738(relative to base address)
		void SetCountStyle(EFortItemCountStyle InCountStyle); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA368(relative to base address)
		void InterpolateOverrideToValue(int32_t TargetValue, float MaximumInterpolationDuration, float MinimumChangeRate, float OutroOffset); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9984(relative to base address)
	};


	// Class FortniteUI.FortItemCraftingOptionsActivatablePanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x600 - 0x560)
	class UFortItemCraftingOptionsActivatablePanel : public UFortActivatablePanel	
	{
	public:
		UFortSchematicItem* BaseItem; // 0x560(0x8)
		UFortSchematicItem* TargetItem; // 0x568(0x8)
		int32_t MaxCraftingTierIndex; // 0x570(0x4)
		int32_t TargetCraftingTierIndex; // 0x574(0x4)
		int32_t TargetPromotionTierIndex; // 0x578(0x4)
		int32_t MaxQuantity; // 0x57C(0x4)
		int32_t SelectedQuantity; // 0x580(0x4)
		bool CanCraftTargetItem; // 0x584(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x585(0x3) UNKNOWN PROPERTY
		UWidget* TierImageParent; // 0x588(0x8)
		UWidget* TierImageParent; // 0x590(0x8)
		UWidget* TierImageParent; // 0x598(0x8)
		UWidget* TierImageParent; // 0x5A0(0x8)
		UWidget* TierImageParent; // 0x5A8(0x8)
		UImage* TierImage; // 0x5B0(0x8)
		UImage* TierImage; // 0x5B8(0x8)
		UImage* TierImage; // 0x5C0(0x8)
		UImage* TierImage; // 0x5C8(0x8)
		UImage* TierImage; // 0x5D0(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x5D8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCraftingOptionsActivatablePanel");
			return ret;
		}

		void UpdateTierImages(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BD76C(relative to base address)
		void SetTargetCraftingTierIndex(int32_t NewTierIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BD124(relative to base address)
		void SetSelectedQuantity_BP(int32_t NewQuantity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BCBAC(relative to base address)
		void SetItemManagementScreen(UFortItemManagementScreen* InItemManagementScreen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BAF64(relative to base address)
		void SetBaseSchematicItem(UFortSchematicItem* InBaseItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA1D8(relative to base address)
		void SelectPreviousTier(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BA1A0(relative to base address)
		void SelectNextTier(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BA160(relative to base address)
		void OnTargetItemChanged(UFortSchematicItem* NewTargetItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSelectedQuantityChanged(int32_t NewSelectedQuantity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMaxQuantityChanged(int32_t NewMaxQuantity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBaseItemChanged(UFortSchematicItem* NewBaseItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void IncreaseSelectedQuantity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B9958(relative to base address)
		void DecreaseSelectedQuantity(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B8690(relative to base address)
		void CraftTargetItem(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B8620(relative to base address)
		void CraftAndSlotTargetItem(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B85B0(relative to base address)
	};


	// Class FortniteUI.FortItemDetailsActivatablePanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x570 - 0x528)
	class UFortItemDetailsActivatablePanel : public UCommonActivatablePanelLegacy	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToDetail; // 0x528(0x8)
		TWeakObjectPtr<UFortItem*> ItemToCompareWith; // 0x530(0x8)
		TWeakObjectPtr<UFortItemManagementScreen*> HostItemManagementScreen; // 0x538(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x540(0x20) UNKNOWN PROPERTY
		UFortTooltipLoadingWrapper* ItemToDetailLoadingWrapper; // 0x560(0x8)
		UCommonLoadGuard* ItemToDetailLoadGuard; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailsActivatablePanel");
			return ret;
		}

		void HandleItemToDetailTooltipAssetsLoaded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B97E0(relative to base address)
		void HandleDifferentItemToDetailSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemToCompareSetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleConsumeItemProgressChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemDetailsModeActivatablePanel
	// Inherited from UFortItemDetailsActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x578 - 0x570)
	class UFortItemDetailsModeActivatablePanel : public UFortItemDetailsActivatablePanel	
	{
	public:
		UCommonWidgetSwitcherLegacy* DetailPanelWidgetSwitcher; // 0x570(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailsModeActivatablePanel");
			return ret;
		}

		void HandleOnActiveWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B97F4(relative to base address)
	};


	// Class FortniteUI.FortItemCompareModeActivatablePanel
	// Inherited from UFortItemDetailsActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x580 - 0x570)
	class UFortItemCompareModeActivatablePanel : public UFortItemDetailsActivatablePanel	
	{
	public:
		UFortItemManagementItemDetailsPanel* ComparisonModeLeftItemDetailsPanel; // 0x570(0x8)
		UFortItemManagementItemDetailsPanel* ComparisonModeRightItemDetailsPanel; // 0x578(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemCompareModeActivatablePanel");
			return ret;
		}
	};


	// Class FortniteUI.FortItemMulchModeActivatablePanel
	// Inherited from UFortItemDetailsActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x580 - 0x570)
	class UFortItemMulchModeActivatablePanel : public UFortItemDetailsActivatablePanel	
	{
	public:
		UFortItemManagementItemDetailsPanel* MulchModeItemDetailsPanel; // 0x570(0x8)
		UFortItemManagementMulchDetailsPanel* MulchDetailsPanel; // 0x578(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemMulchModeActivatablePanel");
			return ret;
		}
	};


	// Class FortniteUI.FortItemDetailElementWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UFortItemDetailElementWidget : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToDetail; // 0x2D8(0x8)
		TWeakObjectPtr<UFortItem*> ItemToCompareWith; // 0x2E0(0x8)
		bool bShouldPreviewUpgradingItem; // 0x2E8(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2E9(0x3) UNKNOWN PROPERTY
		int32_t UpgradeLevelDelta; // 0x2EC(0x4)
		TScriptInterface<Class> ItemViewContext; // 0x2F0(0x10)
		EFortItemInspectionMode CurrentInspectMode; // 0x300(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x301(0x3) UNKNOWN PROPERTY
		int32_t QuantityOverride; // 0x304(0x4)
		bool bIsUpdatingSuspended; // 0x308(0x1)
		unsigned char UnknownData02_7[0x27]; // 0x309(0x27) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailElementWidget");
			return ret;
		}

		void HandleUpgradeLevelDeltaChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShouldPreviewUpgradingItemChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleQuantityOverrideChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePreDifferentItemToDetailSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePreDifferentItemToCompareWithSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePostDifferentItemToDetailSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePostDifferentItemToCompareWithSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToDetailChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleItemToCompareWithChangedBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleInspectModeChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemDetailsPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortItemDetailsPanel : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToDetail; // 0x2D8(0x8)
		TWeakObjectPtr<UFortItem*> ItemToCompareWith; // 0x2E0(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2E8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailsPanel");
			return ret;
		}

		void SetItemToDetail(UFortItem* ItemToDetail); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB300(relative to base address)
		void SetItemToCompareWith(UFortItem* ItemToCompareWith); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB180(relative to base address)
		void HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B96D4(relative to base address)
		void HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B95C8(relative to base address)
		void HandleDifferentItemToDetailSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleDifferentItemToCompareSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B9260(relative to base address)
	};


	// Class FortniteUI.FortItemDisplayNameText
	// Inherited from UCommonTextBlock -> UTextBlock -> UTextLayoutWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x350 - 0x328)
	class UFortItemDisplayNameText : public UCommonTextBlock	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x328(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x330(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDisplayNameText");
			return ret;
		}

		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB400(relative to base address)
	};


	// Class FortniteUI.FortItemInfoPresentationWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class UFortItemInfoPresentationWidget : public UCommonUserWidget	
	{
	public:
		UAthenaRewardItemTypeRarityTag* AthenaRewardItemTypeRarityTag; // 0x2D8(0x8)
		UCommonTextBlock* Text_Name; // 0x2E0(0x8)
		UCommonTextBlock* Text_DescReward; // 0x2E8(0x8)
		UCommonTextBlock* Text_Variance; // 0x2F0(0x8)
		UCommonTextBlock* Text_DescVariance; // 0x2F8(0x8)
		UOverlay* Overlay_MainView; // 0x300(0x8)
		unsigned char UnknownData00_7[0x68]; // 0x308(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemInfoPresentationWidget");
			return ret;
		}

		void SetHeaderInfo(FFortItemHeaderInformation& HeaderInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BA4F4(relative to base address)
		void PopulateUsingItem(UFortItem* NewItem, UFortItemVM* ItemVM); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9E4C(relative to base address)
		void BP_ApplyColorData(FFortItemTextColorData& ColorData); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemInfoWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UFortItemInfoWidget : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Name; // 0x2D8(0x8)
		UCommonTextBlock* Text_ItemType; // 0x2E0(0x8)
		UCommonTextBlock* Text_Desc; // 0x2E8(0x8)
		UOverlay* Overlay_MainView; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemInfoWidget");
			return ret;
		}

		void SetRarityMaterialValues(UItemDefinitionBase* ItemDefinition); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PopulateUsingItemDefinition(UItemDefinitionBase* NewItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B9FD4(relative to base address)
		void PopulateUsingItem(UFortItem* NewItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501B9F10(relative to base address)
	};


	// Class FortniteUI.FortItemListPreviewWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x468 - 0x3F0)
	class UFortItemListPreviewWidget : public UCommonActivatableWidget	
	{
	public:
		TArray<UFortItemVM*> Items; // 0x3F0(0x10)
		unsigned char UnknownData00_6[0x48]; // 0x400(0x48) UNKNOWN PROPERTY
		UTileView* TileView_Items; // 0x448(0x8)
		UWidget* Container_Items; // 0x450(0x8)
		UCommonButtonLegacy* Button_PreviewVariants; // 0x458(0x8)
		UFortHoldableButton* Button_Subscribe; // 0x460(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemListPreviewWidget");
			return ret;
		}

		bool ItemHasVariants(UFortItemVM* ItemVM); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemPairsInspectionScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x108 (0x820 - 0x718)
	class UFortItemPairsInspectionScreen : public UFortItemPreviewScreen	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x718(0x20) UNKNOWN PROPERTY
		UWidget* ContentPurchasedFocusWidget; // 0x738(0x8)
		unsigned char UnknownData01_6[0x88]; // 0x740(0x88) UNKNOWN PROPERTY
		float DefaultVariantCyclingDelay; // 0x7C8(0x4)
		float TimeBetweenVariants; // 0x7CC(0x4)
		UFortItemVM* PresentedItem; // 0x7D0(0x8)
		EPresentationMode PresentationMode; // 0x7D8(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x7D9(0x7) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Back; // 0x7E0(0x8)
		UCommonButtonBase* Button_TouchBack; // 0x7E8(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_PresentationMode; // 0x7F0(0x8)
		UFortItemListPreviewWidget* Widget_ItemList; // 0x7F8(0x8)
		UFortVariantListPreviewWidget* Widget_VariantList; // 0x800(0x8)
		UFortItemBaseWidget* Widget_ItemInfoHeader; // 0x808(0x8)
		UFortStoreSkinDetailsPopup* ItemPopup_Details; // 0x810(0x8)
		UAthenaCosmeticUnlockingInfo* UnlockingInfo; // 0x818(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemPairsInspectionScreen");
			return ret;
		}

		void SetupInfoHeader(bool bShouldShowCard); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIntroAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortItemBaseWidget GetItemInfoHeader(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8DC8(relative to base address)
		void BP_UpdatePresentationMode(EPresentationMode NewMode); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnItemsSet(TArray<UFortItemVM*>& Items); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnItemPreviewed(UFortItemVM* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInputTypeChanged(ECommonInputType InputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BlockScreenContent(bool bBlockScreen, FText& ContentBlockedText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemQuantityListEntryBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortItemQuantityListEntryBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		int32_t Quantity; // 0x2E0(0x4)
		unsigned char UnknownData01_7[0x1C]; // 0x2E4(0x1C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemQuantityListEntryBase");
			return ret;
		}

		void SetPreviewData(FFortItemEntryPreviewData& PreviewData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BC720(relative to base address)
		void SetItemInstanceAndQuantity(FFortItemInstanceQuantityPair& ItemQuantityPair, bool ShouldTreatAsReset); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BAC74(relative to base address)
		void SetItemDefinitionAndQuantity(FFortItemQuantityPair& ItemQuantityPair, bool ShouldTreatAsReset); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BA7B8(relative to base address)
		void RefreshListEntry(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PreviewStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PreviewEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsBeingPreviewed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B9AD8(relative to base address)
		void HandleDifferentItemOrQuantitySetBP(bool IsBeingReset); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void GetPreviewData(FFortItemEntryPreviewData& OutPreviewData); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B9158(relative to base address)
		UFortItem GetItemInstance(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8DE0(relative to base address)
		UItemDefinitionBase GetItemDefinition(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8D24(relative to base address)
		void ClearPreviewData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8574(relative to base address)
	};


	// Class FortniteUI.FortItemQuantityListBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x368 - 0x2D8)
	class UFortItemQuantityListBase : public UCommonUserWidget	
	{
	public:
		EFortItemInspectionMode CurrentInspectMode; // 0x2D8(0x1)
		bool bListenToInventoryChanges; // 0x2D9(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x2DA(0x6) UNKNOWN PROPERTY
		UClass* ListEntryWidgetType; // 0x2E0(0x8)
		unsigned char UnknownData01_6[0x50]; // 0x2E8(0x50) UNKNOWN PROPERTY
		TArray<UObject*> ItemObjectsToKeepAlive; // 0x338(0x10)
		unsigned char UnknownData02_6[0x10]; // 0x348(0x10) UNKNOWN PROPERTY
		TArray<UItemDefinitionBase*> FortItemDefinitions; // 0x358(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemQuantityListBase");
			return ret;
		}

		void SetItemToCompareDefinitionsAndQuantities(TArray<FFortItemQuantityPair>& ItemToCompareQuantityPairs); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BB064(relative to base address)
		void SetItemInstancesAndQuantities(TArray<FFortItemInstanceQuantityPair>& ItemQuantityPairs, bool ShouldResetWidgets); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BADE0(relative to base address)
		void SetItemInspectMode(EFortItemInspectionMode InspectMode); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BABCC(relative to base address)
		void SetItemDefinitionsAndQuantities(TArray<FFortItemQuantityPair>& ItemQuantityPairs, bool ShouldResetWidgets); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BA920(relative to base address)
		void OnItemInspectModeChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsEmptyList(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B9AF0(relative to base address)
		TArray GetItemDefinitions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8D48(relative to base address)
		void AddListEntry(UFortItemQuantityListEntryBase* ListEntry); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemRatingIndicator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x468 (0x740 - 0x2D8)
	class UFortItemRatingIndicator : public UCommonUserWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x2D8(0x8)
		TWeakObjectPtr<UFortItem*> ItemToCompareWith; // 0x2E0(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x2E8(0x8) UNKNOWN PROPERTY
		FFortMultiSizeBrush RatingTypeIcon; // 0x2F0(0x420)
		int32_t RatingValue; // 0x710(0x4)
		EFortBuffState ComparisonResult; // 0x714(0x1)
		bool ShouldAppearEnchanted; // 0x715(0x1)
		unsigned char UnknownData01_7[0x2A]; // 0x716(0x2A) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemRatingIndicator");
			return ret;
		}

		void SetItemViewContext(TScriptInterface<Class> ItemViewContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB878(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB480(relative to base address)
		void SetItemToCompareWith(UFortItem* ItemToCompareWith); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB200(relative to base address)
		void HandleViewModelChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemView
	// Inherited from UObject
	// Size: 0x2E8 (0x310 - 0x28)
	class UFortItemView : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle UnifiedSupportsCameraControlInputAction; // 0x30(0x10)
		FDataTableRowHandle UnifiedZoomInputAction; // 0x40(0x10)
		FDataTableRowHandle ZoomOutInputAction; // 0x50(0x10)
		FDataTableRowHandle ZoomInInputAction; // 0x60(0x10)
		FDataTableRowHandle RotateInputAction; // 0x70(0x10)
		FMulticastInlineDelegate OnItemRotationChanged; // 0x80(0x10)
		FMulticastInlineDelegate OnItemZoomLevelChanged; // 0x90(0x10)
		unsigned char UnknownData01_6[0x208]; // 0xA0(0x208) UNKNOWN PROPERTY
		TArray<FDataTableRowHandle> RegisteredInputActions; // 0x2A8(0x10)
		unsigned char UnknownData02_7[0x58]; // 0x2B8(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemView");
			return ret;
		}

		void UnregisterInputActions(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD658(relative to base address)
		void SetSettings(FFortItemViewSettings& Settings); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BCC2C(relative to base address)
		void SetSceneComponentToAffect(USceneComponent* Component); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCB18(relative to base address)
		void SetOwningWidget(UCommonActivatableWidget* Widget); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBF68(relative to base address)
		void RestoreInitialTransform(bool bKeepCurrentRotation); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA0E0(relative to base address)
		void RegisterInputActions(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA074(relative to base address)
		void OnUserInputChangedView__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FFortItemViewSettings GetSettings(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B91FC(relative to base address)
	};


	// Class FortniteUI.FortItemViewContextInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemViewContextInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemViewContextInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortLevelIndicator
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x88 (0x1E0 - 0x158)
	class UFortLevelIndicator : public UWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x158(0x8)
		TWeakObjectPtr<UFortItem*> ItemForComparison; // 0x160(0x8)
		bool ShouldShowLabel; // 0x168(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x169(0x7) UNKNOWN PROPERTY
		UClass* TextStyle; // 0x170(0x8)
		bool ShouldShowMaximumLevel; // 0x178(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x179(0x3) UNKNOWN PROPERTY
		int32_t CurrentLevel; // 0x17C(0x4)
		int32_t MaximumLevel; // 0x180(0x4)
		bool IsComparingLevels; // 0x184(0x1)
		TEnumAsByte<EFortBrushSize> ComparisonResultIndicatorSize; // 0x185(0x1)
		unsigned char UnknownData02_6[0x2]; // 0x186(0x2) UNKNOWN PROPERTY
		int32_t CurrentLevelForComparison; // 0x188(0x4)
		int32_t MaximumLevelForComparison; // 0x18C(0x4)
		UCommonTextBlock* LabelTextBlock; // 0x190(0x8)
		UCommonNumericTextBlock* CurrentLevelNumericTextBlock; // 0x198(0x8)
		unsigned char UnknownData03_6[0x10]; // 0x1A0(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* DivisionOperatorTextBlock; // 0x1B0(0x8)
		UCommonNumericTextBlock* MaximumLevelNumericTextBlock; // 0x1B8(0x8)
		unsigned char UnknownData04_7[0x20]; // 0x1C0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLevelIndicator");
			return ret;
		}

		void SetShouldShowMaximumLevel(bool InShouldShowMaximumLevel); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCFE8(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB5A8(relative to base address)
		void SetItemForComparison(UFortItem* ItemForComparison); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BAAA4(relative to base address)
		void HandleItemToRepresentChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B94A8(relative to base address)
		void HandleItemForComparisonChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B94A8(relative to base address)
	};


	// Class FortniteUI.FortMultiSizeItemCard
	// Inherited from UFortItemWidget_NUI -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1C0 - 0x180)
	class UFortMultiSizeItemCard : public UFortItemWidget_NUI	
	{
	public:
		EFortItemCardSize BPItemCardSize; // 0x180(0x1)
		bool ShouldDisplayItemAsReward; // 0x181(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x182(0x2) UNKNOWN PROPERTY
		int32_t QuantityOverride; // 0x184(0x4)
		EFortRarity RarityOverride; // 0x188(0x1)
		EFortItemType EmptyItemType; // 0x189(0x1)
		bool ShouldSuppressItemTypeIcon; // 0x18A(0x1)
		bool ShouldSuppressTierMeter; // 0x18B(0x1)
		bool ShouldCollapseBorderPadding; // 0x18C(0x1)
		bool ShouldCollapseItem; // 0x18D(0x1)
		bool ShouldAutoHideDurability; // 0x18E(0x1)
		bool ShouldCollapseQuantity; // 0x18F(0x1)
		bool ShouldShowDurabilityRepairMode; // 0x190(0x1)
		unsigned char UnknownData01_7[0x2F]; // 0x191(0x2F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMultiSizeItemCard");
			return ret;
		}

		bool ShouldUseNewItemCards(); // Flags: Final|Native|Static|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7501BD41C(relative to base address)
		void SetShouldSuppressItemTypeIcon(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD078(relative to base address)
		void SetShouldShowDurabilityRepairMode(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCF44(relative to base address)
		void SetShouldDisplayItemAsReward(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCEC4(relative to base address)
		void SetShouldCollapseQuantity(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCE20(relative to base address)
		void SetShouldCollapseItem(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCDA0(relative to base address)
		void SetShouldCollapseBorderPadding(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BCCF4(relative to base address)
		void SetRarityOverride(EFortRarity RarityOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC930(relative to base address)
		void SetQuantityOverride(int32_t QuantityOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC8B0(relative to base address)
		void SetEmptyItemType(EFortItemType NewEmptyItemType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA3EC(relative to base address)
		void SetCardSize(EFortItemCardSize CardSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA2E8(relative to base address)
		EFortItemCardSize GetCardSize(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8D0C(relative to base address)
	};


	// Class FortniteUI.FortTierIndicator
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x20 (0x178 - 0x158)
	class UFortTierIndicator : public UWidget	
	{
	public:
		TWeakObjectPtr<UFortItem*> ItemToRepresent; // 0x158(0x8)
		TEnumAsByte<EFortBrushSize> BrushSize; // 0x160(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x161(0x3) UNKNOWN PROPERTY
		float InterPipPadding; // 0x164(0x4)
		unsigned char UnknownData01_7[0x10]; // 0x168(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTierIndicator");
			return ret;
		}

		void SetPreviewState(int32_t TierIncrease); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC7B0(relative to base address)
		void SetItemToRepresent(UFortItem* ItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BB768(relative to base address)
		void SetInterPipPadding(float InterPipPadding); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA638(relative to base address)
		void SetBrushSize(TEnumAsByte<EFortBrushSize> BrushSize); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA258(relative to base address)
		void ClearPreviewState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8588(relative to base address)
	};


	// Class FortniteUI.FortUpgradeIndicator
	// Inherited from UFortSimpleItemConditionIconIndicator -> UFortMultiSizeImage -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x5B0 - 0x5B0)
	class UFortUpgradeIndicator : public UFortSimpleItemConditionIconIndicator	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUpgradeIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortRejoinWindowBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x5A0 - 0x528)
	class UFortRejoinWindowBase : public UCommonActivatablePanelLegacy	
	{
	public:
		UCommonTextBlock* Text_RejoinTime; // 0x528(0x8)
		UCommonTextBlock* Text_Description; // 0x530(0x8)
		UCommonButtonLegacy* Button_Rejoin; // 0x538(0x8)
		UCommonButtonLegacy* Button_Retry; // 0x540(0x8)
		UCommonButtonLegacy* Button_Abandon; // 0x548(0x8)
		unsigned char UnknownData00_7[0x50]; // 0x550(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRejoinWindowBase");
			return ret;
		}
	};


	// Class FortniteUI.KairosViewport
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF8 (0x268 - 0x170)
	class UKairosViewport : public UContentWidget	
	{
	public:
		FLinearColor BackgroundColor; // 0x170(0x10)
		UMaterialInterface* EffectMaterial; // 0x180(0x8)
		TEnumAsByte<ESceneCaptureSource> CaptureSource; // 0x188(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x189(0x7) UNKNOWN PROPERTY
		FVector ViewLocation; // 0x190(0x18)
		FRotator ViewRotation; // 0x1A8(0x18)
		UClass* DefaultGameMode; // 0x1C0(0x8)
		UMaterialInstanceDynamic* DynamicMaterial; // 0x1C8(0x8)
		UTextureRenderTarget2D* RenderTarget; // 0x1D0(0x8)
		USceneCaptureComponent2D* CaptureComponent; // 0x1D8(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x1E0(0x8) UNKNOWN PROPERTY
		UClass* ViewportActorClass; // 0x1E8(0x8)
		TArray<AActor*> SpawnedActors; // 0x1F0(0x10)
		unsigned char UnknownData02_7[0x68]; // 0x200(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.KairosViewport");
			return ret;
		}
	};


	// Class FortniteUI.FortLeaderboardEntryDetails
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortLeaderboardEntryDetails : public UCommonUserWidget	
	{
	public:
		bool bAllowProfileNavigation; // 0x2D8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaderboardEntryDetails");
			return ret;
		}

		void WatchLiveMatch(FString SessionId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501BD780(relative to base address)
		void ShowCareerStatsScreen(FCareerStatsScreenParams& Params); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BD440(relative to base address)
		TArray GetAlternativeLeaderboardTrackedStats(FString TournamentId, FString EventWindowId, FString LeaderboardGroupingKey, FString LeaderboardInstanceId); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8B2C(relative to base address)
		FText GetAlternativeLeaderboardTrackedStatLabel(FString TrackedStatName); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8A78(relative to base address)
	};


	// Class FortniteUI.FortLeaderboardEntryWidget
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UFortLeaderboardEntryWidget : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UObject* LeaderboardEntryObject; // 0x13E8(0x8)
		UCommonBorder* Container_PlatformSocialCard; // 0x13F0(0x8)
		UCommonTextBlock* Text_PlatformSocialCard; // 0x13F8(0x8)
		UImage* Image_PlatformSocialCard; // 0x1400(0x8)
		USocialUser* QueriedSocialUser; // 0x1408(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x1410(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaderboardEntryWidget");
			return ret;
		}

		void DisplayPlatformProfile(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8738(relative to base address)
	};


	// Class FortniteUI.LiveStreamHUDElement
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x3B8 - 0x318)
	class ULiveStreamHUDElement : public UFortHUDElementWidget	
	{
	public:
		USoundSourceBus* SourceBus; // 0x318(0x8)
		USoundSubmixBase* DefaultAudioSubmix; // 0x320(0x8)
		USoundSubmixBase* LicensedAudioSubmix; // 0x328(0x8)
		unsigned char UnknownData00_7[0x88]; // 0x330(0x88) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamHUDElement");
			return ret;
		}

		void SetPIPVolumeMultiplier(float InMultiplayer); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC6AC(relative to base address)
		void SetPIPVideoUID(FString InVideoUID); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC61C(relative to base address)
		void SetPIPStartTime(float InStartTime); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC534(relative to base address)
		void SetPIPLive(bool bInLive); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC3CC(relative to base address)
		void SetPIPForceEnabled(bool bForced); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC2EC(relative to base address)
		void SetPIPEOSGSBlackout(bool bInEnable); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC27C(relative to base address)
		void SetPIPDisableInstructions(bool bDisable); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC20C(relative to base address)
		void SetPIPCDNWeights(TArray<float> InWeights); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC12C(relative to base address)
		void SetPIPAutoClose(bool bAutoClose); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBFE8(relative to base address)
		void SetMirrorScreen(int32_t ScreenIndex); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBC74(relative to base address)
		void SetMirrorPIPAudioSubmix(bool bInDefault, bool bForce); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBBAC(relative to base address)
		void SetMirrorPIPAudioDisable(bool bInDisable); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBB34(relative to base address)
		void SetMirroredPIPAnalyicsMetadata(FName& MediaName, int64_t CurrentProgressTimecode, FName& MediaPlayerName); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BBCE4(relative to base address)
		bool IsUsingMirrorScreen(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9B10(relative to base address)
		float GetPIPVolumeMultiplier(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9120(relative to base address)
		FString GetPIPVideoUID(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8FCC(relative to base address)
		float GetPIPStartTIme(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8FB0(relative to base address)
		bool GetPIPLive(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8F80(relative to base address)
		bool GetPIPForceEnabled(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8F50(relative to base address)
		bool GetPIPDisableInstructions(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8F38(relative to base address)
		TArray GetPIPCDNWeights(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8EA8(relative to base address)
		bool GetPIPAutoClose(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8E90(relative to base address)
		int32_t GetMirrorScreen(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8E78(relative to base address)
		void FireMirroredPIPAnalytics(bool bInStarted); // Flags: Final|Native|Public, Memory Exec: 0x7FF7501B8978(relative to base address)
		void DestroyVideoPlayer(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CreateVideoPlayer(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLiveStreamGrantWindowExpires
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortLiveStreamGrantWindowExpires : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLiveStreamGrantWindowExpires");
			return ret;
		}
	};


	// Class FortniteUI.LiveStreamInMatchAd
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class ULiveStreamInMatchAd : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamInMatchAd");
			return ret;
		}

		void ShowAdvertisement(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.LiveStreamLobbyAd
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2D0 - 0x2B0)
	class ULiveStreamLobbyAd : public UUserWidget	
	{
	public:
		UWidgetSwitcher* ContentSwitcher; // 0x2B0(0x8)
		UPanelWidget* ButtonLayer; // 0x2B8(0x8)
		UPanelWidget* CountdownLayer; // 0x2C0(0x8)
		UCommonTextBlock* CountdownText; // 0x2C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamLobbyAd");
			return ret;
		}
	};


	// Class FortniteUI.LiveStreamMenuToggleButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class ULiveStreamMenuToggleButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamMenuToggleButton");
			return ret;
		}

		void RefreshButton(bool IsLiveStreamEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivatableVideoPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x640 - 0x560)
	class UFortActivatableVideoPanel : public UFortActivatablePanel	
	{
	public:
		FMulticastInlineDelegate OnSkipButtonClicked; // 0x560(0x10)
		bool bOverwriteSkip; // 0x570(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x571(0x7) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnMediaPlayerEndReached; // 0x578(0x10)
		FMulticastInlineDelegate OnMediaOpened; // 0x588(0x10)
		FMulticastInlineDelegate OnMediaOpenFailed; // 0x598(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x5A8(0x10) UNKNOWN PROPERTY
		bool AutomaticallyDismissPanel; // 0x5B8(0x1)
		unsigned char UnknownData02_6[0x57]; // 0x5B9(0x57) UNKNOWN PROPERTY
		bool bAutoPlayOnActivated; // 0x610(0x1)
		bool bAllowSkipping; // 0x611(0x1)
		bool ControlsVisible; // 0x612(0x1)
		unsigned char UnknownData03_6[0x1]; // 0x613(0x1) UNKNOWN PROPERTY
		float LastInteractionTime; // 0x614(0x4)
		UFortVideoPlayerWidget* VideoPlayerWidget; // 0x618(0x8)
		UCommonButtonBase* Button_Skip; // 0x620(0x8)
		UImage* Image_ThrobberBackground; // 0x628(0x8)
		UImage* Image_Throbber; // 0x630(0x8)
		USoundMix* ActiveSoundMix; // 0x638(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatableVideoPanel");
			return ret;
		}

		bool StreamVideoFromSource(UStreamMediaSource* StreamSource); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4E3C(relative to base address)
		bool StreamVideo(FString VideoURL); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4D4C(relative to base address)
		void StartVideo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4D20(relative to base address)
		void ShowThrobber(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4D0C(relative to base address)
		void ShowControls(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ShouldAutoPlayVideo(FName AssetName, bool bAllowRecord); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501BD234(relative to base address)
		void MediaOpenFailed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void MediaOpened(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool LoadVideo(FName VideoId, bool bIsAutoPlay, bool bForceDefaultAudioTrack, FName VideoString); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F2C60(relative to base address)
		void HideControls(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UMediaPlayer GetMediaPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0F4C(relative to base address)
		void EnableSkipButton(bool bAllowSkip); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F06F0(relative to base address)
	};


	// Class FortniteUI.LiveStreamScreen
	// Inherited from UFortActivatableVideoPanel -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x658 - 0x640)
	class ULiveStreamScreen : public UFortActivatableVideoPanel	
	{
	public:
		UFortStreamMediaSource* StreamMediaSource; // 0x640(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x648(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamScreen");
			return ret;
		}

		void OnRetrieveVideoUrlResult(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B9C6C(relative to base address)
	};


	// Class FortniteUI.LiveStreamStandalonePlayer
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class ULiveStreamStandalonePlayer : public UUserWidget	
	{
	public:
		UFortStreamMediaSource* StreamMediaSource; // 0x2B0(0x8)
		UFortVideoPlayerWidget* VideoPlayerWidget; // 0x2B8(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x2C0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LiveStreamStandalonePlayer");
			return ret;
		}

		void UnblockPlayer(ELiveStreamStandaloneBlocked BlockedReason); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD5B0(relative to base address)
		void Stop(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD560(relative to base address)
		void SetPIPStartTime(float InStartTime); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC5A8(relative to base address)
		void SetPIPMediaID(FString InVideoUID); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC4AC(relative to base address)
		void SetPIPLive(bool bInLive); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC43C(relative to base address)
		void SetPIPIgnorePartySync(bool bIgnore); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC35C(relative to base address)
		void SetPIPCDNDistribution(TArray<float>& Weights); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501BC058(relative to base address)
		void ResetPIPState(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA088(relative to base address)
		void Play(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9E38(relative to base address)
		void PIPReadyToRender(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRetrieveVideoUrlSuccess(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B9D08(relative to base address)
		void OnRetrieveVideoUrlFailure(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B9BD0(relative to base address)
		bool GetPlayerIsBlocked(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B913C(relative to base address)
		bool GetPIPStandaloneError(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8F98(relative to base address)
		bool GetPIPIgnorePartySync(); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B8F68(relative to base address)
		void FireStandalonePIPAnalytics(bool bInStarted); // Flags: Final|Native|Public, Memory Exec: 0x7FF7501B89F8(relative to base address)
		void DisableSharing(bool bInDisable); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B86B8(relative to base address)
		void CheckMediaStarted(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B8524(relative to base address)
		void BlockPlayer(ELiveStreamStandaloneBlocked BlockedReason); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501B847C(relative to base address)
	};


	// Class FortniteUI.FortHeroLoadoutSwitcherBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortHeroLoadoutSwitcherBase : public UCommonUserWidget	
	{
	public:
		UHorizontalBox* HBox_LoadoutPagingContainer; // 0x2D8(0x8)
		UFortItemDetailsHostPanel* HeroLoadoutCommanderDetailsHostPanel; // 0x2E0(0x8)
		UFortHeroAbilitiesAndGadgetsBase* HeroAbilitiesAndGadgets; // 0x2E8(0x8)
		UCommonTextBlock* TextBlock_LoadoutDisplayName; // 0x2F0(0x8)
		UCommonButtonLegacy* Button_PageLeft; // 0x2F8(0x8)
		UCommonButtonLegacy* Button_PageRight; // 0x300(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x308(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHeroLoadoutSwitcherBase");
			return ret;
		}

		void UpdateRarity(EFortRarity Rarity); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Update(UFortCampaignHeroLoadoutItem* HeroLoadout); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD66C(relative to base address)
	};


	// Class FortniteUI.FortCustomMatchmakingKeyModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortCustomMatchmakingKeyModal : public UFortActivatablePanel	
	{
	public:
		UEditableText* EditableText_MatchmakingKey; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCustomMatchmakingKeyModal");
			return ret;
		}
	};


	// Class FortniteUI.FortInGameMatchmakingPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortInGameMatchmakingPanel : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInGameMatchmakingPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingGameModeButton
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortMatchmakingGameModeButton : public UUserWidget	
	{
	public:
		UCommonButtonLegacy* IconTextButton_Play; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingGameModeButton");
			return ret;
		}
	};


	// Class FortniteUI.FortMatchmakingSpecialButton
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortMatchmakingSpecialButton : public UUserWidget	
	{
	public:
		UFortMatchmakingGameModeButton* Button_LimitedTimeGameMode; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMatchmakingSpecialButton");
			return ret;
		}
	};


	// Class FortniteUI.MatchmakingInputIndicatorBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x320 - 0x2D8)
	class UMatchmakingInputIndicatorBase : public UCommonUserWidget	
	{
	public:
		EMatchmakingInputSource InputSource; // 0x2D8(0x1)
		bool bShowLocalInputOnlyWhenDifferentFromDefault; // 0x2D9(0x1)
		bool bShowRemoteInputOnlyWhenDifferentFromDefault; // 0x2DA(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x2DB(0x5) UNKNOWN PROPERTY
		FUniqueNetIdRepl RemotePlayerUniqueId; // 0x2E0(0x30)
		ECommonInputType LastInputType; // 0x310(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x311(0x7) UNKNOWN PROPERTY
		USizeBox* SizeBox_HotfixVisibility; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MatchmakingInputIndicatorBase");
			return ret;
		}

		void SetRemotePlayer(FUniqueNetIdRepl UniqueID); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BC9BC(relative to base address)
		void OnInputSourceTypeChanged(ECommonInputType InputType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.MatchmakingRegionAndPoolBase
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UMatchmakingRegionAndPoolBase : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MatchmakingRegionAndPoolBase");
			return ret;
		}

		void OnRegionChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivatableMovieWidget
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x2D0 (0x6C0 - 0x3F0)
	class UFortActivatableMovieWidget : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		bool bOverwriteSkip; // 0x3F8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x3F9(0x7) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnMediaError; // 0x400(0x10)
		bool bMediaPreEndCheckEnabled; // 0x410(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x411(0x7) UNKNOWN PROPERTY
		FVideoWidgetConfig VideoConfig; // 0x418(0x98)
		unsigned char UnknownData03_6[0x18]; // 0x4B0(0x18) UNKNOWN PROPERTY
		bool bInWholeFade; // 0x4C8(0x1)
		bool bInColorFade; // 0x4C9(0x1)
		unsigned char UnknownData04_6[0x6]; // 0x4CA(0x6) UNKNOWN PROPERTY
		FDataTableRowHandle PressToSkipAction; // 0x4D0(0x10)
		FDataTableRowHandle HoldToSkipAction; // 0x4E0(0x10)
		UImage* Image_Color; // 0x4F0(0x8)
		bool bAutoBroadcastRebuild; // 0x4F8(0x1)
		bool bShowSubtitles; // 0x4F9(0x1)
		bool bNoAudio; // 0x4FA(0x1)
		bool bEnableInputControl; // 0x4FB(0x1)
		unsigned char UnknownData05_6[0x4]; // 0x4FC(0x4) UNKNOWN PROPERTY
		UMediaPlayer* VideoPlayer; // 0x500(0x8)
		USoundClass* SoundClass; // 0x508(0x8)
		UMediaSoundComponent* SoundComponent; // 0x510(0x8)
		UFortMediaSubtitlesPlayer* SubtitlePlayer; // 0x518(0x8)
		ULocalizedOverlays* SubtitleOverlays; // 0x520(0x8)
		unsigned char UnknownData06_6[0x38]; // 0x528(0x38) UNKNOWN PROPERTY
		float LastInteractionTime; // 0x560(0x4)
		bool bControlsVisible; // 0x564(0x1)
		unsigned char UnknownData07_6[0x3]; // 0x565(0x3) UNKNOWN PROPERTY
		UImage* Image_VideoTexture; // 0x568(0x8)
		FLinearColor VideoTextureColor; // 0x570(0x10)
		USubtitleDisplay* Subtitles; // 0x580(0x8)
		UCommonButtonBase* Button_Skip; // 0x588(0x8)
		UImage* Image_Throbber; // 0x590(0x8)
		UBorder* SafeZonePadding; // 0x598(0x8)
		FLinearColor SafeZoneColor; // 0x5A0(0x10)
		USoundMix* ActiveSoundMix; // 0x5B0(0x8)
		USoundSubmixBase* DefaultSubmix; // 0x5B8(0x8)
		USoundSubmixBase* LicensedSubmix; // 0x5C0(0x8)
		unsigned char UnknownData08_6[0x8]; // 0x5C8(0x8) UNKNOWN PROPERTY
		UFortMediaPlayerCtrl* MediaController; // 0x5D0(0x8)
		UFortBaseStreamingVideo* BaseStreamingVideo; // 0x5D8(0x8)
		FMulticastInlineDelegate MediaPreEndEvent; // 0x5E0(0x10)
		FMulticastInlineDelegate MediaVolumeChangeEvent; // 0x5F0(0x10)
		FMulticastInlineDelegate MediaStartedEvent; // 0x600(0x10)
		unsigned char UnknownData09_6[0x18]; // 0x610(0x18) UNKNOWN PROPERTY
		FMulticastInlineDelegate WidgetEndReachedEvent; // 0x628(0x10)
		unsigned char UnknownData10_7[0x88]; // 0x638(0x88) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatableMovieWidget");
			return ret;
		}

		void WholeFadeComplete(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD810(relative to base address)
		void StreamedVideoOpeningTimeout(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501BD59C(relative to base address)
		void StreamedVideoOnMediaPlayerEndReached(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501BD588(relative to base address)
		void StreamedVideoOnMediaPlayerClosed(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501BD574(relative to base address)
		void Stop(bool InForceClose); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BD4E0(relative to base address)
		void StartWholeFade(bool bReverse); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartFadeFromColor(bool bEnd, UFortActivatablePrePostRollStates Reason, bool bReverse); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool ShouldAutoPlayVideo(FName AssetName, bool bAllowRecord); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501BD234(relative to base address)
		void SetMediaPreEndTimeSeconds(float InSeconds); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BBAB4(relative to base address)
		void SetFadeTime(double InFadeTime); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501BA470(relative to base address)
		void Play(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9E24(relative to base address)
		void OnVisibilityChangedHandler(ESlateVisibility InVisibility); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B9DA4(relative to base address)
		void LoadStreamingVideo(FVideoWidgetConfig& Config); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501B9B2C(relative to base address)
		void HandleVideoStreamingTerminalError(EBaseMediaTerminalErrorReason Reason); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B98D8(relative to base address)
		void HandleVideoStreamingSuccess(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501B98C4(relative to base address)
		UImage GetVideoTexture(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B9248(relative to base address)
		UMediaPlayer GetMediaPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501B8E60(relative to base address)
		UFortBaseStreamingVideo GetBaseStreamingVideo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7501B8CF4(relative to base address)
		void FadeInFromColorComplete(UFortActivatablePrePostRollStates Reason); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B87D4(relative to base address)
		void EnableFadeInFromColor(bool bInEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B874C(relative to base address)
		void Close(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501B859C(relative to base address)
	};


	// Class FortniteUI.FortActivatableMovieWidget_Monolithic
	// Inherited from UFortActivatableVideoPanel -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x730 - 0x640)
	class UFortActivatableMovieWidget_Monolithic : public UFortActivatableVideoPanel	
	{
	public:
		FMulticastInlineDelegate MediaOpenedMono; // 0x640(0x10)
		unsigned char UnknownData00_6[0x58]; // 0x650(0x58) UNKNOWN PROPERTY
		UFortStreamMediaSource* MediaSourceMono; // 0x6A8(0x8)
		UMediaPlayer* StreamedMediaPlayer; // 0x6B0(0x8)
		unsigned char UnknownData01_6[0x50]; // 0x6B8(0x50) UNKNOWN PROPERTY
		FDataTableRowHandle PressToSkipAction; // 0x708(0x10)
		FDataTableRowHandle HoldToSkipAction; // 0x718(0x10)
		UImage* Image_White; // 0x728(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivatableMovieWidget_Monolithic");
			return ret;
		}

		void StreamedVideoOnUrlSuccess(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F4F68(relative to base address)
		void StreamedVideoOnUrlFailure(FString URL); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F4ECC(relative to base address)
		void StartFadeFromWhite(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void Play(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F30A0(relative to base address)
		void LoadStreamingVideo(FVideoConfig_Mono Config, UFortStreamMediaSource* StreamMediaSource, bool& bNoAutoPlay, bool bStartWithWhite); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F28C4(relative to base address)
		void EnableFadeInFromWhite(bool bInEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0668(relative to base address)
	};


	// Class FortniteUI.FortVideoDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x78 (0xA8 - 0x30)
	class UFortVideoDisplayData : public UDataAsset	
	{
	public:
		UMediaPlayer* FortVideoPlayer; // 0x30(0x8)
		UFortMediaSubtitlesPlayer* SubtitlePlayer; // 0x38(0x8)
		UClass* VideoActivatablePanelClass; // 0x40(0x8)
		TMap<FString, int32_t> LocaleAudioTrackIndexMap; // 0x48(0x50)
		TArray<FFortVideoInfo> Videos; // 0x98(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVideoDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.FortVideoPlayerWidget
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF8 (0x3B8 - 0x2C0)
	class UFortVideoPlayerWidget : public UFortUserWidget	
	{
	public:
		bool bAutoPlayOnOpen; // 0x2C0(0x1)
		bool bLoop; // 0x2C1(0x1)
		bool bShowSubtitles; // 0x2C2(0x1)
		bool bNoAudio; // 0x2C3(0x1)
		unsigned char UnknownData00_6[0x1]; // 0x2C4(0x1) UNKNOWN PROPERTY
		bool bForceDefaultAudio; // 0x2C5(0x1)
		unsigned char UnknownData01_6[0x2]; // 0x2C6(0x2) UNKNOWN PROPERTY
		USoundClass* SoundClass; // 0x2C8(0x8)
		unsigned char UnknownData02_6[0x90]; // 0x2D0(0x90) UNKNOWN PROPERTY
		UMediaPlayer* VideoPlayer; // 0x360(0x8)
		USoundSubmixBase* DefaultAudioSubmix; // 0x368(0x8)
		USoundSubmixBase* LicensedAudioSubmix; // 0x370(0x8)
		UFortMediaPlayerCtrl* MediaController; // 0x378(0x8)
		UMediaSoundComponent* SoundComponent; // 0x380(0x8)
		UFortMediaSubtitlesPlayer* SubtitlePlayer; // 0x388(0x8)
		unsigned char UnknownData03_6[0x10]; // 0x390(0x10) UNKNOWN PROPERTY
		UImage* Image_VideoTexture; // 0x3A0(0x8)
		USubtitleDisplay* Subtitles; // 0x3A8(0x8)
		unsigned char UnknownData04_7[0x8]; // 0x3B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVideoPlayerWidget");
			return ret;
		}

		void SetupMediaController(float MediaStartTime); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4974(relative to base address)
		void SetSoundClass(USoundClass* InSoundClass); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4468(relative to base address)
		void SetMediaMaterial(UMaterialInterface* VideoMaterial); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4354(relative to base address)
		UMediaPlayer GetMediaPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E0EDEB0(relative to base address)
		void DynamicHandleOnOpenMediaFailed(FString FailedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F05CC(relative to base address)
		void DynamicHandleOnMediaOpened(FString OpenedUrl); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F0530(relative to base address)
	};


	// Class FortniteUI.FortUIMessagesPageBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x550 - 0x528)
	class UFortUIMessagesPageBase : public UCommonActivatablePanelLegacy	
	{
	public:
		int32_t MaximumMessagesShown; // 0x528(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x52C(0x4) UNKNOWN PROPERTY
		UCommonListView* MessagesList; // 0x530(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x538(0x8) UNKNOWN PROPERTY
		TArray<UFortUINotification*> MessagesShown; // 0x540(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIMessagesPageBase");
			return ret;
		}

		void OnNotificationCleared(UFortUINotification* ClearedMessage); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F3020(relative to base address)
		void OnMessageAvailable(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F0888(relative to base address)
		void FillMessagesList(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0888(relative to base address)
	};


	// Class FortniteUI.FortMissionActivationInfo
	// Inherited from UObject
	// Size: 0x150 (0x178 - 0x28)
	class UFortMissionActivationInfo : public UObject	
	{
	public:
		bool bIsMultiplayer; // 0x28(0x1)
		unsigned char UnknownData00_6[0x77]; // 0x29(0x77) UNKNOWN PROPERTY
		AFortPlayerController* FortPC; // 0xA0(0x8)
		AFortGameStateZone* GameStateZone; // 0xA8(0x8)
		UCurveFloat* DifficultyIncreaseBluGloCurve; // 0xB0(0x8)
		unsigned char UnknownData01_7[0xC0]; // 0xB8(0xC0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionActivationInfo");
			return ret;
		}

		FText TimeSecondsToText(float InSeconds); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F523C(relative to base address)
		void SubmitVote(EFortVoteType VoteType, bool bApprove); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F5004(relative to base address)
		void RequestVote(EFortVoteType VoteType, float VoteDuration, float FailedVoteLockOutDuration, EFortVoteArbitratorType ArbitratorType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3B04(relative to base address)
		bool IsVoteLocked(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F2808(relative to base address)
		bool IsVoteActive(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F277C(relative to base address)
		bool IsPlayerVoteInstigator(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F26CC(relative to base address)
		bool IsAnyVoteActive(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F25B8(relative to base address)
		bool HasPlayerVoted(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F2518(relative to base address)
		void HandleTeamMemberRemoved(int32_t RemovedIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F22BC(relative to base address)
		void HandleTeamMemberAdded(FFortTeamMemberInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F2154(relative to base address)
		void HandleGameplayVoteUpdated(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32_t VoteResult, TArray<FVoter>& Voters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501F1AC8(relative to base address)
		float GetVoteTimeRemaining(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F14D4(relative to base address)
		TArray GetVoters(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F1634(relative to base address)
		void GetVoteCounts(EFortVoteType VoteType, int32_t& OutYesVoteCount, int32_t& OutNoVoteCount); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F1300(relative to base address)
		int32_t GetStartObjectiveBluGloRequirement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F11C8(relative to base address)
		UFortMissionInfo GetPrimaryMissionInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F1058(relative to base address)
		AFortMission GetPrimaryMission(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F1034(relative to base address)
		EFortVoteType GetMissionVoteType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0F94(relative to base address)
		float GetMissionObjectiveTimeRemaining(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0F6C(relative to base address)
		FText GetLockoutTimeRemaining(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0E88(relative to base address)
		FUniqueNetIdRepl GetInstigatorId(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0D78(relative to base address)
		int32_t GetIncreaseDifficultyBluGloRequirement(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0CE0(relative to base address)
		void GetDeltaRewards(int32_t BaseDifficultyIncreaseTier, int32_t ComparedDifficultyIncreaseTier, TArray<FFortItemDelta>& DeltaRewards); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0B2C(relative to base address)
		int32_t GetAvailableBluGloCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0AC0(relative to base address)
		EFortVoteArbitratorType GetArbitratorType(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0A2C(relative to base address)
		bool DoesPrimaryMissionContainTags(FGameplayTagContainer& Tags); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0428(relative to base address)
		bool CanRequestVote(EFortVoteType VoteType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501EFE1C(relative to base address)
	};


	// Class FortniteUI.FortMissionActivationWidgetPanel
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortMissionActivationWidgetPanel : public UCommonUserWidget	
	{
	public:
		UFortMissionActivationInfo* InfoObject; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2E0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionActivationWidgetPanel");
			return ret;
		}

		void SetInfoObject(UFortMissionActivationInfo* NewInfoObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4178(relative to base address)
		void OnVoteUpdatedBP(EFortVoteType VoteType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMultiplayerChangedBP(bool bIsMultiplayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32_t VoteResult); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InfoObjectUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMissionActivationWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5B0 - 0x560)
	class UFortMissionActivationWidget : public UFortActivatablePanel	
	{
	public:
		UFortMissionActivationInfo* InfoObject; // 0x560(0x8)
		FGameplayTagContainer ReadyUpObjectiveHandle; // 0x568(0x20)
		UCurveFloat* DifficultyIncreaseBluGloCurve; // 0x588(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x590(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionActivationWidget");
			return ret;
		}

		void RequestStartObjectiveState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3AA0(relative to base address)
		void RequestDifficultyIncreaseState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3444(relative to base address)
		void RequestDefaultState(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F33E8(relative to base address)
		void OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStateUpdated(EFortMissionActivationWidgetState ActiveState, EFortMissionActivationWidgetState PreviousState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMultiplayerChangedBP(bool bIsMultiplayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32_t VoteResult); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		EFortMissionActivationWidgetState GetCurrentState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EF39244(relative to base address)
	};


	// Class FortniteUI.FortMissionObjectiveProgressBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortMissionObjectiveProgressBase : public UCommonUserWidget	
	{
	public:
		UProgressBar* ObjectiveProgressBar; // 0x2D8(0x8)
		UCommonTextBlock* ProgressBarText; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionObjectiveProgressBase");
			return ret;
		}

		void Update(AFortObjectiveBase* Objective, int32_t BarIndex); // Flags: Native|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7501F52F0(relative to base address)
		float GetHeightEstimate(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMissionTracker
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class UFortMissionTracker : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x318(0x8) UNKNOWN PROPERTY
		UFortMissionTrackerList* MissionTrackerList; // 0x320(0x8)
		UFortQuestTrackerList* MainQuestList; // 0x328(0x8)
		UFortQuestTrackerList* PinnedQuestsList; // 0x330(0x8)
		UWidget* AdditionalEntriesIndicator; // 0x338(0x8)
		UCommonNumericTextBlock* DebugHeightEstimate; // 0x340(0x8)
		float AllowedSize; // 0x348(0x4)
		bool bEnforceHeightLimit; // 0x34C(0x1)
		bool bEnableMainQuestList; // 0x34D(0x1)
		bool bEnablePinnedQuestList; // 0x34E(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x34F(0x1) UNKNOWN PROPERTY
		int32_t VisibleMissionCategories; // 0x350(0x4)
		bool bSizeEstimateNeedsRefresh; // 0x354(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x355(0x3) UNKNOWN PROPERTY
		float LastRemainingSizeForPinnedQuests; // 0x358(0x4)
		unsigned char UnknownData03_7[0x14]; // 0x35C(0x14) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionTracker");
			return ret;
		}

		void SetEnablePinnedQuestList(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3F90(relative to base address)
		void SetEnableMainQuestList(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3EE0(relative to base address)
		void RefreshSizeEstimate(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F31A8(relative to base address)
		void HandleSizeEstimateChanged(UObject* ChangedElement); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1FD4(relative to base address)
		void HandleDebugHUDObjectiveHeightChanged(bool bIsDebugging); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F17E8(relative to base address)
	};


	// Class FortniteUI.FortMissionTrackerEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x380 - 0x2D8)
	class UFortMissionTrackerEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnMissionEntryVisibilityChanged; // 0x2E0(0x10)
		UClass* SubEntryClass; // 0x2F0(0x8)
		bool bConfigureAsHUD; // 0x2F8(0x1)
		bool bHiddenByHeightConstraint; // 0x2F9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x2FA(0x6) UNKNOWN PROPERTY
		UCommonTextBlock* MissionNameText; // 0x300(0x8)
		UVerticalBox* ObjectivesListBox; // 0x308(0x8)
		UImage* UpperSeparator; // 0x310(0x8)
		AFortMission* TrackedMission; // 0x318(0x8)
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x320(0x10)
		unsigned char UnknownData02_7[0x50]; // 0x330(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionTrackerEntry");
			return ret;
		}

		void UpdateVisibility(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1C9C(relative to base address)
		void OnMissionSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleObjectivesChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1CD8(relative to base address)
		void HandleMissionInfoSet(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1C9C(relative to base address)
	};


	// Class FortniteUI.FortMissionTrackerList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x378 - 0x2D8)
	class UFortMissionTrackerList : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UClass* MissionEntryClass; // 0x2E0(0x8)
		bool bConfigureAsHUD; // 0x2E8(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2E9(0x7) UNKNOWN PROPERTY
		UVerticalBox* MissionsListBox; // 0x2F0(0x8)
		UVerticalBox* SecondaryMissionsListBox; // 0x2F8(0x8)
		FMulticastInlineDelegate OnMissionTrackerListVisibilityChanged; // 0x300(0x10)
		int32_t VisibleMissionCategories; // 0x310(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x314(0x4) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x318(0x10)
		unsigned char UnknownData03_7[0x50]; // 0x328(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionTrackerList");
			return ret;
		}

		void UpdateVisibleMissionCategories(int32_t InVisibleMissionCategories); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F58C8(relative to base address)
		void UpdateVisibility(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F58B4(relative to base address)
		void HandleSizeEstimateChanged(UObject* ChangedElement); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F2054(relative to base address)
		void HandleMissionsUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1CB0(relative to base address)
	};


	// Class FortniteUI.FortMissionTrackerSubEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UFortMissionTrackerSubEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnMissionSubEntryVisibilityChanged; // 0x2E0(0x10)
		bool bConfigureAsHUD; // 0x2F0(0x1)
		bool bHiddenByHeightConstraint; // 0x2F1(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x2F2(0x6) UNKNOWN PROPERTY
		AFortObjectiveBase* TrackedObjective; // 0x2F8(0x8)
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x300(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionTrackerSubEntry");
			return ret;
		}

		void OnObjectiveSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHiddenByHeightConstraintChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyVisibilityChanged(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F2DB0(relative to base address)
	};


	// Class FortniteUI.FortMissionVoteHUDElementWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x348 - 0x318)
	class UFortMissionVoteHUDElementWidget : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x318(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionVoteHUDElementWidget");
			return ret;
		}

		void RegisterFailsafeForVoteType(EFortVoteType VoteType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F31BC(relative to base address)
		void OnVoteUpdated(EFortVoteType VoteType, int32_t YesVoteCount, int32_t NoVoteCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVoteStarted(EFortVoteType VoteType, EFortVoteArbitratorType ArbitratorType, int32_t YesVoteCount, int32_t NoVoteCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVoteEnded(EFortVoteType VoteType, EFortVoteArbitratorType ArbitratorType, bool VoteSucceeded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsMultiplayerVote(EFortVoteType VoteType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F2604(relative to base address)
		bool HasLocalPlayerVoted(EFortVoteType VoteType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F248C(relative to base address)
		void HandleTierSelectionVoteUpdate(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32_t VoteResult, TArray<FVoter>& Voters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501F18E8(relative to base address)
		void HandleMissionActivationVoteUpdate(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32_t VoteResult, TArray<FVoter>& Voters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501F18E8(relative to base address)
		void HandleDifficultyIncreaseVoteUpdate(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32_t VoteResult, TArray<FVoter>& Voters); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7501F18E8(relative to base address)
		int32_t GetVoteTimeRemaining(EFortVoteType VoteType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F1578(relative to base address)
	};


	// Class FortniteUI.AthenaControllerDisconnectedModal
	// Inherited from UAthenaProgressModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x408 - 0x400)
	class UAthenaControllerDisconnectedModal : public UAthenaProgressModal	
	{
	public:
		UHorizontalBox* HBox_SwitchUser; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaControllerDisconnectedModal");
			return ret;
		}
	};


	// Class FortniteUI.FortConfirmationWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1F0 (0x750 - 0x560)
	class UFortConfirmationWindow : public UFortActivatablePanel	
	{
	public:
		UDynamicEntryBox* EntryBox_SimpleButtons; // 0x560(0x8)
		UDynamicEntryBox* EntryBox_ComplexChoiceButtons; // 0x568(0x8)
		UPanelWidget* Panel_LeftOptionalWidget; // 0x570(0x8)
		UPanelWidget* Panel_OptionalWidget; // 0x578(0x8)
		UScrollBox* ScrollBox_Description; // 0x580(0x8)
		UCommonTextBlock* CommonTextBlock_Title; // 0x588(0x8)
		UCommonTextBlock* CommonTextBlock_Description; // 0x590(0x8)
		UImage* Image_MainIcon; // 0x598(0x8)
		UCommonLoadGuard* CommonLoadGuard_LatentSpinner; // 0x5A0(0x8)
		UWidget* Button_CloseTouch; // 0x5A8(0x8)
		UClass* LoudCTAButtonClass; // 0x5B0(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x5B8(0x18) UNKNOWN PROPERTY
		TArray<FFortConfirmationButtonInfo> ConfirmationButtons; // 0x5D0(0x10)
		UCommonButtonBase* DeclineButton; // 0x5E0(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x5E8(0x8) UNKNOWN PROPERTY
		FFortDialogDescription_NUI ConfirmationDescription; // 0x5F0(0x140)
		unsigned char UnknownData02_7[0x20]; // 0x730(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortConfirmationWindow");
			return ret;
		}

		void HandleInputSuspensionChanged(bool bIsInputSuspended); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F1C1C(relative to base address)
		void HandleDeclineActionClicked(UCommonButtonBase* ButtonClicked); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7501F1868(relative to base address)
		void HandleCancelButtonClicked(UCommonButtonBase* Buttton); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7501F1768(relative to base address)
		FFortDialogDescription_NUI GetConfirmationDescription(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0AE4(relative to base address)
		void ConfigureDeclineButton(UCommonButtonBase* Button); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ConfigureConfirmationButton(UCommonButtonBase* Button, FConfirmationDialogAction& Action, bool bSimpleConfirm); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BotClickButton(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501EFBB4(relative to base address)
	};


	// Class FortniteUI.FortProgressModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x640 - 0x560)
	class UFortProgressModal : public UFortActivatablePanel	
	{
	public:
		FText Title; // 0x560(0x10)
		FText Description; // 0x570(0x10)
		FSlateBrush Icon; // 0x580(0xB0)
		bool bIntroOutroEnabled; // 0x630(0x1)
		bool bAutoInitialize; // 0x631(0x1)
		bool bFocusSelf; // 0x632(0x1)
		bool bConsumeAnalogInput; // 0x633(0x1)
		unsigned char UnknownData00_6[0x4]; // 0x634(0x4) UNKNOWN PROPERTY
		UFortProgressWidget* ProgressWidget_Main; // 0x638(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortProgressModal");
			return ret;
		}

		void SetTitle(FText& InTitle); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F46A4(relative to base address)
		void SetIcon(FSlateBrush InIcon); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F4040(relative to base address)
		void SetDescription(FText& InDescription); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F3E44(relative to base address)
		void InitializeModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F25A4(relative to base address)
	};


	// Class FortniteUI.FortControllerDisconnectedModal
	// Inherited from UFortProgressModal -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x650 - 0x640)
	class UFortControllerDisconnectedModal : public UFortProgressModal	
	{
	public:
		UHorizontalBox* HBox_SwitchUser; // 0x640(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x648(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortControllerDisconnectedModal");
			return ret;
		}
	};


	// Class FortniteUI.FortLeaveDialog
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x5F0 - 0x560)
	class UFortLeaveDialog : public UFortActivatablePanel	
	{
	public:
		FMulticastInlineDelegate OnLeft; // 0x560(0x10)
		FMulticastInlineDelegate OnCanceled; // 0x570(0x10)
		UVerticalBox* VBox_PartyOptions; // 0x580(0x8)
		UCommonButtonGroupLegacy* PartyRadioButtonGroup; // 0x588(0x8)
		UCommonTextBlock* Text_Title; // 0x590(0x8)
		UCommonTextBlock* Text_Description; // 0x598(0x8)
		UCommonButtonLegacy* Button_LeavePartyRadio; // 0x5A0(0x8)
		UCommonButtonLegacy* Button_StayWithPartyRadio; // 0x5A8(0x8)
		UCommonButtonLegacy* Button_Leave; // 0x5B0(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x5B8(0x8)
		UCommonButtonLegacy* Button_CloseTouch; // 0x5C0(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x5C8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLeaveDialog");
			return ret;
		}

		void SetupLeaveDialog(FText& InTitle, FText& InDescription, bool bInShowPartyOptions); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F47E4(relative to base address)
		void OnDialogResponse__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CloseDialog(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F01F8(relative to base address)
	};


	// Class FortniteUI.FortModalBulletEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortModalBulletEntry : public UCommonUserWidget	
	{
	public:
		UCommonRichTextBlock* RichText_Description; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortModalBulletEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortParentalControlsUpdatedBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortParentalControlsUpdatedBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UCommonButtonBase* Button_Back; // 0x3F8(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortParentalControlsUpdatedBase");
			return ret;
		}

		void OnBackout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ExitModal(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
	};


	// Class FortniteUI.FortPinButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortPinButton : public UCommonButtonLegacy	
	{
	public:
		FString PinValue; // 0x13E0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinButton");
			return ret;
		}
	};


	// Class FortniteUI.FortPinCharacter
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortPinCharacter : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinCharacter");
			return ret;
		}

		void OnSetFilled(bool bFilled); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPinModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x5F0 - 0x560)
	class UFortPinModal : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x560(0x10) UNKNOWN PROPERTY
		UClass* PinCharacterWidgetClass; // 0x570(0x8)
		UCommonButtonBase* Button_Accept; // 0x578(0x8)
		UCommonRichTextBlock* Text_Description; // 0x580(0x8)
		UCommonTextBlock* Text_Results; // 0x588(0x8)
		UDynamicEntryBox* DynamicEntryBox_Chars; // 0x590(0x8)
		UFortCabinEmailManagementWidget* EmailManagementWidget; // 0x598(0x8)
		UFortSqueegeeWidgetInjectionSlot* SqueegeeInjectionSlot; // 0x5A0(0x8)
		unsigned char UnknownData01_7[0x48]; // 0x5A8(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPinModal");
			return ret;
		}

		void SetupSqueegeeWidgets(UFortGameActivity* GameActivity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupPurchaseRequest(UFortItemShopOfferVM* OfferVM); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowCabinModeLayout(bool bIsInCabinMode); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPinState(EPinModalValidityState PinModalState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandlePinButtonClicked(UCommonButtonBase* SelectedButton, int32_t TabIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F1CEC(relative to base address)
		void HandleForgotPinButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F1A50(relative to base address)
		void HandleEnterButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F1A3C(relative to base address)
		void HandleCloseButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0238(relative to base address)
		void HandleBackspaceButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F170C(relative to base address)
		AFortPlayerController GetUnlockPlayer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F127C(relative to base address)
		TArray CollectPinButtons(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClosePinModal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F0238(relative to base address)
	};


	// Class FortniteUI.FortRestartClientModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortRestartClientModal : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x560(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRestartClientModal");
			return ret;
		}

		void OnButtonSet(bool InbShouldExit, bool bShouldShow); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F1720(relative to base address)
	};


	// Class FortniteUI.FortReviewYourSettingsModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x4C8 - 0x3F0)
	class UFortReviewYourSettingsModal : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x98]; // 0x3F0(0x98) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortGameSettingRegistry*> SettingRegistry; // 0x488(0x8)
		UCommonButtonBase* Button_Back; // 0x490(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x498(0x8)
		UCommonTextBlock* Text_Title; // 0x4A0(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x4A8(0x8)
		UFortSettingsListView* ListView_Settings; // 0x4B0(0x8)
		UFortSettingDetailView* Details_Settings; // 0x4B8(0x8)
		UScrollBox* ScrollBox_Details; // 0x4C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReviewYourSettingsModal");
			return ret;
		}

		void OnModalBackout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ExitModal(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
	};


	// Class FortniteUI.MotdChallengeAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UMotdChallengeAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x30(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdChallengeAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdCompetitiveSubPageAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UMotdCompetitiveSubPageAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x30(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdCompetitiveSubPageAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdNavigateToCrewPageAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UMotdNavigateToCrewPageAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x30(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdNavigateToCrewPageAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdNavigateToShopAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UMotdNavigateToShopAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x30(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdNavigateToShopAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdSocialMenuAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x8 (0x38 - 0x30)
	class UMotdSocialMenuAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x30(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdSocialMenuAction");
			return ret;
		}
	};


	// Class FortniteUI.MotdWebsiteAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x10 (0x40 - 0x30)
	class UMotdWebsiteAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x30(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdWebsiteAction");
			return ret;
		}
	};


	// Class FortniteUI.FortMtxOfferData
	// Inherited from UPrimaryDataAsset -> UDataAsset -> UObject
	// Size: 0x210 (0x240 - 0x30)
	class UFortMtxOfferData : public UPrimaryDataAsset	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x30(0x8) UNKNOWN PROPERTY
		FText Header; // 0x38(0x10)
		FText DisplayName; // 0x48(0x10)
		FText ShortDisplayName; // 0x58(0x10)
		FText ShortDescription; // 0x68(0x10)
		FText SubTitleText; // 0x78(0x10)
		FText DisclaimerText; // 0x88(0x10)
		TArray<FFortItemQuantityPair> GrantOverride; // 0x98(0x10)
		TWeakObjectPtr<UObject*> SoftTileImage; // 0xA8(0x20)
		FVector2D TileImageSize; // 0xC8(0x10)
		TWeakObjectPtr<UObject*> SoftBadgeImage; // 0xD8(0x20)
		FVector2D BadgeImageSize; // 0xF8(0x10)
		TWeakObjectPtr<UObject*> SoftDetailsImage; // 0x108(0x20)
		FVector2D DetailsImageSize; // 0x128(0x10)
		TWeakObjectPtr<UObject*> SoftSimpleImage; // 0x138(0x20)
		FVector2D SimpleImageSize; // 0x158(0x10)
		TWeakObjectPtr<UMaterialInterface*> DetailsBadge; // 0x168(0x20)
		TArray<FFortMtxDetailsAttribute> DetailsAttributes; // 0x188(0x10)
		FFortMtxGradient Gradient; // 0x198(0x20)
		FLinearColor Background; // 0x1B8(0x10)
		TWeakObjectPtr<UObject*> SoftBackgroundImage; // 0x1C8(0x20)
		FVector2D BackgroundImageSize; // 0x1E8(0x10)
		FLinearColor UpsellPrimaryColor; // 0x1F8(0x10)
		FLinearColor UpsellSecondaryColor; // 0x208(0x10)
		FLinearColor UpsellTextColor; // 0x218(0x10)
		bool bUseBaseColors; // 0x228(0x1)
		bool bAllowInspectItems; // 0x229(0x1)
		bool bAllowItemPresentationScreen; // 0x22A(0x1)
		EFortMtxOfferDisplaySize DisplaySize; // 0x22B(0x1)
		unsigned char UnknownData01_6[0x4]; // 0x22C(0x4) UNKNOWN PROPERTY
		TArray<FFortMtxDescriptionAndDetails> DescriptionAndDetailsList; // 0x230(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMtxOfferData");
			return ret;
		}

		TArray GetDescriptionAndDetailsList(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0C44(relative to base address)
		FSlateBrush CreateBrushFromAsset(UObject* LoadedAsset, FVector2D& BrushSize); // Flags: Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7501F024C(relative to base address)
	};


	// Class FortniteUI.FortMtxStoreRootBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x480 - 0x3F0)
	class UFortMtxStoreRootBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UFortMtxStoreSelectionPopup* MtxStoreSelectionWidget; // 0x3F8(0x8)
		UClass* MtxStoreSelectionClass; // 0x400(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x408(0x10) UNKNOWN PROPERTY
		TArray<UFortStoreFrontOfferInfo*> AcquisitionOfferData; // 0x418(0x10)
		unsigned char UnknownData02_6[0x18]; // 0x428(0x18) UNKNOWN PROPERTY
		TArray<FString> StorefrontNames; // 0x440(0x10)
		UWidget* LoadingSpinner; // 0x450(0x8)
		unsigned char UnknownData03_7[0x28]; // 0x458(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMtxStoreRootBase");
			return ret;
		}

		void SetStorefrontNames(TArray<FString>& InStorefrontNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F451C(relative to base address)
		void PushStoreSelection(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, FText& CurrencyMessageLocText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartReadingOffers(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74D8BBAE4(relative to base address)
		void OnPurchasingDisabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOffersGenerated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NoOffersAvailable(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetStorefrontNames(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F1204(relative to base address)
		FMtxBreakdown GetMtxBreakdown(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0FA8(relative to base address)
		void GenerateOfferWidget(UFortStoreFrontOfferInfo* OfferData); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7501F089C(relative to base address)
		void ClearOfferWidgets(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74D8BB7E0(relative to base address)
		bool AreOffersLoaded(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EE1B988(relative to base address)
	};


	// Class FortniteUI.FortMtxStoreRootBase_Legacy
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x5E8 - 0x560)
	class UFortMtxStoreRootBase_Legacy : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		UFortMtxStoreSelectionPopup* MtxStoreSelectionWidget; // 0x568(0x8)
		UClass* MtxStoreSelectionClass; // 0x570(0x8)
		unsigned char UnknownData01_6[0x10]; // 0x578(0x10) UNKNOWN PROPERTY
		TArray<UFortStoreFrontOfferInfo*> AcquisitionOfferData; // 0x588(0x10)
		unsigned char UnknownData02_6[0x18]; // 0x598(0x18) UNKNOWN PROPERTY
		TArray<FString> StorefrontNames; // 0x5B0(0x10)
		unsigned char UnknownData03_7[0x28]; // 0x5C0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMtxStoreRootBase_Legacy");
			return ret;
		}

		void SetStorefrontNames(TArray<FString>& InStorefrontNames); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F45E0(relative to base address)
		void PushStoreSelection(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, FText& CurrencyMessageLocText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStartReadingOffers(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74E3138BC(relative to base address)
		void OnPurchasingDisabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOffersGenerated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NoOffersAvailable(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TArray GetStorefrontNames(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F1240(relative to base address)
		FMtxBreakdown GetMtxBreakdown(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F0FA8(relative to base address)
		void GenerateOfferWidget(UFortStoreFrontOfferInfo* OfferData); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74FCB13CC(relative to base address)
		void ClearOfferWidgets(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74D8BB41C(relative to base address)
		float CalculateBonusPercent(UFortStoreFrontOfferInfo* OfferData); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501EFC24(relative to base address)
		bool AreOffersLoaded(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74EDD17AC(relative to base address)
	};


	// Class FortniteUI.FortMtxStoreSelectionPopup
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UFortMtxStoreSelectionPopup : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMtxStoreSelectionPopup");
			return ret;
		}

		void HandleStoreSelectionClicked(EAppStore AppStore); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F20D4(relative to base address)
	};


	// Class FortniteUI.FortItemShopBlueprintLibrary
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortItemShopBlueprintLibrary : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopBlueprintLibrary");
			return ret;
		}

		void ShowGiftingScreen(UWidget* Context, UFortItemShopOfferVM* OfferVM, FDelegateProperty OnMFAShown); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501F49F4(relative to base address)
		void RequestPurchasePinModal(UWidget* Context, UFortItemShopOfferVM* OfferVM, FDelegateProperty OnPinVerified); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501F37F4(relative to base address)
		void RequestOpenMtxStore(UWidget* Context); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501F375C(relative to base address)
		void OnModalConfirmedDelegate__DelegateSignature(); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UItemShopPreviewData CreatePreviewDataFromItemVM(UWidget* Context, UFortItemVM* ItemVM); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0340(relative to base address)
	};


	// Class FortniteUI.FortMPItemShopContent
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x440 - 0x3F0)
	class UFortMPItemShopContent : public UCommonActivatableWidget	
	{
	public:
		UAthenaScrollBox* ScrollBox_Content; // 0x3F0(0x8)
		UGridPanel* GridPanel_Content; // 0x3F8(0x8)
		UClass* RowWidgetClass; // 0x400(0x8)
		float FakeAnimationScrollDistance; // 0x408(0x4)
		int32_t NumRowsVisibleFromCentered; // 0x40C(0x4)
		int32_t FirstRowIndex; // 0x410(0x4)
		int32_t CurrentScrolledRowIndex; // 0x414(0x4)
		float TouchScrollThreshold; // 0x418(0x4)
		unsigned char UnknownData00_7[0x24]; // 0x41C(0x24) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopContent");
			return ret;
		}

		void ScrollToRowIndex(int32_t DestinationIndex, int32_t NumRows, bool bRefreshAll); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F3C40(relative to base address)
		void OnScrollInput(float ScrollAmount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnScrollComplete(int32_t DestinationIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResetRow(UUserWidget* RowWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadedRowWidgetsUpdated(int32_t DestinationIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitializeRow(UUserWidget* RowWidget, int32_t RowIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasLoadedRowsForAnimatedScroll(int32_t DestinationIndex, int32_t NumRows); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F23CC(relative to base address)
		UFortItemShopSelectionVM GetShopSelectionVM(); // Flags: Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UWidget GetScrollTarget(UWidget* TargetWidget); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74D36FE78(relative to base address)
		float GetScrollPadding(UWidget* TargetWidget); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF7501F107C(relative to base address)
		EDescendantScrollDestination GetScrollDestination(UWidget* TargetWidget); // Flags: Native|Event|Protected|BlueprintEvent|Const, Memory Exec: 0x7FF74F49B59C(relative to base address)
		void ClearRows(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F01E4(relative to base address)
	};


	// Class FortniteUI.FortMPItemShopOfferGroupList
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x760 - 0x718)
	class UFortMPItemShopOfferGroupList : public UFortItemPreviewScreen	
	{
	public:
		float PendingPreviewDelay; // 0x718(0x4)
		FLinearColor DefaultBackgroundPrimaryColor; // 0x71C(0x10)
		FLinearColor DefaultBackgroundSecondaryColor; // 0x72C(0x10)
		unsigned char UnknownData00_6[0x4]; // 0x73C(0x4) UNKNOWN PROPERTY
		AFortItemPreviewWorld* CachedVaultWorld; // 0x740(0x8)
		UFortItemVM* PreviewedItem; // 0x748(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x750(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopOfferGroupList");
			return ret;
		}

		void UpdateBackground(UObject* LoadedBackground, bool bPlayForward, FLinearColor PrimaryColor, FLinearColor SecondaryColor); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7501F53B4(relative to base address)
		void RequestItemPreview(UFortItemVM* InPreviewedItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F357C(relative to base address)
		void OnHandlePreviewItem(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsItemShopDynamicBackgroundEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F25D8(relative to base address)
		void ClearItemPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F0148(relative to base address)
	};


	// Class FortniteUI.FortMPItemShopOfferInspectionScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x790 - 0x718)
	class UFortMPItemShopOfferInspectionScreen : public UFortItemPreviewScreen	
	{
	public:
		float PendingPreviewDelay; // 0x718(0x4)
		bool bIsCrossEntitlementItem; // 0x71C(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x71D(0x3) UNKNOWN PROPERTY
		TArray<TWeakObjectPtr> CrossEntitlementItemDefinitions; // 0x720(0x10)
		bool bAllowUpdateWhileDeactivated; // 0x730(0x1)
		bool bClearVariantsOnActivate; // 0x731(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x732(0x6) UNKNOWN PROPERTY
		AFortItemPreviewWorld* CachedVaultWorld; // 0x738(0x8)
		unsigned char UnknownData02_6[0x4]; // 0x740(0x4) UNKNOWN PROPERTY
		EItemPreviewRestrictionMode RestrictionMode; // 0x744(0x1)
		unsigned char UnknownData03_6[0x3]; // 0x745(0x3) UNKNOWN PROPERTY
		TArray<FMcpVariantChannelInfo> VariantOverrides; // 0x748(0x10)
		UItemShopPreviewData* PreviewedItem; // 0x758(0x8)
		unsigned char UnknownData04_6[0x10]; // 0x760(0x10) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> ItemEquipConfirmationModal; // 0x770(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopOfferInspectionScreen");
			return ret;
		}

		void ShowGiftingScreen(UFortItemShopOfferVM* OfferVM); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F4C8C(relative to base address)
		void SetVariantOverrides(TArray<FMcpVariantChannelInfo>& InVariantOverrides); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F4740(relative to base address)
		void SetSlotIndexOverride(int32_t SlotIndex); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F43DC(relative to base address)
		void RequestPurchasePinModal(UFortItemShopOfferVM* OfferVM); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F39DC(relative to base address)
		void RequestOpenMtxStore(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F37C8(relative to base address)
		void RequestItemPreview(UItemShopPreviewData* InPreviewedItem, bool bInKeepInputRotation); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F35FC(relative to base address)
		void OnMFAShown(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemEquipCompleted__DelegateSignature(bool bItemEquipped); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandlePreviewItem(bool bUseWidePreview); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		TWeakObjectPtr GetItemPresentationScreenClass(); // Flags: Final|Native|Static|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F0E30(relative to base address)
		float GetDelayGiftButtonWhenMFANotEnabledSeconds(); // Flags: Final|Native|Static|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F0B00(relative to base address)
		void EquipItem(UFortItemVM* SelectedItem, UFortVariantSelectorVM* OptionalVariantSelector, FDelegateProperty& OnCompleted); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF7501F0770(relative to base address)
		void ClearItemPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F015C(relative to base address)
		bool CanShowEquipItemButton(UFortItemVM* SelectedItem, UFortVariantSelectorVM* OptionalVariantSelector); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF7501EFEB8(relative to base address)
		void AttemptPurchase(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortMPItemShopScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x7C8 - 0x718)
	class UFortMPItemShopScreen : public UFortItemPreviewScreen	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x718(0x28) UNKNOWN PROPERTY
		float PendingOfferPreviewDelay; // 0x740(0x4)
		FLinearColor DefaultBackgroundPrimaryColor; // 0x744(0x10)
		FLinearColor DefaultBackgroundSecondaryColor; // 0x754(0x10)
		unsigned char UnknownData01_6[0x4]; // 0x764(0x4) UNKNOWN PROPERTY
		AFortItemPreviewWorld* CachedVaultWorld; // 0x768(0x8)
		TWeakObjectPtr<UClass*> OfferInspectionScreenClass; // 0x770(0x20)
		TWeakObjectPtr<UClass*> ItemShopDisplayAssetOfferDetailsClass; // 0x790(0x20)
		unsigned char UnknownData02_6[0x8]; // 0x7B0(0x8) UNKNOWN PROPERTY
		UAthenaScrollBox* ScrollBox_Content; // 0x7B8(0x8)
		UItemShopPreviewData* PreviewedItem; // 0x7C0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopScreen");
			return ret;
		}

		void UpdateBackground(UObject* LoadedBackground, bool bPlayForward, bool bForceInitialTransition, FLinearColor PrimaryColor, FLinearColor SecondaryColor); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7501F560C(relative to base address)
		void RequestItemPreview(UItemShopPreviewData* InPreviewedItem); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F36C4(relative to base address)
		void RequestInspectOffer(UFortItemShopOfferVM* OfferVM, UFortItemShopOfferGroupVM* OwningOfferGroupVM); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F34BC(relative to base address)
		void OnScrollInput(float ScrollAmount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferInspectionScreenShown(UCommonActivatableWidget* OfferInspectionScreenWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNavigateToTab(FString ItemOfferTrackingId, EItemShopNavigationAction NavigationAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F2DE0(relative to base address)
		void OnNavigateToOffer(FString OfferTrackingId, bool bShowOfferDetails); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandlePreviewItem(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleItemShown(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsPreviewingVehicle(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F2758(relative to base address)
		bool IsItemShopDynamicBackgroundEnabled(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501F25D8(relative to base address)
		void HandleBackToGameRequested(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F16F0(relative to base address)
		void GetSongPreviewActorCorners(FVector2D& LeftCorner2D, FVector2D& RightCorner2D); // Flags: Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7501F10E8(relative to base address)
		UFortItemShopVM GetItemShopVM(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FVector2D GetAbsolutePosition(FGeometry& Geometry); // Flags: Final|Native|Static|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure, Memory Exec: 0x7FF7501F0920(relative to base address)
		void ClearItemPreview(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7501F0170(relative to base address)
	};


	// Class FortniteUI.FortMPItemShopScreenWrapper
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UFortMPItemShopScreenWrapper : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMPItemShopScreenWrapper");
			return ret;
		}

		void OnNavigateToTab(FString ItemOfferTrackingId, EItemShopNavigationAction NavigationAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F2F00(relative to base address)
		void OnNavigateToOffer(FString OfferTrackingId, bool bShowOfferDetails); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortToastDisplayArea
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x370 - 0x318)
	class UFortToastDisplayArea : public UFortHUDElementWidget	
	{
	public:
		UFortToastWidget* ToastWidget_New; // 0x318(0x8)
		UFortToastWidget* Toast_BattlePassPageUnlocked; // 0x320(0x8)
		UFortToastWidget* PowerToastWidget; // 0x328(0x8)
		UFortToastWidget* ToastWidget_MinorError; // 0x330(0x8)
		UFortVoiceChannelChangePopup* VoiceChannelChangePopup; // 0x338(0x8)
		UFortToastWidget* ToastWidgetDonut; // 0x340(0x8)
		UFortSocialNotificationWidget* ToastSocialWidget; // 0x348(0x8)
		UFortSocialNotificationWidget* ToastSocialWidget_New; // 0x350(0x8)
		UFortUINotificationQueue* NotificationQueue; // 0x358(0x8)
		UFortUINotification* CurrentNotification; // 0x360(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x368(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortToastDisplayArea");
			return ret;
		}

		void TestBasicToast(EFortNotificationType InNotificationType, FText InTitle, FText InDescription); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7501F50FC(relative to base address)
		void RegisterToastHandler(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F32E0(relative to base address)
		void HandleToastFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F2338(relative to base address)
		void HandleNewToastAvailable(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F1CC4(relative to base address)
	};


	// Class FortniteUI.FortUINotificationQueue
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortUINotificationQueue : public UObject	
	{
	public:
		int32_t MaxNotificationsInQueue; // 0x28(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2C(0x4) UNKNOWN PROPERTY
		TArray<UFortUINotification*> NotificationQueue; // 0x30(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x40(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUINotificationQueue");
			return ret;
		}

		void UnregisterToReceiveNotifications(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F52D4(relative to base address)
		void RemoveNotification(UFortUINotification* InNotificationDescription); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F32F4(relative to base address)
		void RegisterToReceiveNotifications(FDelegateProperty& NotificationDelegate); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7501F323C(relative to base address)
		void QueueNotification(UFortUINotification* Notification, bool bShowImmediately); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F30E0(relative to base address)
		UFortUINotification GetNextNotification(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F1010(relative to base address)
		bool CanNotificationBeQueued(EFortNotificationPriority Priority); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7501EFD94(relative to base address)
	};


	// Class FortniteUI.FortNavigatablePage
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortNavigatablePage : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortNavigatablePage");
			return ret;
		}
	};


	// Class FortniteUI.FortPageNavigationButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortPageNavigationButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_ButtonLabel; // 0x1398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPageNavigationButton");
			return ret;
		}
	};


	// Class FortniteUI.FortPageNavigator
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x488 - 0x3F0)
	class UFortPageNavigator : public UCommonActivatableWidget	
	{
	public:
		bool bEnableRightStickScrolling; // 0x3F0(0x1)
		bool bEnableNavigationButtons; // 0x3F1(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x3F2(0x6) UNKNOWN PROPERTY
		UFortPageNavigationButton* Button_Next; // 0x3F8(0x8)
		UFortPageNavigationButton* Button_Previous; // 0x400(0x8)
		UAthenaScrollBox* ScrollBox_Pages; // 0x408(0x8)
		UVerticalBox* VBox_Pages; // 0x410(0x8)
		bool bEnableSnapScrolling; // 0x418(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x419(0x3) UNKNOWN PROPERTY
		float SnapScrollingThreshold; // 0x41C(0x4)
		FMargin PagePadding; // 0x420(0x10)
		unsigned char UnknownData02_6[0x18]; // 0x430(0x18) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_PagesPips; // 0x448(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_PagesPips; // 0x450(0x8)
		unsigned char UnknownData03_7[0x30]; // 0x458(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPageNavigator");
			return ret;
		}

		void SelectPage(int32_t PageIndex, bool bSkipAnimation, bool bForceFocusRefresh); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3D38(relative to base address)
		void RequestPreviousPage(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F37DC(relative to base address)
		void RequestNextPage(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F3744(relative to base address)
		void OnPipButtonCreated(UFortTextButton* NewPipButton); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleUserScrolled(float ScrollAmount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F234C(relative to base address)
		void HandleScrollCompleted(float ScrollAmount); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7501F1F54(relative to base address)
		void ClearPages(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7501F0184(relative to base address)
	};


	// Class FortniteUI.FortLocalPlayerParticipation
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortLocalPlayerParticipation : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalPlayerParticipation");
			return ret;
		}

		void OnLocalPlayerParticipationChanged(bool bIsParticipating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVoiceChannelSpeakerWidget
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x360 - 0x2B0)
	class UFortVoiceChannelSpeakerWidget : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x50]; // 0x2B0(0x50) UNKNOWN PROPERTY
		float ToleratedSilenceDelay; // 0x300(0x4)
		unsigned char UnknownData01_6[0x14]; // 0x304(0x14) UNKNOWN PROPERTY
		float PerfUpdateIntervalInSecs; // 0x318(0x4)
		float OpenCloseAnimProxyDuration; // 0x31C(0x4)
		bool bPerfCollapseHorizontal; // 0x320(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x321(0x3) UNKNOWN PROPERTY
		float TalkingAnimProxyDuration; // 0x324(0x4)
		UWidgetAnimation* Anim_Close; // 0x328(0x8)
		UWidgetAnimation* Anim_Open; // 0x330(0x8)
		UCommonTextBlock* Text_DisplayName; // 0x338(0x8)
		UCommonTextBlock* Text_ChannelName; // 0x340(0x8)
		UCommonBorder* Border_ScaleBound; // 0x348(0x8)
		UFortSocialAvatarIcon* AvatarIcon; // 0x350(0x8)
		UImage* Image_ActiveVoiceIcon; // 0x358(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChannelSpeakerWidget");
			return ret;
		}

		void OnStyleAssigned(EChannelSpeakerStyle NewStyle); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAnimateTalkingChanged(bool bIsNowTalking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleAnimationFinished(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7501F16DC(relative to base address)
	};


	// Class FortniteUI.FortVoiceSpeakerContainerWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x380 - 0x2D8)
	class UFortVoiceSpeakerContainerWidget : public UCommonUserWidget	
	{
	public:
		UClass* CustomSpeakerWidgetClass; // 0x2D8(0x8)
		bool bShouldSupportProximityChat; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x6F]; // 0x2E1(0x6F) UNKNOWN PROPERTY
		int32_t MaxSimultaneousUsers; // 0x350(0x4)
		bool bShowIndicatorsForSquadMembers; // 0x354(0x1)
		bool bCurrentChannelDisplayEnabled; // 0x355(0x1)
		unsigned char UnknownData01_6[0xA]; // 0x356(0xA) UNKNOWN PROPERTY
		UDynamicEntryBox* DynamicEntry_Speakers; // 0x360(0x8)
		UPanelWidget* Panel_ChannelContainer; // 0x368(0x8)
		UCommonTextBlock* Text_ChannelDisplayName; // 0x370(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x378(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceSpeakerContainerWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortBacchusSpeakerWrapper
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x370 - 0x368)
	class UFortBacchusSpeakerWrapper : public UBacchusHUDElement	
	{
	public:
		UFortVoiceSpeakerContainerWidget* WrappedSpeakers; // 0x368(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBacchusSpeakerWrapper");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x348 (0x8A8 - 0x560)
	class UFortPlayerFeedbackModal : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x560(0x10) UNKNOWN PROPERTY
		UCommonButtonGroupBase* CategoryTabs; // 0x570(0x8)
		TArray<UFortPlayerFeedbackModalSubscreenBase*> DisplayedSubScreenStack; // 0x578(0x10)
		TArray<TWeakObjectPtr> SubScreenToDisplayQueue; // 0x588(0x10)
		unsigned char UnknownData01_6[0x260]; // 0x598(0x260) UNKNOWN PROPERTY
		TArray<FFortFeedbackDropdownCategoryHotfix_Add> PlayerFeedbackCategoriesToAdd; // 0x7F8(0x10)
		TArray<FFortFeedbackDropdownCategoryHotfix_Modify> PlayerFeedbackCategoriesToModify; // 0x808(0x10)
		UClass* Subscreen_CategoryDisplay; // 0x818(0x8)
		UClass* Subscreen_PlayerSelect; // 0x820(0x8)
		UClass* Subscreen_SubmitDisplay; // 0x828(0x8)
		UClass* Subscreen_SubmitVoice; // 0x830(0x8)
		UClass* Subscreen_FreeText; // 0x838(0x8)
		UClass* Subscreen_EpicQA; // 0x840(0x8)
		UClass* Subscreen_Screenshot; // 0x848(0x8)
		UClass* Subscreen_Info; // 0x850(0x8)
		UClass* Subscreen_QR; // 0x858(0x8)
		UDynamicEntryBox* SubscreenTabs; // 0x860(0x8)
		UScrollBox* SubscreenContainer; // 0x868(0x8)
		UCommonTextBlock* Text_ModalTitle; // 0x870(0x8)
		UCommonButtonBase* Button_Close; // 0x878(0x8)
		UCommonButtonBase* Button_BackTouch; // 0x880(0x8)
		UCommonButtonBase* CloseButton; // 0x888(0x8)
		UCommonButtonBase* Button_NewFeedbackReport; // 0x890(0x8)
		UCommonButtonBase* Button_Back; // 0x898(0x8)
		UCommonButtonBase* Button_Next; // 0x8A0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModal");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreenBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortPlayerFeedbackModalSubscreenBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x3F0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreenBase");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_CategoryDisplay
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x458 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_CategoryDisplay : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x418(0x18) UNKNOWN PROPERTY
		UCommonButtonGroupBase* CategoryButtons; // 0x430(0x8)
		unsigned char UnknownData01_6[0x18]; // 0x438(0x18) UNKNOWN PROPERTY
		UDynamicEntryBox* Buttons_DropdownCategories; // 0x450(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_CategoryDisplay");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_PlayerSelect
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x460 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_PlayerSelect : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x418(0x30) UNKNOWN PROPERTY
		UCommonButtonGroupBase* PlayerButtons; // 0x448(0x8)
		UDynamicEntryBox* Buttons_Players; // 0x450(0x8)
		UCommonTextBlock* Text_NoPlayers; // 0x458(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_PlayerSelect");
			return ret;
		}

		void OnCreatedPlayerList(bool bHasPlayers); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_InfoScreen
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x418 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_InfoScreen : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_InfoScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_QRScreen
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x418 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_QRScreen : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_QRScreen");
			return ret;
		}

		void SetPlayerInfo(FText& PlayerName, FText& PlayerAltName); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetIslandInfo(FText& IslandCode); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitScreen
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x468 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_SubmitScreen : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		UWidget* Slot_CommunityRulesURL; // 0x418(0x8)
		UCommonRichTextBlock* Text_Description; // 0x420(0x8)
		UCommonTextBlock* Text_Summary; // 0x428(0x8)
		UCommonTextBlock* Text_FailReason; // 0x430(0x8)
		UCommonTextBlock* Text_ReportNumber; // 0x438(0x8)
		UCommonButtonBase* Button_BlockUser; // 0x440(0x8)
		UCommonButtonBase* Button_UnfollowCreator; // 0x448(0x8)
		UCommonButtonBase* Button_CommunityRules; // 0x450(0x8)
		UCommonButtonBase* Button_Submit; // 0x458(0x8)
		UWidget* SubmitSpinner; // 0x460(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitScreen");
			return ret;
		}

		void OnUpdateSubmitState(EPlayerFeedbackSubmitState NewState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitVoiceScreen
	// Inherited from UFortPlayerFeedbackModalSubscreen_SubmitScreen -> UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x468 - 0x468)
	class UFortPlayerFeedbackModalSubscreen_SubmitVoiceScreen : public UFortPlayerFeedbackModalSubscreen_SubmitScreen	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitVoiceScreen");
			return ret;
		}

		void SetLoadingDisplay(bool bIsDisplayed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_FreeText
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x438 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_FreeText : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		UWidget* TextContainer_CustomerSupport; // 0x418(0x8)
		UCommonButtonBase* Button_CustomerSupport; // 0x420(0x8)
		UMultiLineEditableTextBox* Text_Input; // 0x428(0x8)
		UCommonButtonBase* Button_Next; // 0x430(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_FreeText");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_EpicQA
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x450 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_EpicQA : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x418(0x10) UNKNOWN PROPERTY
		UComboBoxString* ComboBoxString_BugComponents; // 0x428(0x8)
		UEditableText* EditableText_Username; // 0x430(0x8)
		UEditableText* EditableText_Password; // 0x438(0x8)
		UCommonButtonBase* Button_SignIn; // 0x440(0x8)
		UCommonButtonBase* Button_ConfirmComponent; // 0x448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_EpicQA");
			return ret;
		}

		void OnStateUpdated(EPlayerFeedback_EpicQAState NewState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalSubscreen_Screenshot
	// Inherited from UFortPlayerFeedbackModalSubscreenBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x448 - 0x418)
	class UFortPlayerFeedbackModalSubscreen_Screenshot : public UFortPlayerFeedbackModalSubscreenBase	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x418(0x18) UNKNOWN PROPERTY
		UCommonButtonBase* Button_TakeScreenshot; // 0x430(0x8)
		UCommonButtonBase* Button_Continue; // 0x438(0x8)
		UImage* Image_Preview; // 0x440(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalSubscreen_Screenshot");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerFeedbackModalTab
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortPlayerFeedbackModalTab : public UCommonButtonBase	
	{
	public:
		UFortPlayerFeedbackModalSubscreenBase* AssociatedSubscreen; // 0x1390(0x8)
		UCommonTextBlock* TabLabel; // 0x1398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalTab");
			return ret;
		}

		void OnUpdatedIsCurrentTab(bool bIsCurrent); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalCategoryButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x13B0 - 0x1390)
	class UFortPlayerFeedbackModalCategoryButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x1390(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Label; // 0x13A0(0x8)
		UWidget* DropdownWidget; // 0x13A8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalCategoryButton");
			return ret;
		}

		void OnDropdownMenuStatusUpdated(bool bIsExpanded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerFeedbackModalPlayerButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x1400 - 0x1390)
	class UFortPlayerFeedbackModalPlayerButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x58]; // 0x1390(0x58) UNKNOWN PROPERTY
		UCommonTextBlock* Text_PlayerName; // 0x13E8(0x8)
		UCommonTextBlock* Text_SecondaryPlayerName; // 0x13F0(0x8)
		UCommonTextBlock* Text_Relationship; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerFeedbackModalPlayerButton");
			return ret;
		}
	};


	// Class FortniteUI.FortBannerSelectModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortBannerSelectModal : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBannerSelectModal");
			return ret;
		}
	};


	// Class FortniteUI.FortEventPlayerStatProfileSelectorEntryData
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UFortEventPlayerStatProfileSelectorEntryData : public UObject	
	{
	public:
		FString AccountId; // 0x28(0x10)
		FString DisplayName; // 0x38(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventPlayerStatProfileSelectorEntryData");
			return ret;
		}
	};


	// Class FortniteUI.FortEventPlayerStatProfileSelectorEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortEventPlayerStatProfileSelectorEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* PlayerName; // 0x13E8(0x8)
		UFortFlagImage* FlagImage; // 0x13F0(0x8)
		UFortEventPlayerStatProfileSelectorEntryData* ProfileData; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventPlayerStatProfileSelectorEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortEventPlayerStatProfileSelector
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x578 - 0x560)
	class UFortEventPlayerStatProfileSelector : public UFortActivatablePanel	
	{
	public:
		UCommonListView* ProfileList; // 0x560(0x8)
		UCommonTextBlock* HoveredName; // 0x568(0x8)
		UClass* StatsScreenClass; // 0x570(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEventPlayerStatProfileSelector");
			return ret;
		}

		void SetProfilesByLeaderboardData(UFortEventLeaderboardEntryData* DataForDisplay); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021AC04(relative to base address)
	};


	// Class FortniteUI.FortPlayerProfileBannerEditor
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x328 - 0x2D8)
	class UFortPlayerProfileBannerEditor : public UCommonUserWidget	
	{
	public:
		ESaveProfileForBanners ProfileToSave; // 0x2D8(0x4)
		bool bCanCloseBannerEditor; // 0x2DC(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2DD(0x3) UNKNOWN PROPERTY
		TArray<FName> IconCategories; // 0x2E0(0x10)
		TArray<FName> ColorCategories; // 0x2F0(0x10)
		FName ChosenIcon; // 0x300(0x4)
		FName ChosenIconCategory; // 0x304(0x4)
		FName ChosenColor; // 0x308(0x4)
		FName ChosenColorCategory; // 0x30C(0x4)
		bool bHasUnseenIcons; // 0x310(0x1)
		bool bHasUnseenColors; // 0x311(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x312(0x6) UNKNOWN PROPERTY
		UCommonButtonBase* Button_CloseEditorButton; // 0x318(0x8)
		UCommonButtonBase* Button_EditIcon; // 0x320(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerProfileBannerEditor");
			return ret;
		}

		void UpdateBangStatesInternal(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021B100(relative to base address)
		void SetBannerIcon(FName& Icon); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75021AADC(relative to base address)
		void SetBannerColor(FName& Color); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75021AA34(relative to base address)
		void RefreshBannerEditor(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7474A9F44(relative to base address)
		void OnShowPreviousCategory(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowNextCategory(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEditorDeactivated(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021A1E0(relative to base address)
		void HandleEditorActivated(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021A1CC(relative to base address)
		void CommitChosenIconAndColor(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750219AA4(relative to base address)
	};


	// Class FortniteUI.FortPlayerProfileBannerEditorTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortPlayerProfileBannerEditorTile : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortItem*> Item; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerProfileBannerEditorTile");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerProfileModalWidget
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortPlayerProfileModalWidget : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerProfileModalWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyCMSTracker
	// Inherited from UObject
	// Size: 0x138 (0x160 - 0x28)
	class UFortPlayerSurveyCMSTracker : public UObject	
	{
	public:
		UFortLocalPlayer* Player; // 0x28(0x8)
		UFortMcpProfileCommonCore* McpProfile; // 0x30(0x8)
		unsigned char UnknownData00_7[0x128]; // 0x38(0x128) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyCMSTracker");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyCheatManager
	// Inherited from UChildCheatManager -> UCheatManagerExtension -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortPlayerSurveyCheatManager : public UChildCheatManager	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyCheatManager");
			return ret;
		}

		void TriggerCMSPlayerSurvey(FString SurveyID); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74C7B3138(relative to base address)
		void TestCMSPlayerSurvey(FString SurveyID); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74C7B3138(relative to base address)
		void ListItemsParsedFromPlaylistLootPools(bool bOnlyListWeapons, bool bWithCMSModification); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74DA0C510(relative to base address)
		void ListDisabledPlayerSurveys(); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void ListCMSPlayerSurveys(); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74921B8F8(relative to base address)
		void ListActivePlaylistNames(bool bWithCMSModification); // Flags: Final|Exec|Native|Public, Memory Exec: 0x7FF74C079284(relative to base address)
	};


	// Class FortniteUI.FortPlayerSurveyChoiceResponseWidget
	// Inherited from UFortPlayerSurveyResponseWidget -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x440 - 0x420)
	class UFortPlayerSurveyChoiceResponseWidget : public UFortPlayerSurveyResponseWidget	
	{
	public:
		UDynamicEntryBox* DynamicEntryBox_Responses; // 0x420(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x428(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyChoiceResponseWidget");
			return ret;
		}

		void SetNumberOfResponses(int32_t NumberOfResponses); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerSurveyInterpreter
	// Inherited from UObject
	// Size: 0xC8 (0xF0 - 0x28)
	class UFortPlayerSurveyInterpreter : public UObject	
	{
	public:
		UCMSContext* CMSContext; // 0x28(0x8)
		UFortPlayerSurveyCMSTracker* CMSTracker; // 0x30(0x8)
		unsigned char UnknownData00_7[0xB8]; // 0x38(0xB8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyInterpreter");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyMultipleChoiceResponseBase
	// Inherited from UFortPlayerSurveyChoiceResponseWidget -> UFortPlayerSurveyResponseWidget -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x440 - 0x440)
	class UFortPlayerSurveyMultipleChoiceResponseBase : public UFortPlayerSurveyChoiceResponseWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyMultipleChoiceResponseBase");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyRatingChoiceBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortPlayerSurveyRatingChoiceBase : public UCommonButtonBase	
	{
	public:
		UCommonTextBlock* Text_RatingValue; // 0x1390(0x8)
		UCommonTextBlock* Text_Label; // 0x1398(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyRatingChoiceBase");
			return ret;
		}

		void OnSurveyResetChoice(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerSurveyRatingResponseBase
	// Inherited from UFortPlayerSurveyResponseWidget -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x438 - 0x420)
	class UFortPlayerSurveyRatingResponseBase : public UFortPlayerSurveyResponseWidget	
	{
	public:
		UCommonButtonGroupBase* ResponseGroup; // 0x420(0x8)
		UDynamicEntryBox* DynamicEntryBox_Responses; // 0x428(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x430(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyRatingResponseBase");
			return ret;
		}

		void OnResponsesSet_BP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPlayerSurveySingleChoiceResponseBase
	// Inherited from UFortPlayerSurveyChoiceResponseWidget -> UFortPlayerSurveyResponseWidget -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x440 - 0x440)
	class UFortPlayerSurveySingleChoiceResponseBase : public UFortPlayerSurveyChoiceResponseWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveySingleChoiceResponseBase");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyWidgetBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x208 (0x5F8 - 0x3F0)
	class UFortPlayerSurveyWidgetBase : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Title; // 0x3F8(0x8)
		URichTextBlock* Text_Question; // 0x400(0x8)
		UCanvasPanel* CanvasPanel_ResponseFrame; // 0x408(0x8)
		UCommonButtonLegacy* Button_Skip; // 0x410(0x8)
		UWidgetSwitcher* Switcher_NextButton; // 0x418(0x8)
		UCommonButtonLegacy* Button_NextQuestion; // 0x420(0x8)
		UCommonButtonLegacy* Button_Submit; // 0x428(0x8)
		UCommonTextBlock* Text_QuestionCount; // 0x430(0x8)
		FDataTableRowHandle DeselectInputAction; // 0x438(0x10)
		FDataTableRowHandle ExitInputAction; // 0x448(0x10)
		TMap<EFortPlayerSurveyQuestionType, UClass*> ResponseWidgetMap; // 0x458(0x50)
		FPrimaryContentSetup PrimaryContentSetup; // 0x4A8(0x3)
		unsigned char UnknownData01_6[0x5]; // 0x4AB(0x5) UNKNOWN PROPERTY
		TMap<EFortPlayerSurveyQuestionType, UFortPlayerSurveyResponseWidget*> ResponseWidgetInstances; // 0x4B0(0x50)
		unsigned char UnknownData02_7[0xF8]; // 0x500(0xF8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.FortPlayerSurveyContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0xD8 (0x108 - 0x30)
	class UFortPlayerSurveyContext : public UBlueprintContextBase	
	{
	public:
		unsigned char UnknownData00_1[0xD8]; // 0x30(0xD8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlayerSurveyContext");
			return ret;
		}
	};


	// Class FortniteUI.FortUIGameFeatureAction_InjectWidget
	// Inherited from UFortUIGameFeatureAction -> UGameFeatureAction -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIGameFeatureAction_InjectWidget : public UFortUIGameFeatureAction	
	{
	public:
		TArray<FPluginWidgetInjectionData> WidgetInjections; // 0x28(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIGameFeatureAction_InjectWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortQuestUpdateEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x340 - 0x2D8)
	class UFortQuestUpdateEntry : public UCommonUserWidget	
	{
	public:
		FMulticastInlineDelegate FinishedDisplayingQuests; // 0x2D8(0x10)
		UPanelWidget* ObjectivesBox; // 0x2E8(0x8)
		int32_t NumberOfObjectivesToDisplayAtTheSameTime; // 0x2F0(0x4)
		int32_t NumberOfWidgetsToPreCreateWhenDisplayingAllObjectives; // 0x2F4(0x4)
		UFortQuestItem* QuestItem; // 0x2F8(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x300(0x8) UNKNOWN PROPERTY
		UClass* SubEntryClass; // 0x308(0x8)
		TArray<UFortQuestObjectiveEntry*> QuestObjectiveEntryPool; // 0x310(0x10)
		TArray<UFortQuestObjectiveEntry*> AvailableQuestObjectiveEntryArray; // 0x320(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x330(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestUpdateEntry");
			return ret;
		}

		void StartQuestOutro(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartQuestIntro(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupAsAnnouncement(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetQuestItem(UFortQuestObjectiveInfo* ObjectiveInfo, bool bIsAnnouncement); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021ADF4(relative to base address)
		void QuestItemSet(UFortQuestItem* QuestItemToCheck); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetNumDisplayedObjectives(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219DE8(relative to base address)
		void FinishQuestOutro(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74F0F9DB4(relative to base address)
		void FinishQuestIntro(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219C98(relative to base address)
		void CurrentlyDisplayedObjectiveFinished(UFortQuestObjectiveEntry* QuestObjective); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750219AB8(relative to base address)
		bool CanAddObjective(UFortQuestItem* QuestItemToCheck); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219A00(relative to base address)
	};


	// Class FortniteUI.FortFeatUpdateEntry
	// Inherited from UFortQuestUpdateEntry -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x360 - 0x340)
	class UFortFeatUpdateEntry : public UFortQuestUpdateEntry	
	{
	public:
		UImage* Image_QuestIcon; // 0x340(0x8)
		UTextBlock* Text_QuestName; // 0x348(0x8)
		UTextBlock* Text_QuestDescription; // 0x350(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x358(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFeatUpdateEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortQuestObjectiveEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UFortQuestObjectiveEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnFinishedDisplaying; // 0x2E0(0x10)
		UFortQuestObjectiveInfo* MyObjectiveInfo; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestObjectiveEntry");
			return ret;
		}

		void UpdateLevelUpObjectiveVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateDefaultObjectiveVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateCharmObjectiveVisuals(FFortChallengeSetStyle& DisplayStyle, FText& CharmName, TWeakObjectPtr<UTexture2D*>& CharmIcon); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void UpdateChallengeBundleObjectiveVisuals(FFortChallengeSetStyle& DisplayStyle, FText& ChallengeBundleName); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void StartDisplayingObjective(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetRewardVisuals(UItemDefinitionBase* RewardDef, FText& SourceText, FText& TypeText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ObjectiveInfoSet(UFortQuestObjectiveInfo* ObjectiveInfo, bool IsAnnouncement, bool bQuestCompleted); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideRewardVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortQuestTrackerEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UFortQuestTrackerEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* QuestNameText; // 0x2E8(0x8)
		UCommonListView* ObjectivesList; // 0x2F0(0x8)
		UFortQuestItem* TrackedQuest; // 0x2F8(0x8)
		FMulticastInlineDelegate OnHUDQuestFinalObjectiveHiddenDelegate; // 0x300(0x10)
		TArray<UFortQuestObjectiveInfo*> HUDCachedObjectiveInfos; // 0x310(0x10)
		bool bConfigureAsHUD; // 0x320(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x321(0x7) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x328(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestTrackerEntry");
			return ret;
		}

		void OnSetup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleHUDObjectiveCompletion(UFortQuestObjectiveInfo* QuestObjective); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A2DC(relative to base address)
	};


	// Class FortniteUI.FortQuestTrackerList
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortQuestTrackerList : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		bool bConfigureAsHUD; // 0x2E0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UCommonListView* QuestList; // 0x2E8(0x8)
		TArray<UFortQuestItem*> HUDCachedQuests; // 0x2F0(0x10)
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x300(0x10)
		bool bHasHiddenItemsDueToSize; // 0x310(0x1)
		unsigned char UnknownData02_7[0x7]; // 0x311(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestTrackerList");
			return ret;
		}

		void HandleSizeEstimateChanged(UObject* ChangedElement); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A418(relative to base address)
		void HandleQuestsUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A3F0(relative to base address)
		void HandlePinnedQuestsChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A35C(relative to base address)
		void HandleHUDFinalObjectiveHidden(UFortQuestItem* QuestItem); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A25C(relative to base address)
		TArray GetVisibleQuestsToDisplay(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750219F0C(relative to base address)
		TArray GetQuestsToDisplay(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortQuestTrackerSubEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortQuestTrackerSubEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UFortQuestObjectiveInfo* TrackedObjective; // 0x2E8(0x8)
		FMulticastInlineDelegate OnSizeEstimateChangedDelegate; // 0x2F0(0x10)
		FMulticastInlineDelegate OnHUDQuestObjectiveCompletedDelegate; // 0x300(0x10)
		bool bConfigureAsHUD; // 0x310(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x311(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestTrackerSubEntry");
			return ret;
		}

		void OnSetup(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnQuestsUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayObjectiveCompletedAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyCompletionAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021A498(relative to base address)
		void HandleQuestsUpdated(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A404(relative to base address)
	};


	// Class FortniteUI.FortQuestUpdatesLog
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x3A8 - 0x318)
	class UFortQuestUpdatesLog : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UClass* QuestEntryClass; // 0x358(0x8)
		int32_t MaxDisplayedQuestUpdates; // 0x360(0x4)
		int32_t MaxDisplayedQuestObjectives; // 0x364(0x4)
		bool bShowFeatQuests; // 0x368(0x1)
		bool bFeatShowNonVisibleObjectives; // 0x369(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x36A(0x6) UNKNOWN PROPERTY
		UVerticalBox* QuestUpdatesBox; // 0x370(0x8)
		FFortPrioritizedWidgetData PrioritizationData; // 0x378(0x2)
		unsigned char UnknownData02_6[0x6]; // 0x37A(0x6) UNKNOWN PROPERTY
		TArray<UFortQuestObjectiveInfo*> QueuedQuestObjectiveInfos; // 0x380(0x10)
		TArray<UFortQuestUpdateEntry*> QuestUpdateWidgets; // 0x390(0x10)
		unsigned char UnknownData03_7[0x8]; // 0x3A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortQuestUpdatesLog");
			return ret;
		}

		void HandleQuestUpdateFinished(UFortQuestUpdateEntry* QuestEntryFinished); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A370(relative to base address)
		void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750219F48(relative to base address)
		void CreateAnnouncementUpdate(UFortQuestObjectiveInfo* QuestItemToCheck); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaQuickBarNativeCell
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x640 (0x7B0 - 0x170)
	class UAthenaQuickBarNativeCell : public UContentWidget	
	{
	public:
		FVector2D SelectionOffset; // 0x170(0x10)
		float SelectionAnimLength_Seconds; // 0x180(0x4)
		unsigned char UnknownData00_6[0xC]; // 0x184(0xC) UNKNOWN PROPERTY
		FSlateBrush EmptyCell_Brush; // 0x190(0xB0)
		FVector2D EmptyCell_Padding; // 0x240(0x10)
		FSlateBrush SelectedCell_Brush; // 0x250(0xB0)
		FSlateBrush InactivePortrait_Brush; // 0x300(0xB0)
		FSlateBrush ItemPortrait_Brush; // 0x3B0(0xB0)
		FSlateBrush AmmoType_Brush; // 0x460(0xB0)
		FSlateBrush RechargeableIcon_Brush; // 0x510(0xB0)
		FVector2D RechargeableIcon_Padding; // 0x5C0(0x10)
		FVector2D AmmoTypeIcon_Size; // 0x5D0(0x10)
		FVector2D AmmoTypeIcon_Padding; // 0x5E0(0x10)
		FSlateFontInfo ItemCount_Font; // 0x5F0(0x58)
		FLinearColor ItemCount_Color; // 0x648(0x10)
		float ItemCount_OutlineAlphaFactor; // 0x658(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x65C(0x4) UNKNOWN PROPERTY
		FSlateBrush GadgetFuel_Brush; // 0x660(0xB0)
		FVector2D GadgetFuel_Padding; // 0x710(0x10)
		float GadgetFuelChargeCount_OutlineAlphaFactor; // 0x720(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x724(0x4) UNKNOWN PROPERTY
		FSlateFontInfo GadgetFuelChargeCount_Font; // 0x728(0x58)
		FLinearColor GadgetFuelChargeCount_Color; // 0x780(0x10)
		bool bShowSelectedWhenEmpty : 1; // 0x790:0(0x1)
		bool bSupportsWideItems : 1; // 0x790:1(0x1)
		unsigned char UnknownData03_7[0x1F]; // 0x791(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaQuickBarNativeCell");
			return ret;
		}

		void UpdateItemPortrait(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75021B128(relative to base address)
		void SetItemToRepresent(UFortItem* InItemToRepresent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7487DAB34(relative to base address)
		void SetIsSelected(bool bInSelected); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7487DABB4(relative to base address)
		void DesiredSizeOverride(float WidthOverride, float HeightOverride); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750219BD4(relative to base address)
	};


	// Class FortniteUI.FortRadialMenu
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xB0 (0x388 - 0x2D8)
	class UFortRadialMenu : public UCommonUserWidget	
	{
	public:
		UClass* EntryWidgetClass; // 0x2D8(0x8)
		unsigned char UnknownData00_6[0x80]; // 0x2E0(0x80) UNKNOWN PROPERTY
		float JoystickDeadZone; // 0x360(0x4)
		float MouseDeadZoneRadiusPercentage; // 0x364(0x4)
		float JoystickMaximumMagnitude; // 0x368(0x4)
		FRadialBoxSettings RadialBoxSettings; // 0x36C(0x10)
		EFortRadialControllingStick ControllingStick; // 0x37C(0x1)
		bool bAllowEmptySelection; // 0x37D(0x1)
		bool bAllowFullMovement; // 0x37E(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x37F(0x1) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_ContextRadial; // 0x380(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRadialMenu");
			return ret;
		}

		int32_t GetNumEntries(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750219E08(relative to base address)
		float GetDegreeOffset(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750219D4C(relative to base address)
		float GetDegreeIncrements(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FE33B48(relative to base address)
		float GetAngleForIndex(int32_t Index); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750219CAC(relative to base address)
	};


	// Class FortniteUI.FortSlottedRadialMenu
	// Inherited from UFortRadialMenu -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x3C0 - 0x388)
	class UFortSlottedRadialMenu : public UFortRadialMenu	
	{
	public:
		ERadialOrderingMode OrderingMode; // 0x388(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x389(0x7) UNKNOWN PROPERTY
		TArray<ECardinalPoint> CustomOrdering; // 0x390(0x10)
		bool bUseAsManySlotsAsItems; // 0x3A0(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x3A1(0x3) UNKNOWN PROPERTY
		int32_t NumSlotsSupported; // 0x3A4(0x4)
		unsigned char UnknownData02_7[0x18]; // 0x3A8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSlottedRadialMenu");
			return ret;
		}
	};


	// Class FortniteUI.RemoteControlledPawnExpirationWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class URemoteControlledPawnExpirationWidget : public UFortHUDElementWidget	
	{
	public:
		UImage* ExpirationProgressImage; // 0x318(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x320(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RemoteControlledPawnExpirationWidget");
			return ret;
		}

		void OnPawnChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75021A654(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorHitPointBarBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaSpectatorHitPointBarBase : public UCommonUserWidget	
	{
	public:
		EHealthBarType BarType; // 0x2D8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2D9(0x7) UNKNOWN PROPERTY
		UFortSimpleMaterialProgressBar* ProgressBarDelta; // 0x2E0(0x8)
		float LastToCurrentUpdateRate; // 0x2E8(0x4)
		bool bIsDBNO; // 0x2EC(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2ED(0x3) UNKNOWN PROPERTY
		TWeakObjectPtr<UAthenaRemotePlayerViewData*> PlayerData; // 0x2F0(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x2F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorHitPointBarBase");
			return ret;
		}

		void SetPlayerData(UAthenaRemotePlayerViewData* InPlayerData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF747FC334C(relative to base address)
		void OnValueHealed(UAthenaRemotePlayerViewData* InPlayerData, float InValue, float InValueMax); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC385C(relative to base address)
		void OnValueDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InValue, float InValueMax); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC3960(relative to base address)
		void OnEliminatedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC35AC(relative to base address)
		void OnDeltaValueChanged(float InDeltaValue); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75021A4E4(relative to base address)
		void OnDBNOStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDBNO); // Flags: Final|Native|Private, Memory Exec: 0x7FF747FC4F04(relative to base address)
		void OnDBNOChanged(bool bInIsDBNO); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentValueChanged(float InCurrentValue); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ChangeTextVisibility(bool bIsVisible); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorPlayerListEntryWidget
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UAthenaSpectatorPlayerListEntryWidget : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UAthenaSpectatorPlayerListRowData* PlayerListRowData; // 0x13E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayerListEntryWidget");
			return ret;
		}

		void OnEntryDataSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaSpectatorPlayerListScreenBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UAthenaSpectatorPlayerListScreenBase : public UCommonUserWidget	
	{
	public:
		TArray<UAthenaSpectatorPlayerListRowData*> RowDataArray; // 0x2D8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSpectatorPlayerListScreenBase");
			return ret;
		}

		void UpdateListUI(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerDied(AFortPlayerState* NewlyDeadPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF75021A768(relative to base address)
		void OnPlayerBecameRelevant(AFortPlayerState* NewlyRelevantPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF75021A6E8(relative to base address)
		void OnPlayerBecameIrrelevant(AFortPlayerState* NewlyIrrelevantPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF75021A668(relative to base address)
		void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer); // Flags: Final|Native|Private, Memory Exec: 0x7FF75021A564(relative to base address)
		void ClearPlayers(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750219A90(relative to base address)
	};


	// Class FortniteUI.FortReplayBase
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortReplayBase : public UFortHUDElementWidget	
	{
	public:
		UFortReplayContext* ReplayContext; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayBase");
			return ret;
		}

		void SetReplayContext(UFortReplayContext* InReplayContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023D2B4(relative to base address)
		void OnTimelineRangeChanged(float StartTime, float EndTime); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReplayPausedChanged(bool bIsPaused); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlaybackTimeChanged(float NowTime); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortReplayBrowserRenameDialog
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x428 - 0x3F0)
	class UFortReplayBrowserRenameDialog : public UCommonActivatableWidget	
	{
	public:
		int32_t MaxReplayNameLength; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		UEditableText* TextBox_Name; // 0x3F8(0x8)
		UCommonButtonLegacy* Button_Confirm; // 0x400(0x8)
		UCommonButtonLegacy* Button_Decline; // 0x408(0x8)
		UCommonButtonLegacy* Button_TapToClose; // 0x410(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x418(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayBrowserRenameDialog");
			return ret;
		}

		void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75023C3D8(relative to base address)
		void HandleTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75023C2A0(relative to base address)
	};


	// Class FortniteUI.FortReplayGoToTimeDialogue
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x558 - 0x528)
	class UFortReplayGoToTimeDialogue : public UCommonActivatablePanelLegacy	
	{
	public:
		UEditableText* EditableText_GoToSeconds; // 0x528(0x8)
		UCommonButtonLegacy* Button_Confirm; // 0x530(0x8)
		UCommonButtonLegacy* Button_Close; // 0x538(0x8)
		UTextBlock* Text_HowTo; // 0x540(0x8)
		unsigned char UnknownData00_7[0x10]; // 0x548(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayGoToTimeDialogue");
			return ret;
		}

		void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75023C50C(relative to base address)
		void HandleTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75023C33C(relative to base address)
		void HandleReplayTimelineChanged(float StartTime, float EndTime); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C0E4(relative to base address)
	};


	// Class FortniteUI.FortReplayTimelineMarker
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x1470 - 0x13E0)
	class UFortReplayTimelineMarker : public UCommonButtonLegacy	
	{
	public:
		TWeakObjectPtr<UObject*> MarkerIcons; // 0x13E0(0x80)
		UCommonLazyImage* LazyImage_MarkerIcon; // 0x1460(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1468(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReplayTimelineMarker");
			return ret;
		}
	};


	// Class FortniteUI.FortTimelineBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x448 - 0x3F0)
	class UFortTimelineBase : public UCommonActivatableWidget	
	{
	public:
		FDataTableRowHandle ConfirmActionRowHandle; // 0x3F0(0x10)
		FDataTableRowHandle CancelActionRowHandle; // 0x400(0x10)
		UClass* TimelineMarkerClass; // 0x410(0x8)
		USlider* Slider_Gamepad; // 0x418(0x8)
		UProgressBar* ProgressBar_TimeElapsed; // 0x420(0x8)
		UCommonTextBlock* Text_CurrentTime; // 0x428(0x8)
		UCommonTextBlock* Text_EndTime; // 0x430(0x8)
		UCanvasPanel* CanvasPanel_Markers; // 0x438(0x8)
		UOverlay* Overlay_ProgressBar; // 0x440(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTimelineBase");
			return ret;
		}

		void HandleReplayTimelineMarkerAdded(EFortReplayEventType EventType, float RelativeTime, int32_t EventIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7478BBB94(relative to base address)
		void HandleReplayTimelineChanged(float StartTime, float EndTime); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C1A8(relative to base address)
		void HandleReplayTimeChanged(float ReplayTime); // Flags: Final|Native|Private, Memory Exec: 0x7FF746F15E20(relative to base address)
		void HandleReplayHudVisibilityChanged(EHudVisibilityState VisibilityState); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C064(relative to base address)
	};


	// Class FortniteUI.FortResourceFeed
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x388 - 0x318)
	class UFortResourceFeed : public UFortHUDElementWidget	
	{
	public:
		float ResourceGainedTime; // 0x318(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x31C(0x4) UNKNOWN PROPERTY
		UItemDefinitionBase* CurrentItemDefinition; // 0x320(0x8)
		unsigned char UnknownData01_6[0x28]; // 0x328(0x28) UNKNOWN PROPERTY
		UWidget* Widget_ResourceCount; // 0x350(0x8)
		UWidget* Widget_ResourceGained; // 0x358(0x8)
		UWidget* Widget_Glow; // 0x360(0x8)
		UFortSimpleWidgetAnimationsPanel* Panel_Animations; // 0x368(0x8)
		UImage* Image_ResourceIcon; // 0x370(0x8)
		UTextBlock* Text_ResourceCount; // 0x378(0x8)
		UTextBlock* Text_ResourceGained; // 0x380(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResourceFeed");
			return ret;
		}

		void OnWeakpointHit(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnResourceGained(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFadeOut(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleWeakpointHitFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75023C6C4(relative to base address)
		bool HandleTimedOut(float InDeltaTime); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C620(relative to base address)
		void HandleResourceGainedFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75023C26C(relative to base address)
		void HandlePlayerSpatialGameplayInterfaceChanged(TScriptInterface<Class> SpatialGameplayInterface); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023BF44(relative to base address)
		void HandleItemPickedUp(UFortWorldItem* WorldItem, int32_t Count); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023BC18(relative to base address)
		void HandleGamePhaseChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023BC04(relative to base address)
		void HandleFadeOutFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75023BBA4(relative to base address)
		void HandleDamagedResourceBuilding(ABuildingSMActor* InBuildingSMActor, UFortItem* InItem, bool bDestroyed, bool bJustHitWeakspot); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023BA54(relative to base address)
		void HandleDamagedResourceActor(AActor* InActor, UFortItem* InItem, bool bDestroyed, bool bJustHitWeakspot); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023BA54(relative to base address)
	};


	// Class FortniteUI.FortReticle
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x378 - 0x318)
	class UFortReticle : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x318(0x40) UNKNOWN PROPERTY
		UMaterialInterface* ReticleWeaponCooldownMI; // 0x358(0x8)
		unsigned char UnknownData01_7[0x18]; // 0x360(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReticle");
			return ret;
		}

		void OnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Private, Memory Exec: 0x7FF748055E04(relative to base address)
		void OnWeaponAmmoChanged(int32_t MagazineAmmoRemaining, int32_t TotalAmmoRemaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF748055968(relative to base address)
		void OnReticleColorChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023D12C(relative to base address)
		void OnPlayerCanInteract(UFortInteractContextInfo* ContextInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023D0AC(relative to base address)
		void OnPawnSet(); // Flags: Final|Native|Private, Memory Exec: 0x7FF748BB03B8(relative to base address)
		void OnMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023CFF0(relative to base address)
		void OnContextualReticleChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023CFC8(relative to base address)
		void OnActorEnteredVolume(APlayerState* PS, AFortVolume* Volume); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023CE6C(relative to base address)
		void HandleWeaponChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF749859FF4(relative to base address)
	};


	// Class FortniteUI.FortStWEquippedItemReticle
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x320 - 0x318)
	class UFortStWEquippedItemReticle : public UFortHUDElementWidget	
	{
	public:
		TWeakObjectPtr<AFortWeapon*> BoundWeapon; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStWEquippedItemReticle");
			return ret;
		}

		void OnWeaponTargetingChanged(bool bIsTargeting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponReloadCancelled(AFortWeapon* Weapon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnWeaponChanged(AFortWeapon* NewWeapon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAmmoChanged(int32_t MagazineAmmoCount, int32_t TotalRemaining); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleWeaponTargetingChanged(bool bIsTargeting); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023C9C0(relative to base address)
		void HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023C8FC(relative to base address)
		void HandleWeaponReloadCancelled(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023C8E8(relative to base address)
		void HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023C7A8(relative to base address)
		void HandleWeaponChanged(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023C6E4(relative to base address)
		void HandleAmmoChanged(int32_t MagazineAmmoCount, int32_t TotalRemaining); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75023B994(relative to base address)
	};


	// Class FortniteUI.FortRewardInfoButton_Legacy
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortRewardInfoButton_Legacy : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UPanelWidget* ItemCardPanel; // 0x13E8(0x8)
		EFortItemCardSize ItemCardSize; // 0x13F0(0x1)
		bool bDisplayAsRewardCard; // 0x13F1(0x1)
		unsigned char UnknownData01_6[0x6]; // 0x13F2(0x6) UNKNOWN PROPERTY
		UFortItem* ItemInstance; // 0x13F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRewardInfoButton_Legacy");
			return ret;
		}

		void SetShowDescriptionBP(bool bInShowDescription); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetShowDescription(bool bInShowDescription); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023D4E0(relative to base address)
		void SetItemInstanceQuantityPair(FFortItemInstanceQuantityPair& ItemQuantityPair); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75023D220(relative to base address)
		void HandleDifferentItemOrQuantitySetBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetQuantity(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B738(relative to base address)
		UFortItem GetItemInstance(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B5C4(relative to base address)
	};


	// Class FortniteUI.FortRewardInfoWidget_Legacy
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x360 - 0x2D8)
	class UFortRewardInfoWidget_Legacy : public UCommonUserWidget	
	{
	public:
		UPanelWidget* RewardListWidget; // 0x2D8(0x8)
		FMargin RewardWidgetPadding; // 0x2E0(0x10)
		TEnumAsByte<EHorizontalAlignment> HorizontalAlignment; // 0x2F0(0x1)
		TEnumAsByte<EVerticalAlignment> VerticalAlignment; // 0x2F1(0x1)
		bool bShowDescription; // 0x2F2(0x1)
		bool bAllowItemInteraction; // 0x2F3(0x1)
		int32_t MaxNumRewardsShown; // 0x2F4(0x4)
		UClass* OrWidgetType; // 0x2F8(0x8)
		UClass* RewardInfoButtonType; // 0x300(0x8)
		unsigned char UnknownData00_6[0x20]; // 0x308(0x20) UNKNOWN PROPERTY
		UCommonButtonGroupLegacy* ButtonGroup; // 0x328(0x8)
		unsigned char UnknownData01_7[0x30]; // 0x330(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRewardInfoWidget_Legacy");
			return ret;
		}

		void SetRewards(FFortRewardInfo& RewardsIn); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75023D3EC(relative to base address)
		void SetReward(FFortItemQuantityPair& RewardIn); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75023D35C(relative to base address)
		void SetButtonGroup(UCommonButtonGroupLegacy* InButtonGroup); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023D194(relative to base address)
		bool ContainsReward(FString TemplateIdToCheck); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023B360(relative to base address)
	};


	// Class FortniteUI.RichTextBlockActionDecorator
	// Inherited from URichTextBlockDecorator -> UObject
	// Size: 0x10 (0x38 - 0x28)
	class URichTextBlockActionDecorator : public URichTextBlockDecorator	
	{
	public:
		URichTextBlock* OwnerWidget; // 0x28(0x8)
		UDataTable* InputActionTable; // 0x30(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.RichTextBlockActionDecorator");
			return ret;
		}
	};


	// Class FortniteUI.CheckTutorialAndLeavePartyActionBase
	// Inherited from AFortScriptedAction -> AActor -> UObject
	// Size: 0x8 (0x2F0 - 0x2E8)
	class ACheckTutorialAndLeavePartyActionBase : public AFortScriptedAction	
	{
	public:
		AFortPlayerController* PlayerController; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CheckTutorialAndLeavePartyActionBase");
			return ret;
		}
	};


	// Class FortniteUI.EventCinematicPlaybackAction
	// Inherited from AFortScriptedAction -> AActor -> UObject
	// Size: 0x28 (0x310 - 0x2E8)
	class AEventCinematicPlaybackAction : public AFortScriptedAction	
	{
	public:
		UFortQuestItem* Quest; // 0x2E8(0x8)
		FName ObjectiveName; // 0x2F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2F4(0x4) UNKNOWN PROPERTY
		AFortPlayerController* Player; // 0x2F8(0x8)
		FDataTableRowHandle ObjectiveStat; // 0x300(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EventCinematicPlaybackAction");
			return ret;
		}

		void HandleVideoEnded(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C6B0(relative to base address)
	};


	// Class FortniteUI.SearchPanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x548 - 0x528)
	class USearchPanel : public UCommonActivatablePanelLegacy	
	{
	public:
		FMulticastInlineDelegate OnSearchTextChanged; // 0x528(0x10)
		UEditableTextBox* EditableText_Search; // 0x538(0x8)
		UCommonButtonLegacy* Button_TextSearch; // 0x540(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SearchPanel");
			return ret;
		}

		void HandleSearchButtonClick(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75023C28C(relative to base address)
		void HandleOnSearchTextChanged(FText& Text); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75023BEA8(relative to base address)
	};


	// Class FortniteUI.AthenaExclusiveRewardBanner
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UAthenaExclusiveRewardBanner : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UCommonRichTextBlock* RichText_RewardMessage; // 0x2E8(0x8)
		UFortLazyImage* Image_RewardIcon; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaExclusiveRewardBanner");
			return ret;
		}

		void OnInitBannerIcon(UTexture2D* RewardIcon); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitBanner(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearBanner(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.AthenaRewardItemTypeRarityTag
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UAthenaRewardItemTypeRarityTag : public UCommonUserWidget	
	{
	public:
		FGameplayTag HideRarityGameplayTag; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UBorder* Border_ItemRarity; // 0x2E0(0x8)
		UBorder* Border_RarityTint; // 0x2E8(0x8)
		UCommonTextBlock* Text_ItemRarity; // 0x2F0(0x8)
		UCommonTextBlock* Text_ItemType; // 0x2F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaRewardItemTypeRarityTag");
			return ret;
		}

		void OnInitializeRarityWithSeries(UFortItemSeriesDefinition* SeriesData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitializeRarityWithoutSeries(FFortRarityItemData RarityData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_InitializeTag(UFortItem* RewardItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023B1B0(relative to base address)
	};


	// Class FortniteUI.AthenaSeasonItemRewardIcon
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UAthenaSeasonItemRewardIcon : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaSeasonItemRewardIcon");
			return ret;
		}

		void OnInitializeSeriesReward(UFortItemSeriesDefinition* SeriesData); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitializeReward(UFortItem* RewardItem, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bHasAdditionalStylesToDisplay, int32_t RewardLevel, bool bRequiresBattlePass); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeReward(UFortItem* RewardItem, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bHasAdditionalStylesToDisplay, int32_t RewardLevel, bool bRequiresBattlePass); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF75023CA40(relative to base address)
	};


	// Class FortniteUI.BattlePassItemChoiceDisplay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x310 - 0x2D8)
	class UBattlePassItemChoiceDisplay : public UCommonUserWidget	
	{
	public:
		UCommonButtonLegacy* Button_SelectAlter; // 0x2D8(0x8)
		UCommonButtonLegacy* Button_SelectEgo; // 0x2E0(0x8)
		UCommonButtonLegacy* Button_SelectBase; // 0x2E8(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x2F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassItemChoiceDisplay");
			return ret;
		}

		void OnCosmeticItemChanged(UAthenaCosmeticItemDefinition* CosmeticItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassLeaderboard
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x408 - 0x3F0)
	class UBattlePassLeaderboard : public UCommonActivatableWidget	
	{
	public:
		UCommonTextBlock* Text_SeasonContext; // 0x3F0(0x8)
		UBattlePassLeaderboardListView* ListView_Leaderboard; // 0x3F8(0x8)
		UCommonButtonLegacy* Button_Close; // 0x400(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassLeaderboard");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassLeaderboardListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UBattlePassLeaderboardListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		URichTextBlock* RichText_DisplayName; // 0x2E0(0x8)
		UCommonTextBlock* Text_Level; // 0x2E8(0x8)
		bool bIsEntry; // 0x2F0(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x2F1(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassLeaderboardListEntry");
			return ret;
		}

		void UpdateEntryVisibility(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEntryInitialized(int32_t Rank, bool bIsLocalPlayer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassLeaderboardListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x110 (0x390 - 0x280)
	class UBattlePassLeaderboardListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0xE8]; // 0x280(0xE8) UNKNOWN PROPERTY
		float FirstEntrySpacing; // 0x368(0x4)
		float EntrySpacing; // 0x36C(0x4)
		unsigned char UnknownData01_7[0x20]; // 0x370(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassLeaderboardListView");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassListViewScreen
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x380 - 0x2D8)
	class UBattlePassListViewScreen : public UCommonUserWidget	
	{
	public:
		UClass* FriendLeaderboardClass; // 0x2D8(0x8)
		UBattlePassScreenListView* ListView_Rewards; // 0x2E0(0x8)
		UCommonTextBlock* Text_SocialUserRightCounter; // 0x2E8(0x8)
		UCommonTextBlock* Text_SocialUserLeftCounter; // 0x2F0(0x8)
		UAthenaSeasonItemDefinition* CachedSeasonData; // 0x2F8(0x8)
		UAthenaSeasonItemData_Level* CachedSeasonData_Level; // 0x300(0x8)
		TArray<FBattlePassRewardInfo> AllActiveSeasonRewards; // 0x308(0x10)
		unsigned char UnknownData00_7[0x68]; // 0x318(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassListViewScreen");
			return ret;
		}

		void OnHandleRotateReward(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHandleFriendLeaderboard(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOnUpdatedVisibleFriendCount(int32_t LeftFriendCount, int32_t RightFriendCount); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassNavigatorTabButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UBattlePassNavigatorTabButton : public UCommonButtonLegacy	
	{
	public:
		UFortBangWrapper_NUI* BangWrapper_Seen; // 0x13E0(0x8)
		UCommonLazyImage* LazyImage_Icon; // 0x13E8(0x8)
		FVector2D ImageSize_Mobile; // 0x13F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassNavigatorTabButton");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassNavigator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x378 - 0x2D8)
	class UBattlePassNavigator : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		TArray<FTrackCategoryUI> CreatedTabs; // 0x2F0(0x10)
		UAthenaSeasonItemDefinition* SeasonData; // 0x300(0x8)
		UAthenaSeasonItemData_Level* SeasonData_Level; // 0x308(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x310(0x8) UNKNOWN PROPERTY
		FDataTableRowHandle NextTabInputAction; // 0x318(0x10)
		FDataTableRowHandle PreviousTabInputAction; // 0x328(0x10)
		UCommonButtonGroupLegacy* EntryBoxButtonGroup; // 0x338(0x8)
		UDynamicEntryBox* DynamicEntryBox_Categories; // 0x340(0x8)
		UCommonTextBlock* Text_SeasonNumber; // 0x348(0x8)
		UCommonTextBlock* Text_CategoryName; // 0x350(0x8)
		TArray<int32_t> ViewedPages; // 0x358(0x10)
		FString CachedCategoryName; // 0x368(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassNavigator");
			return ret;
		}

		void OnTabChanged(bool bIsForwardChange); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassRewardChallenges
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x368 - 0x2D8)
	class UBattlePassRewardChallenges : public UCommonUserWidget	
	{
	public:
		FText BuyBattlePassText; // 0x2D8(0x10)
		FText DefaultChallengesTitle; // 0x2E8(0x10)
		FText UnlocksInXDaysTextFormat; // 0x2F8(0x10)
		FText UnlocksInXHoursTextFormat; // 0x308(0x10)
		FText UnlocksSoonText; // 0x318(0x10)
		FText HiddenChallengeText; // 0x328(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x338(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_PrerequisitesTitle; // 0x340(0x8)
		UCommonTextBlock* Text_ChallengesTitle; // 0x348(0x8)
		UDynamicEntryBox* EntryBox_Prerequisites; // 0x350(0x8)
		UDynamicEntryBox* EntryBox_Challenges; // 0x358(0x8)
		UCommonTextBlock* Text_UnlocksIn; // 0x360(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassRewardChallenges");
			return ret;
		}

		void OnSetChallengesSwitcher(bool bShowChallenges); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitPrerequisites(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnInitChallenges(FText& ChallengesTitle); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearEntries(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAllChalengesCompleted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassRewardChallengesEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UBattlePassRewardChallengesEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_ObjectiveDescription; // 0x2D8(0x8)
		UCommonTextBlock* Text_ObjectivesCompleted; // 0x2E0(0x8)
		UProgressBar* ProgressBar_ObjectivesCompleted; // 0x2E8(0x8)
		UFortLazyImage* Image_CompletedObjective; // 0x2F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassRewardChallengesEntry");
			return ret;
		}

		void OnResetChallenge(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnChallengeComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassRewardViewBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UBattlePassRewardViewBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x2D8(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassRewardViewBase");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassRewardPagedTrack
	// Inherited from UBattlePassRewardViewBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x90 (0x398 - 0x308)
	class UBattlePassRewardPagedTrack : public UBattlePassRewardViewBase	
	{
	public:
		float UpdateItemCardsDelay; // 0x308(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x30C(0x4) UNKNOWN PROPERTY
		TArray<UCommonButtonLegacy*> Pips; // 0x310(0x10)
		int32_t LastPageIndex; // 0x320(0x4)
		int32_t PageIndex; // 0x324(0x4)
		int32_t PagesHidden; // 0x328(0x4)
		int32_t LocalFocusedIndex; // 0x32C(0x4)
		unsigned char UnknownData01_6[0x8]; // 0x330(0x8) UNKNOWN PROPERTY
		UFortBattlePassReward* FocusReward; // 0x338(0x8)
		UFortBattlePassReward* DefaultFocusReward; // 0x340(0x8)
		TArray<FBattlePassPageData> PageData; // 0x348(0x10)
		FTimerHandle UpdateItemCardsHandle; // 0x358(0x8)
		UDynamicEntryBox* EntryBox_Rewards; // 0x360(0x8)
		UCommonButtonLegacy* Button_NextPage; // 0x368(0x8)
		UCommonButtonLegacy* Button_PreviousPage; // 0x370(0x8)
		UDynamicEntryBox* EntryBox_Pips; // 0x378(0x8)
		UCommonRichTextBlock* Text_PageNumbers; // 0x380(0x8)
		UCommonButtonGroupLegacy* ButtonGroup_Pips; // 0x388(0x8)
		UFortSwipePanel* SwipePanel_ChangePage; // 0x390(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassRewardPagedTrack");
			return ret;
		}

		void OnPageChanged(bool bIsForward); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassScreenBase
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x218 (0x930 - 0x718)
	class UBattlePassScreenBase : public UFortItemPreviewScreen	
	{
	public:
		float BackgroundTransitionTimerDelay; // 0x718(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x71C(0x4) UNKNOWN PROPERTY
		FDataTableRowHandle RefundGiftToken; // 0x720(0x10)
		unsigned char UnknownData01_6[0x8]; // 0x730(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> SeasonLevelPurchaseScreenClass; // 0x738(0x20)
		TWeakObjectPtr<UClass*> SeasonAboutScreenClass; // 0x758(0x20)
		FGameplayTagContainer WrapPreviewExcludedTags; // 0x778(0x20)
		EBattlePassView CurrentView; // 0x798(0x1)
		unsigned char UnknownData02_6[0x7]; // 0x799(0x7) UNKNOWN PROPERTY
		UAthenaSeasonItemDefinition* SeasonData; // 0x7A0(0x8)
		AFortItemPreviewWorld* CachedVaultWorld; // 0x7A8(0x8)
		UFortAccountItemDefinition* LastViewedItem; // 0x7B0(0x8)
		unsigned char UnknownData03_6[0x30]; // 0x7B8(0x30) UNKNOWN PROPERTY
		TMap<FString, FExpandedItemVM> PreviewItemVMs; // 0x7E8(0x50)
		unsigned char UnknownData04_6[0xA5]; // 0x838(0xA5) UNKNOWN PROPERTY
		bool bShouldShowAboutModalInNewSeason; // 0x8DD(0x1)
		unsigned char UnknownData05_6[0x2A]; // 0x8DE(0x2A) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> SeasonMovieWidgetClass; // 0x908(0x20)
		UFortStreamMediaSource* VideoStream_Source; // 0x928(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassScreenBase");
			return ret;
		}

		bool ShouldPlayBPVideo(bool bAllowUpdate); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74E244A08(relative to base address)
		void OnViewReward(FFortRarityItemData Rarity, bool bNoReward, UFortItemDefinition* RewardItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVariantUpdate(int32_t CurrentIndex, int32_t TotalNumVariants); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetPurchasedAnnualPass(bool bIsPurchased); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetDifferentBPText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRequestViewRewardComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRequestViewReward(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNoCurrentSeason(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemEquipped(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBattlePassViewChanged(EBattlePassView NewView); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsCurrentRewardOwned(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CE0C(relative to base address)
		bool IsCurrentRewardEquipped(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CD8C(relative to base address)
		int32_t GetNumberOfRewardsToPurchase(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B710(relative to base address)
		void EquipCurrentReward(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023B58C(relative to base address)
		bool CanEquipCurrentReward(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B230(relative to base address)
	};


	// Class FortniteUI.FortBattlePassRewardEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortBattlePassRewardEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_SocialUserName; // 0x13E8(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x13F0(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBattlePassRewardEntry");
			return ret;
		}

		void SetSocialPlayerProgress(float Progress); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetRotatingReward(UFortItem* InReward, bool bHasAdditionalStylesToDisplay, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32_t SeasonLevel); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetReward(UFortItem* InReward, int32_t TierLevel, float TierProgress, bool bIsLastEntry, bool bHasAdditionalStylesToDisplay, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32_t SeasonLevel, bool bIsFirstEntry); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnRotateReward(int32_t Index); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadSocialIcon(bool bSuccess, UTexture2D* Texture); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFadeOutSocialUserComplete(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75023CFDC(relative to base address)
		void FadeOutSocialUser(bool bCallback); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void FadeInSocialUser(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassScreenListView
	// Inherited from UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x398 - 0x280)
	class UBattlePassScreenListView : public UListViewBase	
	{
	public:
		unsigned char UnknownData00_3[0x10C]; // 0x280(0x10C) UNKNOWN PROPERTY
		float StartSpacing; // 0x38C(0x4)
		float EndSpacing; // 0x390(0x4)
		float CycleSocialPlayerRate; // 0x394(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassScreenListView");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassPreviewDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x18 (0x48 - 0x30)
	class UBattlePassPreviewDisplayData : public UDataAsset	
	{
	public:
		UMaterialInstance* CurrencyMaterialInstance; // 0x30(0x8)
		TArray<FBattlePassCharacterPreviewDisplayData> CharacterPreviewDisplayData; // 0x38(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassPreviewDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassScreenPurchaseButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1420 - 0x13E0)
	class UBattlePassScreenPurchaseButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_FinalCost; // 0x13F0(0x8)
		UCommonTextBlock* Text_PurchaseTitle; // 0x13F8(0x8)
		UCommonTextBlock* Text_PurchaseSubtitle; // 0x1400(0x8)
		UCommonTextBlock* Text_OriginalCost; // 0x1408(0x8)
		UCommonTextBlock* Text_DiscountedPercentage; // 0x1410(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassScreenPurchaseButton");
			return ret;
		}

		void OnSetData(EBattlePassPurchaseButtonLayout LayoutType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassScreenPreviewRewardWidget
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UBattlePassScreenPreviewRewardWidget : public UCommonButtonLegacy	
	{
	public:
		UCommonTextBlock* Text_RewardName; // 0x13E0(0x8)
		UFortLazyImage* Image_Reward; // 0x13E8(0x8)
		UCommonTextBlock* Text_RewardLevel; // 0x13F0(0x8)
		UCommonTextBlock* Text_Currency; // 0x13F8(0x8)
		UCommonTextBlock* Text_AdditionalCurrency; // 0x1400(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1408(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassScreenPreviewRewardWidget");
			return ret;
		}

		void OnSetDataForCurrency(float LayoutPosition); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetDataForCharacter(bool bIsReadyToUnlock, float LayoutPosition); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassScreenPreview
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x158 (0x430 - 0x2D8)
	class UBattlePassScreenPreview : public UCommonUserWidget	
	{
	public:
		UBattlePassScreenPreviewRewardWidget* Character_Widget1; // 0x2D8(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget2; // 0x2E0(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget3; // 0x2E8(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget4; // 0x2F0(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget5; // 0x2F8(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget6; // 0x300(0x8)
		UBattlePassScreenPreviewRewardWidget* Character_Widget7; // 0x308(0x8)
		UBattlePassScreenPreviewRewardWidget* Currency_Widget; // 0x310(0x8)
		UBattlePassScreenPurchaseButton* Button_PurchaseBattlepass; // 0x318(0x8)
		UBattlePassScreenPurchaseButton* Button_PurchaseBattlePassBundle; // 0x320(0x8)
		UCommonTextBlock* Text_InstantUnlockTotalRewardCount; // 0x328(0x8)
		UCommonTextBlock* Text_InstantUnlockSpecificSummary; // 0x330(0x8)
		UCommonTextBlock* Text_InstantAdditionalRewards; // 0x338(0x8)
		UBattlePassVBuckSummary* Widget_VBuckSummary; // 0x340(0x8)
		unsigned char UnknownData00_6[0x30]; // 0x348(0x30) UNKNOWN PROPERTY
		TArray<UBattlePassScreenPreviewRewardWidget*> CharacterWidgets; // 0x378(0x10)
		FPreviewUnlockData PreviewUnlockData; // 0x388(0x98)
		UBattlePassPreviewDisplayData* PreviewDisplayData; // 0x420(0x8)
		float PreviewCycleRate; // 0x428(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x42C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassScreenPreview");
			return ret;
		}

		void OnInitData(FPreviewUnlockData& Data, UFortItem* SinglePreviewCycleReward, bool bReadyToUnlock, int32_t LevelUnlocked, bool bPurchasedAnnualPass); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCyclePreviewReward(UFortItem* NextReward, bool bReadyToUnlock, int32_t LevelUnlocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleOnGainedFocus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassVBuckSummary
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UBattlePassVBuckSummary : public UCommonUserWidget	
	{
	public:
		UCommonRichTextBlock* Text_TotalEarned; // 0x2D8(0x8)
		UCommonRichTextBlock* Text_TotalToBank; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassVBuckSummary");
			return ret;
		}

		void OnSetSummary(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassViewRewardData
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UBattlePassViewRewardData : public UObject	
	{
	public:
		UFortItem* Reward; // 0x28(0x8)
		bool bIsFreeItem; // 0x30(0x1)
		bool bIsOwned; // 0x31(0x1)
		EBattlePassRewardSource UnlockableSource; // 0x32(0x1)
		unsigned char UnknownData00_6[0x5]; // 0x33(0x5) UNKNOWN PROPERTY
		UItemDefinitionBase* UnlockableSourceItemDef; // 0x38(0x8)
		int32_t ItemLevel; // 0x40(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x44(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassViewRewardData");
			return ret;
		}
	};


	// Class FortniteUI.BattlePassViewRewardListEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UBattlePassViewRewardListEntry : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UBattlePassViewRewardData* Reward; // 0x2E0(0x8)
		UCommonTextBlock* Text_TierLevel; // 0x2E8(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x2F0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassViewRewardListEntry");
			return ret;
		}

		void OnStaggerTimeStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStaggerTimeElapsed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BPSetup(UBattlePassViewRewardData* InReward); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.BattlePassViewAllRewardsScreen
	// Inherited from UFortItemPreviewScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x770 - 0x718)
	class UBattlePassViewAllRewardsScreen : public UFortItemPreviewScreen	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x718(0x8) UNKNOWN PROPERTY
		UFortItem* LastViewedItem; // 0x720(0x8)
		TArray<UBattlePassViewRewardData*> AllRewardItems; // 0x728(0x10)
		float StaggerTime; // 0x738(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x73C(0x4) UNKNOWN PROPERTY
		UCommonTextBlock* Text_SortLabel; // 0x740(0x8)
		UCommonTextBlock* Text_ChapterLabel; // 0x748(0x8)
		UCommonTextBlock* Text_SeasonLabel; // 0x750(0x8)
		UCommonButtonLegacy* Button_CycleSort; // 0x758(0x8)
		UTileView* TileView_Rewards; // 0x760(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x768(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.BattlePassViewAllRewardsScreen");
			return ret;
		}

		void OnItemViewed(UBattlePassViewRewardData* ItemDisplayed); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBattlePassReward
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x1450 - 0x13E0)
	class UFortBattlePassReward : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x13E0(0x18) UNKNOWN PROPERTY
		FName ImageParamName; // 0x13F8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x13FC(0x4) UNKNOWN PROPERTY
		UFortLazyImage* Image_RewardIcon; // 0x1400(0x8)
		UImage* Image_RewardLockedTint; // 0x1408(0x8)
		UImage* Image_ChaseRewardSpacer; // 0x1410(0x8)
		UImage* Image_SelectionBorder; // 0x1418(0x8)
		UWidgetSwitcher* Switcher_EarnedRewardState; // 0x1420(0x8)
		UWidgetSwitcher* Switcher_RewardTrackType; // 0x1428(0x8)
		UWidgetSwitcher* Switcher_TrackNumber; // 0x1430(0x8)
		UOverlay* Overlay_NewTechInfo; // 0x1438(0x8)
		UCommonTextBlock* Text_FreeLevelNumber; // 0x1440(0x8)
		UCommonTextBlock* Text_PaidLevelNumber; // 0x1448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBattlePassReward");
			return ret;
		}

		void UpdateVisualsToCompletedState(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetLargeRewardVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetToDefault(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOverrideIcon(TWeakObjectPtr<UTexture2D*>& IconOverride); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitForReward(UFortItemDefinition* RewardItem); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBattlePassVideoAnnotationWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x330 - 0x2D8)
	class UFortBattlePassVideoAnnotationWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x40]; // 0x2D8(0x40) UNKNOWN PROPERTY
		UCurveFloat* IntroOutroCurve; // 0x318(0x8)
		UCommonTextBlock* Text_ItemSource; // 0x320(0x8)
		UCommonTextBlock* Text_ItemName; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBattlePassVideoAnnotationWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortBattlePassVideoDisplay
	// Inherited from UCommonVideoPlayer -> UWidget -> UVisual -> UObject
	// Size: 0xC0 (0x360 - 0x2A0)
	class UFortBattlePassVideoDisplay : public UCommonVideoPlayer	
	{
	public:
		UClass* AnnotationWidgetClass; // 0x2A0(0x8)
		TArray<FFortBattlePassVideoAnnotation> VideoAnnotations; // 0x2A8(0x10)
		unsigned char UnknownData00_7[0xA8]; // 0x2B8(0xA8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBattlePassVideoDisplay");
			return ret;
		}
	};


	// Class FortniteUI.MotdBattlePassAction
	// Inherited from UMotdActionBase -> UObject
	// Size: 0x20 (0x50 - 0x30)
	class UMotdBattlePassAction : public UMotdActionBase	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x30(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.MotdBattlePassAction");
			return ret;
		}
	};


	// Class FortniteUI.FortSeasonPassLevelInfo
	// Inherited from UObject
	// Size: 0x38 (0x60 - 0x28)
	class UFortSeasonPassLevelInfo : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		AFortPlayerController* FortPC; // 0x30(0x8)
		UAthenaSeasonItemDefinition* SeasonData; // 0x38(0x8)
		TArray<UFortItem*> FreeRewards; // 0x40(0x10)
		TArray<UFortItem*> PaidRewards; // 0x50(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSeasonPassLevelInfo");
			return ret;
		}

		bool IsPaidUnlocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CE48(relative to base address)
		bool IsPaidClaimed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CE48(relative to base address)
		bool IsFreeUnlocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CE24(relative to base address)
		bool IsFreeClaimed(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023CE24(relative to base address)
		int32_t GetSeasonPassMaxLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B94C(relative to base address)
		TArray GetRewardItems(EAthenaSeasonRewardTrack Track); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023B750(relative to base address)
		int32_t GetNumRewardItems(EAthenaSeasonRewardTrack Track); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B634(relative to base address)
		float GetLevelProgress(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B60C(relative to base address)
		int32_t GetLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C910E0C(relative to base address)
		bool ContainsChaseReward(EAthenaSeasonRewardTrack Track); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B288(relative to base address)
	};


	// Class FortniteUI.SeasonPassLevelWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class USeasonPassLevelWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UFortSeasonPassLevelInfo* LevelInfo; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SeasonPassLevelWidget");
			return ret;
		}

		void PlayIntro(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetup(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNavigateTo(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAttemptClaimFinished(bool FreeClaimed, bool PaidClaimed); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortSeasonPassLevelInfo GetLevelInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B5F4(relative to base address)
		void AttemptClaim(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023B19C(relative to base address)
	};


	// Class FortniteUI.SeasonPassLevelPanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x540 - 0x528)
	class USeasonPassLevelPanel : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		UFortSeasonPassLevelInfo* LevelInfo; // 0x538(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SeasonPassLevelPanel");
			return ret;
		}

		void Setup(UFortSeasonPassLevelInfo* Info); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023D560(relative to base address)
		void OnSetup(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortSeasonPassLevelInfo GetLevelInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B5DC(relative to base address)
	};


	// Class FortniteUI.SeasonPassPageWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class USeasonPassPageWidget : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SeasonPassPageWidget");
			return ret;
		}

		bool ShouldPlayInto(int32_t FirstLevel); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75023D60C(relative to base address)
		void ScreenShown(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool OwnsSeasonPass(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023D140(relative to base address)
		void OnBattlePassChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigatePageRight(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigatePageLeft(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetCurrentSeasonNumber(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75023B5A0(relative to base address)
		bool ContainsLevel(int32_t Level); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.SeasonRewardsGridWidget
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x68 (0x1C0 - 0x158)
	class USeasonRewardsGridWidget : public UWidget	
	{
	public:
		UClass* ItemWidgetToCreate; // 0x158(0x8)
		FMulticastInlineDelegate OnItemWidgetCreated; // 0x160(0x10)
		FMargin ItemPadding; // 0x170(0x10)
		FMargin ColumnPadding; // 0x180(0x10)
		float ScrollSpeed; // 0x190(0x4)
		unsigned char UnknownData00_7[0x2C]; // 0x194(0x2C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.SeasonRewardsGridWidget");
			return ret;
		}

		void Populate(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75023D180(relative to base address)
	};


	// Class FortniteUI.FortSettingValueScalar
	// Inherited from UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x180 - 0x180)
	class UFortSettingValueScalar : public UFortSettingValue	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueScalar");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueScalarDynamic
	// Inherited from UFortSettingValueScalar -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x160 (0x2E0 - 0x180)
	class UFortSettingValueScalarDynamic : public UFortSettingValueScalar	
	{
	public:
		unsigned char UnknownData00_1[0x160]; // 0x180(0x160) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueScalarDynamic");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueScalarDynamic_SafeZoneValue
	// Inherited from UFortSettingValueScalarDynamic -> UFortSettingValueScalar -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x2E0 - 0x2E0)
	class UFortSettingValueScalarDynamic_SafeZoneValue : public UFortSettingValueScalarDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueScalarDynamic_SafeZoneValue");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingAction
	// Inherited from UFortSetting -> UObject
	// Size: 0x48 (0x1C8 - 0x180)
	class UFortSettingAction : public UFortSetting	
	{
	public:
		unsigned char UnknownData00_1[0x48]; // 0x180(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingAction");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingAction_SafeZoneEditor
	// Inherited from UFortSettingAction -> UFortSetting -> UObject
	// Size: 0x8 (0x1D0 - 0x1C8)
	class UFortSettingAction_SafeZoneEditor : public UFortSettingAction	
	{
	public:
		UFortSettingValueScalarDynamic_SafeZoneValue* SafeZoneValueSetting; // 0x1C8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingAction_SafeZoneEditor");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Bool
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Bool : public UFortSettingValueDiscreteDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Bool");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_AllowCellularDownload
	// Inherited from UFortSettingValueDiscreteDynamic_Bool -> UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_AllowCellularDownload : public UFortSettingValueDiscreteDynamic_Bool	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_AllowCellularDownload");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_AudioOutputDevice
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x30 (0x238 - 0x208)
	class UFortSettingValueDiscreteDynamic_AudioOutputDevice : public UFortSettingValueDiscreteDynamic	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x208(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_AudioOutputDevice");
			return ret;
		}

		void OnAudioOutputDevicesObtained(TArray<FAudioOutputDeviceInfo>& AvailableDevices); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF75023CF30(relative to base address)
		void DeviceAddedOrRemoved(FString DeviceID); // Flags: Final|Native|Public, Memory Exec: 0x7FF75023B4F0(relative to base address)
		void DefaultDeviceChanged(EAudioDeviceChangedRole InRole, FString DeviceID); // Flags: Final|Native|Public, Memory Exec: 0x7FF75023B40C(relative to base address)
	};


	// Class FortniteUI.FortSettingValueDiscrete_AllowCrossplay
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_AllowCrossplay : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_AllowCrossplay");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_AndroidStore
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_AndroidStore : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_AndroidStore");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteSupervised
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x80 (0x208 - 0x188)
	class UFortSettingValueDiscreteSupervised : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x80]; // 0x188(0x80) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteSupervised");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_AppearOnPublicLeaderBoards
	// Inherited from UFortSettingValueDiscreteSupervised -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscrete_AppearOnPublicLeaderBoards : public UFortSettingValueDiscreteSupervised	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_AppearOnPublicLeaderBoards");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_AutoMulchMode
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x20 (0x1A8 - 0x188)
	class UFortSettingValueDiscrete_AutoMulchMode : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x188(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_AutoMulchMode");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_CanReceiveGifts
	// Inherited from UFortSettingValueDiscreteSupervised -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscrete_CanReceiveGifts : public UFortSettingValueDiscreteSupervised	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_CanReceiveGifts");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ControllerHardware
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x20 (0x1A8 - 0x188)
	class UFortSettingValueDiscrete_ControllerHardware : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x188(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ControllerHardware");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ControllerPresets
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x30 (0x1B8 - 0x188)
	class UFortSettingValueDiscrete_ControllerPresets : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x188(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ControllerPresets");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_FortReleaseVersion
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x28 (0x1B0 - 0x188)
	class UFortSettingValueDiscrete_FortReleaseVersion : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x188(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_FortReleaseVersion");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_FriendInvitePolicy
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_FriendInvitePolicy : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_FriendInvitePolicy");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_HUDVisibility
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x48 (0x1D0 - 0x188)
	class UFortSettingValueDiscrete_HUDVisibility : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x48]; // 0x188(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_HUDVisibility");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Language
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_Language : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Language");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Lfg
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_Lfg : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Lfg");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_MobileFPSType
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_MobileFPSType : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_MobileFPSType");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_MutualFriends
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_MutualFriends : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_MutualFriends");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_SocialBool
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x20 (0x1A8 - 0x188)
	class UFortSettingValueDiscrete_SocialBool : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x188(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_SocialBool");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Notifications
	// Inherited from UFortSettingValueDiscrete_SocialBool -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x1B8 - 0x1A8)
	class UFortSettingValueDiscrete_Notifications : public UFortSettingValueDiscrete_SocialBool	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x1A8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Notifications");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_OnlineStatus
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_OnlineStatus : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_OnlineStatus");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_OverallQualityPresets
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x20 (0x1A8 - 0x188)
	class UFortSettingValueDiscrete_OverallQualityPresets : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x188(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_OverallQualityPresets");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Participation
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_Participation : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Participation");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_PartyPrivacy
	// Inherited from UFortSettingValueDiscreteSupervised -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x218 - 0x208)
	class UFortSettingValueDiscrete_PartyPrivacy : public UFortSettingValueDiscreteSupervised	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x208(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_PartyPrivacy");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_PartyRiftRequestToJoin
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_PartyRiftRequestToJoin : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_PartyRiftRequestToJoin");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ProfileBadges
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_ProfileBadges : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ProfileBadges");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ProfilePrivacy
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x10 (0x198 - 0x188)
	class UFortSettingValueDiscrete_ProfilePrivacy : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x188(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ProfilePrivacy");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ProfileLanguage
	// Inherited from UFortSettingValueDiscrete_ProfilePrivacy -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UFortSettingValueDiscrete_ProfileLanguage : public UFortSettingValueDiscrete_ProfilePrivacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ProfileLanguage");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ProfileRegion
	// Inherited from UFortSettingValueDiscrete_ProfilePrivacy -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UFortSettingValueDiscrete_ProfileRegion : public UFortSettingValueDiscrete_ProfilePrivacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ProfileRegion");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Region
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x20 (0x1A8 - 0x188)
	class UFortSettingValueDiscrete_Region : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x188(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Region");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ReportPerfStats
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_ReportPerfStats : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ReportPerfStats");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_Resolution
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0xC8 (0x250 - 0x188)
	class UFortSettingValueDiscrete_Resolution : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0xC8]; // 0x188(0xC8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_Resolution");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_ShareActivity
	// Inherited from UFortSettingValueDiscreteSupervised -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x30 (0x238 - 0x208)
	class UFortSettingValueDiscrete_ShareActivity : public UFortSettingValueDiscreteSupervised	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x208(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_ShareActivity");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscrete_VoiceChatMethod
	// Inherited from UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x18 (0x1A0 - 0x188)
	class UFortSettingValueDiscrete_VoiceChatMethod : public UFortSettingValueDiscrete	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x188(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscrete_VoiceChatMethod");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueScalar_Mobile3DResolution
	// Inherited from UFortSettingValueScalar -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x30 (0x1B0 - 0x180)
	class UFortSettingValueScalar_Mobile3DResolution : public UFortSettingValueScalar	
	{
	public:
		unsigned char UnknownData00_1[0x30]; // 0x180(0x30) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueScalar_Mobile3DResolution");
			return ret;
		}
	};


	// Class FortniteUI.FortEnhancedInputSetting
	// Inherited from UFortInputSettingBase -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x60 (0x1E8 - 0x188)
	class UFortEnhancedInputSetting : public UFortInputSettingBase	
	{
	public:
		UFortInputSettingPreviewBehavior* InputSettingPreviewBehavior; // 0x188(0x8)
		unsigned char UnknownData00_7[0x58]; // 0x190(0x58) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEnhancedInputSetting");
			return ret;
		}

		void HandleSettingsChanged(UEnhancedInputUserSettings* InputUserSettings); // Flags: Final|Native|Private, Memory Exec: 0x7FF75025E208(relative to base address)
	};


	// Class FortniteUI.FortSettingCollection
	// Inherited from UFortSetting -> UObject
	// Size: 0x10 (0x190 - 0x180)
	class UFortSettingCollection : public UFortSetting	
	{
	public:
		TArray<UFortSetting*> Settings; // 0x180(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingCollection");
			return ret;
		}
	};


	// Class FortniteUI.FortEnhancedInputSettingCollection
	// Inherited from UFortSettingCollection -> UFortSetting -> UObject
	// Size: 0x18 (0x1A8 - 0x190)
	class UFortEnhancedInputSettingCollection : public UFortSettingCollection	
	{
	public:
		TArray<TWeakObjectPtr> InputMappingContexts; // 0x190(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x1A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortEnhancedInputSettingCollection");
			return ret;
		}
	};


	// Class FortniteUI.FortLegacyInputSettingCollection
	// Inherited from UFortSettingCollection -> UFortSetting -> UObject
	// Size: 0x28 (0x1B8 - 0x190)
	class UFortLegacyInputSettingCollection : public UFortSettingCollection	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x190(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLegacyInputSettingCollection");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingCollectionPage
	// Inherited from UFortSettingCollection -> UFortSetting -> UObject
	// Size: 0x28 (0x1B8 - 0x190)
	class UFortSettingCollectionPage : public UFortSettingCollection	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x190(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingCollectionPage");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingControllerInput
	// Inherited from UFortInputSettingBase -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0xD0 (0x258 - 0x188)
	class UFortSettingControllerInput : public UFortInputSettingBase	
	{
	public:
		unsigned char UnknownData00_1[0xD0]; // 0x188(0xD0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingControllerInput");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingControllerInput_ButtonToAction
	// Inherited from UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x28 (0x1A8 - 0x180)
	class UFortSettingControllerInput_ButtonToAction : public UFortSettingValue	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x180(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingControllerInput_ButtonToAction");
			return ret;
		}

		int32_t GetKeyIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75025E110(relative to base address)
	};


	// Class FortniteUI.FortSettingKeyboardInput
	// Inherited from UFortInputSettingBase -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0xD0 (0x258 - 0x188)
	class UFortSettingKeyboardInput : public UFortInputSettingBase	
	{
	public:
		unsigned char UnknownData00_1[0xD0]; // 0x188(0xD0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingKeyboardInput");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsEditableStateHelper
	// Inherited from UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortSettingsEditableStateHelper : public UObject	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsEditableStateHelper");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Enum
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Enum : public UFortSettingValueDiscreteDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Enum");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteDynamic_Color
	// Inherited from UFortSettingValueDiscreteDynamic -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteDynamic_Color : public UFortSettingValueDiscreteDynamic	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteDynamic_Color");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingValueDiscreteContentRatingSupervised
	// Inherited from UFortSettingValueDiscreteSupervised -> UFortSettingValueDiscrete -> UFortSettingValue -> UFortSetting -> UObject
	// Size: 0x0 (0x208 - 0x208)
	class UFortSettingValueDiscreteContentRatingSupervised : public UFortSettingValueDiscreteSupervised	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingValueDiscreteContentRatingSupervised");
			return ret;
		}
	};


	// Class FortniteUI.FortGameCheatsRegistry
	// Inherited from UFortSettingRegistry -> UObject
	// Size: 0x30 (0x148 - 0x118)
	class UFortGameCheatsRegistry : public UFortSettingRegistry	
	{
	public:
		TArray<FCheatMenuSection> SeasonalSections; // 0x118(0x10)
		TArray<FCheatMenuSection> AdminSections; // 0x128(0x10)
		TArray<FCheatMenuEntry> LastUsedEntries; // 0x138(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameCheatsRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortGameSettingRegistry
	// Inherited from UFortSettingRegistry -> UObject
	// Size: 0x88 (0x1A0 - 0x118)
	class UFortGameSettingRegistry : public UFortSettingRegistry	
	{
	public:
		UFortSettingCollection* VideoSettings; // 0x118(0x8)
		UFortSettingCollection* AudioSettings; // 0x120(0x8)
		UFortSettingCollection* GameplaySettings; // 0x128(0x8)
		UFortSettingCollection* MouseAndKeyboardSettings; // 0x130(0x8)
		UFortSettingCollection* MouseAndKeyboardBindings; // 0x138(0x8)
		UFortSettingCollection* ControllerBindings; // 0x140(0x8)
		UFortSettingCollection* ControllerSettings; // 0x148(0x8)
		UFortSettingCollection* ControllerButtonMappingSettings; // 0x150(0x8)
		UFortSettingCollection* TouchAndMotionSettings; // 0x158(0x8)
		UFortSettingCollection* MobileWeaponSettings; // 0x160(0x8)
		UFortSettingCollection* HudSettings; // 0x168(0x8)
		UFortSettingCollection* AccountSettings; // 0x170(0x8)
		UFortSetting* FlickStickEnabledSetting; // 0x178(0x8)
		bool bEnableColorCalibration; // 0x180(0x1)
		unsigned char UnknownData00_7[0x1F]; // 0x181(0x1F) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGameSettingRegistry");
			return ret;
		}

		void HandleMappingContextRegistrationChanged(UInputMappingContext* IMC); // Flags: Final|Native|Public, Memory Exec: 0x7FF75025E18C(relative to base address)
	};


	// Class FortniteUI.FortSocialProfileSettingRegistry
	// Inherited from UFortSettingRegistry -> UObject
	// Size: 0x0 (0x118 - 0x118)
	class UFortSocialProfileSettingRegistry : public UFortSettingRegistry	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialProfileSettingRegistry");
			return ret;
		}
	};


	// Class FortniteUI.FortCategorizedSettingsPanel
	// Inherited from UFortSettingsPanelBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x820 - 0x7B8)
	class UFortCategorizedSettingsPanel : public UFortSettingsPanelBase	
	{
	public:
		TArray<UFortSetting*> VisibleSettings; // 0x7B8(0x10)
		UFortSetting* LastHoveredOrSelectedSetting; // 0x7C8(0x8)
		TArray<FFortSettingsFilterState> FilterNavigationStack; // 0x7D0(0x10)
		unsigned char UnknownData00_6[0x28]; // 0x7E0(0x28) UNKNOWN PROPERTY
		USettingCategoryNavigator* Navigator_SettingCategories; // 0x808(0x8)
		UFortSettingsListView* ListView_Settings; // 0x810(0x8)
		UFortSettingDetailView* Details_Settings; // 0x818(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCategorizedSettingsPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortSafeZoneEditor
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x570 - 0x528)
	class UFortSafeZoneEditor : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		bool bCanCancel; // 0x538(0x1)
		unsigned char UnknownData01_6[0xF]; // 0x539(0xF) UNKNOWN PROPERTY
		UWidgetSwitcher* Switcher_SafeZoneMessage; // 0x548(0x8)
		UCommonRichTextBlock* RichText_Default; // 0x550(0x8)
		UCommonRichTextBlock* RichText_SwitchHandheldWarning; // 0x558(0x8)
		UCommonButtonLegacy* Button_Back; // 0x560(0x8)
		UCommonButtonLegacy* Button_Done; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSafeZoneEditor");
			return ret;
		}

		void SetChildSettingReference(UFortSetting* SettingReference); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502D3774(relative to base address)
		void HandleDoneClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502D33B0(relative to base address)
		void HandleBackClicked(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502D339C(relative to base address)
	};


	// Class FortniteUI.FortSettingDetailExtension
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2B8 - 0x2B0)
	class UFortSettingDetailExtension : public UUserWidget	
	{
	public:
		UFortSetting* Setting; // 0x2B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingDetailExtension");
			return ret;
		}

		bool UseSplitDisabledOptionsVisual(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF749859FE0(relative to base address)
		void OnSettingValueChanged(UFortSetting* InSetting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSettingAssigned(UFortSetting* InSetting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText GetOptionsDisabledText(TArray<FText>& Reasons); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502D3270(relative to base address)
	};


	// Class FortniteUI.FortSettingDetailExtension_ControllerInput
	// Inherited from UFortSettingDetailExtension -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x2F0 - 0x2B8)
	class UFortSettingDetailExtension_ControllerInput : public UFortSettingDetailExtension	
	{
	public:
		UCommonVisibilitySwitcher* Switcher_ControllerDiagram; // 0x2B8(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_PS4; // 0x2C0(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_PS5; // 0x2C8(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_XSX; // 0x2D0(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_XB1; // 0x2D8(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_Erebus; // 0x2E0(0x8)
		UFortControllerHighlightDiagram* ControllerDiagram_Generic; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingDetailExtension_ControllerInput");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingDetailView
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x388 - 0x2B0)
	class UFortSettingDetailView : public UUserWidget	
	{
	public:
		UFortSettingVisualData* VisualData; // 0x2B0(0x8)
		FUserWidgetPool ExtensionWidgetPool; // 0x2B8(0x88)
		UFortSetting* CurrentSetting; // 0x340(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x348(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_SettingName; // 0x358(0x8)
		UCommonRichTextBlock* RichText_Description; // 0x360(0x8)
		UCommonRichTextBlock* RichText_DynamicDetails; // 0x368(0x8)
		UCommonRichTextBlock* RichText_WarningDetails; // 0x370(0x8)
		UCommonRichTextBlock* RichText_DisabledDetails; // 0x378(0x8)
		UVerticalBox* Box_DetailsExtension; // 0x380(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingDetailView");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsListEntrySetting_Discrete
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x348 - 0x310)
	class UFortSettingsListEntrySetting_Discrete : public UFortSettingsListEntry_Setting	
	{
	public:
		bool bUseDualStateNavigation; // 0x310(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x311(0x7) UNKNOWN PROPERTY
		UPanelWidget* Panel_Value; // 0x318(0x8)
		UFortSettingsRotator* Rotator_SettingValue; // 0x320(0x8)
		UCommonButtonLegacy* Button_Decrease; // 0x328(0x8)
		UCommonButtonLegacy* Button_Increase; // 0x330(0x8)
		UCommonButtonLegacy* Button_SelectEntry; // 0x338(0x8)
		UImage* OptionsModifiedIndicator; // 0x340(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_Discrete");
			return ret;
		}

		void NotifySelectEntryButtonClicked(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_DiscreteButtons
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x340 - 0x310)
	class UFortSettingsListEntrySetting_DiscreteButtons : public UFortSettingsListEntry_Setting	
	{
	public:
		UClass* SettingButtonClass; // 0x310(0x8)
		UFortSettingValueDiscrete* DiscreteSetting; // 0x318(0x8)
		UDynamicEntryBox* SettingButtonEntryBox; // 0x320(0x8)
		UCommonButtonBase* Button_Decrease; // 0x328(0x8)
		UCommonButtonBase* Button_Increase; // 0x330(0x8)
		UCommonTextBlock* Text_AdditionalDescription; // 0x338(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_DiscreteButtons");
			return ret;
		}

		void OnSettingSet(int32_t NewSetting); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.ListEntrySettingButton
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UListEntrySettingButton : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ListEntrySettingButton");
			return ret;
		}

		void SetOptionText(FText& NewOptionText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSettingSelectionChanged(int32_t ButtonIndex, int32_t SelectedSettingIndex); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifySettingSelected(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9C6CC(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_KeyboardInput
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x368 - 0x310)
	class UFortSettingsListEntrySetting_KeyboardInput : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortInputSettingBase* InputSetting; // 0x310(0x8)
		UClass* PressAnyKeyPanelClass; // 0x318(0x8)
		UClass* PreviewActionUnbindClass; // 0x320(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x328(0x10) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_PrimaryKey; // 0x338(0x8)
		UCommonButtonLegacy* Button_SecondaryKey; // 0x340(0x8)
		UCommonButtonLegacy* Button_Clear; // 0x348(0x8)
		UImage* Image_PrimaryKeyPreview; // 0x350(0x8)
		UImage* Image_SecondaryKeyPreview; // 0x358(0x8)
		UOverlay* Overlay_SecondaryKey; // 0x360(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_KeyboardInput");
			return ret;
		}

		void OnUpdateKeyText(FText& PrimaryKeyText, FText& SecondaryKeyText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_Action
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x320 - 0x310)
	class UFortSettingsListEntrySetting_Action : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingAction* ActionSetting; // 0x310(0x8)
		UCommonButtonLegacy* Button_Action; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_Action");
			return ret;
		}

		void OnSettingAssigned(FText& ActionText, bool bShowKeybindWidget); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_ControllerButton
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x330 - 0x310)
	class UFortSettingsListEntrySetting_ControllerButton : public UFortSettingsListEntry_Setting	
	{
	public:
		UClass* BindingMenuClass; // 0x310(0x8)
		UFortSettingControllerInput_ButtonToAction* ControllerInputSetting; // 0x318(0x8)
		UFortKeybindWidget* Key_ControllerButton; // 0x320(0x8)
		UMenuAnchor* MenuAnchor_BindableActions; // 0x328(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_ControllerButton");
			return ret;
		}

		void OnSettingAssigned(FText& ActionText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleActionButtonClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D3380(relative to base address)
		UUserWidget GetPopupMenu(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7502D3320(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_Navigation
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x320 - 0x310)
	class UFortSettingsListEntrySetting_Navigation : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingCollectionPage* CollectionSetting; // 0x310(0x8)
		UCommonButtonLegacy* Button_Navigate; // 0x318(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_Navigation");
			return ret;
		}

		void OnSettingAssigned(FText& ActionText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSettingsListEntrySetting_TimeWindows
	// Inherited from UFortSettingsListEntry_Setting -> UFortSettingsListEntryBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x338 - 0x310)
	class UFortSettingsListEntrySetting_TimeWindows : public UFortSettingsListEntry_Setting	
	{
	public:
		UFortSettingTimeWindows* TimeWindowsSetting; // 0x310(0x8)
		UClass* TimeWindowClass; // 0x318(0x8)
		UClass* EditTimeWindowClass; // 0x320(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x328(0x8) UNKNOWN PROPERTY
		UDynamicEntryBox* EntryBox_TimeWindows; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListEntrySetting_TimeWindows");
			return ret;
		}

		void OnRefreshUI(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleEditModalQueued(UCommonActivatableWidget* ActivatableWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7502D33C4(relative to base address)
		bool CanAddNewWindow(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502D3198(relative to base address)
		void AddWindow(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502D315C(relative to base address)
	};


	// Class FortniteUI.ListEntrySettingTimeWindow
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C0 - 0x2B0)
	class UListEntrySettingTimeWindow : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.ListEntrySettingTimeWindow");
			return ret;
		}

		void OnSettingSelectionChanged(int32_t ButtonIndex, int32_t SelectedSettingIndex); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifySettingSelected(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9C6CC(relative to base address)
		void DisplayTimeWindow(FDailyTimeWindow& TimeWindow); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.EditTimeWindowModal
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x538 - 0x528)
	class UEditTimeWindowModal : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x528(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.EditTimeWindowModal");
			return ret;
		}

		void UpdateTimeWindow(FDailyTimeWindow& TimeWindow); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502D37F4(relative to base address)
		void OnInitializeTimeWindow(FDailyTimeWindow& TimeWindow); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void IsTimeWindowValid(FDailyTimeWindow& TimeWindow, bool& OutIsValid, FText& OutInvalidReason); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502D34C4(relative to base address)
		int32_t GetTimeIncrementMinutes(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502D3344(relative to base address)
		void CloseModal(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502D31E8(relative to base address)
	};


	// Class FortniteUI.FortSettingsListView
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0xBA0 - 0xB30)
	class UFortSettingsListView : public UCommonListView	
	{
	public:
		UFortSettingVisualData* VisualData; // 0xB30(0x8)
		unsigned char UnknownData00_7[0x68]; // 0xB38(0x68) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsListView");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsPanel
	// Inherited from UFortSettingsPanelBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x68 (0x820 - 0x7B8)
	class UFortSettingsPanel : public UFortSettingsPanelBase	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x7B8(0x18) UNKNOWN PROPERTY
		TArray<UFortSetting*> VisibleSettings; // 0x7D0(0x10)
		UFortSetting* LastHoveredOrSelectedSetting; // 0x7E0(0x8)
		TArray<FFortSettingsFilterState> FilterNavigationStack; // 0x7E8(0x10)
		unsigned char UnknownData01_6[0x18]; // 0x7F8(0x18) UNKNOWN PROPERTY
		UFortSettingsListView* ListView_Settings; // 0x810(0x8)
		UFortSettingDetailView* Details_Settings; // 0x818(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingVisualData
	// Inherited from UDataAsset -> UObject
	// Size: 0x140 (0x170 - 0x30)
	class UFortSettingVisualData : public UDataAsset	
	{
	public:
		TMap<UClass*, UClass*> EntryWidgetForClass; // 0x30(0x50)
		TMap<FString, UClass*> EntryWidgetForName; // 0x80(0x50)
		TMap<UClass*, FFortSettingClassExtensions> ExtensionsForClasses; // 0xD0(0x50)
		TMap<FString, FFortSettingNameExtensions> ExtensionsForName; // 0x120(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingVisualData");
			return ret;
		}
	};


	// Class FortniteUI.FortControllerActionsMenu
	// Inherited from UCommonPopupMenuLegacy -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x550 - 0x540)
	class UFortControllerActionsMenu : public UCommonPopupMenuLegacy	
	{
	public:
		UClass* MenuEntryClass; // 0x540(0x8)
		UDynamicEntryBox* EntryBox_BindableActions; // 0x548(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortControllerActionsMenu");
			return ret;
		}
	};


	// Class FortniteUI.FortControllerActionsMenuEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortControllerActionsMenuEntry : public UCommonButtonLegacy	
	{
	public:
		URichTextBlock* Text_Action; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortControllerActionsMenuEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortResponsivePanel
	// Inherited from UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x188 - 0x170)
	class UFortResponsivePanel : public UPanelWidget	
	{
	public:
		bool bCanStackVertically; // 0x170(0x1)
		unsigned char UnknownData00_7[0x17]; // 0x171(0x17) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResponsivePanel");
			return ret;
		}

		UFortResponsivePanelSlot AddChildToFortResponsivePanel(UWidget* Content); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502D2FD0(relative to base address)
	};


	// Class FortniteUI.FortResponsivePanelSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x8 (0x40 - 0x38)
	class UFortResponsivePanelSlot : public UPanelSlot	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x38(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResponsivePanelSlot");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsDeadzoneExtension
	// Inherited from UFortSettingDetailExtension -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2C8 - 0x2B8)
	class UFortSettingsDeadzoneExtension : public UFortSettingDetailExtension	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsDeadzoneExtension");
			return ret;
		}

		float GetLiveAnalogValue(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502D3250(relative to base address)
		float GetDeadZoneAnalogValue(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502D3228(relative to base address)
	};


	// Class FortniteUI.FortSettingsPreferredItemSlotsExtension
	// Inherited from UFortSettingDetailExtension -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2E0 - 0x2B8)
	class UFortSettingsPreferredItemSlotsExtension : public UFortSettingDetailExtension	
	{
	public:
		TArray<UImage*> SlotItemIconImages; // 0x2B8(0x10)
		TArray<UImage*> HighlightImages; // 0x2C8(0x10)
		UHorizontalBox* HorizontalBox_ItemSlotContainer; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsPreferredItemSlotsExtension");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsPressAnyKey
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x5B8 - 0x560)
	class UFortSettingsPressAnyKey : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x560(0x48) UNKNOWN PROPERTY
		UCommonVisibilitySwitcher* Switcher_Title; // 0x5A8(0x8)
		UCommonVisibilitySwitcher* Switcher_Cancel; // 0x5B0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsPressAnyKey");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsPreviewActionUnbind
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x2D8 - 0x2B0)
	class UFortSettingsPreviewActionUnbind : public UUserWidget	
	{
	public:
		UCommonTextBlock* Text_Action; // 0x2B0(0x8)
		UCommonTextBlock* Text_PrimaryKey; // 0x2B8(0x8)
		UCommonTextBlock* Text_SecondaryKey; // 0x2C0(0x8)
		UImage* Image_PrimaryKey; // 0x2C8(0x8)
		UImage* Image_SecondaryKey; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsPreviewActionUnbind");
			return ret;
		}
	};


	// Class FortniteUI.FortSettingsRotator
	// Inherited from UCommonRotator -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1400 - 0x13F8)
	class UFortSettingsRotator : public UCommonRotator	
	{
	public:
		bool bDisableNavigationControl; // 0x13F8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x13F9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSettingsRotator");
			return ret;
		}

		void BP_OnDefaultOptionSpecified(int32_t DefaultOptionIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.CheatSettingsScreen
	// Inherited from USettingsScreen -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x5E8 - 0x5D0)
	class UCheatSettingsScreen : public USettingsScreen	
	{
	public:
		UCommonButtonBase* Button_CloseTouch; // 0x5D0(0x8)
		FDataTableRowHandle BackAction; // 0x5D8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CheatSettingsScreen");
			return ret;
		}

		void HandleBackActionInput(bool& Passthrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF74FC5FB58(relative to base address)
	};


	// Class FortniteUI.FortCalibrateBrightnessScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortCalibrateBrightnessScreen : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCalibrateBrightnessScreen");
			return ret;
		}
	};


	// Class FortniteUI.FortDivisionDetailsScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UFortDivisionDetailsScreen : public UFortActivatablePanel	
	{
	public:
		UFortDivisionDetailsInfo* DetailsInfo; // 0x560(0x8)
		UFortDivisionPayoutInfo* PayoutInfo; // 0x568(0x8)
		UCommonTextBlock* Text_Title; // 0x570(0x8)
		UCommonWidgetSwitcherLegacy* WidgetSwitcher_MainContent; // 0x578(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDivisionDetailsScreen");
			return ret;
		}

		void SetTournamentAndEventId(FString InTournamentId, FString InEventId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC3F0(relative to base address)
		void HandleRightDivisionClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F9400(relative to base address)
		void HandleLeftDivisionClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F8EE0(relative to base address)
	};


	// Class FortniteUI.FortShowdownDetailView
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x430 (0x708 - 0x2D8)
	class UFortShowdownDetailView : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		FFortTournamentDisplayInfo TournamentDisplayInfo; // 0x2F0(0x178)
		FShowdownTournamentEntry CMSTournamentData; // 0x468(0x1E0)
		UCommonTextBlock* Text_TimeRemaining; // 0x648(0x8)
		UTextBlock* Text_DebugId; // 0x650(0x8)
		UEpicCMSImage* Image_PosterFront; // 0x658(0x8)
		UEpicCMSImage* Image_PosterBack; // 0x660(0x8)
		UEpicCMSImage* Image_LoadingScreen; // 0x668(0x8)
		UEpicCMSImage* Image_PlaylistTile; // 0x670(0x8)
		FText TimeRemainingFormat; // 0x678(0x10)
		bool bTimeRemainingShowSeconds; // 0x688(0x1)
		bool bTimeRemainingUppercase; // 0x689(0x1)
		ETimespanAsTextFormat TimeRemainingFormatType; // 0x68A(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x68B(0x1) UNKNOWN PROPERTY
		FMargin TitlePaddingMobile; // 0x68C(0x10)
		bool bRefreshDataOnUpdateEventState; // 0x69C(0x1)
		unsigned char UnknownData02_7[0x6B]; // 0x69D(0x6B) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownDetailView");
			return ret;
		}

		bool ShouldShowCrossplayError(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FC614(relative to base address)
		void SetTournament(FString TournamentId, FString EventId, bool bForceRefreshUI); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC2C0(relative to base address)
		void RefreshDataBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsWorldCupQualifierEvent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA680(relative to base address)
		bool IsSeriesPointLeaderboardAvailable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA550(relative to base address)
		bool IsPreviousDisplayedWindowFromDifferentVisualRound(bool bGroupByVisualRoundNumber); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA270(relative to base address)
		bool IsFloatingLeaderboardAvailable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9BE0(relative to base address)
		bool IsFirstDisplayedWindow(bool bGroupByVisualRoundNumber); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9B10(relative to base address)
		bool IsEventLeaderboardAvailable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9A8C(relative to base address)
		bool HasScoreInEvent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9848(relative to base address)
		bool HasRemainingVisualRounds(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9758(relative to base address)
		FText GetWindowSessionDisplayString(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8898(relative to base address)
		FText GetWindowRoundDisplayString(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8828(relative to base address)
		FText GetWindowRoundAndSessionDisplayString(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F879C(relative to base address)
		EFortShowdownEventState GetTournamentTimeState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8778(relative to base address)
		FTimespan GetTournamentTimeLeft(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F874C(relative to base address)
		FString GetTournamentSeriesId(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F870C(relative to base address)
		TArray GetTournamentScoringRules(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F8674(relative to base address)
		int32_t GetTournamentPinUnlockScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F865C(relative to base address)
		FString GetTournamentNextEvent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F861C(relative to base address)
		EFortShowdownMatchType GetTournamentMatchType(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F85F8(relative to base address)
		int32_t GetTournamentMatchCap(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F859C(relative to base address)
		FString GetTournamentId(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8544(relative to base address)
		TArray GetTournamentEvents(bool bGroupByRoundNumber); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F849C(relative to base address)
		FDateTime GetTournamentEndTime(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F842C(relative to base address)
		EFortEventWindowEligibility GetTournamentEligibility(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8408(relative to base address)
		int32_t GetTournamentBestScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F83E4(relative to base address)
		EFortShowdownPinState GetTournamentBestPinState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F83A4(relative to base address)
		FDateTime GetTournamentBeginTime(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8334(relative to base address)
		void GetSeriesPointLeaderboardIds(FString& OutEventId, FString& OutEventWindowId); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8184(relative to base address)
		int32_t GetNumEventVisualRounds(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F72D0(relative to base address)
		int32_t GetEventWindowVisualRoundNumber(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6710(relative to base address)
		int32_t GetEventWindowSessionNumber(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F66EC(relative to base address)
		EFortEventWindowEligibility GetEventWindowEligibility(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F66C8(relative to base address)
		EFortShowdownEventState GetEventTimeState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B24D48(relative to base address)
		FText GetEventTimespanAsText(FTimespan InTimeRemaining, bool bShowSeconds, ETimespanAsTextFormat FormatType); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6418(relative to base address)
		FTimespan GetEventTimeLeft(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F63EC(relative to base address)
		FText GetEventTimeAsText(FDateTime DateTime, EFortDateTimeStyle Style); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6200(relative to base address)
		FFortShowdownEventBestResultsSummary GetEventResultsSummary(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F6158(relative to base address)
		EFortShowdownEventState GetEventPlayerParticipationState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6134(relative to base address)
		EFortShowdownPinState GetEventPinState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F60CC(relative to base address)
		int32_t GetEventLeaderboardRank(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F607C(relative to base address)
		float GetEventLeaderboardPercentile(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F6054(relative to base address)
		FString GetEventIdForEligibilityToken(FString Token); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5F98(relative to base address)
		FString GetEventId(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7498B15B8(relative to base address)
		FDateTime GetEventEndTime(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5F70(relative to base address)
		FText GetEventDateAsText(FDateTime DateTime, EFortDateTimeStyle Style); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5D84(relative to base address)
		FDateTime GetEventBeginTime(); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5D5C(relative to base address)
		FText GetCurrentRegionName(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F567C(relative to base address)
		int32_t GetCurrentEventTeamNumMatchesPlayed(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F55FC(relative to base address)
		int32_t GetCurrentEventScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F55D8(relative to base address)
		int32_t GetCurrentEventAlternativeScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5180(relative to base address)
		int32_t GetBestEventScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5398(relative to base address)
		FFortShowdownEventBestResultsSummary GetAlternativeResultsSummary(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F5144(relative to base address)
		bool DoDisplayRoundNumber(bool bGroupByRoundNumber); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4E74(relative to base address)
		bool DoCalloutMFARequirement(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4E50(relative to base address)
		FLinearColor ConvertCMSStringToColor(FString ColorString); // Flags: Final|Native|Protected|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7502F4C88(relative to base address)
		bool CanUseAlternativeScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4B4C(relative to base address)
		bool CanGroupTournamentEventsByVisualRoundNumber(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F4A40(relative to base address)
		void BP_ResetDetailView(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortShowdownDivisionEventView
	// Inherited from UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x708 - 0x708)
	class UFortShowdownDivisionEventView : public UFortShowdownDetailView	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownDivisionEventView");
			return ret;
		}

		bool IsDivisionEvent(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749ACD20C(relative to base address)
		int32_t GetTotalNumberOfDivisions(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7492DEB74(relative to base address)
		int32_t GetTotalDivisionPoints(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B4293C(relative to base address)
		int32_t GetRequiredAmountToAdvanceDivision(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749AC69BC(relative to base address)
		int32_t GetNumericalDisplayAmountForNextDivision(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B42978(relative to base address)
		FText GetLeagueDisplayNameByDivision(int32_t InDivision); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7000(relative to base address)
		FText GetLeagueDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74976C9AC(relative to base address)
		int32_t GetDivisionRank(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749C99CD4(relative to base address)
		int32_t GetAmountEarnedWithinDivision(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B42E28(relative to base address)
	};


	// Class FortniteUI.FortDivisionLobbyPanel
	// Inherited from UFortShowdownDivisionEventView -> UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x740 - 0x708)
	class UFortDivisionLobbyPanel : public UFortShowdownDivisionEventView	
	{
	public:
		FDataTableRowHandle EventDetailsAction; // 0x708(0x10)
		UFortLazyImage* Image_CurrentDivisionFancy; // 0x718(0x8)
		UFortLazyImage* Image_CurrentDivisionPlain; // 0x720(0x8)
		UFortLazyImage* Image_NextDivision; // 0x728(0x8)
		UCommonButtonLegacy* Button_EventDetails; // 0x730(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x738(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDivisionLobbyPanel");
			return ret;
		}
	};


	// Class FortniteUI.FortShowdownCurrentEventView
	// Inherited from UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x708 - 0x708)
	class UFortShowdownCurrentEventView : public UFortShowdownDetailView	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownCurrentEventView");
			return ret;
		}
	};


	// Class FortniteUI.FortShowdownDivisionRankButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortShowdownDivisionRankButton : public UCommonButtonLegacy	
	{
	public:
		UFortLazyImage* Image_DivisionIcon; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownDivisionRankButton");
			return ret;
		}

		void OnRankButtonSelected(bool bIsSelected); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortShowdownDivisionRankProgressView
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortShowdownDivisionRankProgressView : public UCommonUserWidget	
	{
	public:
		UFortLazyImage* Image_DivisionIcon; // 0x2D8(0x8)
		UProgressBar* Bar_DivisionProgress; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownDivisionRankProgressView");
			return ret;
		}

		void OnSetInProgress(float NewPercent, bool bIsInProgress); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortDivisionDetailsInfo
	// Inherited from UFortShowdownDivisionEventView -> UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x720 - 0x708)
	class UFortDivisionDetailsInfo : public UFortShowdownDivisionEventView	
	{
	public:
		UDynamicEntryBox* EntryBoxes_DivisionProgressRanks; // 0x708(0x8)
		UWidget* ResetTimeContainer; // 0x710(0x8)
		UCommonTextBlock* Text_ResetTime; // 0x718(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDivisionDetailsInfo");
			return ret;
		}
	};


	// Class FortniteUI.FortDivisionPayoutInfo
	// Inherited from UFortShowdownDivisionEventView -> UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x748 - 0x708)
	class UFortDivisionPayoutInfo : public UFortShowdownDivisionEventView	
	{
	public:
		UDynamicEntryBox* EntryBoxes_DivisionRanksButtons; // 0x708(0x8)
		UCommonButtonLegacy* Button_Left; // 0x710(0x8)
		UCommonButtonLegacy* Button_Right; // 0x718(0x8)
		UDynamicEntryBox* EntryBox_Payouts; // 0x720(0x8)
		UCommonTextBlock* Text_League; // 0x728(0x8)
		UCommonTextBlock* Text_DivsionRank; // 0x730(0x8)
		UScrollBox* ScrollBox_Payouts; // 0x738(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x740(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDivisionPayoutInfo");
			return ret;
		}

		void OnDivisionChanged(int32_t NewDivision); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPayoutInfoEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortPayoutInfoEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Points; // 0x2D8(0x8)
		UCommonTextBlock* Text_PointsLabel; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPayoutInfoEntry");
			return ret;
		}
	};


	// Class FortniteUI.FortShowdownPin
	// Inherited from UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x710 - 0x708)
	class UFortShowdownPin : public UFortShowdownDetailView	
	{
	public:
		bool bTryUsingAlternativeScore; // 0x708(0x1)
		bool bUseAbbreviatedScore; // 0x709(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x70A(0x2) UNKNOWN PROPERTY
		int32_t LastBestScore; // 0x70C(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownPin");
			return ret;
		}

		bool ShouldUseAlternativeScore(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FC664(relative to base address)
		int32_t GetScoreToDisplay(bool bUseBestPin); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F80B8(relative to base address)
		int32_t GetAlternativeScoreToDisplay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5180(relative to base address)
	};


	// Class FortniteUI.FortShowdownScreen
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x5D8 - 0x560)
	class UFortShowdownScreen : public UFortActivatablePanel	
	{
	public:
		UClass* TileItemClass; // 0x560(0x8)
		UClass* TournamentModalClass; // 0x568(0x8)
		UCommonButtonBase* Button_Details; // 0x570(0x8)
		UCommonTextBlock* CommonTextBlock_RegionText; // 0x578(0x8)
		UFortShowdownTournamentListView* ListView_TournamentList; // 0x580(0x8)
		UImage* Image_LoadingSpinner; // 0x588(0x8)
		bool bIsUsingGamepad; // 0x590(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x591(0x7) UNKNOWN PROPERTY
		UClass* FortFlagSelectionModalClass; // 0x598(0x8)
		UCommonButtonBase* Button_ChangeFlag; // 0x5A0(0x8)
		UFortFlagImage* Image_YourFlag; // 0x5A8(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x5B0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownScreen");
			return ret;
		}

		bool ShouldDisplayRegionButton(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FC5E8(relative to base address)
		void SetRegionID(FString InRegionID); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502FBF94(relative to base address)
		void SelectedTournamentChanged(FString SelectedTournament); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SelectedFrontTournament(bool bFrontIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SelectedEndTournament(bool bEndIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NavigateTournamentRight(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA774(relative to base address)
		void NavigateTournamentLeft(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA73C(relative to base address)
		void HandleSelectedTileChanged(UCommonButtonLegacy* Button, int32_t ButtonIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502F941C(relative to base address)
		void HandlePopupStateChanged(bool bIsOpen); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502F9260(relative to base address)
		FString GetCurrentRegionID(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F56C0(relative to base address)
		FText GetCurrentRegionDisplayName(); // Flags: Final|Native|Private|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F567C(relative to base address)
		TArray GetAvailableRegions(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5260(relative to base address)
		void BP_OnRegionChanged(FString NewRegionID); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnPartyLeaderChanged(bool bIsPartyLeader); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.TournamentListEntryData
	// Inherited from UObject
	// Size: 0x178 (0x1A0 - 0x28)
	class UTournamentListEntryData : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x170]; // 0x28(0x170) UNKNOWN PROPERTY
		bool bHideItemRow; // 0x198(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x199(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TournamentListEntryData");
			return ret;
		}
	};


	// Class FortniteUI.FortShowdownTournamentListView
	// Inherited from UCommonListView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0xB40 - 0xB30)
	class UFortShowdownTournamentListView : public UCommonListView	
	{
	public:
		float EntryWidthSize; // 0xB30(0x4)
		int32_t NumPaddingRowLeft; // 0xB34(0x4)
		int32_t NumPaddingRowRight; // 0xB38(0x4)
		bool bCanUseDesiredScrollOffset; // 0xB3C(0x1)
		unsigned char UnknownData00_7[0x3]; // 0xB3D(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownTournamentListView");
			return ret;
		}

		void SetScrollOffsetAnimation(bool bEnable); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC034(relative to base address)
		UFortShowdownTournamentTile SelectTournamentAtIndex(int32_t SelectedIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FB050(relative to base address)
		UFortShowdownTournamentTile SelectLastTournament(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FB02C(relative to base address)
		UFortShowdownTournamentTile SelectFirstTournament(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FB000(relative to base address)
		void ScrollItemToDesiredOffset(UObject* InObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FAF80(relative to base address)
		UFortShowdownTournamentTile NavigateTournamentRight(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FA788(relative to base address)
		UFortShowdownTournamentTile NavigateTournamentLeft(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FA750(relative to base address)
		bool IsSelectedItemLastRow(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA52C(relative to base address)
		bool IsSelectedItemFirstRow(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA508(relative to base address)
		UUserWidget GetEntryAtIndex(int32_t SelectedIndex); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5CB8(relative to base address)
		float GetDesiredScrollOffset(int32_t Index); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F57B8(relative to base address)
		UFortShowdownTournamentTile FindTournament(FString TournamentId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F50A4(relative to base address)
	};


	// Class FortniteUI.FortShowdownTournamentTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1410 - 0x13E0)
	class UFortShowdownTournamentTile : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x13E0(0x18) UNKNOWN PROPERTY
		UFortTournamentPosterViolator* ShowdownDetailView_Violator; // 0x13F8(0x8)
		UFortShowdownDetailView* ShowdownDetailView_Poster; // 0x1400(0x8)
		UTournamentListEntryData* TournamentListEntryData; // 0x1408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortShowdownTournamentTile");
			return ret;
		}

		UTournamentListEntryData GetTournamentListEntryData(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F8584(relative to base address)
		FString GetTileTournament(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F82F4(relative to base address)
	};


	// Class FortniteUI.FortTournamentLobbyPanel
	// Inherited from UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x760 - 0x708)
	class UFortTournamentLobbyPanel : public UFortShowdownDetailView	
	{
	public:
		FDataTableRowHandle EventDetailsAction; // 0x708(0x10)
		UCommonButtonLegacy* Button_EventDetails; // 0x718(0x8)
		UClass* TournamentModalClass; // 0x720(0x8)
		UCommonTextBlock* Text_TimeRemainingScheduledMatch; // 0x728(0x8)
		UCommonTextBlock* Text_ScheduledMatchInfo; // 0x730(0x8)
		UTextBlock* Text_DebugLBId; // 0x738(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x740(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentLobbyPanel");
			return ret;
		}

		bool UsesScheduledMatchmaking(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FCC68(relative to base address)
	};


	// Class FortniteUI.FortSimpleWidgetAnimationsPanel
	// Inherited from UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x1A0 - 0x170)
	class UFortSimpleWidgetAnimationsPanel : public UContentWidget	
	{
	public:
		FMulticastInlineDelegate OnAnimationsFinished; // 0x170(0x10)
		TArray<FFortSimpleWidgetAnimations> Animations; // 0x180(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x190(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleWidgetAnimationsPanel");
			return ret;
		}

		bool StopAnimationByName(FName& Name); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FCB54(relative to base address)
		void StopAllAnimations(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FCB40(relative to base address)
		bool ResetAnimationByName(FName& Name); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FAED4(relative to base address)
		void ResetAllAnimations(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FAEC0(relative to base address)
		bool PlayAnimationByName(FName& Name, float Speed); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7483D9404(relative to base address)
		void OnAnimationsFinished__DelegateSignature(FName Name); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsAnimationPlaying(FName& Name); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502F98E8(relative to base address)
		void ForwardOnAnimationsFinished(FName Name); // Flags: Final|Native|Private, Memory Exec: 0x7FF7494834E4(relative to base address)
	};


	// Class FortniteUI.FortSimpleWidgetAnimationsSlot
	// Inherited from UPanelSlot -> UVisual -> UObject
	// Size: 0x0 (0x38 - 0x38)
	class UFortSimpleWidgetAnimationsSlot : public UPanelSlot	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleWidgetAnimationsSlot");
			return ret;
		}
	};


	// Class FortniteUI.FortAttributeList
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2D8 - 0x2C0)
	class UFortAttributeList : public UFortUserWidget	
	{
	public:
		UClass* AttributeItemClass; // 0x2C0(0x8)
		bool bHoverEnabledOnElements; // 0x2C8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2C9(0x7) UNKNOWN PROPERTY
		UVerticalBox* AttributeContainer; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAttributeList");
			return ret;
		}

		void SetPreviewData(TArray<FFortDisplayAttribute>& Data); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FBDF8(relative to base address)
		TArray SetData(TArray<FFortDisplayAttribute>& Data); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FB5D8(relative to base address)
		void ClearPreviewData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F4BEC(relative to base address)
		void Clear(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F4B6C(relative to base address)
	};


	// Class FortniteUI.FortAttributeListItem
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE8 (0x398 - 0x2B0)
	class UFortAttributeListItem : public UUserWidget	
	{
	public:
		bool bHoverEnabled; // 0x2B0(0x1)
		unsigned char UnknownData00_7[0xE7]; // 0x2B1(0xE7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAttributeListItem");
			return ret;
		}

		void ValueChanged(float Delta); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPreviewAttribute(FFortDisplayAttribute& InPreviewAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FBCB0(relative to base address)
		bool SetDisplayAttribute(FFortDisplayAttribute& InDisplayAttribute, FFortDisplayAttribute& DeltaAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FB730(relative to base address)
		void PreviewStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PreviewEnded(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void GetDisplayPreviewCopy(FFortDisplayAttribute& OutPreviewAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5AD0(relative to base address)
		void GetDisplayAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5980(relative to base address)
		void GetCurrentAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5440(relative to base address)
		void DisplayAttributeChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearPreview(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F4BC4(relative to base address)
	};


	// Class FortniteUI.FortAttributeListItem_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x3C8 - 0x2D8)
	class UFortAttributeListItem_NUI : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		bool bHoverEnabled; // 0x2E0(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x2E1(0x3) UNKNOWN PROPERTY
		FGameplayTag StatTag; // 0x2E4(0x4)
		unsigned char UnknownData02_7[0xE0]; // 0x2E8(0xE0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAttributeListItem_NUI");
			return ret;
		}

		void ValueChanged(float Delta); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPreviewAttribute(FFortDisplayAttribute& InPreviewAttribute); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FBD54(relative to base address)
		void SetDisplayAttribute(FFortDisplayAttribute& InDisplayAttribute); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FB858(relative to base address)
		void PreviewStarted(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PreviewEnded(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasPreviewAttribute(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F972C(relative to base address)
		void GetDisplayPreviewCopy(FFortDisplayAttribute& OutPreviewAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5B78(relative to base address)
		void GetDisplayAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5A28(relative to base address)
		void GetCurrentAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F550C(relative to base address)
		void DisplayAttributeChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearPreview(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F4BD8(relative to base address)
	};


	// Class FortniteUI.FortAttributeList_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortAttributeList_NUI : public UCommonUserWidget	
	{
	public:
		UClass* AttributeItemClass; // 0x2D8(0x8)
		bool bHoverEnabledOnElements; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		TArray<UFortAttributeListItem_NUI*> ShownAttributeWidgets; // 0x2E8(0x10)
		unsigned char UnknownData01_7[0x10]; // 0x2F8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAttributeList_NUI");
			return ret;
		}

		void SetPreviewData(TArray<FFortDisplayAttribute>& Data); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FBEE8(relative to base address)
		void SetData(TArray<FFortDisplayAttribute>& Data); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FB698(relative to base address)
		void OnRemoveShownAttributeListItem(UFortAttributeListItem_NUI* AttributeListItemWidget, int32_t AtIndex); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnClearShownAttributes(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAddShownAttributeListItem(UFortAttributeListItem_NUI* AttributeListItemWidget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ClearPreviewData(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F4C60(relative to base address)
	};


	// Class FortniteUI.AthenaStandaloneMtxStore
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UAthenaStandaloneMtxStore : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UFortMtxStoreRootBase* Panel_MTXStore; // 0x3F8(0x8)
		UCommonButtonBase* Button_Back; // 0x400(0x8)
		UCommonButtonBase* Button_CloseTouch; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaStandaloneMtxStore");
			return ret;
		}
	};


	// Class FortniteUI.FortLlamaStoreOfferInfo
	// Inherited from UFortStoreFrontOfferInfo -> UObject
	// Size: 0x8 (0x68 - 0x60)
	class UFortLlamaStoreOfferInfo : public UFortStoreFrontOfferInfo	
	{
	public:
		UFortCardPackItemDefinition* LlamaOfferDisplayAsset; // 0x60(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLlamaStoreOfferInfo");
			return ret;
		}

		UFortCardPackItemDefinition GetLlamaOfferDisplayAsset(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74F97D11C(relative to base address)
		TWeakObjectPtr GetDisplayAssetXrayImage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5938(relative to base address)
		UFortPackPersonality GetDisplayAssetPersonality(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5904(relative to base address)
		TWeakObjectPtr GetDisplayAssetImage(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F587C(relative to base address)
		UTexture GetDisplayAssetIcon(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F5848(relative to base address)
	};


	// Class FortniteUI.FortStoreFrontTileWidgetBase
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13A0 - 0x1390)
	class UFortStoreFrontTileWidgetBase : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontTileWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.FortStoreFrontOfferWidgetBase
	// Inherited from UFortStoreFrontTileWidgetBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x1410 - 0x1398)
	class UFortStoreFrontOfferWidgetBase : public UFortStoreFrontTileWidgetBase	
	{
	public:
		TArray<UFortStoreFrontOfferInfo*> GroupedOffers; // 0x1398(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x13A8(0x8) UNKNOWN PROPERTY
		UCommonLoadGuard* MainImageLoadGuard; // 0x13B0(0x8)
		unsigned char UnknownData01_6[0x30]; // 0x13B8(0x30) UNKNOWN PROPERTY
		UClass* ThumbnailRendererClass; // 0x13E8(0x8)
		UFortStoreFrontOfferInfo* OfferData; // 0x13F0(0x8)
		UFortItemThumbnailRenderer* ThumbnailRenderer; // 0x13F8(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x1400(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontOfferWidgetBase");
			return ret;
		}

		void UpdateCarousel(float InDeltaTime); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupThumbnailRenderer(UFortItemThumbnailRenderer* InThumbnailRenderer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328D6C(relative to base address)
		void SetStoreRoot_Legacy(UFortMtxStoreRootBase_Legacy* InStoreRoot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328A08(relative to base address)
		void SetStoreRoot(UFortMtxStoreRootBase* InStoreRoot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328808(relative to base address)
		void SetIndexInSection(int32_t InIndexInSection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328298(relative to base address)
		void SendShopInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327F40(relative to base address)
		void SendSeasonPassInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327D88(relative to base address)
		void SendRealMoneyStoreInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327C68(relative to base address)
		void RemoveAllOffers(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327A84(relative to base address)
		void PreviewNextCarouselOffer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateStatus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStoreSelectionOfferSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferTileBrushLoaded(FSlateBrush& OfferBrush); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferAdded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDetailsOpened(UFortStoreFrontOfferDetailsWidgetBase* DetailsWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503270B4(relative to base address)
		void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503260A4(relative to base address)
		void HandleCarouselOfferChanged(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF750325FFC(relative to base address)
		UFortMtxStoreRootBase GetStoreRoot(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325684(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324EAC(relative to base address)
		TWeakObjectPtr GetFirstOfferSeriesBackgroundTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032475C(relative to base address)
		TWeakObjectPtr GetFirstOfferSeriesBackgroundMaterial(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503246CC(relative to base address)
		void AddOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503234BC(relative to base address)
	};


	// Class FortniteUI.FortLlamaStoreOfferWidgetBase
	// Inherited from UFortStoreFrontOfferWidgetBase -> UFortStoreFrontTileWidgetBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1460 - 0x1410)
	class UFortLlamaStoreOfferWidgetBase : public UFortStoreFrontOfferWidgetBase	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x1410(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLlamaStoreOfferWidgetBase");
			return ret;
		}

		void UpgradingFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FCC00(relative to base address)
		void UpgradeRarity(int32_t RarityToUpgradeTo); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SilverUpgradeFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FCA30(relative to base address)
		void ShowUnhovered(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowRarity(int32_t Rarity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowInitialRarityState(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC698(relative to base address)
		void ShowHovered(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestToInspect(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FAE50(relative to base address)
		void RequestPurchase(int32_t PriceIndex, int32_t Quantity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FAC88(relative to base address)
		void OnOfferShown(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void LoadInFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA700(relative to base address)
		bool IsParentActivatablePanelActive(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA210(relative to base address)
		int32_t GetPriceIndexToShow(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F7640(relative to base address)
		int32_t GetCurrentRarity(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F564C(relative to base address)
	};


	// Class FortniteUI.FortStoreFrontTileWidgetBase_Legacy
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortStoreFrontTileWidgetBase_Legacy : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontTileWidgetBase_Legacy");
			return ret;
		}
	};


	// Class FortniteUI.FortStoreFrontOfferWidgetBase_Legacy
	// Inherited from UFortStoreFrontTileWidgetBase_Legacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x1460 - 0x13E8)
	class UFortStoreFrontOfferWidgetBase_Legacy : public UFortStoreFrontTileWidgetBase_Legacy	
	{
	public:
		TArray<UFortStoreFrontOfferInfo*> GroupedOffers; // 0x13E8(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY
		UCommonLoadGuard* MainImageLoadGuard; // 0x1400(0x8)
		unsigned char UnknownData01_6[0x30]; // 0x1408(0x30) UNKNOWN PROPERTY
		UClass* ThumbnailRendererClass; // 0x1438(0x8)
		UFortStoreFrontOfferInfo* OfferData; // 0x1440(0x8)
		UFortItemThumbnailRenderer* ThumbnailRenderer; // 0x1448(0x8)
		unsigned char UnknownData02_7[0x10]; // 0x1450(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy");
			return ret;
		}

		void UpdateCarousel(float InDeltaTime); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupThumbnailRenderer(UFortItemThumbnailRenderer* InThumbnailRenderer); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetupOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328DEC(relative to base address)
		void SetStoreRoot(UFortMtxStoreRootBase_Legacy* InStoreRoot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328908(relative to base address)
		void SetIndexInSection(int32_t InIndexInSection); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328314(relative to base address)
		void SendShopInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327FD0(relative to base address)
		void SendSeasonPassInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327E64(relative to base address)
		void SendRealMoneyStoreInteractionAnalytic(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable|Const, Memory Exec: 0x7FF750327CF8(relative to base address)
		void RemoveAllOffers(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327AA0(relative to base address)
		void PreviewNextCarouselOffer(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateStatus(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStoreSelectionOfferSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferTileBrushLoaded(FSlateBrush& OfferBrush); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOfferAdded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDetailsOpened(UFortStoreFrontOfferDetailsWidgetBase* DetailsWidget); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75032716C(relative to base address)
		void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503261E4(relative to base address)
		void HandleCarouselOfferChanged(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF750326050(relative to base address)
		UFortMtxStoreRootBase_Legacy GetStoreRoot(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503256A8(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324EC4(relative to base address)
		TWeakObjectPtr GetFirstOfferSeriesBackgroundTexture(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503247A4(relative to base address)
		TWeakObjectPtr GetFirstOfferSeriesBackgroundMaterial(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324714(relative to base address)
		void AddOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75032353C(relative to base address)
	};


	// Class FortniteUI.FortLlamaStoreOfferWidgetBase_Legacy
	// Inherited from UFortStoreFrontOfferWidgetBase_Legacy -> UFortStoreFrontTileWidgetBase_Legacy -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x14B0 - 0x1460)
	class UFortLlamaStoreOfferWidgetBase_Legacy : public UFortStoreFrontOfferWidgetBase_Legacy	
	{
	public:
		unsigned char UnknownData00_1[0x50]; // 0x1460(0x50) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLlamaStoreOfferWidgetBase_Legacy");
			return ret;
		}

		void UpgradingFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FCC34(relative to base address)
		void UpgradeRarity(int32_t RarityToUpgradeTo); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SilverUpgradeFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FCAB8(relative to base address)
		void ShowUnhovered(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowRarity(int32_t Rarity); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowInitialRarityState(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC6AC(relative to base address)
		void ShowHovered(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestToInspect(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FAE88(relative to base address)
		void RequestPurchase(int32_t PriceIndex, int32_t Quantity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FAD6C(relative to base address)
		void OnOfferShown(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void LoadInFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA714(relative to base address)
		bool IsParentActivatablePanelActive(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA210(relative to base address)
		int32_t GetPriceIndexToShow(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F7664(relative to base address)
		int32_t GetCurrentRarity(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F5664(relative to base address)
	};


	// Class FortniteUI.FortPlatformPurchaseErrorCodeModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x410 - 0x3F0)
	class UFortPlatformPurchaseErrorCodeModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonBase* Button_Back; // 0x3F0(0x8)
		UCommonButtonBase* Button_TouchBack; // 0x3F8(0x8)
		UCommonTextBlock* Text_Title; // 0x400(0x8)
		UDynamicEntryBox* EntryBox_Descriptions; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPlatformPurchaseErrorCodeModal");
			return ret;
		}

		void OnModalBackout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ExitModal(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
	};


	// Class FortniteUI.FortStoreFrontOfferDetailsWidgetBase
	// Inherited from UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x178 (0x820 - 0x6A8)
	class UFortStoreFrontOfferDetailsWidgetBase : public UFortActivatablePanelWithItemPreview	
	{
	public:
		unsigned char UnknownData00_3[0x48]; // 0x6A8(0x48) UNKNOWN PROPERTY
		FDataTableRowHandle EnterViewModeInputActionRowHandle; // 0x6F0(0x10)
		bool IsInItemViewMode; // 0x700(0x1)
		bool ShouldAllowItemViewModeAction; // 0x701(0x1)
		bool bImmediatelyPurchased; // 0x702(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x703(0x5) UNKNOWN PROPERTY
		TArray<UFortStoreFrontOfferInfo*> PagedItems; // 0x708(0x10)
		UFortStoreFrontOfferInfo* OfferData; // 0x718(0x8)
		UFortVariantPicker* Picker_VariantSelector; // 0x720(0x8)
		UCommonTextBlock* TextUndoAvailability; // 0x728(0x8)
		UCommonTextBlock* Text_UndoBottomBarWarning; // 0x730(0x8)
		UCommonButtonLegacy* Button_Undo; // 0x738(0x8)
		UCommonTextBlock* Text_CosmeticWarning; // 0x740(0x8)
		unsigned char UnknownData02_6[0x40]; // 0x748(0x40) UNKNOWN PROPERTY
		UClass* PurchaseModalClass; // 0x788(0x8)
		unsigned char UnknownData03_6[0x30]; // 0x790(0x30) UNKNOWN PROPERTY
		UFortItem* ItemToRepresent; // 0x7C0(0x8)
		UFortItemDefinition* SecondaryItemDefinition; // 0x7C8(0x8)
		float TimeBetweenVariantsRestart; // 0x7D0(0x4)
		float TimeBetweenVariants; // 0x7D4(0x4)
		unsigned char UnknownData04_6[0xA]; // 0x7D8(0xA) UNKNOWN PROPERTY
		bool bShowRefundWarningWhileMatchmaking; // 0x7E2(0x1)
		bool bShowRefundWarningWhileInZone; // 0x7E3(0x1)
		unsigned char UnknownData05_7[0x3C]; // 0x7E4(0x3C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase");
			return ret;
		}

		void UpdateItemViewModeBP(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowVaultItemFromItemReward(UFortAthenaReward* InItemReward); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC98C(relative to base address)
		void ShowVaultItem(UFortItem* InItemToRepresent); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC90C(relative to base address)
		void ShowUndoInBottomBar(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowReloadMtx(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC8F8(relative to base address)
		void ShowPurchasedOverlayWidget(int32_t QuantityPurchased, TArray<FPurchasedItemInfo> PurchasedItems, bool bShowAsRefund, FString OfferId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC75C(relative to base address)
		void ShowItemPresentationScreen(TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FC6C0(relative to base address)
		bool ShouldHavePurchaseConfirmation(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FD9D658(relative to base address)
		bool ShouldDisplayOfferPurchasedOverlay(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FC590(relative to base address)
		void SetupOffer(UFortStoreFrontOfferInfo* InOfferData); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC510(relative to base address)
		void SetStoreRoot(UFortMtxStoreRootBase* InStoreRoot); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC1C0(relative to base address)
		void SetShouldAllowItemViewModeAction(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FC140(relative to base address)
		void SetSecondaryItem(UFortItemDefinition* ItemDefinition); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FC0B4(relative to base address)
		void SetPagedItems(TArray<UFortStoreFrontOfferInfo*>& InPagedItems); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FBBB8(relative to base address)
		void SetItemRewardSecondaryItem(UFortItemDefinition* ItemDef, TArray<FFortItemQuantityPair> AllItemQuantityPairs, UFortAthenaReward* RewardWidget); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FB984(relative to base address)
		void SetIsInItemViewMode(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FB8FC(relative to base address)
		void SendUndoMtxReturnedAnalytic(FString Interaction, FString PurchaseId, int32_t MtxReturned); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FB400(relative to base address)
		void SendShopInteractionAnalytic(FString Interaction, float HoldTime); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FB330(relative to base address)
		void SendSeasonPassInteractionAnalytic(FString Interaction); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FB254(relative to base address)
		void SendReloadMtxPurchaseSKUAnalytic(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FB240(relative to base address)
		void SendRealMoneyStoreInteractionAnalytic(FString Interaction); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7502FB1B0(relative to base address)
		void SendRealMoneyPurchase(int32_t PriceIndex, int32_t Quantity); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FB0F0(relative to base address)
		void SendingToMainStore(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FB53C(relative to base address)
		void RequestExternalPurchase(int32_t PriceIndex, int32_t Quantity); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FABB4(relative to base address)
		void RegisterItemRewardInteraction(UFortAthenaReward* InItemReward); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FAAFC(relative to base address)
		void RefreshUndoState(UFortStoreFrontOfferInfo* OfferPurchased); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FAA7C(relative to base address)
		void RefreshOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502FAA68(relative to base address)
		void PurchaseOffer(FDelegateProperty& Callback, int32_t Quantity, float HoldTime); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502FA8C8(relative to base address)
		void PurchaseAmountRight(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PurchaseAmountLeft(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnVariantChanged(FGameplayTag VariantChannel, FGameplayTag VariantTag, FString VariantCustomData, bool IsOwned); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateStatus(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdateItemRestrictionCallout(bool bShouldShow, FText& RestrictionText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPurchasingStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnterViewModeActionCommitted(bool& Passthrough); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7502FA844(relative to base address)
		bool IsReloadMtxEnabled(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FA4E4(relative to base address)
		void HideUndoInBottomBar(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleVaultItemsViewed(TArray<UFortItem*>& ItemsShown); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF7502F94F0(relative to base address)
		void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7502F930C(relative to base address)
		void HandleGiftingItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7502F8B38(relative to base address)
		void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7502F89F8(relative to base address)
		void HandleBattlePassPurchaseComplete(bool bSuccess); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F8968(relative to base address)
		int32_t GetPriceIndexToShow(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F7688(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfoById(FString OfferId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7502F7444(relative to base address)
		UFortStoreFrontOfferInfo GetOfferInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D1B4830(relative to base address)
		bool FindItemQuantityPair(UFortItemDefinition* ItemDefinition, TArray<FFortItemQuantityPair>& InItemQuantityPairs, FFortItemQuantityPair& OutItemQuantity); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7502F4F2C(relative to base address)
		void DeactivateUndoButton(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F4DE8(relative to base address)
		void ConfirmUndo(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502F4C74(relative to base address)
		void BP_OnOfferSet(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPurchaseOverlayModal
	// Inherited from UFortStoreFrontOfferDetailsWidgetBase -> UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x850 - 0x820)
	class UFortPurchaseOverlayModal : public UFortStoreFrontOfferDetailsWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x820(0x20) UNKNOWN PROPERTY
		UHorizontalBox* HBox_SuccessfullyPurchased; // 0x840(0x8)
		UHorizontalBox* HBox_SuccessfullyRefunded; // 0x848(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPurchaseOverlayModal");
			return ret;
		}

		bool ShouldShowAsRefund(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74ED4BCBC(relative to base address)
		bool IsLastItem(int32_t ItemIndex); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502FA118(relative to base address)
		void InitBundleLayout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasMultipleItems(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9710(relative to base address)
		int32_t GetQuantityPurchased(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F77F8(relative to base address)
		TArray GetPurchasedItems(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F77DC(relative to base address)
		void Dismiss(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74FD9A458(relative to base address)
	};


	// Class FortniteUI.FortPurchaseUnavailableModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x570 - 0x560)
	class UFortPurchaseUnavailableModal : public UFortActivatablePanel	
	{
	public:
		UFortLazyImage* Image_OfferIcon; // 0x560(0x8)
		UCommonButtonLegacy* Button_Confirm; // 0x568(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPurchaseUnavailableModal");
			return ret;
		}

		void OnUpdateTextStyle(FText& OfferDisplayName); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortRealMoneyOffer
	// Inherited from UFortStoreFrontOfferWidgetBase -> UFortStoreFrontTileWidgetBase -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1420 - 0x1410)
	class UFortRealMoneyOffer : public UFortStoreFrontOfferWidgetBase	
	{
	public:
		UClass* PurchaseUnavailableModalClass; // 0x1410(0x8)
		UClass* RealMoneyDetailsClass; // 0x1418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRealMoneyOffer");
			return ret;
		}

		void OnUpdateStorePrice(FText& InStorePrice); // Flags: RequiredAPI|Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7C8C(relative to base address)
	};


	// Class FortniteUI.FortRealMoneyOfferDetails
	// Inherited from UFortStoreFrontOfferDetailsWidgetBase -> UFortActivatablePanelWithItemPreview -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x8B8 - 0x820)
	class UFortRealMoneyOfferDetails : public UFortStoreFrontOfferDetailsWidgetBase	
	{
	public:
		UWidget* ContentPurchaseFocusWidget; // 0x820(0x8)
		FDataTableRowHandle BackAction; // 0x828(0x10)
		FDataTableRowHandle PurchaseAction; // 0x838(0x10)
		FDataTableRowHandle VBuckAction; // 0x848(0x10)
		FDataTableRowHandle ReloadMtxAction; // 0x858(0x10)
		UClass* ItemInspectScreenClass; // 0x868(0x8)
		UFortCTAButton* Button_Purchase; // 0x870(0x8)
		UFortCTAButton* Button_Purchase_STW; // 0x878(0x8)
		UCommonButtonBase* Button_SendGift; // 0x880(0x8)
		UCommonButtonBase* Button_Inspect; // 0x888(0x8)
		UCommonButtonBase* Button_TouchClose; // 0x890(0x8)
		UCommonButtonBase* Button_MTX; // 0x898(0x8)
		UWidget* Container_SimpleMTXDisplay; // 0x8A0(0x8)
		UScrollBox* ScrollBox_Details; // 0x8A8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x8B0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRealMoneyOfferDetails");
			return ret;
		}

		void UpdatePurchaseBlocked(bool bIsBlocked, FText& PurchaseNotAllowedReason); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowPurchasedOverlay(int32_t QuantityPurchased, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowPurchaseConfirmation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowLegalTextInPopup(FText& ItemName, FText& LegalText); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF74FD9D718(relative to base address)
		void SetVBuckActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502FC4FC(relative to base address)
		void SetPurchaseActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502FBF80(relative to base address)
		void SetMtxButtonVisible(bool bVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetLoadingState(bool bIsLoading); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetCanPurchase(bool bInCanPurchase); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502FB558(relative to base address)
		void SendGift(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7502FB0DC(relative to base address)
		void ResetPurchaseButtonText(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestMtxPurchase(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502FAC74(relative to base address)
		void OnSendGiftComplete(bool bSuccess); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsGiftable(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F9CE8(relative to base address)
		void HandleOnInputMethodChanged(ECommonInputType CommonInput); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502F91E4(relative to base address)
		void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7502F9010(relative to base address)
		void HandleItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7502F8D0C(relative to base address)
		void HandleBackAction(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7502F88DC(relative to base address)
		bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F7DF0(relative to base address)
		UFortCTAButton GetPurchaseButtonCurrent(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7502F77B8(relative to base address)
		void DeclineMtxPurchase(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502F4DFC(relative to base address)
		void ClearActionOnPurchaseButton(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7502F4B8C(relative to base address)
	};


	// Class FortniteUI.FortSimpleMTXDisplay
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortSimpleMTXDisplay : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleMTXDisplay");
			return ret;
		}

		void OnUpdateAvailableMTX(int32_t AvailableBalance); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleLocalAccountInfoChanged(FFortPrivateAccountInfo NewInfo); // Flags: Final|Native|Private, Memory Exec: 0x7FF7502F8EFC(relative to base address)
	};


	// Class FortniteUI.FortStoreBanner
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortStoreBanner : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_BannerMessage; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreBanner");
			return ret;
		}
	};


	// Class FortniteUI.FortStoreDisplayData
	// Inherited from UDataAsset -> UObject
	// Size: 0x80 (0xB0 - 0x30)
	class UFortStoreDisplayData : public UDataAsset	
	{
	public:
		TArray<FString> AthenaRMTStorefrontNames; // 0x30(0x10)
		TArray<FString> CampaignRMTStorefrontNames; // 0x40(0x10)
		FString RequiredTokenOfferMetaKey; // 0x50(0x10)
		FString GiftableOfferStorefront; // 0x60(0x10)
		TWeakObjectPtr<UClass*> StandaloneMTXStoreClass; // 0x70(0x20)
		TWeakObjectPtr<UClass*> PlatformPurchaseErrorCodeModalClass; // 0x90(0x20)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreDisplayData");
			return ret;
		}
	};


	// Class FortniteUI.FortStoreRootBase
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x530 - 0x528)
	class UFortStoreRootBase : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x528(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortStoreRootBase");
			return ret;
		}

		void PopulatePrerollOffers(FDelegateProperty& Callback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750327618(relative to base address)
		void OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, FText& CurrencyMessageLocText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVbucksStoreScreen
	// Inherited from UFortMtxStoreRootBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x4A8 - 0x480)
	class UFortVbucksStoreScreen : public UFortMtxStoreRootBase	
	{
	public:
		UDynamicEntryBox* EntryBox_VBuckOffers; // 0x480(0x8)
		UCommonRichTextBlock* Text_OfferMessage; // 0x488(0x8)
		UFortStoreBanner* StoreBanner; // 0x490(0x8)
		UFortRealMoneyOffer* LastSelectedOffer; // 0x498(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x4A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVbucksStoreScreen");
			return ret;
		}

		float CalculateBonusPercent(UFortStoreFrontOfferInfo* OfferData); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323778(relative to base address)
	};


	// Class FortniteUI.FortWebPurchaseScreen
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x550 - 0x528)
	class UFortWebPurchaseScreen : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		FPrimaryContentSetup PrimaryContentSetup; // 0x538(0x3)
		unsigned char UnknownData01_6[0x5]; // 0x53B(0x5) UNKNOWN PROPERTY
		UPanelWidget* WebContent; // 0x540(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x548(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWebPurchaseScreen");
			return ret;
		}

		void Display(UWidget* WebWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750323B28(relative to base address)
		void Dismiss(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750323B14(relative to base address)
		bool CanShowTopBar(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323918(relative to base address)
		bool CanShowChatWidget(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323900(relative to base address)
		bool CanShowBottomBar(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503238E8(relative to base address)
	};


	// Class FortniteUI.FortAlterationButtonWidget
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x13F0 - 0x13E0)
	class UFortAlterationButtonWidget : public UCommonButtonLegacy	
	{
	public:
		UFortAlterationInfo* AlterationInfo; // 0x13E0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAlterationButtonWidget");
			return ret;
		}

		void Setup(UFortAlterationInfo* InAlterationInfo); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328B2C(relative to base address)
		void OnSetup(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortAlterationInfo GetAlterationInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323DA0(relative to base address)
	};


	// Class FortniteUI.FortAlterationInfo
	// Inherited from UObject
	// Size: 0x30 (0x58 - 0x28)
	class UFortAlterationInfo : public UObject	
	{
	public:
		UFortItem* CorrespondingItem; // 0x28(0x8)
		int32_t SlotIndex; // 0x30(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x34(0x4) UNKNOWN PROPERTY
		UFortAlterationItemDefinition* AlterationDef; // 0x38(0x8)
		int32_t RequiredMinLevel; // 0x40(0x4)
		bool bIsUpgrade; // 0x44(0x1)
		unsigned char UnknownData01_6[0x3]; // 0x45(0x3) UNKNOWN PROPERTY
		int32_t CurrentItemLevel; // 0x48(0x4)
		bool bFreeAlterationSlot; // 0x4C(0x1)
		bool bUnlockedByEvolution; // 0x4D(0x1)
		unsigned char UnknownData02_6[0x2]; // 0x4E(0x2) UNKNOWN PROPERTY
		int32_t UpgradeLevelDelta; // 0x50(0x4)
		unsigned char UnknownData03_7[0x4]; // 0x54(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAlterationInfo");
			return ret;
		}

		bool IsFreeAlterationChoice(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74FC54FB8(relative to base address)
		bool IsAlterationUnlocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503266FC(relative to base address)
		bool IsAlterationHighlighted(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503266C0(relative to base address)
		int32_t GetSlotIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3345F8(relative to base address)
		int32_t GetRequiredLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7496973C8(relative to base address)
		EFortRarity GetRarity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503252F8(relative to base address)
		float GetCurrentPipCount(float MaxPips); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324384(relative to base address)
		UFortItem GetCorrespondingItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74DE734A8(relative to base address)
		UFortAlterationItemDefinition GetAlterationDefintion(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323D88(relative to base address)
	};


	// Class FortniteUI.FortAlterationsWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x3F0 - 0x2D8)
	class UFortAlterationsWidget : public UCommonUserWidget	
	{
	public:
		UFortItem* Item; // 0x2D8(0x8)
		EFortAlterationWidgetState State; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UFortItem* ItemToCompareWith; // 0x2E8(0x8)
		bool bUseButtons; // 0x2F0(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x2F1(0x7) UNKNOWN PROPERTY
		UClass* AlterationWidgetClass; // 0x2F8(0x8)
		UClass* AlterationButtonWidgetClass; // 0x300(0x8)
		unsigned char UnknownData02_6[0x30]; // 0x308(0x30) UNKNOWN PROPERTY
		UCommonTextBlock* EmptyText; // 0x338(0x8)
		UCommonButtonGroupLegacy* ButtonGroup; // 0x340(0x8)
		unsigned char UnknownData03_6[0x20]; // 0x348(0x20) UNKNOWN PROPERTY
		FUserWidgetPool EntryWidgetPool; // 0x368(0x88)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAlterationsWidget");
			return ret;
		}

		void SetupInteractionEvents(UFortAlterationButtonWidget* Buttion); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328C84(relative to base address)
		void SetUpgradeLevelDelta(int32_t InUpgradeLevelDelta); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328A88(relative to base address)
		void SetState(EFortAlterationWidgetState InState); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75032865C(relative to base address)
		void SetItemToCompareWith(UFortItem* InItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75032849C(relative to base address)
		void SetItem(UFortItem* InItem, bool bInPreviewNewAlterations, bool bIntroAlterations); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328390(relative to base address)
		void ReleaseWidgets(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327A68(relative to base address)
		void ProcessAlterations(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503276D4(relative to base address)
		void OnUpgradeLevelDeltaChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStateChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemToCompareWithChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnItemChanged(bool bIntroAlterations, bool bWasFavoritedChanged); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGenerateAlteration(UFortAlterationInfo* AlterationInfo); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFocusFirstItem(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAlterationSlotIndexModifiedBP(int32_t ModifiedIndex); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleAlterationsSlotSelected(UCommonButtonLegacy* InAlterationButton, int32_t SelectedIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF750325EF8(relative to base address)
		void HandleAlterationsSlotHovered(UCommonButtonLegacy* InAlterationButton, int32_t SelectedIndex); // Flags: Final|Native|Private, Memory Exec: 0x7FF750325E34(relative to base address)
		UCommonUserWidget GetOrCreateWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750324EDC(relative to base address)
	};


	// Class FortniteUI.FortAlterationWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortAlterationWidget : public UCommonUserWidget	
	{
	public:
		float MaxPipCount; // 0x2D8(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x2DC(0x4) UNKNOWN PROPERTY
		UFortAlterationInfo* AlterationInfo; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAlterationWidget");
			return ret;
		}

		void Setup(UFortAlterationInfo* InAlterationInfo); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328BD8(relative to base address)
		void OnSetup(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortAlterationInfo GetAlterationInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74D789374(relative to base address)
	};


	// Class FortniteUI.FortCampaignNewsPanel
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UFortCampaignNewsPanel : public UCommonActivatableWidget	
	{
	public:
		UFortCampaignNewsWidget* NewsWidget_Main; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignNewsPanel");
			return ret;
		}

		void SendMotdInteractionAnalytic(FString Interaction); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF750327BB8(relative to base address)
		void OnExternalURLOpened(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750327224(relative to base address)
	};


	// Class FortniteUI.FortCampaignNewsPanel_Legacy
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortCampaignNewsPanel_Legacy : public UFortActivatablePanel	
	{
	public:
		UFortCampaignNewsWidget* NewsWidget_Main; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignNewsPanel_Legacy");
			return ret;
		}

		void SendMotdInteractionAnalytic(FString Interaction); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF750327BB8(relative to base address)
		void OnExternalURLOpened(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750327224(relative to base address)
	};


	// Class FortniteUI.FortCampaignNewsTile
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortCampaignNewsTile : public UCommonUserWidget	
	{
	public:
		UEpicCMSImage* CMSImage_NewsImage; // 0x2D8(0x8)
		UCommonTextBlock* Text_NewsTitle; // 0x2E0(0x8)
		UCommonTextBlock* Text_NewsBody; // 0x2E8(0x8)
		UCommonBorder* Border_AdSpace; // 0x2F0(0x8)
		UCommonTextBlock* Text_AdSpace; // 0x2F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignNewsTile");
			return ret;
		}

		void SetDefaultImage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayIntroAnim(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCampaignNewsWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x60 (0x338 - 0x2D8)
	class UFortCampaignNewsWidget : public UCommonUserWidget	
	{
	public:
		UClass* NewsTileClass; // 0x2D8(0x8)
		UClass* SpotlightNewsTileClass; // 0x2E0(0x8)
		UClass* SpecialEventNewsTileClass; // 0x2E8(0x8)
		UClass* SpotlightSpecialEventNewsTileClass; // 0x2F0(0x8)
		UClass* SpecialEvent2NewsTileClass; // 0x2F8(0x8)
		UClass* SpotlightSpecialEvent2NewsTileClass; // 0x300(0x8)
		TArray<UFortCampaignNewsTile*> NewsTiles; // 0x308(0x10)
		UCommonTextBlock* CommonText_NewsHeader; // 0x318(0x8)
		UScrollBox* ScrollBox_NewsContainer; // 0x320(0x8)
		UHorizontalBox* HorizontalBox_NewsContainer; // 0x328(0x8)
		UVerticalBox* VerticalBox_SpotlightNewsContainer; // 0x330(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignNewsWidget");
			return ret;
		}

		void SingleItemConfiguration(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetViewConfiguration(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void PlayNewsTilesIntro(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750327260(relative to base address)
		void LogMotDLobbyNavAction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750326ED8(relative to base address)
		void LogMotDCloseAction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750326EC4(relative to base address)
		void HandleNewsStyle(EAthenaNewsStyle NewsStyle); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortDisableAutoSlottingPromptAction
	// Inherited from UObject
	// Size: 0x20 (0x48 - 0x28)
	class UFortDisableAutoSlottingPromptAction : public UObject	
	{
	public:
		TWeakObjectPtr<APlayerController*> OwningPlayerController; // 0x28(0x8)
		unsigned char UnknownData00_6[0x10]; // 0x30(0x10) UNKNOWN PROPERTY
		TWeakObjectPtr<UGameInstance*> RegisteredWithGameInstance; // 0x40(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDisableAutoSlottingPromptAction");
			return ret;
		}

		void Execute(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CompleteExecution(EFortDialogResult Result, FName ResultName); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750323930(relative to base address)
	};


	// Class FortniteUI.FortHomebaseUIContext
	// Inherited from UBlueprintContextBase -> USubsystem -> UObject
	// Size: 0x118 (0x148 - 0x30)
	class UFortHomebaseUIContext : public UBlueprintContextBase	
	{
	public:
		FMulticastInlineDelegate OnShouldAutoSlotSurvivorSquadsChanged; // 0x30(0x10)
		FMulticastInlineDelegate OnSquadSlotChanged; // 0x40(0x10)
		FMulticastInlineDelegate OnSurvivorSquadsAutoSlotted; // 0x50(0x10)
		FMulticastInlineDelegate OnNodePurchased; // 0x60(0x10)
		FMulticastInlineDelegate OnSlottedPrimaryHeroChanged; // 0x70(0x10)
		FMulticastInlineDelegate OnDifferentHeroLoadoutViewed; // 0x80(0x10)
		FMulticastInlineDelegate OnDifferentHeroLoadoutSlotFocused; // 0x90(0x10)
		TWeakObjectPtr<UDataTable*> SquadIconDataTableAsset; // 0xA0(0x20)
		unsigned char UnknownData00_6[0x38]; // 0xC0(0x38) UNKNOWN PROPERTY
		TMap<UFortGadgetItemDefinition*, UFortWorldItem*> GadgetDefinitionToInstanceMap; // 0xF8(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHomebaseUIContext");
			return ret;
		}

		void SetShouldAutoSlotSurvivorSquads(bool Value); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75032855C(relative to base address)
		void SetCurrentlyViewedHeroLoadout(UFortCampaignHeroLoadoutItem* Loadout); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328198(relative to base address)
		void SetCurrentlyFocusedHeroLoadoutSlotName(FName& SlotName); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503280F0(relative to base address)
		void OnSurvivorSquadsAutoSlotted__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSquadSlotChanged__DelegateSignature(FName SquadName, int32_t SlotIndex); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSlottedPrimaryHeroChanged__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature(); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnNodesPurchased__DelegateSignature(FName NodeId); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDifferentHeroLoadoutViewed__DelegateSignature(UFortCampaignHeroLoadoutItem* PreviousLoadout, UFortCampaignHeroLoadoutItem* NewLoadout); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDifferentHeroLoadoutSlotFocused__DelegateSignature(FName SlotName); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsHeroLoadoutSlotUnlocked(FName& SlotName, UFortCampaignHeroLoadoutItem* Loadout); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503267D8(relative to base address)
		bool IsAnySquadSlotUnlocked(FName SquadID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032671C(relative to base address)
		void HandleDifferentHeroLoadoutActivated(UFortMcpProfileCampaign* Profile); // Flags: Final|Native|Private, Memory Exec: 0x7FF750326324(relative to base address)
		void GetWorkerSetBonusEffectModifiers(FGameplayTag& SetBonusTag, TArray<FFortAttributeModifierDisplayData>& OutModifiers); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325BDC(relative to base address)
		UFortQuestItemDefinition GetUnlockingQuestDefinitionForSquadSlot(FName& SquadName, int32_t SlotIndex); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325ACC(relative to base address)
		UFortQuestItemDefinition GetUnlockingQuestDefinitionForHeroLoadoutSlot(FName& SlotName, UFortCampaignHeroLoadoutItem* Loadout); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325908(relative to base address)
		bool GetUnlockedGadgets(TArray<UFortItem*>& UnlockedGadgets); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032585C(relative to base address)
		FFortMultiSizeBrush GetSquadIcon(FName SquadID); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503255D0(relative to base address)
		UFortHero GetSlottedPrimaryHero(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325518(relative to base address)
		bool GetShouldAutoSlotSurvivorSquads(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503254F4(relative to base address)
		TArray GetItemsInSquad(FName SquadID, bool bRemoveEmptySquadSlots); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324CB4(relative to base address)
		UFortItem GetItemInSquadSlot(FName SquadName, int32_t SlotIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324BF4(relative to base address)
		UFortCampaignHeroLoadoutItem GetCurrentlyViewedHeroLoadout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324578(relative to base address)
		FName GetCurrentlyFocusedHeroLoadoutSlotName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C8DFC24(relative to base address)
		UFortCollectionBookData GetCollectionBookData(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503242C8(relative to base address)
		void AutoSlotAllSurvivorSquads(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750323750(relative to base address)
	};


	// Class FortniteUI.FortDefenderConfigPanel
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x550 - 0x528)
	class UFortDefenderConfigPanel : public UCommonActivatablePanelLegacy	
	{
	public:
		TWeakObjectPtr<UFortItem*> SelectedDefenderItem; // 0x528(0x8)
		TWeakObjectPtr<UFortItem*> SelectedWeaponItem; // 0x530(0x8)
		TWeakObjectPtr<UFortItem*> SelectedAmmoItem; // 0x538(0x8)
		int32_t SelectedAmmoQuantity; // 0x540(0x4)
		TWeakObjectPtr<ABuildingTrapDefender*> DefenderTrap; // 0x544(0x8)
		unsigned char UnknownData00_7[0x4]; // 0x54C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderConfigPanel");
			return ret;
		}

		bool UnsummonDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750329048(relative to base address)
		bool SpawnDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750328F18(relative to base address)
		bool IsWeaponSelectionValid(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326DE8(relative to base address)
		bool HasWeaponForSelectedDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326664(relative to base address)
		bool HasAnyDefenders(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503265D8(relative to base address)
		UFortSchematicItemDefinition GetSourceSchematic(UFortWorldItemDefinition* ItemDefUsedForCrafting); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032553C(relative to base address)
		AFortAIPawn GetSelectedDefenderPawn(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503254AC(relative to base address)
		UFortWorldItem GetDefenderPawnWeaponItem(AFortAIPawn* DefenderPawn); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032459C(relative to base address)
		UFortWorldItemDefinition GetCompatibleAmmoDef(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032433C(relative to base address)
		UFortWorldItem GetCompatibleAmmo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503242F4(relative to base address)
		int32_t GetAmmoCountFromPlayer(UFortWorldItemDefinition* AmmoItemDef); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323FA0(relative to base address)
		int32_t GetAmmoCountFromDefender(UFortWorldItemDefinition* AmmoItemDef); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323DB8(relative to base address)
	};


	// Class FortniteUI.FortDefenderConfigPanel_STW
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x78 (0x468 - 0x3F0)
	class UFortDefenderConfigPanel_STW : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x50]; // 0x3F0(0x50) UNKNOWN PROPERTY
		TWeakObjectPtr<UFortItem*> SelectedDefenderItem; // 0x440(0x8)
		TWeakObjectPtr<UFortItem*> SelectedWeaponItem; // 0x448(0x8)
		TWeakObjectPtr<UFortItem*> SelectedAmmoItem; // 0x450(0x8)
		int32_t SelectedAmmoQuantity; // 0x458(0x4)
		TWeakObjectPtr<ABuildingTrapDefender*> DefenderTrap; // 0x45C(0x8)
		unsigned char UnknownData01_7[0x4]; // 0x464(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderConfigPanel_STW");
			return ret;
		}

		bool UnsummonDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503290E8(relative to base address)
		bool SpawnDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750328F3C(relative to base address)
		void RegisterInputAction(FDataTableRowHandle InputActionRow, FDelegateProperty CommittedEvent); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327864(relative to base address)
		bool IsWeaponSelectionValid(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326E0C(relative to base address)
		bool HasWeaponForSelectedDefender(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326688(relative to base address)
		bool HasAnyDefenders(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503265D8(relative to base address)
		UFortSchematicItemDefinition GetSourceSchematic(UFortWorldItemDefinition* ItemDefUsedForCrafting); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032553C(relative to base address)
		AFortAIPawn GetSelectedDefenderPawn(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503254D0(relative to base address)
		UFortWorldItem GetDefenderPawnWeaponItem(AFortAIPawn* DefenderPawn); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032459C(relative to base address)
		UFortWorldItemDefinition GetCompatibleAmmoDef(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324360(relative to base address)
		UFortWorldItem GetCompatibleAmmo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324318(relative to base address)
		int32_t GetAmmoCountFromPlayer(UFortWorldItemDefinition* AmmoItemDef); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323FA0(relative to base address)
		int32_t GetAmmoCountFromDefender(UFortWorldItemDefinition* AmmoItemDef); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750323EAC(relative to base address)
		void EnableInputAction(FDataTableRowHandle InputActionRow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750323BA8(relative to base address)
		void DisableInputAction(FDataTableRowHandle InputActionRow); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503239F4(relative to base address)
	};


	// Class FortniteUI.FortDefenderItemTileButton
	// Inherited from UFortItemTileButton -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1420 - 0x1418)
	class UFortDefenderItemTileButton : public UFortItemTileButton	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x1418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderItemTileButton");
			return ret;
		}

		void HandleEquipSlotChanged(int32_t EquipSlot); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortDefenderItemTileView
	// Inherited from UFortItemTileView -> UCommonTileView -> UTileView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0xCD0 - 0xCC8)
	class UFortDefenderItemTileView : public UFortItemTileView	
	{
	public:
		TWeakObjectPtr<UFortDefenderConfigPanel*> DefenderConfigPanel; // 0xCC8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderItemTileView");
			return ret;
		}
	};


	// Class FortniteUI.FortDefenderItemTileView_STW
	// Inherited from UFortItemTileView -> UCommonTileView -> UTileView -> UListView -> UListViewBase -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0xCD0 - 0xCC8)
	class UFortDefenderItemTileView_STW : public UFortItemTileView	
	{
	public:
		TWeakObjectPtr<UFortDefenderConfigPanel_STW*> DefenderConfigPanel; // 0xCC8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderItemTileView_STW");
			return ret;
		}
	};


	// Class FortniteUI.FortDefenderSlotButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x13E0 - 0x13E0)
	class UFortDefenderSlotButton : public UCommonButtonLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderSlotButton");
			return ret;
		}
	};


	// Class FortniteUI.FortDefenderSlotItemPicker
	// Inherited from UFortItemPickerBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x430 - 0x410)
	class UFortDefenderSlotItemPicker : public UFortItemPickerBase	
	{
	public:
		EFortDefenderSlotType DefenderSlotType; // 0x410(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x411(0x7) UNKNOWN PROPERTY
		TArray<EInventoryContentSortType> SortTypesList; // 0x418(0x10)
		EInventoryContentSortType CurrentSortType; // 0x428(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x429(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderSlotItemPicker");
			return ret;
		}

		void SetSortType(EInventoryContentSortType SortType); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503285DC(relative to base address)
		void PopulateDefenderSlotItems(UFortDefenderItem* DefenderItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503272D0(relative to base address)
		void OnCurrentSortTypeChanged(EInventoryContentSortType SortType); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NextSortType(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750327060(relative to base address)
	};


	// Class FortniteUI.FortDefenderSlotView
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortDefenderSlotView : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderSlotView");
			return ret;
		}
	};


	// Class FortniteUI.FortDefenderSlotWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2D8 - 0x2D8)
	class UFortDefenderSlotWidget : public UCommonUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDefenderSlotWidget");
			return ret;
		}
	};


	// Class FortniteUI.FortTrapDefenderItemPicker
	// Inherited from UFortItemPickerBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x480 - 0x410)
	class UFortTrapDefenderItemPicker : public UFortItemPickerBase	
	{
	public:
		UFortItemDetailsHostPanel* DetailsPanel; // 0x410(0x8)
		TWeakObjectPtr<ABuildingTrapDefender*> DefenderTrap; // 0x418(0x8)
		unsigned char UnknownData00_7[0x60]; // 0x420(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTrapDefenderItemPicker");
			return ret;
		}

		void HandleSelectionCommittedBP(UFortItem* CommittedItem); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortBluGloCounter
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2C8 - 0x2C0)
	class UFortBluGloCounter : public UFortUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x2C0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortBluGloCounter");
			return ret;
		}

		void OnBluGloQuantityChanged(int32_t Quantity); // Flags: Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74DC6700C(relative to base address)
	};


	// Class FortniteUI.FortCampaignMatchmakingBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortCampaignMatchmakingBase : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignMatchmakingBase");
			return ret;
		}

		void OnTeamMembershipChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPartyPrivacyChanged(EPartyType PartyType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGameReadinessChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsLocalPlayerParticipatingInParty(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326AEC(relative to base address)
	};


	// Class FortniteUI.FortCampaignMinimap
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x10 (0x168 - 0x158)
	class UFortCampaignMinimap : public UWidget	
	{
	public:
		FVector2D DesiredSize; // 0x158(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignMinimap");
			return ret;
		}
	};


	// Class FortniteUI.FortPerksWidget_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class UFortPerksWidget_NUI : public UCommonUserWidget	
	{
	public:
		UFortHero* Hero; // 0x2D8(0x8)
		EFortPerksWidgetState State; // 0x2E0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2E1(0x7) UNKNOWN PROPERTY
		UFortHero* EvolutionOption; // 0x2E8(0x8)
		UClass* PerkTierWidgetType; // 0x2F0(0x8)
		UClass* PerkWidgetType; // 0x2F8(0x8)
		UFortTooltipContext* TooltipContext; // 0x300(0x8)
		UCommonLoadGuard* PerksListLoadGuard; // 0x308(0x8)
		unsigned char UnknownData01_7[0x60]; // 0x310(0x60) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPerksWidget_NUI");
			return ret;
		}

		void SetState(EFortPerksWidgetState InState, UFortHero* InEvolutionOption); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328704(relative to base address)
		void SetHero(UFortHero* InHero); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750328218(relative to base address)
		void ProcessPerkTiers(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503276E8(relative to base address)
		void ProcessPerks(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327710(relative to base address)
		void ProcessActiveAbilityPerksAsync(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503276BC(relative to base address)
		void OnStateChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHeroChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGeneratePerkTier(FFortUIPerkTier FortPerkTier, UFortPerkTierWidget_NUI* PerkTierWidget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnGeneratePerk(FFortUIPerk FortPerk, UFortPerkWidget_NUI* PerkWidget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPerkTierWidget_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortPerkTierWidget_NUI : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FFortUIPerkTier FortPerkTier; // 0x2E0(0x10)
		unsigned char UnknownData01_7[0x28]; // 0x2F0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPerkTierWidget_NUI");
			return ret;
		}

		void ProcessPerks(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503276FC(relative to base address)
		void OnGeneratePerk(FFortUIPerk Perk, UFortPerkWidget_NUI* PerkWidget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortPerkWidget_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xC0 (0x398 - 0x2D8)
	class UFortPerkWidget_NUI : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		FFortUIPerk Perk; // 0x2E0(0x88)
		unsigned char UnknownData01_6[0x8]; // 0x368(0x8) UNKNOWN PROPERTY
		UFortTooltipContext* CachedTooltipContext; // 0x370(0x8)
		unsigned char UnknownData02_6[0x12]; // 0x378(0x12) UNKNOWN PROPERTY
		bool bShouldUseSummaryTooltip; // 0x38A(0x1)
		unsigned char UnknownData03_6[0x5]; // 0x38B(0x5) UNKNOWN PROPERTY
		UFortTooltipLoadingWrapper* CachedTooltipLoadingWrapper; // 0x390(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPerkWidget_NUI");
			return ret;
		}

		void SetTooltipContext(UFortTooltipContext* InTooltipContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74EAA9FB8(relative to base address)
		void RequestTooltipDescription(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327B30(relative to base address)
		void RequestCombinedTooltipDescription(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750327ABC(relative to base address)
		void OnTooltipDescriptionReady(TArray<FText>& DescriptionList); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPerkUpdated(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCombinedTooltipDescriptionReady(FText& Description); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsTierPerk(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326DD0(relative to base address)
		bool IsPerkUnlocked(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326C04(relative to base address)
		bool IsPerkHighlighted(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326BE0(relative to base address)
		bool IsPerkEmpty(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326B98(relative to base address)
		bool HasAbility(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032658C(relative to base address)
		void HandleAbilityKitTooltipLoaded(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750325E20(relative to base address)
		FText GetTooltipTitle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503257FC(relative to base address)
		UFortTooltipContext GetTooltipContext(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503257D8(relative to base address)
		EFortSupportBonusType GetSupportBonusType(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325730(relative to base address)
		int32_t GetRequiredLevel(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032531C(relative to base address)
		EFortItemTier GetPerkTier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324F3C(relative to base address)
		bool GetIcon(FSlateBrush& Brush); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324B44(relative to base address)
	};


	// Class FortniteUI.FortUIRewardReport
	// Inherited from UObject
	// Size: 0x10 (0x38 - 0x28)
	class UFortUIRewardReport : public UObject	
	{
	public:
		UFortLocalPlayer* LocalPlayer; // 0x28(0x8)
		int32_t RewardDisplayLevel; // 0x30(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x34(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIRewardReport");
			return ret;
		}

		int32_t GetRewardedChestIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C3345F8(relative to base address)
	};


	// Class FortniteUI.FortUIScoreReport
	// Inherited from UObject
	// Size: 0x8 (0x30 - 0x28)
	class UFortUIScoreReport : public UObject	
	{
	public:
		UFortLocalPlayer* LocalPlayer; // 0x28(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIScoreReport");
			return ret;
		}

		bool IsLocalPlayer(int32_t ScoreReportIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326A60(relative to base address)
		int32_t GetXpToCompleteLevel(int32_t Level); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325DA4(relative to base address)
		bool GetXpInfo(int32_t ScoreReportIndex, FFortUIXpInfo& OutXpInfo); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325CC4(relative to base address)
		int32_t GetTeamScore(TEnumAsByte<EFortUIScoreType> ScoreType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325748(relative to base address)
		void GetScoreReportIndicesByPlayerID(TArray<int32_t>& SortedScoreReportIndices); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325410(relative to base address)
		int32_t GetScoreReportIndex(FUniqueNetIdRepl& PlayerId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75032533C(relative to base address)
		int32_t GetPlayerScore(int32_t ScoreReportIndex, TEnumAsByte<EFortUIScoreType> ScoreType); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325234(relative to base address)
		FString GetPlayerPlatform(int32_t ScoreReportIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750325148(relative to base address)
		FText GetPlayerName(int32_t ScoreReportIndex); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503250A4(relative to base address)
		void GetPlayerIDFromScoreReportIndex(int32_t ScoreReportIndex, FUniqueNetIdRepl& OutUniqueNetIdRepl); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324F74(relative to base address)
		int32_t GetPlayerCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324F54(relative to base address)
		float GetLevelProgress(int32_t Level, int32_t DisplayXp); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324DE8(relative to base address)
		int32_t GetDifficultBonusScore(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503246A8(relative to base address)
		float GetDifficultBonusMultiplier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324680(relative to base address)
		AFortPlayerState GetCurrentPlayerState(int32_t ScoreReportIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503244C0(relative to base address)
		AFortPlayerPawn GetCurrentPlayerPawn(int32_t ScoreReportIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750324434(relative to base address)
		int32_t GetBadgeScore(UFortItem* BadgeItem); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503241A0(relative to base address)
	};


	// Class FortniteUI.FortWeaponBoardBase
	// Inherited from AActor -> UObject
	// Size: 0x40 (0x2D0 - 0x290)
	class AFortWeaponBoardBase : public AActor	
	{
	public:
		TArray<FFortWeaponBoardDisplaySlot> RangedWeaponDisplaySlots; // 0x290(0x10)
		TArray<FFortWeaponBoardDisplaySlot> MeleeWeaponDisplaySlots; // 0x2A0(0x10)
		TArray<FFortWeaponBoardDisplaySlotItem> DisplaySlotItemList; // 0x2B0(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x2C0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortWeaponBoardBase");
			return ret;
		}

		void PopulateDisplaySlotsWithRandomWeapons(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750327604(relative to base address)
		void PopulateDisplaySlotsWithBestWeapons(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503275F0(relative to base address)
		void OnDisplaySlotItemChanged(FFortWeaponBoardDisplaySlot DisplaySlot, UFortAccountItem* Item); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleAsyncLoadComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750325FE8(relative to base address)
	};


	// Class FortniteUI.FortCampaignMap
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x370 - 0x2D8)
	class UFortCampaignMap : public UCommonUserWidget	
	{
	public:
		FFortSwipeDetector SwipeDetector; // 0x2D8(0x98)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignMap");
			return ret;
		}

		void OnSwipeRight(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75032724C(relative to base address)
		void OnSwipeLeft(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750327238(relative to base address)
		void OnShowPreviousPage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnShowNextPage(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHeroLoadoutAbilitiesDetailPanel
	// Inherited from UFortItemDetailElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x338 - 0x330)
	class UFortHeroLoadoutAbilitiesDetailPanel : public UFortItemDetailElementWidget	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x330(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHeroLoadoutAbilitiesDetailPanel");
			return ret;
		}

		void OnPlayerHomebaseChanged(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ListenForChanges(bool bListen); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750326E44(relative to base address)
	};


	// Class FortniteUI.FortHeroLoadoutPedestal
	// Inherited from AFortItemPreviewPedestal -> AFortItemPlacementActor -> AActor -> UObject
	// Size: 0x38 (0x508 - 0x4D0)
	class AFortHeroLoadoutPedestal : public AFortItemPreviewPedestal	
	{
	public:
		FName SlotName; // 0x4D0(0x4)
		TWeakObjectPtr<UFortCampaignHeroLoadoutItem*> HeroLoadout; // 0x4D4(0x8)
		bool bIsSlotFocusedInUI; // 0x4DC(0x1)
		unsigned char UnknownData00_7[0x2B]; // 0x4DD(0x2B) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHeroLoadoutPedestal");
			return ret;
		}

		void HandleSlotFocusInUIChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMcpProfilesInitialized(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503264E8(relative to base address)
		void HandleDifferentLoadoutViewed(UFortCampaignHeroLoadoutItem* PreviousLoadout, UFortCampaignHeroLoadoutItem* CurrentLoadout); // Flags: Final|Native|Private, Memory Exec: 0x7FF750326424(relative to base address)
		void HandleDifferentHeroLoadoutSlotFocused(FName FocusedSlotName); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503263A4(relative to base address)
	};


	// Class FortniteUI.FortMissionSelect
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x548 - 0x528)
	class UFortMissionSelect : public UCommonActivatablePanelLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x528(0x10) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnNavigation; // 0x538(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMissionSelect");
			return ret;
		}

		bool NavigateMissionTiles(EUINavigation Direction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750326FB0(relative to base address)
		bool CanCaptureAcceptInput(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortGadgetsWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2F8 - 0x2D8)
	class UFortGadgetsWidgetBase : public UCommonUserWidget	
	{
	public:
		UFortLazyImage* GadgetIcon1; // 0x2D8(0x8)
		UFortLazyImage* GadgetIcon2; // 0x2E0(0x8)
		TArray<UFortLazyImage*> Gadgets; // 0x2E8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortGadgetsWidgetBase");
			return ret;
		}

		UWidget OnGenerateTooltipWidget(FText& Header, FText& Description); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHeroAbilitiesAndGadgetsBase
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1420 - 0x1408)
	class UFortHeroAbilitiesAndGadgetsBase : public UFortTeamMemberEntryBase	
	{
	public:
		bool bHideAbilities; // 0x1408(0x1)
		bool bHideGadgets; // 0x1409(0x1)
		unsigned char UnknownData00_6[0x2]; // 0x140A(0x2) UNKNOWN PROPERTY
		int32_t AssignedMemberIndex; // 0x140C(0x4)
		UFortPerksWidget_NUI* HorizontalAbilitiesList; // 0x1410(0x8)
		UFortGadgetsWidgetBase* GadgetsWidget; // 0x1418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHeroAbilitiesAndGadgetsBase");
			return ret;
		}

		void Refresh(UFortCampaignHeroLoadoutItem* HeroLoadout); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75032773C(relative to base address)
	};


	// Class FortniteUI.FortHomebaseNodeItemUtilities
	// Inherited from UBlueprintFunctionLibrary -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortHomebaseNodeItemUtilities : public UBlueprintFunctionLibrary	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHomebaseNodeItemUtilities");
			return ret;
		}

		bool IsSquadSlotUnseen(AFortPlayerController* FortPC, FName& SquadID, int32_t SquadSlot); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750326C8C(relative to base address)
		bool IsHomebaseNodeItemUnseenForTagContainer(AFortPlayerController* FortPC, FGameplayTagContainer& Tags); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750326950(relative to base address)
		FString GetHomebaseNodeItemNameForTagContainer(AFortPlayerController* FortPC, FGameplayTagContainer& Tags); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750324A30(relative to base address)
		UFortHomebaseNodeItem GetHomebaseNodeItemForTagContainer(AFortPlayerController* FortPC, FGameplayTagContainer& Tags); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750324930(relative to base address)
		UFortHomebaseNodeItem GetHomebaseNodeItemForSquadSlot(AFortPlayerController* FortPC, FName& SquadID, int32_t SquadSlot); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503247EC(relative to base address)
		bool AreAnyHomebaseNodeItemsUnseenForSquadType(AFortPlayerController* FortPC, EFortHomebaseSquadType SquadType); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75032368C(relative to base address)
		bool AreAnyHomebaseNodeItemsUnseenForSquadId(AFortPlayerController* FortPC, FName& SquadID); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503235BC(relative to base address)
	};


	// Class FortniteUI.FortUIStateWidget_NUI
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x5A0 - 0x560)
	class UFortUIStateWidget_NUI : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x560(0x20) UNKNOWN PROPERTY
		TArray<FContentPushState> StackStates; // 0x580(0x10)
		TArray<UWidget*> StackWidgets; // 0x590(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_NUI");
			return ret;
		}

		void SetSocialButtonEnabled(bool bEnabled); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CBEC8(relative to base address)
		void SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CBC78(relative to base address)
		void RequestOpenSocialPanel(); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CBC5C(relative to base address)
		void PushContentWidgetInternal(UWidget* Widget, FContentPushState State); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7503CBA78(relative to base address)
		void PushContentWidgetAdvanced(UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB928(relative to base address)
		void PushContentWidget(UWidget* Widget); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB8A8(relative to base address)
		UWidget PopContentWidgetInternal(FContentPushState State); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7503CB774(relative to base address)
		UWidget PopContentWidget(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB750(relative to base address)
		void PopAllContentWidgets(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB73C(relative to base address)
		void OnSocialButtonEnabled(bool bEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnOpenSocialMenu(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnLoadingScreenVisibilityChanged(bool IsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnHUDScaleChanged(float HUDScale); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFrontEndVisibilityUpdated(bool bHideHeader, bool bHideFooter, bool bHideChatWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExitState(EFortUIState NextUIState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnEnterState(EFortUIState PreviousUIState); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnAutoHideBuildingMaterialsChanged(bool AutoHide); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsContentOnStack(); // Flags: Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CB52C(relative to base address)
		UWidget GetTopBarWidget(); // Flags: Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DynamicHandleLoadingScreenVisibilityChanged(bool IsVisible); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503CAFA0(relative to base address)
	};


	// Class FortniteUI.CampaignHUDBase
	// Inherited from UFortUIStateWidget_NUI -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x5F0 - 0x5A0)
	class UCampaignHUDBase : public UFortUIStateWidget_NUI	
	{
	public:
		int32_t ReticleExtensionSize; // 0x5A0(0x4)
		unsigned char UnknownData00_6[0x34]; // 0x5A4(0x34) UNKNOWN PROPERTY
		UFortWeaponReticleExtensionWidgetBase* CurrentCustomReticleExtension; // 0x5D8(0x8)
		TArray<UFortWeaponReticleExtensionWidgetBase*> RecentReticleExtensions; // 0x5E0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.CampaignHUDBase");
			return ret;
		}

		void ToggleChat(bool bShow); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetInputReflectorBoxVisibility(bool bVisible); // Flags: RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetRemoved(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeHandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750326EEC(relative to base address)
	};


	// Class FortniteUI.FortResultsBadgeLootWidget
	// Inherited from UFortUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2D0 - 0x2C0)
	class UFortResultsBadgeLootWidget : public UFortUserWidget	
	{
	public:
		UCommonBorder* Border_LeechWarning; // 0x2C0(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x2C8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortResultsBadgeLootWidget");
			return ret;
		}

		void RecheckLeecherStatus(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750327728(relative to base address)
	};


	// Class FortniteUI.FortMobileThemeSubsystem
	// Inherited from UEngineSubsystem -> UDynamicSubsystem -> USubsystem -> UObject
	// Size: 0x0 (0x30 - 0x30)
	class UFortMobileThemeSubsystem : public UEngineSubsystem	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortMobileThemeSubsystem");
			return ret;
		}
	};


	// Class FortniteUI.FortCampaignPurchaseScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x488 - 0x3F0)
	class UFortCampaignPurchaseScreen : public UCommonActivatableWidget	
	{
	public:
		TArray<UTexture2D*> ImageCycle; // 0x3F0(0x10)
		float ImageCycleTime; // 0x400(0x4)
		bool bAllowCodeRedemption; // 0x404(0x1)
		unsigned char UnknownData00_6[0x1B]; // 0x405(0x1B) UNKNOWN PROPERTY
		UWidgetAnimation* BoundAnim_Intro; // 0x420(0x8)
		UWidgetAnimation* BoundAnim_Outro; // 0x428(0x8)
		UImage* Image_ProductLogo; // 0x430(0x8)
		UCommonTextBlock* Text_Tagline; // 0x438(0x8)
		UCommonTextBlock* Text_Description; // 0x440(0x8)
		UCommonButtonLegacy* Button_Purchase; // 0x448(0x8)
		UCommonButtonLegacy* Button_RedeemCode; // 0x450(0x8)
		UCommonButtonLegacy* Button_Back; // 0x458(0x8)
		UImage* Image_UpsellImage; // 0x460(0x8)
		UCommonActivatableWidgetSwitcher* ActivatableSwitcher_PreviewOrStore; // 0x468(0x8)
		UClass* StoreScreenClass; // 0x470(0x8)
		UFortMtxStoreRootBase_Legacy* StoreScreenInstance; // 0x478(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x480(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignPurchaseScreen");
			return ret;
		}

		void OnStoreScreenCreated(UFortMtxStoreRootBase_Legacy* StoreScreen); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnImageCycleTimeElapsed(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortActivtyCheckLine
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortActivtyCheckLine : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActivtyCheckLine");
			return ret;
		}

		void Configure(FGameActivityCheck& Check); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCampaignReadyScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortCampaignReadyScreen : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x3F0(0x8) UNKNOWN PROPERTY
		UClass* CampaignPurchaseScreenClass; // 0x3F8(0x8)
		UClass* LoadingContentModalClass; // 0x400(0x8)
		UClass* SettingsScreenClass; // 0x408(0x8)
		UDynamicEntryBox* LinesEntryBox; // 0x410(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x418(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignReadyScreen");
			return ret;
		}

		void ShowSTWManualInstallConfirmation(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750328E80(relative to base address)
		void ShowSettingsScreen(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750328E94(relative to base address)
		void ShowPurchaseScreen(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750328E6C(relative to base address)
		void LeavePartyAndPlayTutorial(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750326E30(relative to base address)
		void InstallSaveTheWorldContent(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503266AC(relative to base address)
		void ConfigureButtons(EActivityCheckSolution Solution); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CloseDialog(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF749B1B2C4(relative to base address)
	};


	// Class FortniteUI.FortLoadingOnDemandContentModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x498 - 0x3F0)
	class UFortLoadingOnDemandContentModal : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0xA0]; // 0x3F0(0xA0) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Cancel; // 0x490(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLoadingOnDemandContentModal");
			return ret;
		}

		void StartProgressUpdateTimer(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750328F60(relative to base address)
		void SetCancelButtonText(FText& InText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnUpdatedProgress(float Percent); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSubgameSelectScreen
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x478 - 0x3F0)
	class UFortSubgameSelectScreen : public UCommonActivatableWidget	
	{
	public:
		bool bDebugVariable1; // 0x3F0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3F1(0x7) UNKNOWN PROPERTY
		UFortSubgameTile* SelectedTile; // 0x3F8(0x8)
		USoundBase* Sound_OnActivated; // 0x400(0x8)
		USoundBase* Sound_OnSelectedSubGame; // 0x408(0x8)
		UWidgetAnimation* BoundAnim_Intro; // 0x410(0x8)
		UWidgetAnimation* BoundAnim_Outro; // 0x418(0x8)
		UWidgetAnimation* SelectModeIdle; // 0x420(0x8)
		UImage* Image_SpinnerImage; // 0x428(0x8)
		UFortConsoleProfileWidget* XboxOneProfileWidget_ProfileDisplay; // 0x430(0x8)
		UFortSubgameTile* SubgameTile_BattleRoyale; // 0x438(0x8)
		UFortSubgameTile* SubgameTile_Creative; // 0x440(0x8)
		UFortSubgameTile* SubgameTile_Campaign; // 0x448(0x8)
		UCommonRichTextBlock* RichText_PerfModeWarning; // 0x450(0x8)
		UCommonButtonLegacy* Button_AccountPicker; // 0x458(0x8)
		UClass* CampaignPurchaseScreenClass; // 0x460(0x8)
		UClass* LoadingContentModal; // 0x468(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x470(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubgameSelectScreen");
			return ret;
		}

		void HandleOnPartyLeft(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750326578(relative to base address)
		void HandleOnMatchmakingComplete(EMatchmakingCompleteResult Result); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503264FC(relative to base address)
	};


	// Class FortniteUI.FortSubgameTile
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x100 (0x14E0 - 0x13E0)
	class UFortSubgameTile : public UCommonButtonLegacy	
	{
	public:
		ESubgameTileType SubgameType; // 0x13E0(0x1)
		ESubgameLoadFromCMS CMS_LoadType; // 0x13E1(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x13E2(0x6) UNKNOWN PROPERTY
		UTexture2D* KeyArt; // 0x13E8(0x8)
		FText Title; // 0x13F0(0x10)
		FText Description; // 0x1400(0x10)
		FText StandardMessageLine1; // 0x1410(0x10)
		FText StandardMessageLine2; // 0x1420(0x10)
		FLinearColor StandardMessageBackgroundColor; // 0x1430(0x10)
		FText SpecialMessage; // 0x1440(0x10)
		FLinearColor SpecialMessageBackgroundColor; // 0x1450(0x10)
		FLinearColor UnfocusedOverlayColor; // 0x1460(0x10)
		UMaterialInstance* GradientBrush; // 0x1470(0x8)
		FLinearColor GradientColor; // 0x1478(0x10)
		UEpicCMSImage* Image_KeyArt; // 0x1488(0x8)
		UCommonTextBlock* Text_Title; // 0x1490(0x8)
		UCommonTextBlock* Text_Description; // 0x1498(0x8)
		UCommonTextBlock* Text_StandardMessageLine1; // 0x14A0(0x8)
		UCommonTextBlock* Text_StandardMessageLine2; // 0x14A8(0x8)
		UBorder* Border_StandardMessageBackground; // 0x14B0(0x8)
		UCommonTextBlock* Text_SpecialMessage; // 0x14B8(0x8)
		UBorder* Border_SpecialMessageBackground; // 0x14C0(0x8)
		UImage* Image_UnfocusedOverlay; // 0x14C8(0x8)
		UImage* Image_Gradient; // 0x14D0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x14D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubgameTile");
			return ret;
		}

		bool TrySetSubgameImageFromCMS(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF750329024(relative to base address)
		bool TryGetSubgameDataFromCMS(FSubgameDisplayData& SubgameData); // Flags: Final|Native|Private|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750328F74(relative to base address)
	};


	// Class FortniteUI.StartUpUIStateWidget_SubgameSelect
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x410 - 0x408)
	class UStartUpUIStateWidget_SubgameSelect : public UFortUIStateWidgetBase	
	{
	public:
		UCommonUserWidget* BottomBar; // 0x408(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StartUpUIStateWidget_SubgameSelect");
			return ret;
		}
	};


	// Class FortniteUI.FortSubscriptionPlatformModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x420 - 0x3F0)
	class UFortSubscriptionPlatformModal : public UCommonActivatableWidget	
	{
	public:
		UCommonButtonLegacy* Button_Back; // 0x3F0(0x8)
		UCommonButtonLegacy* Button_TouchBack; // 0x3F8(0x8)
		FString ModalId; // 0x400(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x410(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionPlatformModal");
			return ret;
		}

		void SetPlatformSpecificQRCode(FString QRCodeAssetURL); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetPlatformSpecificEntries(TArray<FText>& Entries); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SendSubscriptionAnalyticsEvent(FString Interaction); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750328060(relative to base address)
		void OnModalBackout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsOnActiveSubscriptionPlatform(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750326B3C(relative to base address)
		FText GetSubscriptionNextBillingDateAsText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503256F4(relative to base address)
		void ExitModal(); // Flags: Native|Protected|BlueprintCallable, Memory Exec: 0x7FF74D8BB7F8(relative to base address)
	};


	// Class FortniteUI.FortSubscriptionCancellationModal
	// Inherited from UFortSubscriptionPlatformModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x440 - 0x420)
	class UFortSubscriptionCancellationModal : public UFortSubscriptionPlatformModal	
	{
	public:
		UCommonButtonLegacy* Button_CancelSubscription; // 0x420(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x428(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionCancellationModal");
			return ret;
		}

		void UpdateCancelDisplay(bool bCanCancelDirectly); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ShowSpinner(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetErrorStateBulletPoints(TArray<FText>& BulletPointTexts); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnModalCancellationBackout(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HideSpinner(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		ESubscriptionCancellability GetSubscriptionCancellabillity(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503256D0(relative to base address)
		void ClearErrorStateBulletPoints(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortSubscriptionContinueModal
	// Inherited from UFortSubscriptionPlatformModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x440 - 0x420)
	class UFortSubscriptionContinueModal : public UFortSubscriptionPlatformModal	
	{
	public:
		UCommonButtonBase* Button_Subscribe; // 0x420(0x8)
		unsigned char UnknownData00_7[0x18]; // 0x428(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionContinueModal");
			return ret;
		}
	};


	// Class FortniteUI.FortSubscriptionCrewBlingInfoModal
	// Inherited from UFortSubscriptionPlatformModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x420 - 0x420)
	class UFortSubscriptionCrewBlingInfoModal : public UFortSubscriptionPlatformModal	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionCrewBlingInfoModal");
			return ret;
		}

		void SetPlatformGenericEntries(TArray<FText>& Entries); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		FText FormatBulletPoint(FText& InBulletPoint); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750323CC8(relative to base address)
	};


	// Class FortniteUI.FortSubscriptionTemporaryItemsInfoModal
	// Inherited from UFortSubscriptionPlatformModal -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x420 - 0x420)
	class UFortSubscriptionTemporaryItemsInfoModal : public UFortSubscriptionPlatformModal	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionTemporaryItemsInfoModal");
			return ret;
		}

		void SetPlatformGenericEntries(TArray<FText>& Entries); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberEntry
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x1410 - 0x1408)
	class UFortCampaignTeamMemberEntry : public UFortTeamMemberEntryBase	
	{
	public:
		int32_t RepresentedMemberIndex; // 0x1408(0x4)
		EFortMemberConnectionState CurrentConnectionState; // 0x140C(0x1)
		unsigned char UnknownData00_7[0x3]; // 0x140D(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberEntry");
			return ret;
		}

		void OnTeamMemberConnectionStateChanged(EFortMemberConnectionState NewConnectionState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool HasTeamMembers(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75035458C(relative to base address)
	};


	// Class FortniteUI.FortCampaignHUDTeamMemberInfo
	// Inherited from UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x1480 - 0x1410)
	class UFortCampaignHUDTeamMemberInfo : public UFortCampaignTeamMemberEntry	
	{
	public:
		UImage* Image_HeroIcon; // 0x1410(0x8)
		UFortPlayerPowerRating* PowerRating_MemberRating; // 0x1418(0x8)
		UCommonNumericTextBlock* Text_BluGloCount; // 0x1420(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x1428(0x8)
		UCommonTextBlock* Text_MemberName; // 0x1430(0x8)
		UImage* Image_LeaderIcon; // 0x1438(0x8)
		UImage* Image_PlatformIcon; // 0x1440(0x8)
		UImage* Image_HealthBar; // 0x1448(0x8)
		UImage* Image_ShieldBar; // 0x1450(0x8)
		FSlateColor Color_PlayerNameAlive; // 0x1458(0x14)
		FSlateColor Color_PlayerNameDead; // 0x146C(0x14)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignHUDTeamMemberInfo");
			return ret;
		}

		void HandlePlayerPawnChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354344(relative to base address)
		void HandleDBNOChanged(AFortPawn* Pawn, bool bInIsDBNO); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354258(relative to base address)
		void HandleAccumulatedItemsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354194(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberBanner
	// Inherited from UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1420 - 0x1410)
	class UFortCampaignTeamMemberBanner : public UFortCampaignTeamMemberEntry	
	{
	public:
		UFortPlayerBanner* Banner_MemberBanner; // 0x1410(0x8)
		UImage* Image_LeaderIcon; // 0x1418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberBanner");
			return ret;
		}
	};


	// Class FortniteUI.FortCampaignTeamMemberItemTracker
	// Inherited from UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x1420 - 0x1410)
	class UFortCampaignTeamMemberItemTracker : public UFortCampaignTeamMemberEntry	
	{
	public:
		TArray<FString> TemplateIdsToTrack; // 0x1410(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberItemTracker");
			return ret;
		}

		void OnTrackedItemsUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberXpBoost
	// Inherited from UFortCampaignTeamMemberItemTracker -> UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x14A0 - 0x1420)
	class UFortCampaignTeamMemberXpBoost : public UFortCampaignTeamMemberItemTracker	
	{
	public:
		FText NoPartyMemberString; // 0x1420(0x10)
		FText LocalPlayerXpBoostConfirmationTitle; // 0x1430(0x10)
		FText LocalPlayerXpBoostConfirmationText; // 0x1440(0x10)
		FText RemotePlayerXpBoostConfirmationTitle; // 0x1450(0x10)
		FText RemotePlayerXpBoostConfirmationText; // 0x1460(0x10)
		unsigned char UnknownData00_6[0x8]; // 0x1470(0x8) UNKNOWN PROPERTY
		UFortPlayerBanner* Banner_MemberBanner; // 0x1478(0x8)
		UCommonTextBlock* Text_MemberName; // 0x1480(0x8)
		UCommonTextBlock* Text_Boost; // 0x1488(0x8)
		UImage* Image_BoostIcon; // 0x1490(0x8)
		UCommonButtonLegacy* Button_ActivateBoost; // 0x1498(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberXpBoost");
			return ret;
		}

		void SetConsumeRequestInProgress(bool bIsRequestInProgress); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750354EDC(relative to base address)
		void OnConsumeBoostStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnConsumeBoostComplete(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBoostAmountChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetCurrentBoostAmount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354124(relative to base address)
		UCommonButtonLegacy GetBoostActivationButton(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503540F4(relative to base address)
		void CenterWidget(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750353B1C(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberDailyBonusXpBoost
	// Inherited from UFortCampaignTeamMemberItemTracker -> UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1440 - 0x1420)
	class UFortCampaignTeamMemberDailyBonusXpBoost : public UFortCampaignTeamMemberItemTracker	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1420(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_Boost; // 0x1428(0x8)
		UImage* Image_BoostIcon; // 0x1430(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1438(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberDailyBonusXpBoost");
			return ret;
		}

		void OnBoostAmountChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		int32_t GetCurrentBoostAmount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75035410C(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberInfo
	// Inherited from UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x70 (0x1480 - 0x1410)
	class UFortCampaignTeamMemberInfo : public UFortCampaignTeamMemberEntry	
	{
	public:
		UCommonButtonLegacy* Button_MenuButton; // 0x1410(0x8)
		UFortPlayerBanner* Banner_MemberBanner; // 0x1418(0x8)
		UCommonWidgetSwitcherLegacy* PowerRatingWidgetSwitcher; // 0x1420(0x8)
		UFortPlayerPowerRating* PowerRating_MemberRating; // 0x1428(0x8)
		UFortPlayerPowerRating* Moonbeam_PowerRating_MemberRating; // 0x1430(0x8)
		UFortPlayerPowerRating* Phoenix_PowerRating_MemberRating; // 0x1438(0x8)
		UFortSocialNameTextBlock* Text_MemberName; // 0x1440(0x8)
		UImage* Image_LeaderIcon; // 0x1448(0x8)
		UImage* Image_PlatformIcon; // 0x1450(0x8)
		UFortVoiceChatStatusIcon* VoiceIcon_Status; // 0x1458(0x8)
		UCommonRichTextBlock* RichText_Fortitude; // 0x1460(0x8)
		UCommonRichTextBlock* RichText_Offense; // 0x1468(0x8)
		UCommonRichTextBlock* RichText_Resistance; // 0x1470(0x8)
		UCommonRichTextBlock* RichText_Technology; // 0x1478(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberInfo");
			return ret;
		}

		void OnLocalTeamMemberParticipationChanged(bool bIsParticipating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShouldShowPhoenixDisplayChanged(bool bShouldShowPhoenixDisplay); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354374(relative to base address)
	};


	// Class FortniteUI.FortCampaignTeamMemberResult
	// Inherited from UFortCampaignTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x1450 - 0x1410)
	class UFortCampaignTeamMemberResult : public UFortCampaignTeamMemberEntry	
	{
	public:
		UCommonButtonLegacy* Button_Stats; // 0x1410(0x8)
		UFortPlayerBanner* Banner_MemberBanner; // 0x1418(0x8)
		UCommonWidgetSwitcherLegacy* PowerRatingWidgetSwitcher; // 0x1420(0x8)
		UFortPlayerPowerRating* PowerRating_MemberRating; // 0x1428(0x8)
		UFortPlayerPowerRating* Moonbeam_PowerRating_MemberRating; // 0x1430(0x8)
		UImage* Image_PlatformIcon; // 0x1438(0x8)
		UCommonTextBlock* Text_MemberName; // 0x1440(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x1448(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCampaignTeamMemberResult");
			return ret;
		}

		void UpdateMemberWithUniqueNetID(FUniqueNetIdRepl& MemberId); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750355B44(relative to base address)
		void Focus(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750354048(relative to base address)
	};


	// Class FortniteUI.FortPartyStatusIcon
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x138 (0x290 - 0x158)
	class UFortPartyStatusIcon : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x158(0x30) UNKNOWN PROPERTY
		FVector2D DesiredSize; // 0x188(0x10)
		FSlateColor ImageColorAndOpacity; // 0x198(0x14)
		unsigned char UnknownData01_6[0x4]; // 0x1AC(0x4) UNKNOWN PROPERTY
		UMaterialInterface* PartyStatusMaterial; // 0x1B0(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x1B8(0x8) UNKNOWN PROPERTY
		FSlateBrush StatusBrush; // 0x1C0(0xB0)
		unsigned char UnknownData03_7[0x20]; // 0x270(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortPartyStatusIcon");
			return ret;
		}

		void SetPlayerNetIdFromFortUser(UFortSocialUser* InSocialUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750355548(relative to base address)
		void SetImageColorAndOpacity(FSlateColor& InColorAndOpacity); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750355154(relative to base address)
	};


	// Class FortniteUI.FortTeamMemberManage
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x5E0 - 0x560)
	class UFortTeamMemberManage : public UFortActivatablePanel	
	{
	public:
		TWeakObjectPtr<UFortTeamMember*> TeamMember; // 0x560(0x8)
		UFortPlayerBanner* Banner_PlayerBanner; // 0x568(0x8)
		UCommonTextBlock* Text_PlayerName; // 0x570(0x8)
		UCommonWidgetSwitcherLegacy* PowerRatingWidgetSwitcher; // 0x578(0x8)
		UFortPlayerPowerRating* PowerRating_MemberPowerRating; // 0x580(0x8)
		UFortPlayerPowerRating* Moonbeam_PowerRating_MemberPowerRating; // 0x588(0x8)
		UVerticalBox* VBox_Buttons; // 0x590(0x8)
		UCommonButtonBase* Button_EditBanner; // 0x598(0x8)
		UCommonButtonBase* Button_LeaveParty; // 0x5A0(0x8)
		UCommonButtonBase* Button_MakePartyLeader; // 0x5A8(0x8)
		UCommonButtonBase* Button_Whisper; // 0x5B0(0x8)
		UCommonButtonBase* Button_Kick; // 0x5B8(0x8)
		UCommonButtonBase* Button_ViewProfile; // 0x5C0(0x8)
		UCommonButtonBase* Button_Mute; // 0x5C8(0x8)
		UCommonButtonBase* Button_Unmute; // 0x5D0(0x8)
		UCommonButtonBase* Button_ToggleParticipation; // 0x5D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberManage");
			return ret;
		}

		void SetRepresentingTeamMember(int32_t LocalTeamMemberIndex); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750355768(relative to base address)
		void OpenBannerEditor(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnParticipationChanged(bool bIsParticipating); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBannerEditorClosed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750354660(relative to base address)
	};


	// Class FortniteUI.FortTeamMemberPedestalFeatInfo
	// Inherited from UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x1420 - 0x1408)
	class UFortTeamMemberPedestalFeatInfo : public UFortTeamMemberEntryBase	
	{
	public:
		UCommonTextBlock* Text_FeatName; // 0x1408(0x8)
		UCommonTextBlock* Text_FeatDesc; // 0x1410(0x8)
		UFortLazyImage* LazyImage_FeatIcon; // 0x1418(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberPedestalFeatInfo");
			return ret;
		}

		void OnFeatDefinitionSet(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTeamMemberPedestalNameplate
	// Inherited from UFortBasicTeamMemberEntry -> UFortTeamMemberEntryBase -> UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x14B0 - 0x1430)
	class UFortTeamMemberPedestalNameplate : public UFortBasicTeamMemberEntry	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x1430(0x20) UNKNOWN PROPERTY
		UCommonTextBlock* Text_ReadyStatus; // 0x1450(0x8)
		UMatchmakingInputIndicatorBase* InputIndicator_ActiveInputType; // 0x1458(0x8)
		UCommonWidgetSwitcherLegacy* PowerRatingWidgetSwitcher; // 0x1460(0x8)
		UFortPlayerPowerRating* PowerRating_CampaignPower; // 0x1468(0x8)
		UFortPlayerPowerRating* Moonbeam_PowerRating_CampaignPower; // 0x1470(0x8)
		UFortPlayerPowerRating* Phoenix_PowerRating_CampaignPower; // 0x1478(0x8)
		USizeBox* SizeBox_HotfixControlled; // 0x1480(0x8)
		UCommonTextBlock* Text_PlayerLevel; // 0x1488(0x8)
		UImage* Image_HeroIcon; // 0x1490(0x8)
		UCommonButtonLegacy* Button_AddFriend; // 0x1498(0x8)
		UFortHabaneroTierWidget* HabaneroWidget; // 0x14A0(0x8)
		bool bTeamMemberPedestalNameplateAddFriendButtonEnabled; // 0x14A8(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x14A9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTeamMemberPedestalNameplate");
			return ret;
		}

		void OnReadyStatusChanged(EGameReadiness GameReadiness, bool bIsDownloading); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayReadyAudio(bool bIsReadyForMatchmaking); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPedestalSelectedChanged(bool bIsSelected); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnIsPlayingHabaneroChanged(bool bPlayingHabanero); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnFriendStatusUpdated(EFortFriendRequestStatus FriendRequestStatus); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnCurrentSubGameChanged(ESubGame NewSubGame); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleShouldShowPhoenixDisplayChanged(bool bShouldShowPhoenixDisplay); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503543F4(relative to base address)
	};


	// Class FortniteUI.FortVoiceChatStatusIcon
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x138 (0x290 - 0x158)
	class UFortVoiceChatStatusIcon : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x30]; // 0x158(0x30) UNKNOWN PROPERTY
		FVector2D DesiredSize; // 0x188(0x10)
		FSlateColor ImageColorAndOpacity; // 0x198(0x14)
		unsigned char UnknownData01_6[0x4]; // 0x1AC(0x4) UNKNOWN PROPERTY
		UMaterialInterface* VoiceChatStatusMaterial; // 0x1B0(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x1B8(0x8) UNKNOWN PROPERTY
		FSlateBrush StatusBrush; // 0x1C0(0xB0)
		unsigned char UnknownData03_7[0x18]; // 0x270(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChatStatusIcon");
			return ret;
		}

		void SetPlayerNetIdFromFortUser(UFortSocialUser* InSocialUser); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75035560C(relative to base address)
		void SetImageColorAndOpacity(FSlateColor& InColorAndOpacity); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750355154(relative to base address)
	};


	// Class FortniteUI.FortVoiceChatStatusIconProxyAnim
	// Inherited from UFortVoiceChatStatusIcon -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x2C0 - 0x288)
	class UFortVoiceChatStatusIconProxyAnim : public UFortVoiceChatStatusIcon	
	{
	public:
		float TalkingRampUpSeconds; // 0x288(0x4)
		float TalkingRampDownSeconds; // 0x28C(0x4)
		float TalkingUpdatesPerSecond; // 0x290(0x4)
		unsigned char UnknownData00_7[0x2C]; // 0x294(0x2C) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVoiceChatStatusIconProxyAnim");
			return ret;
		}
	};


	// Class FortniteUI.FortArenaLoadingScreen
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2F0 - 0x2D8)
	class UFortArenaLoadingScreen : public UCommonUserWidget	
	{
	public:
		URichTextBlock* Text_LeagueName; // 0x2D8(0x8)
		UCommonTextBlock* Text_Division; // 0x2E0(0x8)
		UFortLazyImage* Image_CurrentDivision; // 0x2E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortArenaLoadingScreen");
			return ret;
		}

		void UpdateBackground(int32_t DivisionRank); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDPointCounter
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UFortHUDPointCounter : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x2D8(0x10) UNKNOWN PROPERTY
		UCommonTextBlock* Text_ScoreValue; // 0x2E8(0x8)
		UTextBlock* Text_DebugId; // 0x2F0(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x2F8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDPointCounter");
			return ret;
		}

		void OnPointTextSet(bool bHasScore); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortHUDScoringAlert
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x408 - 0x318)
	class UFortHUDScoringAlert : public UFortHUDElementWidget	
	{
	public:
		FText PointGainFormat; // 0x318(0x10)
		unsigned char UnknownData00_6[0x90]; // 0x328(0x90) UNKNOWN PROPERTY
		UFortHUDPointCounter* HUDPointCounter; // 0x3B8(0x8)
		UCommonTextBlock* Text_ScoreDesc; // 0x3C0(0x8)
		UCommonTextBlock* Text_PointCount; // 0x3C8(0x8)
		UCommonLazyImage* Icon_Scoring; // 0x3D0(0x8)
		UClass* AbandonMatchClass; // 0x3D8(0x8)
		unsigned char UnknownData01_7[0x28]; // 0x3E0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDScoringAlert");
			return ret;
		}

		void OnTournamentStatUpdate(FFortTournamentStatInfo& TournamentStatInfo); // Flags: Final|Native|Protected|HasOutParms, Memory Exec: 0x7FF750354940(relative to base address)
		void OnTeamPlacementChanged(int32_t NewTeamPlacement); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503548C0(relative to base address)
		void OnPointScored(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPlayerPlacementChanged(AFortPlayerStateAthena* Sender, int32_t NewPlayerPlacement); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503547FC(relative to base address)
		void OnPlayerMatchAbandonStateChanged(EMatchAbandonState OldState, EMatchAbandonState NewState); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750354738(relative to base address)
		void OnMinigameCurrentRoundChanged(AFortMinigame* Minigame, int32_t CurrentRound); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354674(relative to base address)
		void HandlePointAnimationFinished(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750354358(relative to base address)
	};


	// Class FortniteUI.FortTournamentDetailsPage
	// Inherited from UFortShowdownDetailView -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x720 - 0x708)
	class UFortTournamentDetailsPage : public UFortShowdownDetailView	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x708(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentDetailsPage");
			return ret;
		}

		void OnHandleBack(bool& bResult); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnActivateScreen(); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleBackClicked(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503541A8(relative to base address)
		TArray FindTournamentScoringRules(FString TournamentSeriesId, FString TournamentId); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750353ECC(relative to base address)
	};


	// Class FortniteUI.FortTournamentLiveGameSessionData
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UFortTournamentLiveGameSessionData : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x28(0x18) UNKNOWN PROPERTY
		TArray<USocialUser*> UserInfo; // 0x40(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentLiveGameSessionData");
			return ret;
		}
	};


	// Class FortniteUI.FortTournamentLiveGameSessionEntry
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortTournamentLiveGameSessionEntry : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13E0(0x8) UNKNOWN PROPERTY
		UCommonTextBlock* Text_PlayerList; // 0x13E8(0x8)
		UCommonTextBlock* Text_GameTimeDuration; // 0x13F0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x13F8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentLiveGameSessionEntry");
			return ret;
		}

		void OnEntrySet(int32_t EntryIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTournamentLiveGames
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA8 (0x498 - 0x3F0)
	class UFortTournamentLiveGames : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x80]; // 0x3F0(0x80) UNKNOWN PROPERTY
		TArray<UFortTournamentLiveGameSessionData*> LiveSessions; // 0x470(0x10)
		UFortTournamentLiveGameSessionData* SelectedGame; // 0x480(0x8)
		UListView* ListView_SessionEntries; // 0x488(0x8)
		UCommonButtonLegacy* Button_WatchGame; // 0x490(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentLiveGames");
			return ret;
		}

		void SetTournamentIds(FString InTournamentId, FString InEventWindowId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750355808(relative to base address)
		void OnViewLiveGames(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503549E8(relative to base address)
		void NotifyNoLiveGames(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyLoadingMoreGames(bool bIsLoading); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTournamentModal
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x568 - 0x560)
	class UFortTournamentModal : public UFortActivatablePanel	
	{
	public:
		UFortTournamentDetailsPage* TournamentDetailsPage; // 0x560(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentModal");
			return ret;
		}

		void OnTournamentSet(FLinearColor LeftColor, FLinearColor RightColor); // Flags: Event|Protected|HasDefaults|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTournamentPayoutThresholdEntry
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortTournamentPayoutThresholdEntry : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_Threshold; // 0x2D8(0x8)
		UCommonTextBlock* Text_Rewards; // 0x2E0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentPayoutThresholdEntry");
			return ret;
		}

		void OnPayoutDataSet(int32_t EntryIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortTournamentPayoutModal
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD0 (0x4C0 - 0x3F0)
	class UFortTournamentPayoutModal : public UCommonActivatableWidget	
	{
	public:
		FDataTableRowHandle TabViewLeftAction; // 0x3F0(0x10)
		FDataTableRowHandle TabViewRightAction; // 0x400(0x10)
		UCommonButtonGroupLegacy* ViewButtonGroup; // 0x410(0x8)
		UCommonTextBlock* Text_TournamentName; // 0x418(0x8)
		UCommonTextBlock* Text_SessionName; // 0x420(0x8)
		UCommonTextBlock* Text_ThresholdTypeLabel; // 0x428(0x8)
		UDynamicEntryBox* DynamicEntryBox_PayoutThresholds; // 0x430(0x8)
		TArray<FTournamentLeaderboardPayoutTableData> LeaderboardsPayoutTableData; // 0x438(0x10)
		UDynamicEntryBox* EntryBox_ViewButtons; // 0x448(0x8)
		UCommonActionWidget* ActionWidget_TabLeft; // 0x450(0x8)
		UCommonActionWidget* ActionWidget_TabRight; // 0x458(0x8)
		TMap<UCommonButtonLegacy*, FRewardsDataIds> TabButtonsToRewardsIds; // 0x460(0x50)
		unsigned char UnknownData00_7[0x10]; // 0x4B0(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentPayoutModal");
			return ret;
		}

		void UpdateEventWindow(FString EventId, FString EventWindowId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503559B0(relative to base address)
		void SetEventWindowId(FString EventId, FString EventWindowId); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF750355064(relative to base address)
		void OnTabVisibilityChange(bool bIsVisible); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NotifyNoPayouts(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void InitializeTabButton(UCommonButtonLegacy* TabButton, FText& TabText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleViewTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354470(relative to base address)
	};


	// Class FortniteUI.FortTournamentPosterViolator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x40 (0x318 - 0x2D8)
	class UFortTournamentPosterViolator : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x2D8(0x28) UNKNOWN PROPERTY
		UCommonWidgetSwitcherLegacy* WidgetSwitcher_EventStateSwitcher; // 0x300(0x8)
		UCommonTextBlock* Text_TimeRemaining; // 0x308(0x8)
		UCommonTextBlock* Text_InformationViolator; // 0x310(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTournamentPosterViolator");
			return ret;
		}

		void OnViolatorStateRefreshed(ETournmentPosterViolatorState NewTimeState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialScreenData
	// Inherited from UDataAsset -> UObject
	// Size: 0x20 (0x50 - 0x30)
	class UFortAthenaTutorialScreenData : public UDataAsset	
	{
	public:
		TArray<FFortAthenaTutorialStepInfo> TutorialSteps; // 0x30(0x10)
		TArray<FFortAthenaTutorialStandaloneStepInfo> StandaloneTutorialSteps; // 0x40(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialScreenData");
			return ret;
		}
	};


	// Class FortniteUI.FortTutorialOverlay
	// Inherited from UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x528 - 0x528)
	class UFortTutorialOverlay : public UCommonActivatablePanelLegacy	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTutorialOverlay");
			return ret;
		}
	};


	// Class FortniteUI.FortTutorialQuestVisibilityWrapper
	// Inherited from UFortBangWrapper_NUI -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x310 - 0x2F0)
	class UFortTutorialQuestVisibilityWrapper : public UFortBangWrapper_NUI	
	{
	public:
		UFortQuestItemDefinition* QuestItemDefinition; // 0x2F0(0x8)
		FDataTableRowHandle QuestObjectiveStat; // 0x2F8(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x308(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTutorialQuestVisibilityWrapper");
			return ret;
		}

		void HandleCurrentQuestsChanged(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354244(relative to base address)
	};


	// Class FortniteUI.FortTutorialWindow
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x560 - 0x560)
	class UFortTutorialWindow : public UFortActivatablePanel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTutorialWindow");
			return ret;
		}
	};


	// Class FortniteUI.TutorialHighlight
	// Inherited from UWidget -> UVisual -> UObject
	// Size: 0x50 (0x1A8 - 0x158)
	class UTutorialHighlight : public UWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x158(0x18) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> CustomHighlightWidget; // 0x170(0x20)
		unsigned char UnknownData01_7[0x18]; // 0x190(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TutorialHighlight");
			return ret;
		}
	};


	// Class FortniteUI.UIKitContextMenuActionContext
	// Inherited from UObject
	// Size: 0x28 (0x50 - 0x28)
	class UUIKitContextMenuActionContext : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x28]; // 0x28(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitContextMenuActionContext");
			return ret;
		}

		void UpdateInteraction(FUIKitContextMenuActionInfo& InActionInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750355AA0(relative to base address)
		void RemoveInteraction(FName InteractionNameID); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354C04(relative to base address)
		void RemoveAllInteractions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF748D7A5E0(relative to base address)
		bool HasInteractionItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354574(relative to base address)
		bool HasAvailableInteractions(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354534(relative to base address)
		TArray GetActionInfos(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354080(relative to base address)
		bool FindInteractionByID(FName InteractionNameID, FUIKitContextMenuActionInfo& OutActionInfo); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750353DAC(relative to base address)
		void AddInteraction(FUIKitContextMenuActionInfo& InActionInfo, FDelegateProperty& InInteractionDelegate); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF748D7A784(relative to base address)
	};


	// Class FortniteUI.UIKitContextMenu
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x3F8 - 0x3F0)
	class UUIKitContextMenu : public UCommonActivatableWidget	
	{
	public:
		UUIKitContextMenuActionContext* ActionContext; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitContextMenu");
			return ret;
		}

		void SetInteractionContext(UUIKitContextMenuActionContext* InContext); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503551EC(relative to base address)
	};


	// Class FortniteUI.UIKitContextMenuActionWrapper
	// Inherited from UObject
	// Size: 0x60 (0x88 - 0x28)
	class UUIKitContextMenuActionWrapper : public UObject	
	{
	public:
		FUIKitContextMenuActionInfo ActionInfo; // 0x28(0x60)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitContextMenuActionWrapper");
			return ret;
		}

		FUIKitContextMenuActionInfo GetActionInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF750354064(relative to base address)
		void ExecuteInteraction(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750353D5C(relative to base address)
	};


	// Class FortniteUI.UIKitContextMenuAnchor
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x308 - 0x2D8)
	class UUIKitContextMenuAnchor : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x2D8(0x20) UNKNOWN PROPERTY
		UMenuAnchor* Anchor; // 0x2F8(0x8)
		UClass* MenuWidgetClass; // 0x300(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitContextMenuAnchor");
			return ret;
		}

		void SetQuickActions(TArray<FUIKitContextMenuActionInfo>& QuickActions); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503556D0(relative to base address)
		UUserWidget HandleGetUserMenuContent(); // Flags: Final|Native|Private, Memory Exec: 0x7FF750354320(relative to base address)
		void ClearQuickActions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74984303C(relative to base address)
		void BP_OnMenuSpawned(UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.UIKitDialogBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x3F0 - 0x3F0)
	class UUIKitDialogBase : public UCommonActivatableWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitDialogBase");
			return ret;
		}
	};


	// Class FortniteUI.FortCTAButton
	// Inherited from UUIKitModularButton -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x13F0 - 0x13A8)
	class UFortCTAButton : public UUIKitModularButton	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x13A8(0x8) UNKNOWN PROPERTY
		FText Text; // 0x13B0(0x10)
		FText SecondaryText; // 0x13C0(0x10)
		bool bAutoUpdateFromInputAction; // 0x13D0(0x1)
		bool bUseNaturalNavigation; // 0x13D1(0x1)
		bool bForceMobileHoveredFromFocus; // 0x13D2(0x1)
		unsigned char UnknownData01_6[0x5]; // 0x13D3(0x5) UNKNOWN PROPERTY
		FMulticastInlineDelegate OnButtonCTAPressed; // 0x13D8(0x10)
		unsigned char UnknownData02_7[0x8]; // 0x13E8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortCTAButton");
			return ret;
		}

		void SetUseNaturalNavigation(bool bInUseNaturalNavigation); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503558F8(relative to base address)
		void SetText(FText& ButtonText); // Flags: Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7472A3C60(relative to base address)
		void SetSecondaryText(FText& ButtonSecondaryText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7472A3BA4(relative to base address)
		void SetAutoUpdateFromInputAction(bool bInAutoUpdateFromInputAction); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354E48(relative to base address)
		void BP_SetText(FText& ButtonText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_SetSecondaryText(FText& ButtonSecondaryText); // Flags: Event|Protected|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnInputActionUpdated(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.UIKitGridPanel
	// Inherited from UGridPanel -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x88 (0x228 - 0x1A0)
	class UUIKitGridPanel : public UGridPanel	
	{
	public:
		FUserWidgetPool EntryWidgetPool; // 0x1A0(0x88)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitGridPanel");
			return ret;
		}

		int32_t RemoveChildrenFromGrid(int32_t InRow, int32_t InColumn); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354B44(relative to base address)
		UGridSlot CreateChildOnGrid(UClass* WidgetClass, int32_t InRow, int32_t InColumn); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF750353B38(relative to base address)
	};


	// Class FortniteUI.UIKitEditableText
	// Inherited from UEditableText -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x480 - 0x478)
	class UUIKitEditableText : public UEditableText	
	{
	public:
		float MobileFontSizeMultiplier; // 0x478(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x47C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitEditableText");
			return ret;
		}

		void SetMobileFontSizeMultiplier(float InMobileFontSizeMultiplier); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750078450(relative to base address)
		float GetMobileFontSizeMultiplier(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75007672C(relative to base address)
		UMaterialInstanceDynamic GetDynamicFontMaterial(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74842813C(relative to base address)
	};


	// Class FortniteUI.UIKitContextMenuViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UUIKitContextMenuViewModel : public UMVVMViewModelBase	
	{
	public:
		TArray<UUIKitContextMenuActionWrapper*> Actions; // 0x68(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitContextMenuViewModel");
			return ret;
		}
	};


	// Class FortniteUI.UIKitDialogButtonViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x40 (0xA8 - 0x68)
	class UUIKitDialogButtonViewModel : public UMVVMViewModelBase	
	{
	public:
		FText Text; // 0x68(0x10)
		EFortDialogResult ActionType; // 0x78(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x79(0x7) UNKNOWN PROPERTY
		TWeakObjectPtr<UDataTable*> DataTable; // 0x80(0x20)
		FName InputAction; // 0xA0(0x4)
		unsigned char UnknownData01_7[0x4]; // 0xA4(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitDialogButtonViewModel");
			return ret;
		}
	};


	// Class FortniteUI.UIKitDialogViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x60 (0xC8 - 0x68)
	class UUIKitDialogViewModel : public UMVVMViewModelBase	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x68(0x10) UNKNOWN PROPERTY
		FText DialogTitle; // 0x78(0x10)
		UMaterialInstance* DialogTitleImage; // 0x88(0x8)
		FText DialogInfoText; // 0x90(0x10)
		UTexture2D* DialogImage; // 0xA0(0x8)
		TArray<UUIKitDialogButtonViewModel*> Buttons; // 0xA8(0x10)
		float DisplayTime; // 0xB8(0x4)
		unsigned char UnknownData01_6[0x4]; // 0xBC(0x4) UNKNOWN PROPERTY
		USoundBase* ShowSound; // 0xC0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitDialogViewModel");
			return ret;
		}

		void SetDialogTitleImage(UMaterialInstance* InTitleImage); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354FE4(relative to base address)
		void SetDialogImage(UTexture2D* InImage); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354F64(relative to base address)
		void SendResult(EFortDialogResult Result, FName ResultName); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF750354D84(relative to base address)
	};


	// Class FortniteUI.UIKitTabGroupCategoryViewModel
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UUIKitTabGroupCategoryViewModel : public UMVVMViewModelBase	
	{
	public:
		UUIKitTabGroupButtonViewModel* category; // 0x68(0x8)
		TArray<UUIKitTabGroupButtonViewModel*> Tabs; // 0x70(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.UIKitTabGroupCategoryViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortLetoLayoutBorder
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortLetoLayoutBorder : public UCommonUserWidget	
	{
	public:
		UCommonTextBlock* Text_PlayerName; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLetoLayoutBorder");
			return ret;
		}

		void UpdateBorderWidth(float HalfBorderWidth); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortRootViewportLayout
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x140 (0x418 - 0x2D8)
	class UFortRootViewportLayout : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x2D8(0x20) UNKNOWN PROPERTY
		UClass* WebPurchaseScreenWidgetClass; // 0x2F8(0x8)
		UFortWebPurchaseScreen* WebPurchaseWidget_RuntimeSpawned; // 0x300(0x8)
		UClass* MVVMDialogWidgetClass; // 0x308(0x8)
		UFortUINotificationManager* NotificationManager; // 0x310(0x8)
		TArray<FFortDialogDescription_NUI> ConfirmationQueue; // 0x318(0x10)
		unsigned char UnknownData01_6[0x10]; // 0x328(0x10) UNKNOWN PROPERTY
		UFortUIStateWidget_NUI* CurrentLegacyStateWidget; // 0x338(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x340(0x8) UNKNOWN PROPERTY
		UClass* LetoLayoutBorderClass; // 0x348(0x8)
		TArray<FPluginUIStateWidgetEntry> PluginUIStateWidgetEntries; // 0x350(0x10)
		unsigned char UnknownData03_6[0x50]; // 0x360(0x50) UNKNOWN PROPERTY
		UFortUIStateWidgetBase* CurrentStateWidget; // 0x3B0(0x8)
		USizeBox* StateContentBox; // 0x3B8(0x8)
		UCommonActivatableWidgetQueue* WidgetQueue_ModalContent; // 0x3C0(0x8)
		UAthenaProgressModal* AthenaProgressModal; // 0x3C8(0x8)
		UOverlay* Overlay_Dialog; // 0x3D0(0x8)
		UFortConfirmationWindow* ConfirmationWindow_ConfirmationWidget; // 0x3D8(0x8)
		UFortErrorWindow* ErrorWindow_Errors; // 0x3E0(0x8)
		UAthenaProgressModal* ProgressModal_ControllerDisconnected; // 0x3E8(0x8)
		UFortRestartClientModal* RestartModal; // 0x3F0(0x8)
		UFortPluginWidgetInjectionSlot* CilantroInjection; // 0x3F8(0x8)
		UFortPinModal* PinModal; // 0x400(0x8)
		UFortToastDisplayArea* ToastDisplayArea_ToastHandler; // 0x408(0x8)
		unsigned char UnknownData04_7[0x8]; // 0x410(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRootViewportLayout");
			return ret;
		}

		void PurchasingWidgetDisplayCallback(UWidget* WebWidget, FString OfferId); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750354A6C(relative to base address)
		void PurchasingWidgetDismissedCallback(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF750354A58(relative to base address)
		void HandleControllerConnectionChanged(bool bConnected); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503541C4(relative to base address)
	};


	// Class FortniteUI.FortRootViewportLayout_Athena
	// Inherited from UFortRootViewportLayout -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x430 - 0x418)
	class UFortRootViewportLayout_Athena : public UFortRootViewportLayout	
	{
	public:
		FDataTableRowHandle LetoToggleDormancyAction; // 0x418(0x10)
		unsigned char UnknownData00_7[0x8]; // 0x428(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRootViewportLayout_Athena");
			return ret;
		}
	};


	// Class FortniteUI.FortUIDirector
	// Inherited from UFortUIDirectorSubsystemBase -> UGameInstanceSubsystem -> USubsystem -> UObject
	// Size: 0x38 (0x90 - 0x58)
	class UFortUIDirector : public UFortUIDirectorSubsystemBase	
	{
	public:
		TArray<FLoadedUIManagerEntry> LoadedManagerClassesBySubgame; // 0x58(0x10)
		UFortUIManager* CurrentManager; // 0x68(0x8)
		unsigned char UnknownData00_7[0x20]; // 0x70(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIDirector");
			return ret;
		}
	};


	// Class FortniteUI.FortUIManager
	// Inherited from UObject
	// Size: 0x100 (0x128 - 0x28)
	class UFortUIManager : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x28(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> LayoutClass; // 0x30(0x20)
		bool bUseLegacyInputSystem; // 0x50(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x51(0x7) UNKNOWN PROPERTY
		TArray<FFortRootViewportLayoutInfo> RootViewportLayouts; // 0x58(0x10)
		unsigned char UnknownData02_6[0x8]; // 0x68(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> UIManagerClass; // 0x70(0x20)
		unsigned char UnknownData03_7[0x98]; // 0x90(0x98) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManager");
			return ret;
		}
	};


	// Class FortniteUI.FortUIManagerWidget_NUI
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x118 (0x3F0 - 0x2D8)
	class UFortUIManagerWidget_NUI : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x2D8(0x8) UNKNOWN PROPERTY
		UCommonActivatablePanelLegacy* CurrentModalWidget; // 0x2E0(0x8)
		TArray<UCommonActivatablePanelLegacy*> ModalPanelQueue; // 0x2E8(0x10)
		UClass* PlayerBannedScreen; // 0x2F8(0x8)
		UFortUIStateWidget_NUI* CurrentStateWidget; // 0x300(0x8)
		UFortUINotificationManager* NotificationManager; // 0x308(0x8)
		TMap<UClass*, UUserWidget*> TypedWidgetCache; // 0x310(0x50)
		TArray<FFortDialogDescription_NUI> ConfirmationQueue; // 0x360(0x10)
		unsigned char UnknownData01_6[0x48]; // 0x370(0x48) UNKNOWN PROPERTY
		UNamedSlot* StateContentLayer; // 0x3B8(0x8)
		UNamedSlot* ModalLayer; // 0x3C0(0x8)
		UFortErrorWindow* ErrorWindow_Errors; // 0x3C8(0x8)
		UFortRestartClientModal* RestartModal; // 0x3D0(0x8)
		UFortPinModal* PinModal; // 0x3D8(0x8)
		UFortConfirmationWindow* ConfirmationWindow_ConfirmationWidget; // 0x3E0(0x8)
		UFortProgressModal* ProgressModal_Progress; // 0x3E8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManagerWidget_NUI");
			return ret;
		}

		void UpdateStateWidgetContent(UFortUIStateWidget_NUI* StateWidget); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RequestClearConfirmationLayer(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75037C0E4(relative to base address)
		void OnStateStarted(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnStateEnded(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnModalQueueEmptied(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void NativeClearLayers(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF75037C0D0(relative to base address)
		void KillConfirmationDialog(UObject* WorldContextObject); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75037C058(relative to base address)
		bool IsStateContentChildShowing(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75037C038(relative to base address)
		bool IsShowingModalsConfirmationsErrors(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleErrorWindowDeactivated(UCommonActivatablePanelLegacy* RemovedPanel); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B71C(relative to base address)
		void HandleDeactivatedModal(UCommonActivatablePanelLegacy* DeactivatedPanel); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B69C(relative to base address)
		void HandleConfirmationWindowDeactivated(UCommonActivatablePanelLegacy* DeactivatedPanel); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B61C(relative to base address)
		UFortUINotificationQueue GetUINotificationQueue(UObject* WorldContextObject, EFortNotificationQueueType QueueType); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75037B558(relative to base address)
		UFortUIManagerWidget_NUI GetUIManagerWidget(UObject* WorldContextObject); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75037B458(relative to base address)
		UFortUINotification CreateNotification(UClass* UINotificationClass); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF75037B360(relative to base address)
		EFortUIState _BPGetCurrentUIState(); // Flags: Final|Native|Protected|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF75037C104(relative to base address)
	};


	// Class FortniteUI.FortUIManagerWidget_Campaign
	// Inherited from UFortUIManagerWidget_NUI -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x418 - 0x3F0)
	class UFortUIManagerWidget_Campaign : public UFortUIManagerWidget_NUI	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x3F0(0x10) UNKNOWN PROPERTY
		UFortUINavigationManager* NavigationManager; // 0x400(0x8)
		UTalkingHead* TalkingHead; // 0x408(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x410(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManagerWidget_Campaign");
			return ret;
		}

		UFortUINavigationManager GetUINavigationManager(UObject* WorldContextObject); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF75037B4D8(relative to base address)
		UFortUINavigationManager GetNavigationManager(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74C2D1464(relative to base address)
		void ForceInvalidUIStateUntilNextCinematic(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75037B414(relative to base address)
	};


	// Class FortniteUI.FortUIManager_Athena
	// Inherited from UFortUIManager -> UObject
	// Size: 0x20 (0x148 - 0x128)
	class UFortUIManager_Athena : public UFortUIManager	
	{
	public:
		UClass* LetoHudOverlayClass; // 0x128(0x8)
		ULetoHudOverlay* LetoHudOverlay; // 0x130(0x8)
		float SidekickScreenWidthRatio; // 0x138(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x13C(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManager_Athena");
			return ret;
		}
	};


	// Class FortniteUI.FortUIManager_Campaign
	// Inherited from UFortUIManager -> UObject
	// Size: 0x10 (0x138 - 0x128)
	class UFortUIManager_Campaign : public UFortUIManager	
	{
	public:
		TArray<FFortUIManager_Campaign_Player> InterfaceStack; // 0x128(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManager_Campaign");
			return ret;
		}
	};


	// Class FortniteUI.FortUIManager_STW
	// Inherited from UFortUIManager -> UObject
	// Size: 0x10 (0x138 - 0x128)
	class UFortUIManager_STW : public UFortUIManager	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x128(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManager_STW");
			return ret;
		}
	};


	// Class FortniteUI.FortUIStateWidget_JoinServer
	// Inherited from UFortUIStateWidget_NUI -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x5C8 - 0x5A0)
	class UFortUIStateWidget_JoinServer : public UFortUIStateWidget_NUI	
	{
	public:
		UCommonWidgetStackLegacy* Stack_MainContent; // 0x5A0(0x8)
		FDataTableRowHandle TutorialCompleteStatHandle; // 0x5A8(0x10)
		UClass* RejoinWindowClass; // 0x5B8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x5C0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_JoinServer");
			return ret;
		}

		void OnShowTutorialDialog(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleMatchmakingStateChange(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037BAB4(relative to base address)
		void HandleMatchmakingComplete(EMatchmakingCompleteResult MatchmakingResult); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B9D8(relative to base address)
		void HandleLobbyTimeUpdated(int32_t TimeRemaining); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B958(relative to base address)
		void HandleLobbyDisconnected(); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037B944(relative to base address)
	};


	// Class FortniteUI.TrackedLoginStep
	// Inherited from UObject
	// Size: 0x78 (0xA0 - 0x28)
	class UTrackedLoginStep : public UObject	
	{
	public:
		unsigned char UnknownData00_1[0x78]; // 0x28(0x78) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.TrackedLoginStep");
			return ret;
		}
	};


	// Class FortniteUI.LoginStepHangTracker
	// Inherited from UObject
	// Size: 0x50 (0x78 - 0x28)
	class ULoginStepHangTracker : public UObject	
	{
	public:
		unsigned char UnknownData00_3[0x20]; // 0x28(0x20) UNKNOWN PROPERTY
		TArray<FLoginStepHangLimitDefinition> StepHangLimits; // 0x48(0x10)
		double DefaultHangLimitSec; // 0x58(0x8)
		TArray<UTrackedLoginStep*> TrackedSteps; // 0x60(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x70(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.LoginStepHangTracker");
			return ret;
		}
	};


	// Class FortniteUI.FortUIStateWidget_Login
	// Inherited from UFortUIStateWidgetBase -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x148 (0x550 - 0x408)
	class UFortUIStateWidget_Login : public UFortUIStateWidgetBase	
	{
	public:
		unsigned char UnknownData00_3[0xB0]; // 0x408(0xB0) UNKNOWN PROPERTY
		ULoginStepHangTracker* LoginStepHangTracker; // 0x4B8(0x8)
		UCommonButtonLegacy* Button_Cancel; // 0x4C0(0x8)
		UUserWidget* ActionBar_Bottom; // 0x4C8(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_Background; // 0x4D0(0x8)
		UWidget* Overlay_DefaultBackground; // 0x4D8(0x8)
		UWidget* Overlay_RedesignBackground; // 0x4E0(0x8)
		UCommonActivatableWidgetSwitcher* Switcher_ScreenContents; // 0x4E8(0x8)
		UFortSafeZoneEditor* Editor_SafeZone; // 0x4F0(0x8)
		unsigned char UnknownData01_6[0x8]; // 0x4F8(0x8) UNKNOWN PROPERTY
		UFortLoginStatus* Status_LoginInfo; // 0x500(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x508(0x8) UNKNOWN PROPERTY
		UFortSplashScreenWidget* Splash_Screen; // 0x510(0x8)
		unsigned char UnknownData03_6[0x8]; // 0x518(0x8) UNKNOWN PROPERTY
		UFortLoginInteractions* Login_Interactions; // 0x520(0x8)
		unsigned char UnknownData04_6[0x8]; // 0x528(0x8) UNKNOWN PROPERTY
		UHealthWarningScreen* HealthWarningScreen_HealthInfo; // 0x530(0x8)
		unsigned char UnknownData05_6[0x8]; // 0x538(0x8) UNKNOWN PROPERTY
		UFortQualityLevelSelectScreen* QualityLevelSelectScreen_SelectInfo; // 0x540(0x8)
		unsigned char UnknownData06_6[0x4]; // 0x548(0x4) UNKNOWN PROPERTY
		bool bShowQuitButtonOnXbox; // 0x54C(0x1)
		unsigned char UnknownData07_7[0x3]; // 0x54D(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_Login");
			return ret;
		}

		void SetKeyArtVisibility(int32_t NewActiveWidgetIndex); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortUIStateWidget_SubgameSelect
	// Inherited from UFortUIStateWidget_NUI -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x5A8 - 0x5A0)
	class UFortUIStateWidget_SubgameSelect : public UFortUIStateWidget_NUI	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x5A0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_SubgameSelect");
			return ret;
		}

		void HandleSubGameChanged(ESubGame NewSubGame); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037BEB8(relative to base address)
	};


	// Class FortniteUI.FortUIManager_Startup
	// Inherited from UFortUIManager -> UObject
	// Size: 0x0 (0x128 - 0x128)
	class UFortUIManager_Startup : public UFortUIManager	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIManager_Startup");
			return ret;
		}
	};


	// Class FortniteUI.AthenaVariantPickerConfig
	// Inherited from UDataAsset -> UObject
	// Size: 0x50 (0x80 - 0x30)
	class UAthenaVariantPickerConfig : public UDataAsset	
	{
	public:
		TMap<FGameplayTag, FFortVariantFilterSet> FilterSets; // 0x30(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaVariantPickerConfig");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantEditorWidgetBase
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x3B0 - 0x2D8)
	class UFortVariantEditorWidgetBase : public UCommonUserWidget	
	{
	public:
		UWidget* LogicalOuter; // 0x2D8(0x8)
		unsigned char UnknownData00_7[0xD0]; // 0x2E0(0xD0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantEditorWidgetBase");
			return ret;
		}
	};


	// Class FortniteUI.FortFloatSliderVariantPicker
	// Inherited from UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x3E0 - 0x3B0)
	class UFortFloatSliderVariantPicker : public UFortVariantEditorWidgetBase	
	{
	public:
		float CommitDelay; // 0x3B0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3B4(0x4) UNKNOWN PROPERTY
		UFortCosmeticFloatSliderVariant* FloatVariant; // 0x3B8(0x8)
		UCommonTextBlock* Text_VariantName; // 0x3C0(0x8)
		UCommonTextBlock* Text_Value; // 0x3C8(0x8)
		UAnalogSlider* Slider_Value; // 0x3D0(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x3D8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFloatSliderVariantPicker");
			return ret;
		}

		void OnUpdateValue(float NormalizedValue, bool bIsLocked); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleSliderValueChanged(float Value); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75037BE38(relative to base address)
	};


	// Class FortniteUI.FortVariantEntryBox
	// Inherited from UDynamicEntryBox -> UDynamicEntryBoxBase -> UWidget -> UVisual -> UObject
	// Size: 0x160 (0x3A0 - 0x240)
	class UFortVariantEntryBox : public UDynamicEntryBox	
	{
	public:
		UAthenaCosmeticAccountItem* CurrentItem; // 0x240(0x8)
		UAthenaCosmeticItemDefinition* CurrentItemDef; // 0x248(0x8)
		TArray<FMcpVariantChannelInfo> CurrentItemVariants; // 0x250(0x10)
		TMap<FGameplayTag, UFortVariantEditorWidgetBase*> ChannelWidgets; // 0x260(0x50)
		unsigned char UnknownData00_7[0xF0]; // 0x2B0(0xF0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantEntryBox");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantTileSelector
	// Inherited from UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3D0 - 0x3B0)
	class UFortVariantTileSelector : public UFortVariantEditorWidgetBase	
	{
	public:
		UCommonTileView* TileView_VariantOptions; // 0x3B0(0x8)
		UCommonTextBlock* Text_VariantName; // 0x3B8(0x8)
		UVariantObject* CurrentSelectedVariant; // 0x3C0(0x8)
		bool bHandleMouseButtonDownEvent; // 0x3C8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0x3C9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantTileSelector");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantItemTexturePicker
	// Inherited from UFortVariantTileSelector -> UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xF0 (0x4C0 - 0x3D0)
	class UFortVariantItemTexturePicker : public UFortVariantTileSelector	
	{
	public:
		UAthenaCosmeticItemDefinition* CachedItemDef; // 0x3D0(0x8)
		unsigned char UnknownData00_6[0x18]; // 0x3D8(0x18) UNKNOWN PROPERTY
		UFortCosmeticVariant* CachedCosmeticVariant; // 0x3F0(0x8)
		TArray<UItemDefinitionBase*> AdditionalPreviewStyles; // 0x3F8(0x10)
		unsigned char UnknownData01_7[0xB8]; // 0x408(0xB8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantItemTexturePicker");
			return ret;
		}

		void OnToggleAllItemsArchivedMessage(bool bDisplay); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortVariantNumericalPicker
	// Inherited from UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x48 (0x3F8 - 0x3B0)
	class UFortVariantNumericalPicker : public UFortVariantEditorWidgetBase	
	{
	public:
		int32_t MinNum; // 0x3B0(0x4)
		int32_t MaxNum; // 0x3B4(0x4)
		int32_t NumericDelta; // 0x3B8(0x4)
		int32_t CurrentNumber; // 0x3BC(0x4)
		UFortCosmeticNumericalVariant* NumericalVariant; // 0x3C0(0x8)
		UCommonButtonLegacy* Button_ZeroDigitUp; // 0x3C8(0x8)
		UCommonButtonLegacy* Button_ZeroDigitDown; // 0x3D0(0x8)
		UCommonButtonLegacy* Button_TenDigitUp; // 0x3D8(0x8)
		UCommonButtonLegacy* Button_TenDigitDown; // 0x3E0(0x8)
		UCommonTextBlock* Text_NumericalValue; // 0x3E8(0x8)
		UCommonTextBlock* Text_VariantName; // 0x3F0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantNumericalPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantFilterTab
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x1480 - 0x13E0)
	class UFortVariantFilterTab : public UCommonButtonLegacy	
	{
	public:
		FFortVariantFilterTabInfo TabInfo; // 0x13E0(0x78)
		unsigned char UnknownData00_6[0x10]; // 0x1458(0x10) UNKNOWN PROPERTY
		UFortLazyImage* LazyImage_Icon; // 0x1468(0x8)
		UCommonTextBlock* TextBlock_Label; // 0x1470(0x8)
		unsigned char UnknownData01_7[0x8]; // 0x1478(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantFilterTab");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantPicker
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1C0 (0x5B0 - 0x3F0)
	class UFortVariantPicker : public UCommonActivatableWidget	
	{
	public:
		bool bShowCapeRestriction; // 0x3F0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x3F1(0x7) UNKNOWN PROPERTY
		UAthenaVariantPickerConfig* ConfigurationData; // 0x3F8(0x8)
		FDataTableRowHandle PrimaryTabLeftAction; // 0x400(0x10)
		FDataTableRowHandle PrimaryTabRightAction; // 0x410(0x10)
		FDataTableRowHandle SecondaryTabLeftAction; // 0x420(0x10)
		FDataTableRowHandle SecondaryTabRightAction; // 0x430(0x10)
		UScrollBox* ScrollBox_Variants; // 0x440(0x8)
		UFortVariantEntryBox* EntryBox_VariantOptions; // 0x448(0x8)
		UFortVariantEntryBox* EntryBox_VariantOptions_NoScroll; // 0x450(0x8)
		UCommonTextBlock* Text_NoCapes; // 0x458(0x8)
		UWidget* Container_Tabs; // 0x460(0x8)
		UHorizontalBox* HBox_PrimaryTabNav; // 0x468(0x8)
		UCommonTextBlock* Text_PrimaryFilter; // 0x470(0x8)
		UDynamicEntryBox* EntryBox_PrimaryTabs; // 0x478(0x8)
		UCommonActionWidget* ActionWidget_PrimaryTabLeft; // 0x480(0x8)
		UCommonActionWidget* ActionWidget_PrimaryTabRight; // 0x488(0x8)
		UCommonButtonGroupLegacy* PrimaryTabButtonGroup; // 0x490(0x8)
		UWidget* Container_SecondaryTabs; // 0x498(0x8)
		UCommonTextBlock* Text_SecondaryFilter; // 0x4A0(0x8)
		UDynamicEntryBox* EntryBox_SecondaryTabs; // 0x4A8(0x8)
		UCommonActionWidget* ActionWidget_SecondaryTabLeft; // 0x4B0(0x8)
		UCommonActionWidget* ActionWidget_SecondaryTabRight; // 0x4B8(0x8)
		UCommonButtonGroupLegacy* SecondaryTabButtonGroup; // 0x4C0(0x8)
		FFortVariantFilterContext FilterContext; // 0x4C8(0x30)
		UAthenaCosmeticItemDefinition* CustomizingItemDef; // 0x4F8(0x8)
		unsigned char UnknownData01_7[0xB0]; // 0x500(0xB0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantPicker");
			return ret;
		}

		void InitFromCosmeticItemDef(UAthenaCosmeticItemDefinition* InCosmeticItemDef); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75037BFB8(relative to base address)
		void InitFromCosmeticItem(UAthenaCosmeticAccountItem* InCosmeticItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF75037BF38(relative to base address)
		void HandleSecondaryTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037BD4C(relative to base address)
		void HandlePrimaryTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx); // Flags: Final|Native|Private, Memory Exec: 0x7FF75037BBA0(relative to base address)
		void Campaign_HandleSecondaryTabRight(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75037B2DC(relative to base address)
		void Campaign_HandleSecondaryTabLeft(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75037B258(relative to base address)
		void Campaign_HandlePrimaryTabRight(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75037B1D4(relative to base address)
		void Campaign_HandlePrimaryTabLeft(bool& bPassThrough); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF75037B150(relative to base address)
	};


	// Class FortniteUI.VariantObject
	// Inherited from UObject
	// Size: 0x48 (0x70 - 0x28)
	class UVariantObject : public UObject	
	{
	public:
		FGameplayTag VariantChannel; // 0x28(0x4)
		FGameplayTag VariantTag; // 0x2C(0x4)
		FString VariantCustomData; // 0x30(0x10)
		bool bOwned; // 0x40(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x41(0x7) UNKNOWN PROPERTY
		UAthenaCosmeticItemDefinition* CosmeticDef; // 0x48(0x8)
		unsigned char UnknownData01_7[0x20]; // 0x50(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.VariantObject");
			return ret;
		}
	};


	// Class FortniteUI.FortRichColorVariantListObject
	// Inherited from UVariantObject -> UObject
	// Size: 0x10 (0x80 - 0x70)
	class UFortRichColorVariantListObject : public UVariantObject	
	{
	public:
		FText ColorName; // 0x70(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortRichColorVariantListObject");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantSelector
	// Inherited from UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x3D8 - 0x3B0)
	class UFortVariantSelector : public UFortVariantEditorWidgetBase	
	{
	public:
		UDynamicEntryBox* EntryBox_VariantOptions; // 0x3B0(0x8)
		UCommonTextBlock* Text_VariantName; // 0x3B8(0x8)
		UVariantObject* CurrentSelectedVariant; // 0x3C0(0x8)
		UCommonButtonGroupLegacy* Tile_ButtonGroup; // 0x3C8(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x3D0(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantSelector");
			return ret;
		}

		void HandleItemSelected(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75037B880(relative to base address)
		void HandleItemHovered(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex); // Flags: Final|Native|Protected, Memory Exec: 0x7FF75037B79C(relative to base address)
	};


	// Class FortniteUI.FortVariantRichColorPicker
	// Inherited from UFortVariantSelector -> UFortVariantEditorWidgetBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x3F8 - 0x3D8)
	class UFortVariantRichColorPicker : public UFortVariantSelector	
	{
	public:
		UFortCosmeticRichColorVariant* CachedCosmeticVariant; // 0x3D8(0x8)
		UAthenaCosmeticItemDefinition* ItemDef; // 0x3E0(0x8)
		TArray<UCustomColorSwatch*> ColorSwatches; // 0x3E8(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantRichColorPicker");
			return ret;
		}
	};


	// Class FortniteUI.FortVariantTileButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x1480 - 0x13E0)
	class UFortVariantTileButton : public UCommonButtonLegacy	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x13E0(0x10) UNKNOWN PROPERTY
		FLinearColor LockedTintColor; // 0x13F0(0x10)
		FName IconParamName; // 0x1400(0x4)
		unsigned char UnknownData01_6[0x4]; // 0x1404(0x4) UNKNOWN PROPERTY
		TWeakObjectPtr<UMaterialInstance*> VariantMateral; // 0x1408(0x20)
		TWeakObjectPtr<UTexture2D*> ExplicitlyNoneIcon; // 0x1428(0x20)
		UImage* Image_VariantDisplay; // 0x1448(0x8)
		UImage* Image_Locked; // 0x1450(0x8)
		UOverlay* Overlay_Conflict; // 0x1458(0x8)
		UImage* Image_Active; // 0x1460(0x8)
		UVariantObject* AssociatedVariant; // 0x1468(0x8)
		UFortApplyVarianceToInterfaceMaterialFlow* MaterialVarianceFlowUI; // 0x1470(0x8)
		unsigned char UnknownData02_7[0x8]; // 0x1478(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVariantTileButton");
			return ret;
		}

		void UpdateConflictStatus(bool bIsConflicting, FText& ConflictReason); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnSetEquippedState(bool bIsEquiped); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemDetailsVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x298 (0x300 - 0x68)
	class UFortItemDetailsVM : public UMVVMViewModelBase	
	{
	public:
		UFortItemVM* Item; // 0x68(0x8)
		bool bIsCompatibleWithActiveProduct; // 0x70(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x71(0x7) UNKNOWN PROPERTY
		FText AccessRestrictionDescription; // 0x78(0x10)
		bool bHasAccessRestriction; // 0x88(0x1)
		EItemAccessRestriction AccessRestrictionType; // 0x89(0x1)
		bool bIsAgeGated; // 0x8A(0x1)
		unsigned char UnknownData01_6[0x1]; // 0x8B(0x1) UNKNOWN PROPERTY
		bool bShouldShowRarity; // 0x8C(0x1)
		unsigned char UnknownData02_6[0x3]; // 0x8D(0x3) UNKNOWN PROPERTY
		FText RarityDisplayText; // 0x90(0x10)
		FFortColorPalette RarityColorPalette; // 0xA0(0x50)
		bool bIsSeriesItem; // 0xF0(0x1)
		bool bIsCrossStyle; // 0xF1(0x1)
		bool bMoreDetailedFigureIncoming; // 0xF2(0x1)
		unsigned char UnknownData03_6[0x5]; // 0xF3(0x5) UNKNOWN PROPERTY
		TWeakObjectPtr<UMaterialInterface*> SeriesItemCardMaterial; // 0xF8(0x20)
		TWeakObjectPtr<UMaterialInterface*> SeriesBackgroundMaterial; // 0x118(0x20)
		TWeakObjectPtr<UTexture2D*> SeriesBackgroundTexture; // 0x138(0x20)
		TWeakObjectPtr<UTexture2D*> InactivePreviewImage; // 0x158(0x20)
		TWeakObjectPtr<UTexture2D*> WidePreviewImage; // 0x178(0x20)
		TWeakObjectPtr<UTexture2D*> SmallPreviewImage; // 0x198(0x20)
		TWeakObjectPtr<UTexture2D*> LargePreviewImage; // 0x1B8(0x20)
		bool bShouldShowClass; // 0x1D8(0x1)
		unsigned char UnknownData04_6[0x7]; // 0x1D9(0x7) UNKNOWN PROPERTY
		FSlateBrush ClassIcon; // 0x1E0(0xB0)
		FText UnlockRequirements; // 0x290(0x10)
		FText DirectAquisitionStyleDisclaimerOverride; // 0x2A0(0x10)
		FText DisplayName; // 0x2B0(0x10)
		FText ItemDescription; // 0x2C0(0x10)
		FText ItemShortDescription; // 0x2D0(0x10)
		FText ItemRichDescription; // 0x2E0(0x10)
		FText ItemCategoryName; // 0x2F0(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDetailsVM");
			return ret;
		}

		FText GetItemStyleText(); // Flags: RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B1B094(relative to base address)
	};


	// Class FortniteUI.AthenaBannerItemDetailsVM
	// Inherited from UFortItemDetailsVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x300 - 0x300)
	class UAthenaBannerItemDetailsVM : public UFortItemDetailsVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBannerItemDetailsVM");
			return ret;
		}
	};


	// Class FortniteUI.FortItemVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0xA8 (0x110 - 0x68)
	class UFortItemVM : public UMVVMViewModelBase	
	{
	public:
		unsigned char UnknownData00_3[0x28]; // 0x68(0x28) UNKNOWN PROPERTY
		AFortPlayerController* PlayerController; // 0x90(0x8)
		UFortLockerCategoryConfig* category; // 0x98(0x8)
		UFortItemDetailsVM* ItemDetails; // 0xA0(0x8)
		UFortItem* ItemInstance; // 0xA8(0x8)
		UFortItemDefinition* ItemDefinition; // 0xB0(0x8)
		TMap<FGameplayTag, UFortItemDefinition*> ProductItemDefinitions; // 0xB8(0x50)
		bool bIsOwned : 1; // 0x108:0(0x1)
		bool bIsFavorite : 1; // 0x108:1(0x1)
		bool bCanFavorite : 1; // 0x108:2(0x1)
		bool bIsArchived : 1; // 0x108:3(0x1)
		bool bCanArchive : 1; // 0x108:4(0x1)
		bool bHasBeenSeen : 1; // 0x108:5(0x1)
		bool bIsSubscriptionTemporary : 1; // 0x108:6(0x1)
		bool bCanEquip : 1; // 0x108:7(0x1)
		bool bIsEquipped : 1; // 0x109:0(0x1)
		bool bIsEnhanced : 1; // 0x109:1(0x1)
		bool bHasVariants : 1; // 0x109:2(0x1)
		bool bIsExclusive : 1; // 0x109:3(0x1)
		bool bIsShuffleTile : 1; // 0x109:4(0x1)
		bool bIsValid : 1; // 0x109:5(0x1)
		bool bIsMarked : 1; // 0x109:6(0x1)
		bool bIsLocked : 1; // 0x109:7(0x1)
		unsigned char UnknownData01_7[0x6]; // 0x10A(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemVM");
			return ret;
		}

		bool IsItemVisible(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495DE564(relative to base address)
		bool IsItemNew(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8770(relative to base address)
		FString GetItemTemplateId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7F44(relative to base address)
		UFortLockerCategoryConfig GetItemCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B40548(relative to base address)
		bool GetIsJunoItem(); // Flags: Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7AF8(relative to base address)
		TArray GetEquippedSlots(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A790C(relative to base address)
		FGameplayTag GetCurrentProduct(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7864(relative to base address)
		TSet GetCompatibleProducts(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749990E2C(relative to base address)
	};


	// Class FortniteUI.AthenaBannerItemVM
	// Inherited from UFortItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x118 - 0x110)
	class UAthenaBannerItemVM : public UFortItemVM	
	{
	public:
		FName IconId; // 0x110(0x4)
		FName ColorId; // 0x114(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBannerItemVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBannerLockerCategoryConfig
	// Inherited from UFortLockerCategoryConfig -> UDataAsset -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UAthenaBannerLockerCategoryConfig : public UFortLockerCategoryConfig	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBannerLockerCategoryConfig");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerCategoryVM
	// Inherited from UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x198 (0x220 - 0x88)
	class UFortLockerCategoryVM : public UFortBatchViewModel	
	{
	public:
		int32_t Prority; // 0x88(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x8C(0x4) UNKNOWN PROPERTY
		UFortLockerCategoryConfig* Config; // 0x90(0x8)
		int32_t NewItemsInCategoryCount; // 0x98(0x4)
		int32_t GatedItemsInCategoryCount; // 0x9C(0x4)
		int32_t ArchivedItemsInCategoryCount; // 0xA0(0x4)
		int32_t NonArchivedItemsInCategoryCount; // 0xA4(0x4)
		TMap<FString, bool> PendingFavoriteItems; // 0xA8(0x50)
		TMap<FString, bool> PendingArchivedItems; // 0xF8(0x50)
		TSet<FString> PendingSeenItems; // 0x148(0x50)
		TMap<FPrimaryAssetId, UFortItemVM*> AllItemsInCategory; // 0x198(0x50)
		TArray<UFortLockerCategoryItemVM*> EquippedItems; // 0x1E8(0x10)
		unsigned char UnknownData01_7[0x28]; // 0x1F8(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerCategoryVM");
			return ret;
		}

		void ToggleItemFavorite(UFortItemVM* Item); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D04D108(relative to base address)
		void ToggleItemArchived(UFortItemVM* Item); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74C349130(relative to base address)
		void MarkItemAsSeen(UFortItemVM* Item); // Flags: Native|Public|BlueprintCallable, Memory Exec: 0x7FF74D099234(relative to base address)
		int32_t GetItemsInCategoryCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7F60(relative to base address)
		UFortLockerCategoryConfig GetConfig(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7488CD12C(relative to base address)
		bool GetAreAnyItemsNotArchived(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A76B4(relative to base address)
		bool GetAreAnyItemsNew(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7690(relative to base address)
		bool GetAreAnyItemsGated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7654(relative to base address)
		bool GetAreAnyItemsArchived(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A75E0(relative to base address)
	};


	// Class FortniteUI.AthenaBannerLockerCategoryVM
	// Inherited from UFortLockerCategoryVM -> UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x228 - 0x220)
	class UAthenaBannerLockerCategoryVM : public UFortLockerCategoryVM	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x220(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBannerLockerCategoryVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaItemVM
	// Inherited from UFortItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x110 - 0x110)
	class UAthenaItemVM : public UFortItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBuiltInEmoteItemVM
	// Inherited from UAthenaItemVM -> UFortItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x118 - 0x110)
	class UAthenaBuiltInEmoteItemVM : public UAthenaItemVM	
	{
	public:
		UFortItemVM* OverrideParentItem; // 0x110(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBuiltInEmoteItemVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBuiltInEmoteLockerCategoryConfig
	// Inherited from UFortLockerCategoryConfig -> UDataAsset -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UAthenaBuiltInEmoteLockerCategoryConfig : public UFortLockerCategoryConfig	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBuiltInEmoteLockerCategoryConfig");
			return ret;
		}
	};


	// Class FortniteUI.AthenaBuiltInEmoteLockerCategoryVM
	// Inherited from UFortLockerCategoryVM -> UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x228 - 0x220)
	class UAthenaBuiltInEmoteLockerCategoryVM : public UFortLockerCategoryVM	
	{
	public:
		unsigned char UnknownData00_1[0x8]; // 0x220(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaBuiltInEmoteLockerCategoryVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaItemDetailsVM
	// Inherited from UFortItemDetailsVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x300 - 0x300)
	class UAthenaItemDetailsVM : public UFortItemDetailsVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaItemDetailsVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLockerCategoryConfig
	// Inherited from UFortLockerCategoryConfig -> UDataAsset -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UAthenaLockerCategoryConfig : public UFortLockerCategoryConfig	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerCategoryConfig");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLockerCategoryVM
	// Inherited from UFortLockerCategoryVM -> UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x230 - 0x220)
	class UAthenaLockerCategoryVM : public UFortLockerCategoryVM	
	{
	public:
		unsigned char UnknownData00_1[0x10]; // 0x220(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerCategoryVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLockerCategorySortConfig
	// Inherited from UFortLockerCategorySortConfig -> UFortLockerCategorySortFilterConfig -> UObject
	// Size: 0x10 (0x100 - 0xF0)
	class UAthenaLockerCategorySortConfig : public UFortLockerCategorySortConfig	
	{
	public:
		EInventoryContentSortType SortType; // 0xF0(0x1)
		unsigned char UnknownData00_7[0xF]; // 0xF1(0xF) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerCategorySortConfig");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLockerCategoryFilterConfig
	// Inherited from UFortLockerCategoryFilterConfig -> UFortLockerCategorySortFilterConfig -> UObject
	// Size: 0x8 (0x120 - 0x118)
	class UAthenaLockerCategoryFilterConfig : public UFortLockerCategoryFilterConfig	
	{
	public:
		FName FilterId; // 0x118(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x11C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerCategoryFilterConfig");
			return ret;
		}
	};


	// Class FortniteUI.FortSortFilterItemVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x18 (0x80 - 0x68)
	class UFortSortFilterItemVM : public UMVVMViewModelBase	
	{
	public:
		FText Label; // 0x68(0x10)
		int32_t Count; // 0x78(0x4)
		bool bIsSeparator; // 0x7C(0x1)
		bool bAutoHide; // 0x7D(0x1)
		bool bIsActive; // 0x7E(0x1)
		bool bIsVisible; // 0x7F(0x1)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSortFilterItemVM");
			return ret;
		}

		bool DisplayCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CAF84(relative to base address)
	};


	// Class FortniteUI.FortFilterItemVM
	// Inherited from UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UFortFilterItemVM : public UFortSortFilterItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortFilterItemVM");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerFilterItemVM
	// Inherited from UFortFilterItemVM -> UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x88 - 0x80)
	class UFortLockerFilterItemVM : public UFortFilterItemVM	
	{
	public:
		UFortLockerCategoryFilterConfig* Config; // 0x80(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerFilterItemVM");
			return ret;
		}

		UFortLockerCategoryFilterConfig GetConfig(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E44BC4C(relative to base address)
	};


	// Class FortniteUI.AthenaLockerFilterItemVM
	// Inherited from UFortLockerFilterItemVM -> UFortFilterItemVM -> UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x88 - 0x88)
	class UAthenaLockerFilterItemVM : public UFortLockerFilterItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerFilterItemVM");
			return ret;
		}
	};


	// Class FortniteUI.FortSortFilterSearchTextVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x10 (0x78 - 0x68)
	class UFortSortFilterSearchTextVM : public UMVVMViewModelBase	
	{
	public:
		FText SearchText; // 0x68(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSortFilterSearchTextVM");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerSearchTextVM
	// Inherited from UFortSortFilterSearchTextVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x80 - 0x78)
	class UFortLockerSearchTextVM : public UFortSortFilterSearchTextVM	
	{
	public:
		UFortLockerCategoryVM* CategoryVM; // 0x78(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerSearchTextVM");
			return ret;
		}
	};


	// Class FortniteUI.AthenaLockerSearchTextVM
	// Inherited from UFortLockerSearchTextVM -> UFortSortFilterSearchTextVM -> UMVVMViewModelBase -> UObject
	// Size: 0x50 (0xD0 - 0x80)
	class UAthenaLockerSearchTextVM : public UFortLockerSearchTextVM	
	{
	public:
		TMap<UFortItemVM*, FItemCachedStrings> ItemsStringCache; // 0x80(0x50)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.AthenaLockerSearchTextVM");
			return ret;
		}
	};


	// Class FortniteUI.FortLocalPlayerVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x70 - 0x70)
	class UFortLocalPlayerVM : public UFortPerUserViewModel	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLocalPlayerVM");
			return ret;
		}

		int32_t GetPlayerIndex(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B1FAB8(relative to base address)
		int32_t GetNumLocalPlayers(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B263DC(relative to base address)
	};


	// Class FortniteUI.FortActorUnderReticleVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x78 - 0x70)
	class UFortActorUnderReticleVM : public UFortPerUserViewModel	
	{
	public:
		EActorUnderReticleType ActorUnderReticleType; // 0x70(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x71(0x3) UNKNOWN PROPERTY
		float DistanceToActor; // 0x74(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortActorUnderReticleVM");
			return ret;
		}

		void HandleDistanceToUnderReticleChanged(float InDistanceToActor); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503A8518(relative to base address)
		void HandleActorUnderReticleChanged(AActor* InActorUnderReticle); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503A8498(relative to base address)
	};


	// Class FortniteUI.FortItemShopOfferGroupVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x110 (0x178 - 0x68)
	class UFortItemShopOfferGroupVM : public UMVVMViewModelBase	
	{
	public:
		FString OfferGroupId; // 0x68(0x10)
		EFortItemShopOfferDisplayType DisplayType; // 0x78(0x1)
		bool bUseWidePreview; // 0x79(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x7A(0x6) UNKNOWN PROPERTY
		TArray<UFortItemShopOfferVM*> Offers; // 0x80(0x10)
		FFortItemShopLayout OwningLayout; // 0x90(0x20)
		int32_t CurrentStackRank; // 0xB0(0x4)
		EFortOfferSeenLevel SeenLevel; // 0xB4(0x1)
		unsigned char UnknownData01_6[0x3]; // 0xB5(0x3) UNKNOWN PROPERTY
		TMap<FName, FText> TextMetadata; // 0xB8(0x50)
		TMap<FName, FString> StringMetadata; // 0x108(0x50)
		unsigned char UnknownData02_7[0x20]; // 0x158(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopOfferGroupVM");
			return ret;
		}

		void SendAnalyticsData(int32_t OffersNum); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A957C(relative to base address)
		bool HasOffers(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7A9C(relative to base address)
		FString GetConcatenatedLayout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7824(relative to base address)
	};


	// Class FortniteUI.FortItemShopOfferVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x2E0 (0x348 - 0x68)
	class UFortItemShopOfferVM : public UMVVMViewModelBase	
	{
	public:
		FString OfferId; // 0x68(0x10)
		FText ShortName; // 0x78(0x10)
		FText ShortDescription; // 0x88(0x10)
		FText FullDescription; // 0x98(0x10)
		FText RatingBoardWarning; // 0xA8(0x10)
		int32_t Price; // 0xB8(0x4)
		int32_t RegularPrice; // 0xBC(0x4)
		EItemShopCurrency CurrencyType; // 0xC0(0x1)
		unsigned char UnknownData00_6[0x7]; // 0xC1(0x7) UNKNOWN PROPERTY
		FString CurrencySubType; // 0xC8(0x10)
		EItemShopTileSize TileSize; // 0xD8(0x1)
		EViolatorIntensity ViolatorIntensity; // 0xD9(0x1)
		unsigned char UnknownData01_6[0x6]; // 0xDA(0x6) UNKNOWN PROPERTY
		FText ViolatorText; // 0xE0(0x10)
		FString DisplayAssetPath; // 0xF0(0x10)
		TArray<UFortItemVM*> GrantedItems; // 0x100(0x10)
		TArray<UItemShopPreviewData*> OverridePreviews; // 0x110(0x10)
		int32_t MtxQuantity; // 0x120(0x4)
		unsigned char UnknownData02_6[0x4]; // 0x124(0x4) UNKNOWN PROPERTY
		FFortItemShopOfferMetaDisplayData MetaDisplayData; // 0x128(0x50)
		TArray<FText> TagTexts; // 0x178(0x10)
		TSet<FGameplayTag> CompatibleModes; // 0x188(0x50)
		bool bOwned; // 0x1D8(0x1)
		bool bIsRefundable; // 0x1D9(0x1)
		bool bCanUndoPurchase; // 0x1DA(0x1)
		bool bSuppressRegularPrice; // 0x1DB(0x1)
		unsigned char UnknownData03_6[0x4]; // 0x1DC(0x4) UNKNOWN PROPERTY
		FString OverrideParentOfferTrackingId; // 0x1E0(0x10)
		TArray<FString> Categories; // 0x1F0(0x10)
		int32_t QuantityRemaining; // 0x200(0x4)
		int32_t SortPriority; // 0x204(0x4)
		int32_t MaxLevel; // 0x208(0x4)
		bool bIsLevelBundle; // 0x20C(0x1)
		bool bIsBattlePassOffer; // 0x20D(0x1)
		bool bIsSubscriptionOffer; // 0x20E(0x1)
		bool bIsProgressiveCosmeticOffer; // 0x20F(0x1)
		bool bIsSpecialOffer; // 0x210(0x1)
		bool bShouldShowBattlePassPurchase; // 0x211(0x1)
		bool bIsPresentationLoaded; // 0x212(0x1)
		unsigned char UnknownData04_6[0x5]; // 0x213(0x5) UNKNOWN PROPERTY
		FString LayoutId; // 0x218(0x10)
		FString MetaInfoOfferTag; // 0x228(0x10)
		UAthenaItemShopOfferInfo* OfferInfo; // 0x238(0x8)
		FDateTime InDate; // 0x240(0x8)
		FDateTime OutDate; // 0x248(0x8)
		TArray<FPurchasedItemInfo> CachedRefundedItems; // 0x250(0x10)
		unsigned char UnknownData05_7[0xE8]; // 0x260(0xE8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopOfferVM");
			return ret;
		}

		void UpdateGrantedItemsIsOwned(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9B70(relative to base address)
		void UpdateGrantedItemsEquippedStateAndRestrictions(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9B5C(relative to base address)
		void UndoPurchase(FDelegateProperty& OnUndoPurchaseCompleteCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF7503A9AA4(relative to base address)
		bool ShouldLoadPresentationsOnTileInit(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A97BC(relative to base address)
		void SendOfferInspectedAnalytics(UWidget* View); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7503A95FC(relative to base address)
		void ReleaseResource(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A93DC(relative to base address)
		EOfferPurchaseError PurchaseOffer(int32_t PriceIndex, FDelegateProperty& OnPurchaseCompleteCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF7503A91B8(relative to base address)
		void OnUndoPurchaseComplete__DelegateSignature(bool bSuccess, TArray<FPurchasedItemInfo>& RefundedItems, FString PurchaseId, int32_t MtxReturned); // Flags: Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPresentationsLoadFailed__DelegateSignature(UFortStoreFrontOfferInfo* OfferInfo); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnPresentationsLoaded__DelegateSignature(TArray<FFortItemShopLoadedPresentation>& LoadedPresentations); // Flags: Public|Delegate|HasOutParms, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnBackgroundLoaded__DelegateSignature(UObject* LoadedBackground); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool NeedsPurchaseConfirmationMessage(FText& OutCustomConfirmationMessage); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|Const, Memory Exec: 0x7FF7503A9110(relative to base address)
		void LoadPresentations(FString InDisplayAssetPath, EMcpSubscriptionState SubscriptionState, UMaterialInterface* DefaultMaterial, FDelegateProperty& OnLoadedCallback, FDelegateProperty& OnLoadFailedCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503A8F20(relative to base address)
		bool LoadBackground(FString BackgroundKey, FDelegateProperty& OnLoadedCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503A8AE4(relative to base address)
		bool IsThereAnyItemForCurrentItemShopContext(TArray<UFortItemVM*>& Items); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A89E0(relative to base address)
		bool IsModeDisplayableInCurrentItemShopContext(FGameplayTag ProductTag, bool bOfferHasContentForCurrentContext); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A87FC(relative to base address)
		bool IsLegoKitOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A87D8(relative to base address)
		bool IsLegoDecorOffer(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A87B4(relative to base address)
		bool HasMultiplePrices(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A868C(relative to base address)
		void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems); // Flags: Final|Native|Private|HasOutParms, Memory Exec: 0x7FF7503A8598(relative to base address)
		FString GetOfferTrackingId(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A80F0(relative to base address)
		UFortAccountItemDefinition GetItemDefFromTemplateId(FString TemplateId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7E7C(relative to base address)
		FString GetDisplayAssetName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A78CC(relative to base address)
		EOfferPurchaseError CanPurchaseOffer(int32_t PriceIndex); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A69C0(relative to base address)
		void CancelLoadingPresentations(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6A60(relative to base address)
		void CancelLoadingBackground(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6A4C(relative to base address)
	};


	// Class FortniteUI.FortItemShopSectionVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0xB0 (0x118 - 0x68)
	class UFortItemShopSectionVM : public UMVVMViewModelBase	
	{
	public:
		FString SectionId; // 0x68(0x10)
		FText DisplayName; // 0x78(0x10)
		FText category; // 0x88(0x10)
		FString OwningSectionId; // 0x98(0x10)
		TArray<UFortItemShopSectionVM*> Subsections; // 0xA8(0x10)
		TArray<UFortItemShopOfferGroupVM*> OfferGroups; // 0xB8(0x10)
		FFortItemShopCMSBackground Background; // 0xC8(0x20)
		int32_t CurrentStackRank; // 0xE8(0x4)
		EFortOfferSeenLevel SeenLevel; // 0xEC(0x1)
		unsigned char UnknownData00_6[0x3]; // 0xED(0x3) UNKNOWN PROPERTY
		TArray<UFortItemShopOfferGroupVM*> AllOfferGroupsWithOffers; // 0xF0(0x10)
		unsigned char UnknownData01_7[0x18]; // 0x100(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopSectionVM");
			return ret;
		}

		bool HasOffers(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A86C4(relative to base address)
	};


	// Class FortniteUI.FortItemShopSelectionVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x30 (0xA0 - 0x70)
	class UFortItemShopSelectionVM : public UFortPerUserViewModel	
	{
	public:
		TArray<UItemShopPreviewData*> ItemsToPreview; // 0x70(0x10)
		bool bIsItemPreviewCycleEnabled; // 0x80(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x81(0x7) UNKNOWN PROPERTY
		UItemShopPreviewData* PreviewedItem; // 0x88(0x8)
		UFortItemShopOfferGroupVM* SelectedOfferGroup; // 0x90(0x8)
		EFortItemShopScrollDirection LastScrolledDirection; // 0x98(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x99(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopSelectionVM");
			return ret;
		}
	};


	// Class FortniteUI.FortItemShopVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x170 (0x1E0 - 0x70)
	class UFortItemShopVM : public UFortPerUserViewModel	
	{
	public:
		TArray<UFortItemShopSectionVM*> Sections; // 0x70(0x10)
		TArray<UFortItemShopSectionVM*> SectionsWithOffers; // 0x80(0x10)
		TArray<UFortItemShopOfferGroupVM*> AllOfferGroupsWithOffers; // 0x90(0x10)
		FString FeaturedOfferId; // 0xA0(0x10)
		FFortItemShopLayout FeaturedLayout; // 0xB0(0x20)
		UItemShopPreviewData* PreviewedItem; // 0xD0(0x8)
		FString AffiliateName; // 0xD8(0x10)
		FText ExpectedShopRefreshTimeText; // 0xE8(0x10)
		EFortItemShopLoadingState LoadingState; // 0xF8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0xF9(0x7) UNKNOWN PROPERTY
		FText EmptyShopDevReason; // 0x100(0x10)
		TArray<TWeakObjectPtr> MonitorForUpdatesRequesters; // 0x110(0x10)
		unsigned char UnknownData01_7[0xC0]; // 0x120(0xC0) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemShopVM");
			return ret;
		}

		void UpdateContentOrdering(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9B48(relative to base address)
		void StopMonitoringForUpdates(UObject* RequestingObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A99FC(relative to base address)
		void StartMonitoringForUpdates(UObject* RequestingObject); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A997C(relative to base address)
		void SetHasSeenItemShop(bool bHasSeen); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7503A9714(relative to base address)
		void SaveOfferGroupSeenLevels(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7503A9568(relative to base address)
		void RefreshEmotes(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A92D8(relative to base address)
		void OnBackgroundLoaded__DelegateSignature(UObject* LoadedBackground); // Flags: Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool LoadBackground(FFortItemShopCMSBackground& Background, FDelegateProperty& OnLoadedCallback); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503A8DEC(relative to base address)
		bool IsItemPreviewEnabled(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8790(relative to base address)
		UFortItemShopSectionVM GetSubsection(FString SubsectionId, UFortItemShopSectionVM* ParentSection); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8350(relative to base address)
		UFortItemShopSectionVM GetSection(FString SectionId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8228(relative to base address)
		FFortItemShopCMSBackground GetPreferredBackgroundForLayout(FFortItemShopLayout& InLayout); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8118(relative to base address)
		UFortItemShopOfferGroupVM GetOfferGroupWithOffer(FString OfferId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8050(relative to base address)
		UFortItemShopOfferVM GetOfferFromId(FString OfferId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7F84(relative to base address)
		FGameplayTag GetItemShopContext(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7F0C(relative to base address)
		bool GetHasSeenItemShop(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7AB8(relative to base address)
		UFortItemShopOfferVM GetFirstOfferVMFromLayout(FFortItemShopLayout& InLayout); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A79B0(relative to base address)
		UFortItemShopOfferVM FindParentOffer(UFortItemShopOfferVM* ChildOffer); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A74C4(relative to base address)
		UFortItemShopOfferVM FindOfferByTrackingId(FString OfferTrackingId); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7424(relative to base address)
		void ClearItemShopBang(); // Flags: Final|Native|Public|BlueprintCallable|Const, Memory Exec: 0x7FF7503A6C40(relative to base address)
	};


	// Class FortniteUI.FortItemSelectionVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x48 (0xB8 - 0x70)
	class UFortItemSelectionVM : public UFortPerUserViewModel	
	{
	public:
		float PendingCategoryPreviewDelay; // 0x70(0x4)
		float PendingItemPreviewDelay; // 0x74(0x4)
		UFortLockerCategoryGroupVM* SelectedCategoryGroup; // 0x78(0x8)
		UFortLockerCategoryItemVM* HoveredCategory; // 0x80(0x8)
		UFortItemVM* HoveredItem; // 0x88(0x8)
		UFortLockerCategoryItemVM* SelectedCategory; // 0x90(0x8)
		UFortItemVM* SelectedItem; // 0x98(0x8)
		bool bPreviewCategoryOnHover; // 0xA0(0x1)
		bool bPreviewItemOnHover; // 0xA1(0x1)
		unsigned char UnknownData00_7[0x16]; // 0xA2(0x16) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemSelectionVM");
			return ret;
		}

		void Reset(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9528(relative to base address)
		void RefreshPreviewItem(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9364(relative to base address)
		void RefreshPreviewCategory(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A92EC(relative to base address)
		UFortItemVM GetPreviewItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8200(relative to base address)
		UFortLockerCategoryItemVM GetPreviewCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495843F0(relative to base address)
		void ClearSelectedItem(UFortItemVM* CurrentSelectedItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6CE8(relative to base address)
		void ClearSelectedCategory(UFortLockerCategoryItemVM* CurrentSelectedCategory); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6C54(relative to base address)
		void ClearHoveredItem(UFortItemVM* CurrentHoveredItem); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6BAC(relative to base address)
		void ClearHoveredCategory(UFortLockerCategoryItemVM* CurrentHoveredCategory); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6B18(relative to base address)
	};


	// Class FortniteUI.FortAsyncAction_LockerOperation
	// Inherited from UBlueprintAsyncActionBase -> UObject
	// Size: 0x28 (0x58 - 0x30)
	class UFortAsyncAction_LockerOperation : public UBlueprintAsyncActionBase	
	{
	public:
		FMulticastInlineDelegate OnOperationCompleted; // 0x30(0x10)
		unsigned char UnknownData00_7[0x18]; // 0x40(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAsyncAction_LockerOperation");
			return ret;
		}

		UFortAsyncAction_LockerOperation ShowConfirmationOnEquipIfRequired(UUserWidget* ContextWidget, UFortItemVM* Item, TWeakObjectPtr<UClass*> LockerConfirmationModalClass); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9820(relative to base address)
		UFortAsyncAction_LockerOperation RenameModularLoadout(UUserWidget* ContextWidget, UFortTypedModularLoadoutVM* Target, FString NewName); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A940C(relative to base address)
		void OnOperationCompleted__DelegateSignature(bool Success); // Flags: MulticastDelegate|Public|Delegate, Memory Exec: 0x7FF7471BBE78(relative to base address)
		UFortAsyncAction_LockerOperation EquipModularLoadout(UUserWidget* ContextWidget, UFortTypedModularLoadoutVM* Source); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A72C8(relative to base address)
		UFortAsyncAction_LockerOperation EquipItem(UUserWidget* ContextWidget, UFortItemVM* Item, int32_t SlotIndex, TArray<FMcpVariantChannelInfo>& Variants, bool bApplyToAllSlots, bool bAllowMocking); // Flags: Final|Native|Static|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503A6FE8(relative to base address)
		UFortAsyncAction_LockerOperation DeleteModularLoadout(UUserWidget* ContextWidget, UFortTypedModularLoadoutVM* ModularLoadout); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6F24(relative to base address)
		UFortAsyncAction_LockerOperation CopyModularLoadout(UUserWidget* ContextWidget, UFortTypedModularLoadoutVM* Source, UFortTypedModularLoadoutVM* Destination); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6D7C(relative to base address)
	};


	// Class FortniteUI.FortLockerCategoryGroupVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x48 (0xB0 - 0x68)
	class UFortLockerCategoryGroupVM : public UMVVMViewModelBase	
	{
	public:
		UFortLockerCategoryGroupCollectionVM* CategoryGroupCollection; // 0x68(0x8)
		UFortLockerCategoryGroupConfig* CategoryGroupConfig; // 0x70(0x8)
		UTexture2D* Icon; // 0x78(0x8)
		TArray<UFortLockerCategoryVM*> Categories; // 0x80(0x10)
		TArray<UFortLockerCategoryItemVM*> CategoryItems; // 0x90(0x10)
		int32_t NewItemsInCategoryGroupCount; // 0xA0(0x4)
		int32_t GatedItemsInCategoryGroupCount; // 0xA4(0x4)
		int32_t ArchivedItemsInCategoryGroupCount; // 0xA8(0x4)
		bool bIsActiveArchetype; // 0xAC(0x1)
		unsigned char UnknownData00_7[0x3]; // 0xAD(0x3) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerCategoryGroupVM");
			return ret;
		}

		void SetActiveArchetype(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A9700(relative to base address)
		void RandomizeAllSlots(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A92B0(relative to base address)
		FName GetUniqueName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7493B6620(relative to base address)
		UTexture2D GetIcon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495ED324(relative to base address)
		UFortLockerCategoryItemVM GetFirstCategoryItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749687F90(relative to base address)
		UFortItemVM GetFirstCategoryEquippedItem(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A794C(relative to base address)
		FText GetDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495283B0(relative to base address)
		bool GetAreAnyItemsNew(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7496B49F4(relative to base address)
		bool GetAreAnyItemsGated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7638(relative to base address)
		bool GetAreAnyItemsArchived(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A75C4(relative to base address)
		void ClearAllSlots(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6B04(relative to base address)
		void ClearAllNewItemFlags(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6A74(relative to base address)
		bool CanActivateArchetype(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749FC2390(relative to base address)
	};


	// Class FortniteUI.FortLockerCategoryGroupCollectionVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x48 (0xB0 - 0x68)
	class UFortLockerCategoryGroupCollectionVM : public UMVVMViewModelBase	
	{
	public:
		AFortPlayerController* PlayerController; // 0x68(0x8)
		UFortLockerCategoryGroupCollectionConfig* CollectionConfig; // 0x70(0x8)
		UTexture2D* Icon; // 0x78(0x8)
		TArray<UFortLockerCategoryGroupVM*> CategoryGroups; // 0x80(0x10)
		int32_t NewItemsCount; // 0x90(0x4)
		int32_t GatedItemsCount; // 0x94(0x4)
		int32_t ArchivedItemsCount; // 0x98(0x4)
		bool bIsShuffleArchetype; // 0x9C(0x1)
		unsigned char UnknownData00_7[0x13]; // 0x9D(0x13) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerCategoryGroupCollectionVM");
			return ret;
		}

		void SetShuffleArchetype(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A97A8(relative to base address)
		bool IsArchetype(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7485904A4(relative to base address)
		FName GetUniqueName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7493B6620(relative to base address)
		UTexture2D GetIcon(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7495ED324(relative to base address)
		FText GetDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749814E40(relative to base address)
		bool GetAreAnyItemsNew(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749FA399C(relative to base address)
		bool GetAreAnyItemsGated(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A761C(relative to base address)
		bool GetAreAnyItemsArchived(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A75A8(relative to base address)
		bool CanSetShuffleArchetype(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7485904A4(relative to base address)
	};


	// Class FortniteUI.FortLockerCategoryItemVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x20 (0x88 - 0x68)
	class UFortLockerCategoryItemVM : public UMVVMViewModelBase	
	{
	public:
		UFortLockerCategoryVM* category; // 0x68(0x8)
		UFortItemVM* EquippedItem; // 0x70(0x8)
		int32_t SlotIndex; // 0x78(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x7C(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerCategoryItemVM");
			return ret;
		}

		void RandomizeSlot(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A92C4(relative to base address)
		TWeakObjectPtr GetSmallPreviewImage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74782DA14(relative to base address)
		FFortLockerCategorySlotInfo GetSlotInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74905DAF8(relative to base address)
		bool GetIsEquippable(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7499DA0D0(relative to base address)
		FText GetCategoryDisplayNamePluralWithCount(int32_t Count); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7780(relative to base address)
		FText GetCategoryDisplayNamePlural(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A76F0(relative to base address)
		FText GetCategoryDisplayName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74905D9C0(relative to base address)
		FString GetAnalyticsName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7568(relative to base address)
	};


	// Class FortniteUI.FortLockerFilterItemByTypeConfig
	// Inherited from UFortLockerCategoryFilterConfig -> UFortLockerCategorySortFilterConfig -> UObject
	// Size: 0x8 (0x120 - 0x118)
	class UFortLockerFilterItemByTypeConfig : public UFortLockerCategoryFilterConfig	
	{
	public:
		FPrimaryAssetType AssetType; // 0x118(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x11C(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerFilterItemByTypeConfig");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerFilterItemByTypeVM
	// Inherited from UFortLockerFilterItemVM -> UFortFilterItemVM -> UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x88 - 0x88)
	class UFortLockerFilterItemByTypeVM : public UFortLockerFilterItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerFilterItemByTypeVM");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerEquipUtilityVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x30 (0x98 - 0x68)
	class UFortLockerEquipUtilityVM : public UMVVMViewModelBase	
	{
	public:
		UFortItemVM* Item; // 0x68(0x8)
		TArray<UFortItemVM*> ItemsInOtherCategories; // 0x70(0x10)
		unsigned char UnknownData00_6[0x10]; // 0x80(0x10) UNKNOWN PROPERTY
		bool bIsEquippedInOtherCategory; // 0x90(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x91(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerEquipUtilityVM");
			return ret;
		}

		FText GetItemCategoryNameWithArchetype(UFortItemVM* ItemVM); // Flags: Final|Native|Static|Public|BlueprintCallable, Memory Exec: 0x7FF7503A7B1C(relative to base address)
	};


	// Class FortniteUI.FortSortItemVM
	// Inherited from UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UFortSortItemVM : public UFortSortFilterItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSortItemVM");
			return ret;
		}
	};


	// Class FortniteUI.FortLockerSortItemVM
	// Inherited from UFortSortItemVM -> UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x88 - 0x80)
	class UFortLockerSortItemVM : public UFortSortItemVM	
	{
	public:
		UFortLockerCategorySortConfig* Config; // 0x80(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerSortItemVM");
			return ret;
		}

		UFortLockerCategorySortConfig GetConfig(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF74E44BC4C(relative to base address)
	};


	// Class FortniteUI.FortLockerCategoryFilterVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0xA8 (0x118 - 0x70)
	class UFortLockerCategoryFilterVM : public UFortPerUserViewModel	
	{
	public:
		UFortLockerCategoryVM* category; // 0x70(0x8)
		UFortLockerCategoryItemVM* CategoryItem; // 0x78(0x8)
		UFortSortFilterVM* SortFilter; // 0x80(0x8)
		UFortLockerFilterItemVM* ArchiveFilter; // 0x88(0x8)
		UFortOptionItemVM* HideUnsupportedItemsOption; // 0x90(0x8)
		TArray<UFortItemVM*> FilteredItems; // 0x98(0x10)
		UFortItemVM* FirstValidItem; // 0xA8(0x8)
		UFortItemVM* FirstValidOrEquippedItem; // 0xB0(0x8)
		unsigned char UnknownData00_6[0x34]; // 0xB8(0x34) UNKNOWN PROPERTY
		int32_t ArchivedItemsCount; // 0xEC(0x4)
		bool bHasEquippableItems; // 0xF0(0x1)
		bool bShowArchivedItems; // 0xF1(0x1)
		unsigned char UnknownData01_7[0x26]; // 0xF2(0x26) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerCategoryFilterVM");
			return ret;
		}

		bool IsFiltering(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A86E0(relative to base address)
		void FlushSearchAnalytics(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A7554(relative to base address)
		bool CanManageArchive(bool& bOutIsArchiving); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A6928(relative to base address)
	};


	// Class FortniteUI.FortLockerVM
	// Inherited from UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x88 (0x110 - 0x88)
	class UFortLockerVM : public UFortBatchViewModel	
	{
	public:
		unsigned char UnknownData00_3[0x58]; // 0x88(0x58) UNKNOWN PROPERTY
		TArray<UFortLockerCategoryGroupCollectionVM*> CategoryGroupCollections; // 0xE0(0x10)
		UFortLockerCategoryGroupVM* DefaultCategoryGroup; // 0xF0(0x8)
		bool bAreAnyItemsNew; // 0xF8(0x1)
		bool bAreAnyItemsGated; // 0xF9(0x1)
		unsigned char UnknownData01_7[0x16]; // 0xFA(0x16) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLockerVM");
			return ret;
		}

		UFortLockerCategoryGroupVM FindCategoryGroupByName(FName Name); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7398(relative to base address)
		void ClearAllNewItemFlags(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503A6A88(relative to base address)
	};


	// Class FortniteUI.FortModularLoadoutItemVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x20 (0x88 - 0x68)
	class UFortModularLoadoutItemVM : public UMVVMViewModelBase	
	{
	public:
		UFortItemVM* Item; // 0x68(0x8)
		TArray<FMcpVariantChannelInfo> Variants; // 0x70(0x10)
		int32_t SlotIndex; // 0x80(0x4)
		unsigned char UnknownData00_7[0x4]; // 0x84(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortModularLoadoutItemVM");
			return ret;
		}

		TWeakObjectPtr GetSmallPreviewImage(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A8308(relative to base address)
		FFortLockerCategorySlotInfo GetSlotInfo(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A82C8(relative to base address)
	};


	// Class FortniteUI.FortTypedModularLoadoutVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x88 (0xF0 - 0x68)
	class UFortTypedModularLoadoutVM : public UMVVMViewModelBase	
	{
	public:
		UFortLockerCategoryGroupVM* CategoryGroup; // 0x68(0x8)
		TArray<UFortModularLoadoutItemVM*> LoadoutItems; // 0x70(0x10)
		FString Name; // 0x80(0x10)
		FText AgeGatingDisclaimer; // 0x90(0x10)
		int32_t NumArchived; // 0xA0(0x4)
		bool bContainsAgeGatedItems; // 0xA4(0x1)
		bool bIsValid; // 0xA5(0x1)
		bool bIsShuffle; // 0xA6(0x1)
		bool bIsSaveAsNew; // 0xA7(0x1)
		unsigned char UnknownData00_7[0x48]; // 0xA8(0x48) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTypedModularLoadoutVM");
			return ret;
		}

		UFortModularLoadoutItemVM GetFirstValidItemInAnyCategory(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7A78(relative to base address)
		FText GetDefaultName(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7890(relative to base address)
	};


	// Class FortniteUI.FortTypedModularLoadoutsVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x60 (0xD0 - 0x70)
	class UFortTypedModularLoadoutsVM : public UFortPerUserViewModel	
	{
	public:
		UFortLockerCategoryGroupVM* CategoryGroup; // 0x70(0x8)
		UFortTypedModularLoadoutVM* ActiveLoadout; // 0x78(0x8)
		TArray<UFortTypedModularLoadoutVM*> TypedModularLoadouts; // 0x80(0x10)
		TArray<FFortTypedModularLoadoutsCachedItemCount> CachedItemCounts; // 0x90(0x10)
		UFortTypedModularLoadoutVM* ShuffleLoadout; // 0xA0(0x8)
		UFortTypedModularLoadoutVM* SaveAsNewLoadout; // 0xA8(0x8)
		int32_t ActiveLoadoutsCount; // 0xB0(0x4)
		bool bShuffleEnabled; // 0xB4(0x1)
		unsigned char UnknownData00_7[0x1B]; // 0xB5(0x1B) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTypedModularLoadoutsVM");
			return ret;
		}

		UFortTypedModularLoadoutVM TryGetShuffleLoadout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749B3EE4C(relative to base address)
		UFortTypedModularLoadoutVM TryGetSaveAsNewLoadout(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A9A7C(relative to base address)
		int32_t GetMaxLoadoutCount(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749BC9EE8(relative to base address)
		bool GetHasLoadouts(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503A7A9C(relative to base address)
		bool GetCanEnableShuffle(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF749876500(relative to base address)
	};


	// Class FortniteUI.FortSocialUserNameViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x38 (0xB0 - 0x78)
	class UFortSocialUserNameViewModel : public UFortSocialUserViewModel	
	{
	public:
		FFortSocialUserNamePackage SocialUserNames; // 0x78(0x30)
		EFortSocialPlatformTagDisplayRule PlatformTagDisplayRule; // 0xA8(0x1)
		unsigned char UnknownData00_7[0x7]; // 0xA9(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserNameViewModel");
			return ret;
		}
	};


	// Class FortniteUI.FortSocialUserPartyViewModel
	// Inherited from UFortSocialUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x20 (0x98 - 0x78)
	class UFortSocialUserPartyViewModel : public UFortSocialUserViewModel	
	{
	public:
		bool bIsPartyLeader; // 0x78(0x1)
		bool bCanJoinParty; // 0x79(0x1)
		unsigned char UnknownData00_6[0x6]; // 0x7A(0x6) UNKNOWN PROPERTY
		FText PartyReadiness; // 0x80(0x10)
		int32_t NumPlayersInParty; // 0x90(0x4)
		unsigned char UnknownData01_7[0x4]; // 0x94(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSocialUserPartyViewModel");
			return ret;
		}
	};


	// Class FortniteUI.StWHeroItemVM
	// Inherited from UAthenaItemVM -> UFortItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x110 - 0x110)
	class UStWHeroItemVM : public UAthenaItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWHeroItemVM");
			return ret;
		}
	};


	// Class FortniteUI.StWBackblingItemVM
	// Inherited from UStWHeroItemVM -> UAthenaItemVM -> UFortItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x110 - 0x110)
	class UStWBackblingItemVM : public UStWHeroItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWBackblingItemVM");
			return ret;
		}
	};


	// Class FortniteUI.StWItemDetailsVM
	// Inherited from UAthenaItemDetailsVM -> UFortItemDetailsVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x300 - 0x300)
	class UStWItemDetailsVM : public UAthenaItemDetailsVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWItemDetailsVM");
			return ret;
		}
	};


	// Class FortniteUI.StWHeroLockerCategoryConfig
	// Inherited from UAthenaLockerCategoryConfig -> UFortLockerCategoryConfig -> UDataAsset -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UStWHeroLockerCategoryConfig : public UAthenaLockerCategoryConfig	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWHeroLockerCategoryConfig");
			return ret;
		}
	};


	// Class FortniteUI.StWBackblingLockerCategoryConfig
	// Inherited from UAthenaLockerCategoryConfig -> UFortLockerCategoryConfig -> UDataAsset -> UObject
	// Size: 0x0 (0x198 - 0x198)
	class UStWBackblingLockerCategoryConfig : public UAthenaLockerCategoryConfig	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWBackblingLockerCategoryConfig");
			return ret;
		}
	};


	// Class FortniteUI.StWLockerCategoryVM
	// Inherited from UAthenaLockerCategoryVM -> UFortLockerCategoryVM -> UFortBatchViewModel -> UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x230 - 0x230)
	class UStWLockerCategoryVM : public UAthenaLockerCategoryVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.StWLockerCategoryVM");
			return ret;
		}

		void HandleDifferentHeroLoadoutActivated(UFortMcpProfileCampaign* Profile); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503CB0A4(relative to base address)
	};


	// Class FortniteUI.FortSubscriptionVM
	// Inherited from UFortPerUserViewModel -> UMVVMViewModelBase -> UObject
	// Size: 0x8 (0x78 - 0x70)
	class UFortSubscriptionVM : public UFortPerUserViewModel	
	{
	public:
		EMcpSubscriptionState SubscriptionState; // 0x70(0x1)
		bool bIsSubscriptionOwned; // 0x71(0x1)
		unsigned char UnknownData00_7[0x6]; // 0x72(0x6) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSubscriptionVM");
			return ret;
		}

		void UpdateSubscriptionData(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CC194(relative to base address)
	};


	// Class FortniteUI.FortOptionItemVM
	// Inherited from UFortSortFilterItemVM -> UMVVMViewModelBase -> UObject
	// Size: 0x0 (0x80 - 0x80)
	class UFortOptionItemVM : public UFortSortFilterItemVM	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortOptionItemVM");
			return ret;
		}

		void ToggleActive(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CC0E4(relative to base address)
	};


	// Class FortniteUI.FortSortFilterVM
	// Inherited from UMVVMViewModelBase -> UObject
	// Size: 0x48 (0xB0 - 0x68)
	class UFortSortFilterVM : public UMVVMViewModelBase	
	{
	public:
		TArray<UFortSortItemVM*> SortItems; // 0x68(0x10)
		TArray<UFortFilterItemVM*> FilterItems; // 0x78(0x10)
		TArray<UFortOptionItemVM*> OptionItems; // 0x88(0x10)
		UFortSortFilterSearchTextVM* SearchText; // 0x98(0x8)
		UFortSortItemVM* ActiveSortItem; // 0xA0(0x8)
		UFortFilterItemVM* ActiveFilterItem; // 0xA8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSortFilterVM");
			return ret;
		}

		bool HasSortItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CB514(relative to base address)
		bool HasSearchText(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CB4F8(relative to base address)
		bool HasOptionItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CB4DC(relative to base address)
		bool HasFilterItems(); // Flags: Final|Native|Public|BlueprintCallable|BlueprintPure|Const, Memory Exec: 0x7FF7503CB4C0(relative to base address)
	};


	// Class FortniteUI.WeaponOverheatWidget
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x328 - 0x318)
	class UWeaponOverheatWidget : public UFortHUDElementWidget	
	{
	public:
		UImage* OverheatProgressImage; // 0x318(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x320(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.WeaponOverheatWidget");
			return ret;
		}

		void OnWeaponUnequipped(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503CB728(relative to base address)
		void OnWeaponEquipped(AFortWeapon* CurrentWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503CB66C(relative to base address)
		void OnPawnChanged(); // Flags: Final|Native|Protected, Memory Exec: 0x7FF7503CB630(relative to base address)
	};


	// Class FortniteUI.FortAutoRunNotificationWidget
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2E8 - 0x2D8)
	class UFortAutoRunNotificationWidget : public UCommonUserWidget	
	{
	public:
		float TimeToShowWidget; // 0x2D8(0x4)
		unsigned char UnknownData00_7[0xC]; // 0x2DC(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAutoRunNotificationWidget");
			return ret;
		}

		void OnAutoRunEnabled(bool bAutoRunEnabled); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortChatPanel
	// Inherited from UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x580 - 0x560)
	class UFortChatPanel : public UFortActivatablePanel	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x560(0x8) UNKNOWN PROPERTY
		UFortChatContainer* ChatContainer; // 0x568(0x8)
		unsigned char UnknownData01_7[0x10]; // 0x570(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortChatPanel");
			return ret;
		}

		void OnWidgetIsOnFocusedPathChanged(bool bOnFocusPath); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BP_OnChatRequested(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortComboBox
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortComboBox : public UCommonUserWidget	
	{
	public:
		UComboBoxString* ComboBox; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortComboBox");
			return ret;
		}
	};


	// Class FortniteUI.FortContentOnDemand
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x98 (0x3B0 - 0x318)
	class UFortContentOnDemand : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x318(0x10) UNKNOWN PROPERTY
		float ReEnableSettingDelay; // 0x328(0x4)
		unsigned char UnknownData01_6[0xC]; // 0x32C(0xC) UNKNOWN PROPERTY
		bool bEnabled; // 0x338(0x1)
		bool bWidgetEnabled; // 0x339(0x1)
		unsigned char UnknownData02_6[0x6]; // 0x33A(0x6) UNKNOWN PROPERTY
		int64_t LastReminder; // 0x340(0x8)
		FTimespan TimespanToRemind; // 0x348(0x8)
		bool bSendErrorReports; // 0x350(0x1)
		bool bSendOutOfMemoryErrorReports; // 0x351(0x1)
		unsigned char UnknownData03_6[0x6]; // 0x352(0x6) UNKNOWN PROPERTY
		TArray<EFortGameFeature> GameFeaturesToListenFor_Config; // 0x358(0x10)
		TArray<EFortGameFeature> GameFeaturesToListenFor; // 0x368(0x10)
		TArray<EFortGameFeature> OptionalGameFeaturesToListenFor_Config; // 0x378(0x10)
		TArray<EFortGameFeature> OptionalGameFeaturesToListenFor; // 0x388(0x10)
		TArray<TWeakObjectPtr> ActiveCosmeticDownloads; // 0x398(0x10)
		unsigned char UnknownData04_7[0x8]; // 0x3A8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortContentOnDemand");
			return ret;
		}

		void OnUpdatedState(int32_t NumActiveDownloads, int32_t NumErrors); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortDataDownloadBar
	// Inherited from UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x80 (0x398 - 0x318)
	class UFortDataDownloadBar : public UFortHUDElementWidget	
	{
	public:
		unsigned char UnknownData00_3[0x10]; // 0x318(0x10) UNKNOWN PROPERTY
		bool bWidthCustomScaling; // 0x328(0x1)
		unsigned char UnknownData01_6[0x7]; // 0x329(0x7) UNKNOWN PROPERTY
		UWidget* Container; // 0x330(0x8)
		float BarWidthPercentage; // 0x338(0x4)
		float UpdateScalingRateInSeconds; // 0x33C(0x4)
		float UpdateEstimatedTimeLeftRateInSeconds; // 0x340(0x4)
		bool bBarExpanded; // 0x344(0x1)
		bool bProgressDisplayPaused; // 0x345(0x1)
		unsigned char UnknownData02_6[0x2]; // 0x346(0x2) UNKNOWN PROPERTY
		USizeBox* BarSizeBox; // 0x348(0x8)
		UImage* BarProgressionImage; // 0x350(0x8)
		UCommonTextBlock* BarPercentageNumber; // 0x358(0x8)
		UCommonTextBlock* StatusText; // 0x360(0x8)
		UCommonTextBlock* BarErrorText; // 0x368(0x8)
		UFortEventDateTimeTextBlock* RemainingTimeEstimateText; // 0x370(0x8)
		unsigned char UnknownData03_7[0x20]; // 0x378(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDataDownloadBar");
			return ret;
		}

		void SetStatusText(FText& StatusText); // Flags: Final|Native|Public|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503CBF68(relative to base address)
		void SetRemainingTimeEstimate(FTimespan& RemainingTime); // Flags: Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable, Memory Exec: 0x7FF7503CBE04(relative to base address)
		void SetProgress(float Progress); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CBD84(relative to base address)
		void OnStatusTextChanged(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnExpandClose(bool IsExpanded); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnDownloadCompleted(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ExpandClose(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB020(relative to base address)
		void DisplayErrorAnimation(bool ErrorState); // Flags: Event|Public|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortDynamicEntryBox
	// Inherited from UDynamicEntryBox -> UDynamicEntryBoxBase -> UWidget -> UVisual -> UObject
	// Size: 0x38 (0x278 - 0x240)
	class UFortDynamicEntryBox : public UDynamicEntryBox	
	{
	public:
		int32_t MaximumEntries; // 0x240(0x4)
		EDynamicEntryPatternDirection PatternDirection; // 0x244(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x245(0x3) UNKNOWN PROPERTY
		TArray<float> RenderOpacityPattern; // 0x248(0x10)
		TArray<FWidgetTransform> RenderTransformPattern; // 0x258(0x10)
		TArray<FVector2D> RenderTransformPivotPattern; // 0x268(0x10)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortDynamicEntryBox");
			return ret;
		}
	};


	// Class FortniteUI.FortExtensionWidgetContainer
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x180 (0x430 - 0x2B0)
	class UFortExtensionWidgetContainer : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x178]; // 0x2B0(0x178) UNKNOWN PROPERTY
		EUIExtensionSlot ExtensionSlot; // 0x428(0x1)
		unsigned char UnknownData01_7[0x7]; // 0x429(0x7) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortExtensionWidgetContainer");
			return ret;
		}

		void OnExtensionWidgetCreated(UUserWidget* InUserWidget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortInputField
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x8 (0x2E0 - 0x2D8)
	class UFortInputField : public UCommonUserWidget	
	{
	public:
		UEditableText* EditableTextWidget; // 0x2D8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortInputField");
			return ret;
		}

		void SetHintText(FText& HintText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetErrorText(FText& ErrorText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SetEditableText(FText& EditableText); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortItemDownloadIndicator
	// Inherited from UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x28 (0x300 - 0x2D8)
	class UFortItemDownloadIndicator : public UCommonUserWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x2D8(0x18) UNKNOWN PROPERTY
		UImage* Image_DownloadSpinner; // 0x2F0(0x8)
		UFortAccountItemDefinition* CurrentDisplayedItem; // 0x2F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortItemDownloadIndicator");
			return ret;
		}
	};


	// Class FortniteUI.FortLetoWatermark
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortLetoWatermark : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLetoWatermark");
			return ret;
		}
	};


	// Class FortniteUI.FortReticleExtensionContainer
	// Inherited from UFortExtensionWidgetContainer -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x50 (0x480 - 0x430)
	class UFortReticleExtensionContainer : public UFortExtensionWidgetContainer	
	{
	public:
		TArray<UFortWeaponReticleExtensionData*> WeaponReticleExtensionDatas; // 0x430(0x10)
		TArray<UFortWeaponReticleExtensionWidgetBase*> CurrentCustomReticleExtensions; // 0x440(0x10)
		TArray<UFortWeaponReticleExtensionWidgetBase*> RecentReticleExtensions; // 0x450(0x10)
		unsigned char UnknownData00_7[0x20]; // 0x460(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortReticleExtensionContainer");
			return ret;
		}

		void OnReticleExtensionWidgetRemoved(UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnReticleExtensionWidgetCreated(UUserWidget* Widget); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void HandleWeaponModEquipped(AFortWeapon* CurrentWeapon); // Flags: Final|Native|Public, Memory Exec: 0x7FF7503CB43C(relative to base address)
		void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon); // Flags: Final|Native|Public, Memory Exec: 0x7FF7503CB378(relative to base address)
		void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport); // Flags: Final|Native|Public|HasOutParms, Memory Exec: 0x7FF7503CB240(relative to base address)
		void HandleGameFeatureSetChanged(FString NewActiveGameFeatureSet); // Flags: Final|Native|Public, Memory Exec: 0x7FF7503CB120(relative to base address)
	};


	// Class FortniteUI.FortSZAwareImage
	// Inherited from UImage -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x290 - 0x280)
	class UFortSZAwareImage : public UImage	
	{
	public:
		bool AnchorLeft; // 0x280(0x1)
		bool AnchorRight; // 0x281(0x1)
		bool AnchorTop; // 0x282(0x1)
		bool AnchorBottom; // 0x283(0x1)
		unsigned char UnknownData00_7[0xC]; // 0x284(0xC) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSZAwareImage");
			return ret;
		}
	};


	// Class FortniteUI.FortTabButton
	// Inherited from UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x30 (0x13C0 - 0x1390)
	class UFortTabButton : public UCommonButtonBase	
	{
	public:
		unsigned char UnknownData00_3[0x8]; // 0x1390(0x8) UNKNOWN PROPERTY
		UCommonLazyImage* LazyImage_Icon; // 0x1398(0x8)
		UCommonTextBlock* Text_Title; // 0x13A0(0x8)
		FVector2D ImageSize_Mobile; // 0x13A8(0x10)
		unsigned char UnknownData01_7[0x8]; // 0x13B8(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortTabButton");
			return ret;
		}

		void SetTabLabelInfo_Implementation(FFortTabButtonLabelInfo& TabLabelInfo); // Flags: RequiredAPI|Native|Protected|HasOutParms, Memory Exec: 0x7FF7503CC004(relative to base address)
	};


	// Class FortniteUI.FortVisualAttachment
	// Inherited from USizeBox -> UContentWidget -> UPanelWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1C8 - 0x1A8)
	class UFortVisualAttachment : public USizeBox	
	{
	public:
		FVector2D ContentAnchor; // 0x1A8(0x10)
		unsigned char UnknownData00_7[0x10]; // 0x1B8(0x10) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortVisualAttachment");
			return ret;
		}
	};


	// Class FortniteUI.FortSimpleFeaturedYellowButton
	// Inherited from UCommonButtonLegacy -> UCommonButtonBase -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x1400 - 0x13E0)
	class UFortSimpleFeaturedYellowButton : public UCommonButtonLegacy	
	{
	public:
		int32_t FontSize; // 0x13E0(0x4)
		FMargin PaddingOverrideMargin; // 0x13E4(0x10)
		float DelayShine; // 0x13F4(0x4)
		bool bFontSizeOverride; // 0x13F8(0x1)
		bool bPaddingOverride; // 0x13F9(0x1)
		bool bUseShineSwipe; // 0x13FA(0x1)
		bool bShearText; // 0x13FB(0x1)
		unsigned char UnknownData00_7[0x4]; // 0x13FC(0x4) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortSimpleFeaturedYellowButton");
			return ret;
		}

		void SetText(FText& NewText); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void RefreshUI(); // Flags: Event|Protected|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ChangeSecondaryText(FText& NewText); // Flags: Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortLevelSequencerControlScreenBase
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x400 - 0x3F0)
	class UFortLevelSequencerControlScreenBase : public UCommonActivatableWidget	
	{
	public:
		FName DefaultLevelSequencerTag; // 0x3F0(0x4)
		unsigned char UnknownData00_6[0x4]; // 0x3F4(0x4) UNKNOWN PROPERTY
		ALevelSequenceActor* AssociatedLevelSequenceActor; // 0x3F8(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortLevelSequencerControlScreenBase");
			return ret;
		}
	};


	// Class FortniteUI.PurchaseChoiceRequesterInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UPurchaseChoiceRequesterInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.PurchaseChoiceRequesterInterface");
			return ret;
		}

		void StartPurchase(int32_t PriceIndex); // Flags: RequiredAPI|Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74E27A4EC(relative to base address)
		bool IsPurchaseChoiceRequestedEventBound(); // Flags: Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const, Memory Exec: 0x7FF7503CB5EC(relative to base address)
		AFortPlayerController GetPurchaseChoiceOwningPlayer(); // Flags: RequiredAPI|Native|Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF748DB959C(relative to base address)
		UFortStoreFrontOfferInfo GetPurchaseChoiceOfferInfo(); // Flags: RequiredAPI|Native|Event|Public|BlueprintEvent|Const, Memory Exec: 0x7FF74C45C190(relative to base address)
		void CancelPurchase(); // Flags: RequiredAPI|Native|Event|Public|BlueprintEvent, Memory Exec: 0x7FF74EEDF7EC(relative to base address)
		void BroadcastPurchaseChoiceRequestedEvent(TScriptInterface<Class>& Requester); // Flags: Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent, Memory Exec: 0x7FF7503CAE98(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialBaseInteraction
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x18 (0x2C8 - 0x2B0)
	class UFortAthenaTutorialBaseInteraction : public UUserWidget	
	{
	public:
		unsigned char UnknownData00_1[0x18]; // 0x2B0(0x18) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialBaseInteraction");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaTutorialButton
	// Inherited from UFortAthenaTutorialBaseInteraction -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x10 (0x2D8 - 0x2C8)
	class UFortAthenaTutorialButton : public UFortAthenaTutorialBaseInteraction	
	{
	public:
		ETutorialButtonInteractionType InteractionType; // 0x2C8(0x1)
		unsigned char UnknownData00_6[0x7]; // 0x2C9(0x7) UNKNOWN PROPERTY
		UCommonButtonLegacy* Button_Tutorial; // 0x2D0(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialButton");
			return ret;
		}

		void OnTutorialButtonPressed(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB658(relative to base address)
		void OnTutorialButtonClicked(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CB644(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialHUD
	// Inherited from UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xA0 (0x490 - 0x3F0)
	class UFortAthenaTutorialHUD : public UCommonActivatableWidget	
	{
	public:
		unsigned char UnknownData00_3[0x18]; // 0x3F0(0x18) UNKNOWN PROPERTY
		TArray<FGameplayTag> HighlightTagArray; // 0x408(0x10)
		unsigned char UnknownData01_6[0x18]; // 0x418(0x18) UNKNOWN PROPERTY
		AFortAthenaTutorialManager* TutorialManager; // 0x430(0x8)
		AActor* CurrentTrackedActor; // 0x438(0x8)
		unsigned char UnknownData02_6[0x8]; // 0x440(0x8) UNKNOWN PROPERTY
		UOverlay* Overlay_TutorialScreen; // 0x448(0x8)
		UCommonButtonLegacy* Athena_Tutorial_Skip_Mobile; // 0x450(0x8)
		UFortAthenaTutorialTargetCounter* Athena_Tutorial_TargetCounter; // 0x458(0x8)
		UFortAthenaTutorialProgressBar* Athena_Tutorial_ProgressBar; // 0x460(0x8)
		UFortAthenaTutorialScreen* Athena_Tutorial_ModalPopup; // 0x468(0x8)
		UFortAthenaTutorialTextPrompt* TextPrompt_Tutorial; // 0x470(0x8)
		UOverlay* Overlay_Finger; // 0x478(0x8)
		UOverlay* Overlay_Gradient; // 0x480(0x8)
		UUserWidget* Widget_EasyInteractFinger; // 0x488(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialHUD");
			return ret;
		}

		void PlayFingerPointingAnimation(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void DragToTurnEnabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void CompletedEnabled(); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BroadcastSkipMenuOpened(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CAF28(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialHUDContainer
	// Inherited from UBacchusHUDElement -> UFortMobileHUDElement -> UFortHUDElementWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x3C0 - 0x368)
	class UFortAthenaTutorialHUDContainer : public UBacchusHUDElement	
	{
	public:
		UFortAthenaTutorialScreen* CurrentScreen; // 0x368(0x8)
		AFortAthenaTutorialManager* TutorialManager; // 0x370(0x8)
		UFortAthenaTutorialHUD* TutorialHUD; // 0x378(0x8)
		unsigned char UnknownData00_6[0x8]; // 0x380(0x8) UNKNOWN PROPERTY
		TWeakObjectPtr<UClass*> TutorialHUDWidgetSoftClass; // 0x388(0x20)
		UOverlay* Overlay_TutorialHUD; // 0x3A8(0x8)
		UFortAthenaTutorialScreenData* TutorialScreenData; // 0x3B0(0x8)
		int32_t CurrentTutorialStep; // 0x3B8(0x4)
		int32_t CurrentTutorialSubstep; // 0x3BC(0x4)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialHUDContainer");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaTutorialProgressBar
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortAthenaTutorialProgressBar : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialProgressBar");
			return ret;
		}

		void StartNewProgressBarPhase(int32_t CurrentPhase); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetProgressBarVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialScreen
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xD8 (0x388 - 0x2B0)
	class UFortAthenaTutorialScreen : public UUserWidget	
	{
	public:
		bool bLimitedDisplayDuration; // 0x2B0(0x1)
		unsigned char UnknownData00_6[0x3]; // 0x2B1(0x3) UNKNOWN PROPERTY
		float DisplayDuration; // 0x2B4(0x4)
		TArray<FName> InputAction_NameArray; // 0x2B8(0x10)
		TArray<FName> GamepadInputAction_NameArray; // 0x2C8(0x10)
		FDataTableRowHandle DataTableRow; // 0x2D8(0x10)
		unsigned char UnknownData01_6[0x78]; // 0x2E8(0x78) UNKNOWN PROPERTY
		UFortAthenaTutorialBaseInteraction* Interaction_TutorialStep; // 0x360(0x8)
		UFortAthenaTutorialBaseInteraction* InteractionRegular_TutorialStep; // 0x368(0x8)
		UUserWidget* MoveableHighlight; // 0x370(0x8)
		UUserWidget* MoveableHighlight_Regular; // 0x378(0x8)
		UCommonWidgetSwitcherLegacy* Switcher; // 0x380(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialScreen");
			return ret;
		}

		void UpdateInputDisplay(ECommonInputType CurrentInputType); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void SkipGuidedTutorial(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF74FF95E38(relative to base address)
		void SetupInputActionNames(TArray<FName>& Names); // Flags: Event|Public|HasOutParms|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnTutorialProgressUpdated(int32_t CurrentPhase); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void BroadcastTutorialPopupCanceled(); // Flags: Final|Native|Public|BlueprintCallable, Memory Exec: 0x7FF7503CAF44(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialSkipPopupElement
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0xE0 (0x390 - 0x2B0)
	class UFortAthenaTutorialSkipPopupElement : public UUserWidget	
	{
	public:
		FSlateBrush StepIconSlateBrush; // 0x2B0(0xB0)
		FText StepDescription; // 0x360(0x10)
		UCommonTextBlock* Step_TextBlock; // 0x370(0x8)
		UImage* Step_ImageIcon; // 0x378(0x8)
		UImage* Checkmark_Image; // 0x380(0x8)
		unsigned char UnknownData00_7[0x8]; // 0x388(0x8) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialSkipPopupElement");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaTutorialSwipeZone
	// Inherited from UFortAthenaTutorialBaseInteraction -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x20 (0x2E8 - 0x2C8)
	class UFortAthenaTutorialSwipeZone : public UFortAthenaTutorialBaseInteraction	
	{
	public:
		unsigned char UnknownData00_1[0x20]; // 0x2C8(0x20) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialSwipeZone");
			return ret;
		}
	};


	// Class FortniteUI.FortAthenaTutorialTargetCounter
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x0 (0x2B0 - 0x2B0)
	class UFortAthenaTutorialTargetCounter : public UUserWidget	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialTargetCounter");
			return ret;
		}

		void UpdateTargetCounterVisuals(int32_t NumberOfTargets); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void ResetCounterVisuals(); // Flags: Event|Public|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
	};


	// Class FortniteUI.FortAthenaTutorialTextPrompt
	// Inherited from UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x1A0 (0x450 - 0x2B0)
	class UFortAthenaTutorialTextPrompt : public UUserWidget	
	{
	public:
		FText TextToDisplay; // 0x2B0(0x10)
		FText GamepadTextToDisplay; // 0x2C0(0x10)
		unsigned char UnknownData00_6[0xE8]; // 0x2D0(0xE8) UNKNOWN PROPERTY
		TArray<UFortKeybindWidget*> Array_FortKeybindWidget; // 0x3B8(0x10)
		unsigned char UnknownData01_6[0x18]; // 0x3C8(0x18) UNKNOWN PROPERTY
		URichTextBlock* RichText_TopPrompt; // 0x3E0(0x8)
		URichTextBlock* RichText_BottomPrompt; // 0x3E8(0x8)
		URichTextBlock* RichText_ExtraInputPrompt; // 0x3F0(0x8)
		UCommonActionWidget* ActionWidget_InputFeedback; // 0x3F8(0x8)
		UFortKeybindWidget* Action_KeybindWidget; // 0x400(0x8)
		UFortKeybindWidget* Action_KeybindWidget; // 0x408(0x8)
		UFortKeybindWidget* Action_KeybindWidget; // 0x410(0x8)
		UFortKeybindWidget* Action_KeybindWidget; // 0x418(0x8)
		UFortKeybindWidget* Action_KeybindWidget; // 0x420(0x8)
		UUserWidget* Tutorial_NextButton_Input; // 0x428(0x8)
		UOverlay* Overlay_AllWidgets; // 0x430(0x8)
		UOverlay* Overlay_ActionWidgets; // 0x438(0x8)
		UOverlay* Overlay_KeybindWidgets; // 0x440(0x8)
		UOverlay* Overlay_ExtraText; // 0x448(0x8)

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortAthenaTutorialTextPrompt");
			return ret;
		}

		void NextButtonPressed(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503CB614(relative to base address)
		void DisplayTarget(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7470D9EB4(relative to base address)
		void DisplayNextButton(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF74F0F9DB4(relative to base address)
		void ActivateTextPrompt(); // Flags: Native|Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7474A9F44(relative to base address)
	};


	// Class FortniteUI.FortHUDShutdownTimerInterface
	// Inherited from UInterface -> UObject
	// Size: 0x0 (0x28 - 0x28)
	class UFortHUDShutdownTimerInterface : public UInterface	
	{
	public:

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortHUDShutdownTimerInterface");
			return ret;
		}
	};


	// Class FortniteUI.FortUIStateWidget_CampaignFrontendLegacy
	// Inherited from UFortUIStateWidget_NUI -> UFortActivatablePanel -> UCommonActivatablePanelLegacy -> UCommonActivatableWidget -> UCommonUserWidget -> UUserWidget -> UWidget -> UVisual -> UObject
	// Size: 0x58 (0x5F8 - 0x5A0)
	class UFortUIStateWidget_CampaignFrontendLegacy : public UFortUIStateWidget_NUI	
	{
	public:
		FMulticastInlineDelegate OnCrossplayWidgetClosed; // 0x5A0(0x10)
		UCommonWidgetStackLegacy* MainContentStack; // 0x5B0(0x8)
		UClass* ItemReceivedScreenClass; // 0x5B8(0x8)
		UFortGiftBoxItem* NextGiftBox; // 0x5C0(0x8)
		UFortChatPanel* ChatWidget; // 0x5C8(0x8)
		unsigned char UnknownData00_7[0x28]; // 0x5D0(0x28) UNKNOWN PROPERTY

		static UClass* StaticClass() const {
			static auto ret = SDK::Utils::StaticFindObject<UClass>("/Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy");
			return ret;
		}

		void TryMFAModal(UClass* BPClass); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503CC100(relative to base address)
		void SocialBanModalCheck(); // Flags: Final|Native|Private|BlueprintCallable, Memory Exec: 0x7FF7503CC0D0(relative to base address)
		bool ShowInitialCrossplayDialog(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503CC0AC(relative to base address)
		void QueueSurvivorSquadsAutoSlottedNotification(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503CBBD4(relative to base address)
		void OnStoreStateChangedBP(EFortStoreState NewStoreState); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		void OnMatchmakingV2Changed(bool matchmakingActive); // Flags: Event|Protected|BlueprintEvent, Memory Exec: 0x7FF7471BBE78(relative to base address)
		bool IsOkToCheckForGifts(bool& bTemporary); // Flags: Final|Native|Protected|HasOutParms|BlueprintCallable, Memory Exec: 0x7FF7503CB554(relative to base address)
		void HandleStoreStateChanged(EFortStoreState NewStoreState); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503CB2F8(relative to base address)
		void HandleGiftingComplete(); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503CB22C(relative to base address)
		void HandleGiftBoxRemoved(bool bSuccess); // Flags: Final|Native|Private, Memory Exec: 0x7FF7503CB1AC(relative to base address)
		bool CheckForGifts(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF7503CAF60(relative to base address)
		bool AttemptToOpenBattlePassTabForNewSeason(); // Flags: Final|Native|Protected|BlueprintCallable, Memory Exec: 0x7FF748CDD424(relative to base address)
	};

}
